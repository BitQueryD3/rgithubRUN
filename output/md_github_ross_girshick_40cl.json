{"nodes":[{"name":"ddtm/theano-roi-pooling","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":1,"playcount":90,"description":"ddtm/theano-roi-pooling “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> ROIPooling Operation for Theano          Theano port of Ross Girshick s ROI Pooling Layer ","software":"md","book":"ddtm","full_link":"https://github.com/ddtm/theano-roi-pooling"},{"name":"moyans/my_detectron","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":2,"playcount":351,"description":"moyans/my_detectron “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   my detectron fork from https   github com facebookresearch Detectron   misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title          Detectron     howpublished     url https   github com facebookresearch detectron      year            2018    ","software":"md","book":"moyans","full_link":"https://github.com/moyans/my_detectron"},{"name":"shaoanlu/expriment-with-focal-loss","artist":"loss, object, focal, lin, tsungyi","id":3,"playcount":358,"description":"shaoanlu/expriment-with-focal-loss loss, object, focal, lin, tsungyi   expriment with focal  Experiment with focal loss on cats dogs classification     Description  Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  Piotr Doll r        Blog post   https   shaoanlu wordpress com 2017 08 16 applying focal loss on cats vs dogs classification task   ","software":"md","book":"shaoanlu","full_link":"https://github.com/shaoanlu/expriment-with-focal-loss"},{"name":"tianyuandu/make-facial-features-box","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":4,"playcount":291,"description":"tianyuandu/make-facial-features-box “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   make facial features box This code can create bounding boxes according to the ground truth of facial landmarks  the facial features bounding boxes can be used as training set in object detection task   We use Ross Girshick s code to compute box overlap  The main function is  make bbox m  ","software":"md","book":"tianyuandu","full_link":"https://github.com/tianyuandu/make-facial-features-box"},{"name":"hgjt8989/CV_final_project","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":5,"playcount":414,"description":"hgjt8989/CV_final_project “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Computer vision course of MVA 2017 Final project of Inferring and Executing Programs for Visual Reasoning    inproceedings johnson2017inferring    title  Inferring and Executing Programs for Visual Reasoning     author  Johnson  Justin and Hariharan  Bharath and van der Maaten  Laurens and Hoffman  Judy           and Fei Fei  Li and Zitnick  C Lawrence and Girshick  Ross     booktitle  ICCV     year  2017    ","software":"md","book":"hgjt8989","full_link":"https://github.com/hgjt8989/CV_final_project"},{"name":"jif078/Car-Detection","artist":"yolo, detect, onli, ali, joseph","id":6,"playcount":483,"description":"jif078/Car-Detection yolo, detect, onli, ali, joseph   Car Detection  Get package from https   github com allanzelener YAD2K  Pre trained yolo model is not public    Reference                                                 Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   You Only Look Once  Unified  Real Time Object Detection  2015   Joseph Redmon  Ali Farhadi   YOLO9000  Better  Faster  Stronger  2016   Allan Zelener   YAD2K  Yet Another Darknet 2 Keras  The official YOLO website  https   pjreddie com darknet yolo   ","software":"md","book":"jif078","full_link":"https://github.com/jif078/Car-Detection"},{"name":"katotetsuro/roi_align","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":7,"playcount":338,"description":"katotetsuro/roi_align “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   RoI Align RoI Align with Chainer  Mask R CNN Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick https   arxiv org abs 1703 06870    Usage  interface is completely same as chainer fuctions roi pooling2d  https   docs chainer org en stable reference generated chainer functions roi pooling 2d html chainer functions roi pooling 2d ","software":"md","book":"katotetsuro","full_link":"https://github.com/katotetsuro/roi_align"},{"name":"alexandreday/ezVAE","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":8,"playcount":370,"description":"alexandreday/ezVAE “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   ezVAE Implementation of a simple noisy autoencoder using Keras and following the architecture detailed       inproceedings xie2016unsupervised    title  Unsupervised deep embedding for clustering analysis     author  Xie  Junyuan and Girshick  Ross and Farhadi  Ali     booktitle  International conference on machine learning     pages  478  487     year  2016        ","software":"md","book":"alexandreday","full_link":"https://github.com/alexandreday/ezVAE"},{"name":"iRiisH/yolo","artist":"yolo, detect, onli, ali, joseph","id":9,"playcount":335,"description":"iRiisH/yolo yolo, detect, onli, ali, joseph   yolo  YOLO  You Only Look Once  image detection algorithm implementation using TensorFlow   Based on Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi article  You Only Look Once  Unified  Real Time Object Detection  http   www cv foundation org openaccess content cvpr 2016 papers Redmon You Only Look CVPR 2016 paper pdf  ","software":"md","book":"iRiisH","full_link":"https://github.com/iRiisH/yolo"},{"name":"SpyderXu/Detectron_xcz","artist":"detectron, kaim, girshick, ross, piotr","id":10,"playcount":6883,"description":"SpyderXu/Detectron_xcz detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"SpyderXu","full_link":"https://github.com/SpyderXu/Detectron_xcz"},{"name":"jpbirdy/Detectron","artist":"detectron, kaim, girshick, ross, piotr","id":11,"playcount":6883,"description":"jpbirdy/Detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"jpbirdy","full_link":"https://github.com/jpbirdy/Detectron"},{"name":"lg12170226/Detectron-restful","artist":"detectron, kaim, girshick, ross, piotr","id":12,"playcount":6728,"description":"lg12170226/Detectron-restful detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440   and  DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"lg12170226","full_link":"https://github.com/lg12170226/Detectron-restful"},{"name":"rsumner31/Detectron","artist":"detectron, kaim, girshick, ross, piotr","id":13,"playcount":6640,"description":"rsumner31/Detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"rsumner31","full_link":"https://github.com/rsumner31/Detectron"},{"name":"shunk031/chainer-FocalLoss","artist":"loss, object, focal, lin, tsungyi","id":14,"playcount":521,"description":"shunk031/chainer-FocalLoss loss, object, focal, lin, tsungyi   chainer FocalLoss  This repository contains a  Chainer  https   chainer org   implementation for the paper   Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002   ICCV 2017  Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  Piotr Doll r  Best student paper       Requirements    Chainer 4 0 0    CuPy 4 0 0      Reference     Lin  Tsung Yi  et al   Focal loss for dense object detection   IEEE transactions on pattern analysis and machine intelligence  2018    https   arxiv org abs 1708 02002  ","software":"md","book":"shunk031","full_link":"https://github.com/shunk031/chainer-FocalLoss"},{"name":"forskamse/detectron","artist":"detectron, kaim, girshick, ross, piotr","id":15,"playcount":6728,"description":"forskamse/detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440   and  DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"forskamse","full_link":"https://github.com/forskamse/detectron"},{"name":"haonguyen14/faster-rcnn","artist":"rcnn, train, detect, network, faster","id":16,"playcount":424,"description":"haonguyen14/faster-rcnn rcnn, train, detect, network, faster   faster rcnn with PyTorch This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN  This project is based on  py faster rcnn  https   github com rbgirshick py faster rcnn   For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  ","software":"md","book":"haonguyen14","full_link":"https://github.com/haonguyen14/faster-rcnn"},{"name":"choasup/detectron-ellipse","artist":"detectron, kaim, girshick, ross, piotr","id":17,"playcount":6640,"description":"choasup/detectron-ellipse detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"choasup","full_link":"https://github.com/choasup/detectron-ellipse"},{"name":"skokec/detectron-villard","artist":"detectron, kaim, girshick, ross, piotr","id":18,"playcount":6640,"description":"skokec/detectron-villard detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"skokec","full_link":"https://github.com/skokec/detectron-villard"},{"name":"cayenneZ/Detection","artist":"detectron, kaim, girshick, ross, piotr","id":19,"playcount":6640,"description":"cayenneZ/Detection detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"cayenneZ","full_link":"https://github.com/cayenneZ/Detection"},{"name":"tianyijushi/Detectron","artist":"detectron, kaim, girshick, ross, piotr","id":20,"playcount":6640,"description":"tianyijushi/Detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"tianyijushi","full_link":"https://github.com/tianyijushi/Detectron"},{"name":"eric-erki/facebookresearch-Detectron-","artist":"detectron, kaim, girshick, ross, piotr","id":21,"playcount":6883,"description":"eric-erki/facebookresearch-Detectron- detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"eric-erki","full_link":"https://github.com/eric-erki/facebookresearch-Detectron-"},{"name":"yanbing2020/detectron","artist":"detectron, kaim, girshick, ross, piotr","id":22,"playcount":6640,"description":"yanbing2020/detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"yanbing2020","full_link":"https://github.com/yanbing2020/detectron"},{"name":"yanxp/detectron-ssm","artist":"detectron, kaim, girshick, ross, piotr","id":23,"playcount":6883,"description":"yanxp/detectron-ssm detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"yanxp","full_link":"https://github.com/yanxp/detectron-ssm"},{"name":"calipos/dorefa-caffe","artist":"caff, arxiv, convolut, featur, titl","id":24,"playcount":536,"description":"calipos/dorefa-caffe caff, arxiv, convolut, featur, titl    implement of DoReFaNet with caffe based on cifar10 dataset the link of the paper is https   arxiv org abs 1606 06160  caffe   dorefa   tensorflow                                          article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014       ","software":"md","book":"calipos","full_link":"https://github.com/calipos/dorefa-caffe"},{"name":"summerZXH/pytorch-retinanet","artist":"loss, object, focal, lin, tsungyi","id":25,"playcount":1378,"description":"summerZXH/pytorch-retinanet loss, object, focal, lin, tsungyi   RetinaNet  Pytorch implementation of RetinaNet object detection as described in  Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002  by Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He and Piotr Doll r      Installation  Clone this repository      git git clone https   github com kuangliu pytorch retinanet         Training on Pascal VOC  1  Init RestinaNet50 with  pretrained ResNet50 model  https   download pytorch org models resnet50 19c8e357 pth          git    cd  pytorch retinanet    mkdir model    mv resnet50 pth model    python scripts get state dict py         2  Create symlinks for the PASCAL VOC dataset        shell    cd  TFFRCNN data    ln  s  VOCdevkit VOCdevkit2007         3  Run training scripts        shell    python train            References     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     kuangliu  https   github com kuangliu   pytorch retinanet  https   github com kuangliu pytorch retinanet ","software":"md","book":"summerZXH","full_link":"https://github.com/summerZXH/pytorch-retinanet"},{"name":"ml1532491/Panoptic_Segmentation_coco","artist":"detectron, kaim, girshick, ross, piotr","id":26,"playcount":6883,"description":"ml1532491/Panoptic_Segmentation_coco detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"ml1532491","full_link":"https://github.com/ml1532491/Panoptic_Segmentation_coco"},{"name":"facebookresearch/Detectron","artist":"detectron, kaim, girshick, ross, piotr","id":27,"playcount":6883,"description":"facebookresearch/Detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"facebookresearch","full_link":"https://github.com/facebookresearch/Detectron"},{"name":"FabienFP/Dectectron","artist":"detectron, kaim, girshick, ross, piotr","id":28,"playcount":6640,"description":"FabienFP/Dectectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"FabienFP","full_link":"https://github.com/FabienFP/Dectectron"},{"name":"jaeseung16/Detectron","artist":"detectron, kaim, girshick, ross, piotr","id":29,"playcount":6640,"description":"jaeseung16/Detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"jaeseung16","full_link":"https://github.com/jaeseung16/Detectron"},{"name":"sThalham/Detectron_mod","artist":"detectron, kaim, girshick, ross, piotr","id":30,"playcount":6883,"description":"sThalham/Detectron_mod detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"sThalham","full_link":"https://github.com/sThalham/Detectron_mod"},{"name":"Musicwire/MyDetectron","artist":"detectron, kaim, girshick, ross, piotr","id":31,"playcount":6883,"description":"Musicwire/MyDetectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"Musicwire","full_link":"https://github.com/Musicwire/MyDetectron"},{"name":"jolohan/detectron","artist":"detectron, kaim, girshick, ross, piotr","id":32,"playcount":6883,"description":"jolohan/detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"jolohan","full_link":"https://github.com/jolohan/detectron"},{"name":"danielwen/Detectron","artist":"detectron, kaim, girshick, ross, piotr","id":33,"playcount":6640,"description":"danielwen/Detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"danielwen","full_link":"https://github.com/danielwen/Detectron"},{"name":"zzdxfei/detectron_code","artist":"detectron, kaim, girshick, ross, piotr","id":34,"playcount":6883,"description":"zzdxfei/detectron_code detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"zzdxfei","full_link":"https://github.com/zzdxfei/detectron_code"},{"name":"myfirstproject001/code.xml","artist":"detectron, kaim, girshick, ross, piotr","id":35,"playcount":6640,"description":"myfirstproject001/code.xml detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"myfirstproject001","full_link":"https://github.com/myfirstproject001/code.xml"},{"name":"dishen12/maskRcnn","artist":"detectron, kaim, girshick, ross, piotr","id":36,"playcount":6640,"description":"dishen12/maskRcnn detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"dishen12","full_link":"https://github.com/dishen12/maskRcnn"},{"name":"fangpengcheng95/Light-Head-R-CNN","artist":"detectron, kaim, girshick, ross, piotr","id":37,"playcount":5704,"description":"fangpengcheng95/Light-Head-R-CNN detectron, kaim, girshick, ross, piotr    Introduction  The goal of this project is to implement  Light Head R CNN  https   arxiv org abs 1711 07264   using Detectron platform      Already implemented   Light Head R CNN   RPN   unshared weights of convolution layer in neural network head   Light Head R CNN   FPN Feature Map Pyramid    shared weights of convolution layer in neural network head    Platform Introduction The goal of Detectron is to provide a high quality  high performance codebase for object detection research  It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms     Mask R CNN  https   arxiv org abs 1703 06870      Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt   Additional backbone architectures may be easily implemented       License This project is released under the MIT License  https   github com fangpengcheng95 Light Head R CNN blob master LICENSE  and   Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE        Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015   ","software":"md","book":"fangpengcheng95","full_link":"https://github.com/fangpengcheng95/Light-Head-R-CNN"},{"name":"nvtu/MaskRCNN-core","artist":"detectron, kaim, girshick, ross, piotr","id":38,"playcount":6883,"description":"nvtu/MaskRCNN-core detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"nvtu","full_link":"https://github.com/nvtu/MaskRCNN-core"},{"name":"KittyLiou/PolygonRCNN","artist":"detectron, kaim, girshick, ross, piotr","id":39,"playcount":7020,"description":"KittyLiou/PolygonRCNN detectron, kaim, girshick, ross, piotr  Note This project is based on Facebook Detectron and it s still under construction  so many functionalities are still unavailable now     Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"KittyLiou","full_link":"https://github.com/KittyLiou/PolygonRCNN"},{"name":"Adnan1011/DCNN","artist":"caff, arxiv, convolut, featur, titl","id":40,"playcount":498,"description":"Adnan1011/DCNN caff, arxiv, convolut, featur, titl   Under development    Uses Caffe   Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE           article jia2014caffe         Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor          Journal    arXiv preprint arXiv 1408 5093          Title    Caffe  Convolutional Architecture for Fast Feature Embedding          Year    2014        ","software":"md","book":"Adnan1011","full_link":"https://github.com/Adnan1011/DCNN"},{"name":"wattanapong/detectron","artist":"detectron, kaim, girshick, ross, piotr","id":41,"playcount":6883,"description":"wattanapong/detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"wattanapong","full_link":"https://github.com/wattanapong/detectron"},{"name":"johannathiemich/MaskRCNN_squeeze","artist":"detectron, kaim, girshick, ross, piotr","id":42,"playcount":6902,"description":"johannathiemich/MaskRCNN_squeeze detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015    MaskRCNN squeeze ","software":"md","book":"johannathiemich","full_link":"https://github.com/johannathiemich/MaskRCNN_squeeze"},{"name":"jolohan/detectron2","artist":"detectron, kaim, girshick, ross, piotr","id":43,"playcount":6883,"description":"jolohan/detectron2 detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"jolohan","full_link":"https://github.com/jolohan/detectron2"},{"name":"trantorznh/caffe_data_augmentation","artist":"caff, arxiv, convolut, featur, titl","id":44,"playcount":503,"description":"trantorznh/caffe_data_augmentation caff, arxiv, convolut, featur, titl   Caffe adding real time data augmation based on Chenlong Chen s job  Temporarily this project only support image augmation     original job refer to       article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"trantorznh","full_link":"https://github.com/trantorznh/caffe_data_augmentation"},{"name":"SpyderXu/test","artist":"detectron, kaim, girshick, ross, piotr","id":45,"playcount":6883,"description":"SpyderXu/test detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"SpyderXu","full_link":"https://github.com/SpyderXu/test"},{"name":"v-chixma/detectron","artist":"detectron, kaim, girshick, ross, piotr","id":46,"playcount":6640,"description":"v-chixma/detectron detectron, kaim, girshick, ross, piotr   Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370   and  Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"v-chixma","full_link":"https://github.com/v-chixma/detectron"},{"name":"hclhkbu/caffe-optimized","artist":"caff, arxiv, convolut, featur, titl","id":47,"playcount":788,"description":"hclhkbu/caffe-optimized caff, arxiv, convolut, featur, titl   Caffe optimized This is a optimized Caffe for speeding up the training efficiency by using MTNN   The original Caffe can be found here https   gitter im BVLC caffe       License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite optimized Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hclhkbu","full_link":"https://github.com/hclhkbu/caffe-optimized"},{"name":"marcopede/lasagneRCNN","artist":"rcnn, fast, shell, matlab, voc","id":48,"playcount":569,"description":"marcopede/lasagneRCNN rcnn, fast, shell, matlab, voc   lasagneRCNN  Partial implementation of Fast R CNN  1  in lasagne based on https   github com ddtm theano roi pooling  You need to have installed recent versions of    Theano   Lasagne   Caffe with python   numpy  You need  vgg16 fast rcnn iter 40000 caffemodel    a vgg16 Fast R CNN pretrained on VOC 07 caffe model  test prototxt                            the corresponding prototxt file  To run the demo type      pytohn RCNN py   1  Fast R CNN  Fast Region based Convolutional Networks for object detection Created by Ross Girshick at Microsoft Research  Redmond ","software":"md","book":"marcopede","full_link":"https://github.com/marcopede/lasagneRCNN"},{"name":"OUCliuxiang/caffe-binaryINQ","artist":"caff, arxiv, convolut, featur, titl","id":49,"playcount":864,"description":"OUCliuxiang/caffe-binaryINQ caff, arxiv, convolut, featur, titl   caffe binaryINQ binary INQ based on INQ network launched by ILC  Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014             And the version built with little of changes based on INQ        inproceedings zhou2017        title    Incremental Network Quantization  Towards Lossless CNNs with Low Precision Weights         author     Aojun Zhou  Anbang Yao  Yiwen Guo  Lin Xu  Yurong Chen         booktitle    International Conference on Learning Representations ICLR2017         year     2017        ","software":"md","book":"OUCliuxiang","full_link":"https://github.com/OUCliuxiang/caffe-binaryINQ"},{"name":"rksltnl/sparselet-release1","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":50,"playcount":2211,"description":"rksltnl/sparselet-release1 “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> README for sparselet code                Introduction        Citing sparselets  If you find sparselet detection code useful in your research  please cite     inproceedings Song TPAMI2014    title    Generalized Sparselet Models for Real Time Multiclass Object Recognition     booktitle    IEEE Transactions on Pattern Analysis and Machine Intelligence     year    2014     author    Hyun Oh Song and Ross Girshick and Stefan Zickler and Christopher Geyer and Pedro Felzenszwalb and Trevor Darrell         inproceedings Song ICML2013    title    Discriminatively Activated Sparselets     booktitle    International Conference on Machine Learning  ICML      year    2013      author    Ross Girshick and Hyun Oh Song and Trevor Darrell         inproceedings  Song ECCV2012    title    Sparselet Models for Efficient Multiclass Object Detection     booktitle    European Conference on Computer Vision  ECCV      year    2012     author    Hyun Oh Song and Stefan Zickler and Tim Althoff and Ross Girshick and Mario Fritz and Christopher Geyer and Pedro Felzenszwalb and Trevor Darrell           License  Sparselet is released under the Simplified BSD License  refer to the LICENSE file for details        System Requirements   OS X or Linux   MATLAB   Intel  C   Composer XE for OS X  for OS X  or Intel  C   Studio XE for Linux  for Linux    This is currently freely available under the non commercial license for students     https   software intel com en us intel education offerings pid 2460 93    SPAMS toolbox  http   spams devel gforge inria fr downloads html         Install instructions  1  Download and install Intel  C   Composer XE from the link above  2  Unpack the sparselet code  3  Download and install SPAMS toolbox in the same directory level as in the sparselet code  4  On a terminal run  python sparselets compile blas singleTH MAC py  for OS X  or  python sparselets compile blas singleTH py  for Linux  5  Start matlab  6  Run the  compile  function to compile the helper functions      you may need to edit compile m to use a different convolution      routine depending on your system  7  Use  demo detection  code for a demo usage of the sparselet code for multiclass object detection    ","software":"md","book":"rksltnl","full_link":"https://github.com/rksltnl/sparselet-release1"},{"name":"t-kuha/sds-caffe","artist":"caff, arxiv, convolut, featur, titl","id":51,"playcount":759,"description":"t-kuha/sds-caffe caff, arxiv, convolut, featur, titl   sds caffe    Caffe on Zynq based on        https   github com pku ceca research SoCaffe       https   github com pku ceca research caffe          License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"t-kuha","full_link":"https://github.com/t-kuha/sds-caffe"},{"name":"kamalelsaaid/Presentation-on-R-CNN","artist":"rcnn, train, detect, network, faster","id":52,"playcount":589,"description":"kamalelsaaid/Presentation-on-R-CNN rcnn, train, detect, network, faster   Presentation on R CNN   Hands on R CNN full knowledge    Rich feature hierarchies for accurate object detection and semantic segmentation paper  by    Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik   Presented by  Kamal Zakieldin       University of Innsbruck  Austria    Presentation on R CNN   Contains   1  The terminologies the R CNN has built on   2  Full illustration to the papers  work   3  Quick illustration to the other terminologies they have mentioned and used in the paper   4  comparing it with its updated versions   Fast R CNN  Faster R CNN and Mask R CNN  ","software":"md","book":"kamalelsaaid","full_link":"https://github.com/kamalelsaaid/Presentation-on-R-CNN"},{"name":"falaktheoptimist/cvpr_2018","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":53,"playcount":756,"description":"falaktheoptimist/cvpr_2018 “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>    Summary of papers from CVPR 2018  1  Embodied Question Answering  br  Abhishek Das  Samyak Datta  Georgia Gkioxari  Stefan Lee  Devi Parikh  Dhruv Batra  br    paper   http   openaccess thecvf com content cvpr 2018 papers Das Embodied Question Answering CVPR 2018 paper pdf    review   https   github com falaktheoptimist cvpr 2018 blob master reviews 1 embodied question answering md   2  Learning by Asking Questions  br   Ishan Misra   Ross Girshick   Rob Fergus   Martial Hebert   Abhinav Gupta   Laurens van der Maaten  br      paper   http   openaccess thecvf com content cvpr 2018 papers Misra Learning by Asking CVPR 2018 paper pdf    review   https   github com falaktheoptimist cvpr 2018 blob master reviews 2 learning by asking questions md  ","software":"md","book":"falaktheoptimist","full_link":"https://github.com/falaktheoptimist/cvpr_2018"},{"name":"last-one/caffe-multilabel","artist":"caff, arxiv, convolut, featur, titl","id":54,"playcount":671,"description":"last-one/caffe-multilabel caff, arxiv, convolut, featur, titl    Caffe multilable  This repository is for multilabel      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"last-one","full_link":"https://github.com/last-one/caffe-multilabel"},{"name":"nakosung/caffe-windows-build","artist":"caff, arxiv, convolut, featur, titl","id":55,"playcount":649,"description":"nakosung/caffe-windows-build caff, arxiv, convolut, featur, titl   Caffe windows build  https   github com microsoft caffe      bin caffe device query   gpu all         License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE    Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"nakosung","full_link":"https://github.com/nakosung/caffe-windows-build"},{"name":"dsys/gibraltar","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":56,"playcount":738,"description":"dsys/gibraltar “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>  img src  https   raw githubusercontent com pavlovml gibraltar master resources logo png  alt  gibraltar  width  320       A better way to brew  Caffe  http   caffe berkeleyvision org     Named after the world s greatest espresso drink      Usage  Each Caffe fork is brewed as a Docker container designed for use with nvidia docker  Each are available on Docker Hub as  pavlov gibraltar  https   hub docker com r pavlov gibraltar tags        Tags      bvlc     BVLC official  master   https   github com BVLC caffe      faster rcnn     Ross Girshick s faster rcnn fork  https   github com rbgirshick caffe fast rcnn tree faster rcnn upstream 33f2445      License   BSD 3 Clause  https   github com pavlovml gibraltar blob master LICENSE  ","software":"md","book":"dsys","full_link":"https://github.com/dsys/gibraltar"},{"name":"youngxiao/DeepLearning-Papers","artist":"detectron, kaim, girshick, ross, piotr","id":57,"playcount":2502,"description":"youngxiao/DeepLearning-Papers detectron, kaim, girshick, ross, piotr   DeepLearning Papers     1  For classfication     ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Xception  https   arxiv org abs 1610 02357     GoogLeNet v4  https   arxiv org abs 1602 07261     VGG 16 19   https   arxiv org abs 1409 1556     GoogLeNet v3  https   arxiv org abs 1512 00567     GoogLeNet v2  https   arxiv org abs 1502 03167     GoogLeNet v1  https   arxiv org abs 1409 4842     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt       2  For object detection     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017      Marr Prize at ICCV 2017     YOLO v3  https   pjreddie com media files papers YOLOv3 pdf       RetinaNet  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017      Best Student Paper Award at ICCV 2017     Faster R CNN  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015     YOLO v2  https   pjreddie com media files papers yolo pdf      YOLO v1  https   pjreddie com media files papers yolo pdf       RPN  https   arxiv org abs 1506 01497     R FCN  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016        Blogs   1         CNN               https   zhuanlan zhihu com p 29367273    2 FaceBook   Detectron      Detectron        https   zhuanlan zhihu com p 34036460    3 YOLOv3      YOLOv3           https   blog csdn net lilai619 article details 79695109    4 GoogLeNet Inception  GoogLeNet   Inception V1 V4   https   blog csdn net hejin some article details 78636586    5 FAIR          FPN RetinaNet Mask   Mask X RCNN  https   www leiphone com news 201803 CZMRB9witGrytCNw html    6   YOLO    YOLO  https   zhuanlan zhihu com p 24916786    7                          mAP  https   zhuanlan zhihu com p 37910324    8 YOLO     ppt  https   docs google com presentation d 1aeRvtKG21KHdD5lg6Hgyhx5rPq ZOsGjG5rJ1HP7BbA pub start false loop false delayms 3000 slide id g137784ab86 4 1509  ","software":"md","book":"youngxiao","full_link":"https://github.com/youngxiao/DeepLearning-Papers"},{"name":"owphoo/FocalLoss","artist":"loss, object, focal, lin, tsungyi","id":58,"playcount":692,"description":"owphoo/FocalLoss loss, object, focal, lin, tsungyi   FocalLoss focal loss caffe version    Usage 1  Update your caffe proto and the code  2  make  j4 3  usage of FocalLoss layer      if your task is a 3 class classification problem layer      name   loss      type   FocalLoss      bottom   feature      bottom   label      top   loss      include           phase  TRAIN           focal loss param           alpha balance  true         gamma  2         alpha  0 5  background         alpha  1         alpha  1                 Derivation    equation  focalloss PNG      Reference   Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  Piotr Doll r       Focal Loss for Dense Object Detection      Paper Link  https   arxiv org abs 1708 02002  ","software":"md","book":"owphoo","full_link":"https://github.com/owphoo/FocalLoss"},{"name":"n-zhang/part-based-RCNN","artist":"model, imag, train, caff, download","id":59,"playcount":1735,"description":"n-zhang/part-based-RCNN model, imag, train, caff, download Part based RCNNs for Fine grained Category Detection                 This work is created by Ning Zhang  Jeff Donahue  Ross Girshick and Trevor Darrell from UC Berkeley         Citing this work If you are using this code for your research  please cite the following paper        inproceedings ZhangECCV14          Author    Zhang  Ning and Donahue  Jeff and Girshick  Ross and Darrell  Trevor           Title    Part based RCNN for Fine grained Detection           Booktitle    European Conference on Computer Vision           Year    2014             License This software is under BSD 3 Clause License  please refer to LICENSE file       Prerequisites 0    Caffe      Download caffe from http   caffe berkeleyvision org  and follow the instructions to install      Change caffe matlab wrapper path in init m  0    RCNN       Download source code from https   github com rbgirshick rcnn and follow the instructions to install        Change rcnn path in init m     In order to train part detectors for CUB2011 dataset  replace the following three functions in imdb imdb from voc m imdb roidb from voc m and imdb imdb eval voc m to the functions in imdb cub folder      Follow rcnn instructions to train the part detectors   0    Liblinear       Download liblinear package from http   www csie ntu edu tw  cjlin liblinear   Annotation  has annotated part boxes on CUB200 2011 dataset       Usage     run m is the main function to reproduce the results in the paper       Part detectors  finetuned models  feature representations are cached  Download the cache files by running get cache files sh and unzip to caches  folder      Bug report If you have any issues running the codes  please contact Ning Zhang  nzhang eecs berkeley edu   ","software":"md","book":"n-zhang","full_link":"https://github.com/n-zhang/part-based-RCNN"},{"name":"huiba/caffe_full","artist":"year, caff, faster, rcnn, titl","id":60,"playcount":1413,"description":"huiba/caffe_full year, caff, faster, rcnn, titl   Full Caffe     A merged version of newest Caffe  13 Oct 2017   Faster R CNN and SegNet      Caffe  https   github com BVLC caffe      Faster R CNN  https   github com rbgirshick py faster rcnn      SegNet  https   github com alexgkendall caffe segnet       License and Citation  Please cite the following work in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014              inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             article badrinarayanan2015segnet          title  SegNet  A Deep Convolutional Encoder Decoder Architecture for Image Segmentation           author  Badrinarayanan  Vijay and Kendall  Alex  and Cipolla  Roberto           journal  IEEE Transactions on Pattern Analysis and Machine Intelligence           year  2017           publisher  IEEE          ","software":"md","book":"huiba","full_link":"https://github.com/huiba/caffe_full"},{"name":"huiba/caffe_all","artist":"year, caff, faster, rcnn, titl","id":61,"playcount":1943,"description":"huiba/caffe_all year, caff, faster, rcnn, titl   Caffe     A merged version of newest Caffe  11 Dec 2017   Faster R CNN  SegNet and fully connected CRF  which was implemented by Deeplab       Caffe  https   github com BVLC caffe      Faster R CNN  https   github com rbgirshick py faster rcnn      SegNet  https   github com alexgkendall caffe segnet     CRF  https   bitbucket org deeplab deeplab public    The details of this merge  https   github com huiba caffe all commit ca9317404cec610a9e8212cfab7b4480fb3be626     License and Citation  Please cite the following work in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014              inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             article badrinarayanan2015segnet          title  SegNet  A Deep Convolutional Encoder Decoder Architecture for Image Segmentation           author  Badrinarayanan  Vijay and Kendall  Alex  and Cipolla  Roberto           journal  IEEE Transactions on Pattern Analysis and Machine Intelligence           year  2017           publisher  IEEE            inproceedings chen14semantic     title  Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs      author  Liang Chieh Chen and George Papandreou and Iasonas Kokkinos and Kevin Murphy and Alan L Yuille      booktitle  ICLR      url  http   arxiv org abs 1412 7062      year  2015     ","software":"md","book":"huiba","full_link":"https://github.com/huiba/caffe_all"},{"name":"huiba/caffe-fast-rcnn","artist":"year, caff, faster, rcnn, titl","id":62,"playcount":1413,"description":"huiba/caffe-fast-rcnn year, caff, faster, rcnn, titl   Full Caffe     A merged version of newest Caffe  13 Oct 2017   Faster R CNN and SegNet      Caffe  https   github com BVLC caffe      Faster R CNN  https   github com rbgirshick py faster rcnn      SegNet  https   github com alexgkendall caffe segnet       License and Citation  Please cite the following work in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014              inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             article badrinarayanan2015segnet          title  SegNet  A Deep Convolutional Encoder Decoder Architecture for Image Segmentation           author  Badrinarayanan  Vijay and Kendall  Alex  and Cipolla  Roberto           journal  IEEE Transactions on Pattern Analysis and Machine Intelligence           year  2017           publisher  IEEE          ","software":"md","book":"huiba","full_link":"https://github.com/huiba/caffe-fast-rcnn"},{"name":"eglxiang/Med","artist":"deep, learn, network, convolut, imag","id":63,"playcount":3068,"description":"eglxiang/Med deep, learn, network, convolut, imag   Deep Med for Lung Diagnosis  Multi Scale 3D CNN Literature Survey   Xiang Xiang  Wentao Zhu  Trac D  Tran  Gregory D  Hager  Survey on Multi Scale CNNs for Lung Nodule Detection  To appear as an abstract paper at IEEE ISBI 2018  Washington DC  USA   REFERENCES     1  Qi Dou  Hao Chen  Lequan Yu  Lei Zhao  Jing Qin  De feng Wang  Vincent CT Mok  Lin Shi and Pheng Ann Heng   Automatic detection  of  cerebral  microbleedsfrom mr images via 3d convolutional neural networks   IEEE transactions on medical imaging  vol 35  no 5  pp 1182 1195  2016    2  Qi Dou  Hao Chen  Lequan Yu  Jing Qin and Pheng Ann Heng   Multi level contextual 3d cnns forfalse positive reduction in pulmonary nodule detection   IEEE Transactions on Biomedical Engineering  2016    3  Wei Shen  CAS   Mu Zhou  Feng Yang  Caiyun Yang and Jie Tian   Multi scale convolutional neural networks for lung nodule  classification   in International Conference on Information Processing in Medical Imaging  Springer  2015  pp  588 599    4  Wentao Zhu  Chaochun Liu  Wei Fan  and Xiaohui Xie   Deeplung  Deep 3d dual path nets for automated pul monary nodule detection and classification   in IEEE WACV  2018    5  Konstantinos  Kamnitsas  Christian  Ledig   Virginia  FJ Newcombe  Joanna P Simpson  Andrew D Kane  David K Menon  Daniel  Rueckert and Ben Glocker   Efficient multi scale 3d cnn with fully connected crf for accurate brain lesion segmentation   Medical imagean alysis  vol  36  pp  61 78  2017    6   Wentao Zhu   Xiang Xiang   Gregory D  Hager  Trac D  Tran  and Xiaohui Xie    Adversarial deep structurednets for mass segmentation from mammograms   in IEEE ISBI  2018    7   Wentao Zhu  Qi Lou  Yeeleng Scott Vang  and Xiaohui Xie   Deep multi instance networks with sparse labelassignment for whole mammogram classification   in MICCAI  2017    8   Rodrigo Benenson  Markus Mathias  Radu Timofte  and Luc Van Gool    Pedestrian detection at 100 frames persecond   in Computer Vision and Pattern Recognition CVPR   2012 IEEE Conference on   2012  pp 2903 2910    9   Piotr Dollar  Ron Appel  Serge Belongie  and Pietro Per ona   Fast feature pyramids for object detection  IEEE Transactions on Pattern Analysis and Machine Intelli gence  vol  36  no  8  pp  1532 1545  2014    10  Ross Girshick  Jeff Donahue  Trevor Darrell  and Jiten  dra Malik   Rich feature hierarchies for accurate object detection and semantic segmentation   in Proceedings of the IEEE conference on computer vision and pattern recognition  2014  pp  580 587    11  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster r cnn  Towards real time object detection with region proposal networks   in Advances in neural information processing systems  2015  pp  91 99    12  Tsung Yi Lin  Piotr Dolla  r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie   Feature pyra  mid networks for object detection   in CVPR  2017    13  Zhaowei Cai  Quanfu Fan  Rogerio Feris  and Nuno Vasconcelos   A unified multi scale deep convolutional neural network for fast object detection   in ECCV  2016   ","software":"md","book":"eglxiang","full_link":"https://github.com/eglxiang/Med"},{"name":"lucien-ye/pycaffe-win","artist":"caff, arxiv, convolut, featur, titl","id":64,"playcount":1000,"description":"lucien-ye/pycaffe-win caff, arxiv, convolut, featur, titl   pycaffe To use the pycaffe  please copy the subfolder  b  caffe   b  to the python install path   PythonPath Lib site package    Produced cpuonly pycaffe by Visual Studio 2013 with the nuget mirror http   nuget lzzy net api v2    Using the code from https   github com Microsoft caffe git   The dependency python lib is installed by miniconda2 http   conda pydata org miniconda html  with the mirror https   mirrors tuna tsinghua edu cn anaconda pkgs free    The protobuf used by python is installed by pip mirror http   e pypi python org simple                                  Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lucien-ye","full_link":"https://github.com/lucien-ye/pycaffe-win"},{"name":"YknZhu/segDeepM","artist":"deep, learn, network, convolut, imag","id":65,"playcount":1142,"description":"YknZhu/segDeepM deep, learn, network, convolut, imag   segDeepM Object detection with segmentation and context in deep networks     Usage  1  Following https   github com rbgirshick rcnn to set up caffe and RCNN   2  Fine tune VGG AlexNet and put the models to data caffe nets   finetuned model also available at http   www cs toronto edu  yukun segdeepm html   3  Put pre computed CPMC masks and corresponding potentials to segDeepM  and run segDeepM m   4  Enjoy       citing segDeepM  Please consider citing our segDeepM paper and the original RCNN paper if you use this code for your research         inproceedings ZhuSegDeepM15      title    segDeepM  Exploiting Segmentation and Context in Deep Neural Networks for Object Detection       author    Yukun Zhu and Raquel Urtasun and Ruslan Salakhutdinov and Sanja Fidler       booktitle    CVPR       year    2015              inproceedings girshick14CVPR          Author    Girshick  Ross and Donahue  Jeff and Darrell  Trevor and Malik  Jitendra           Title    Rich feature hierarchies for accurate object detection and semantic segmentation           Booktitle    Computer Vision and Pattern Recognition           Year    2014        ","software":"md","book":"YknZhu","full_link":"https://github.com/YknZhu/segDeepM"},{"name":"ymym3412/DeepEmbeddedClustering","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":66,"playcount":1057,"description":"ymym3412/DeepEmbeddedClustering “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   DeepEmbeddedClustering chainer implementation of Deep Embedded Clustering  Unsupervised Deep Embedding for Clustering Analysis  https   arxiv org abs 1511 06335     In this code  we use MNIST as training data      Requirement   Chainer 2 0 0   Cupy 1 0 0    if use GPU   scikit learn 0 18 1     Running     Pretraining    shell   python pretraining py   gpu 0   seed 0          gpu 0  turns on GPU  If you turn off GPU  use    gpu  1  or remove    gpu  option     seed 0  means random seed         Training model    shell   python main py   gpu 0   seed 0   model seed 0   cluster 10         gpu  and    seed  means same as before     model seed  is seed number when pretraing    Every five iteration  save embedding result in directory like  modelseed0 seed0      I used t SNE and compress embedding vector to 2 dim  And I saved embedding result of 500 data as scatter plot       Reference Junyuan Xie  Ross Girshick  Ali Farhadi   Unsupervised Deep Embedding for Clustering Analysis   https   arxiv org abs 1511 06335  https   arxiv org abs 1511 06335  ","software":"md","book":"ymym3412","full_link":"https://github.com/ymym3412/DeepEmbeddedClustering"},{"name":"jaewoosong/cse-korean-translation","artist":"caff, arxiv, convolut, featur, titl","id":67,"playcount":899,"description":"jaewoosong/cse-korean-translation caff, arxiv, convolut, featur, titl              Let s translate into Korean                                      I translate various computer science and engineering documents into Korean                   Currently translating           Caffe                        Caffe  machine learning  Korean translation   http   caffe berkeleyvision org     article jia2014caffe    Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor     Journal    arXiv preprint arXiv 1408 5093     Title    Caffe  Convolutional Architecture for Fast Feature Embedding     Year    2014             Copyright                         Please follow the copyrights of original documents                                                 2 0          Feel free to use my translation uncommercially  just mention the source and follow Apache license 2 0  ","software":"md","book":"jaewoosong","full_link":"https://github.com/jaewoosong/cse-korean-translation"},{"name":"xupingxie/deep-learning-models","artist":"deep, learn, network, convolut, imag","id":68,"playcount":1086,"description":"xupingxie/deep-learning-models deep, learn, network, convolut, imag   deep learning models This repo contains some deep learning models including basic NN buidling blocks   Those models are my assignments exercise from  Deep Learning Specialization on Coursera  https   www coursera org specializations deep learning  by  Andrew Ng  http   www andrewng org    Big thanks to Andrew Ng for providing the course and related material  It s a very good start for new people learning AI   Models are written in Tensorflow for ConvNN  deepNN and Keras for ResNet   I will upload more models that I learned      YOLO reference  Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   You Only Look Once  Unified  Real Time Object Detection  https   arxiv org abs 1506 02640   2015   Joseph Redmon  Ali Farhadi  YOLO9000  Better  Faster  Stronger  https   arxiv org abs 1612 08242   2016       ResNet50 Reference  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition  https   arxiv org abs 1512 03385     model  https   user images githubusercontent com 40868950 42415821 0882583a 822b 11e8 9f0e b2c1c5c02089 png  ","software":"md","book":"xupingxie","full_link":"https://github.com/xupingxie/deep-learning-models"},{"name":"landuber/ObjectDetection","artist":"rcnn, train, detect, network, faster","id":69,"playcount":1929,"description":"landuber/ObjectDetection rcnn, train, detect, network, faster This is a Tensorflow implementation of the object detector described by the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Ren et al   NIPS2015  and  Deep Residual Learning for Image Recognition  by He et al   CVPR2016   Given an image  it predicts the bounding box and label of each object in the image  It uses a Region Proposal Network  RPN  to find a set of rectangular cadidate regions  and uses a Fast R CNN to classify these regions  To improve the efficiency  the RPN and Fast R CNN modules share their convolutional layers  These convolutional layers need to be initialized from VGG16  ResNet50  ResNet101 or ResNet152 net  which can be obtained by using Caffe to Tensorflow    Note  I perform the RoI pooling layer by concatenating a RoI warping layer and a standard max pooling layer  The RoI warping layer is currently implemented in NumPy  It remains to add this layer to Tensorflow and achieve end to end training of the whole system   References               Fast R CNN   https   arxiv org abs 1504 08083  Ross Girshick  ICCV 2015     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks   https   arxiv org abs 1506 01497  Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  NIPS 2015     Deep Residual Learning for Image Recognition   https   arxiv org abs 1512 03385   Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  CVPR 2016     Instance aware Semantic Segmentation via Multi task Network Cascades   https   arxiv org abs 1512 04412  Jifeng Dai  Kaiming He  Jian Sun  CVPR 2016     Faster R CNN in Caffe  Matlab version   https   github com ShaoqingRen faster rcnn     Faster R CNN in Caffe  Python version   https   github com rbgirshick py faster rcnn     Microsoft COCO dataset  http   mscoco org      PASCAL VOC dataset  http   host robots ox ac uk pascal VOC      Caffe to Tensorflow  https   github com ethereon caffe tensorflow   ","software":"md","book":"landuber","full_link":"https://github.com/landuber/ObjectDetection"},{"name":"landuber/object-detection","artist":"rcnn, train, detect, network, faster","id":70,"playcount":1929,"description":"landuber/object-detection rcnn, train, detect, network, faster This is a Tensorflow implementation of the object detector described by the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Ren et al   NIPS2015  and  Deep Residual Learning for Image Recognition  by He et al   CVPR2016   Given an image  it predicts the bounding box and label of each object in the image  It uses a Region Proposal Network  RPN  to find a set of rectangular cadidate regions  and uses a Fast R CNN to classify these regions  To improve the efficiency  the RPN and Fast R CNN modules share their convolutional layers  These convolutional layers need to be initialized from VGG16  ResNet50  ResNet101 or ResNet152 net  which can be obtained by using Caffe to Tensorflow    Note  I perform the RoI pooling layer by concatenating a RoI warping layer and a standard max pooling layer  The RoI warping layer is currently implemented in NumPy  It remains to add this layer to Tensorflow and achieve end to end training of the whole system   References               Fast R CNN   https   arxiv org abs 1504 08083  Ross Girshick  ICCV 2015     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks   https   arxiv org abs 1506 01497  Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  NIPS 2015     Deep Residual Learning for Image Recognition   https   arxiv org abs 1512 03385   Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  CVPR 2016     Instance aware Semantic Segmentation via Multi task Network Cascades   https   arxiv org abs 1512 04412  Jifeng Dai  Kaiming He  Jian Sun  CVPR 2016     Faster R CNN in Caffe  Matlab version   https   github com ShaoqingRen faster rcnn     Faster R CNN in Caffe  Python version   https   github com rbgirshick py faster rcnn     Microsoft COCO dataset  http   mscoco org      PASCAL VOC dataset  http   host robots ox ac uk pascal VOC      Caffe to Tensorflow  https   github com ethereon caffe tensorflow   ","software":"md","book":"landuber","full_link":"https://github.com/landuber/object-detection"},{"name":"xiaopeng-liao/DEC_pytorch","artist":"dec, code, python, mnist, cluster","id":71,"playcount":804,"description":"xiaopeng-liao/DEC_pytorch dec, code, python, mnist, cluster   DEC clustering in pyTorch This is an implementation of Junyuan Xie  Ross Girshick  and Ali Farhadi  Unsupervised deep embedding for clustering analysis  ICML 2016 https   arxiv org pdf 1511 06335 pdf    Pre requsit   pyTorch 0 3  with CUDA environment   torchVision   scikit learn    Usage python DEC py    Results This code can reach around 87  accuracy on mnist test dataset http   yann lecun com exdb mnist t10k images idx3 ubyte gz  trained on mnist training sets     References   The code references https   github com XifengGuo DEC keras and reuse some of the code  thanks for the good work      To keep in mind of the bigger dataset  miniBatchKMeans is used to get cluster center    Right now only mnist dataset is tested  it should be easier to add more dataset through torchVision DataLoader  ","software":"md","book":"xiaopeng-liao","full_link":"https://github.com/xiaopeng-liao/DEC_pytorch"},{"name":"rbgirshick/dp-dpm","artist":"featur, deeppyramid, caff, network, convolut","id":72,"playcount":3330,"description":"rbgirshick/dp-dpm featur, deeppyramid, caff, network, convolut   DeepPyramid DPM      Introduction  The DeepPyramid DPM repository is code for our CVPR 2015 paper  Deformable Part Models are Convolutional Neural Networks  http   www cv foundation org openaccess content cvpr 2015 papers Girshick Deformable Part Models 2015 CVPR paper pdf   This work was completed while Ross Girshick was a postdoc at UC Berkeley  prior to joining Microsoft Research   It implements Latent SVM training of deformable part models  DPMs  on top of deep feature pyramids        inproceedings girshick2015dpdpm          Author       Ross Girshick and Forrest Iandola and                      Trevor Darrell and Jitendra Malik           Title        Deformable Part Models are                      Convolutional Neural Networks           Booktitle    Proceedings of the IEEE Conference on                      Computer Vision and Pattern Recognition   CVPR             Year         2015             License  Deep Pyramid DPM is released under the MIT License  refer to the LICENSE file for details   Substantial parts of the code come from  DPMv5  https   github com rbgirshick voc dpm   which is also under the MIT License  see COPYING DPMv5 for details        Requirements  software  1  Requirements for  Caffe  and  matcaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html      You can download my  Makefile config  https   dl dropboxusercontent com s ot5fsofppjmo1wv Makefile config  for reference  2  MATLAB  tested on R2014a       Requirements  hardware  A good GPU  such as a GTX Titan  K20  etc       Installation  1  Clone the repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick dp dpm git        2  We ll call the directory that you cloned DeepPyramid DPM into  DPDPM ROOT   3  Build Caffe and matcaffe        Shell     cd  DPDPM ROOT caffe       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make matcaffe       Replace 8 with your favorite number of compile threads          4  Download the pre computed ImageNet model        Shell     cd  DPDPM ROOT       data scripts fetch imagenet model sh              This will populate the   DPDPM ROOT data caffe nets  folder with  CaffeNet v2 caffemodel    5  Symlink to the PASCAL VOC 2007 dataset      Note  for more information on installing VOC 2007  go  here  https   github com rbgirshick rcnn installing pascal voc 2007           Shell     cd  DPDPM ROOT       Replace  path to with the actual path to VOC 2007     ln  s  path to VOC2007 VOCdevkit cachedir VOC2007 VOCdevkit          6  Build the MATLAB mex code        Shell       Start matlab     matlab        compile              Usage  To train and test a detector      Shell cd  DPDPM ROOT matlab      run these commands inside matlab    precompute feat pyramids     this will take several hours    pascal  bicycle   3    replace  bicycle  with any PASCAL class      Executing  precompute feat pyramids    is optional  If you don t call this function then features will be cached while training and testing for the first time  making training and testing much slower   ","software":"md","book":"rbgirshick","full_link":"https://github.com/rbgirshick/dp-dpm"},{"name":"dinhtuyen/dp-dpm","artist":"featur, deeppyramid, caff, network, convolut","id":73,"playcount":3330,"description":"dinhtuyen/dp-dpm featur, deeppyramid, caff, network, convolut   DeepPyramid DPM      Introduction  The DeepPyramid DPM repository is code for our CVPR 2015 paper  Deformable Part Models are Convolutional Neural Networks  http   www cv foundation org openaccess content cvpr 2015 papers Girshick Deformable Part Models 2015 CVPR paper pdf   This work was completed while Ross Girshick was a postdoc at UC Berkeley  prior to joining Microsoft Research   It implements Latent SVM training of deformable part models  DPMs  on top of deep feature pyramids        inproceedings girshick2015dpdpm          Author       Ross Girshick and Forrest Iandola and                      Trevor Darrell and Jitendra Malik           Title        Deformable Part Models are                      Convolutional Neural Networks           Booktitle    Proceedings of the IEEE Conference on                      Computer Vision and Pattern Recognition   CVPR             Year         2015             License  Deep Pyramid DPM is released under the MIT License  refer to the LICENSE file for details   Substantial parts of the code come from  DPMv5  https   github com rbgirshick voc dpm   which is also under the MIT License  see COPYING DPMv5 for details        Requirements  software  1  Requirements for  Caffe  and  matcaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html      You can download my  Makefile config  https   dl dropboxusercontent com s ot5fsofppjmo1wv Makefile config  for reference  2  MATLAB  tested on R2014a       Requirements  hardware  A good GPU  such as a GTX Titan  K20  etc       Installation  1  Clone the repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick dp dpm git        2  We ll call the directory that you cloned DeepPyramid DPM into  DPDPM ROOT   3  Build Caffe and matcaffe        Shell     cd  DPDPM ROOT caffe       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make matcaffe       Replace 8 with your favorite number of compile threads          4  Download the pre computed ImageNet model        Shell     cd  DPDPM ROOT       data scripts fetch imagenet model sh              This will populate the   DPDPM ROOT data caffe nets  folder with  CaffeNet v2 caffemodel    5  Symlink to the PASCAL VOC 2007 dataset      Note  for more information on installing VOC 2007  go  here  https   github com rbgirshick rcnn installing pascal voc 2007           Shell     cd  DPDPM ROOT       Replace  path to with the actual path to VOC 2007     ln  s  path to VOC2007 VOCdevkit cachedir VOC2007 VOCdevkit          6  Build the MATLAB mex code        Shell       Start matlab     matlab        compile              Usage  To train and test a detector      Shell cd  DPDPM ROOT matlab      run these commands inside matlab    precompute feat pyramids     this will take several hours    pascal  bicycle   3    replace  bicycle  with any PASCAL class      Executing  precompute feat pyramids    is optional  If you don t call this function then features will be cached while training and testing for the first time  making training and testing much slower   ","software":"md","book":"dinhtuyen","full_link":"https://github.com/dinhtuyen/dp-dpm"},{"name":"lcybuzz/Personal-Object-Detection-Paper-Record","artist":"paper, year, network, page, descriptionbr","id":74,"playcount":8261,"description":"lcybuzz/Personal-Object-Detection-Paper-Record paper, year, network, page, descriptionbr   Personal Object Detection Paper Record   Under construction    Table of Contents    Deep Learning Methods   deep learning methods       Popular methods   popular methods       One Stage   one stage       Other Interesting Methods   other interesting methods     Taditional Classical Methods   traditional classical methods     Datasets   datasets     Leaderboards   leaderboards     Sources Lists   sources lists     Deep Learning Methods    Popular methods        SPPNet         Paper    Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  Br     Year    ECCV 2014   TPAMI 2015  Br     Authors      Kaiming He  http   kaiminghe com     Xiangyu Zhang  https   www cs purdue edu homes xyzhang    Shaoqing Ren  http   shaoqingren com     Jian Sun  http   www jiansun org     Br     Pages    https   github com ShaoqingRen SPP net   Br     Description     Br  1                         pool n n         n           feature          Br  2  SPP                                       ROI pooling              Br         R CNN          Paper    Rich feature hierarchies for accurate object detection and semantic segmentation  Br     Year    CVPR 2014  Br     Authors       Ross Girshick  http   www rossgirshick info     Jeff Donahue  http   jeffdonahue com     Trevor Darrell  http   people eecs berkeley edu  trevor     Jitendra Malik  http   people eecs berkeley edu  malik      Br     Pages    https   github com rbgirshick rcnn   Br     Description     Br  1  DL            Selective Search   2k proposal    CNN     bounding box        Br  2  RCNN    proposal  CNN                   Fast R CNN         Paper    Fast R CNN  Fast Region based Convolutional Networks for object detection   Br     Year    ICCV 2015  Br     Authors       Ross Girshick  http   www rossgirshick info    Br     Pages    https   github com rbgirshick fast rcnn   Br     Description     Br  1    ROI pooling   Selective Search  proposal     feature map        ROI pooling   proposal       resize                             FC    SVD       Br          Faster R CNN          Paper    Fast R CNN  Fast Region based Convolutional Networks for object detection   Br     Year    ICCV 2015  Br     Authors        Shaoqing Ren  http   shaoqingren com     Kaiming He  http   kaiminghe com     Ross Girshick  http   www rossgirshick info      Jian Sun  http   www jiansun org     Br     Pages     Br   https   github com rbgirshick py faster rcnn   Br   https   github com ShaoqingRen faster rcnn   Br     Description     Br  1       Proposal                           Region Proposal Network    Proposal   Br  2  RPN     9 Anchor box                   Loss        anchor box                      Br  3  RPN  Proposal    Fast R CNN         ROI pooling   resize                     Br  4            RPN Fast R CNN                   Br       Reference     Br   https   www cnblogs com zf blog p 7273182 html  Br         R FCN         Paper      R FCN Object Detection via Region based Fully Convolutional Networks  Br     Year    NIPS 2016  Br     Authors      Jifeng Dai  http   www jifengdai org     Yi Li  https   liyi14 github io     Kaiming He  http   kaiminghe com     Jian Sun  http   www jiansun org    Br      Pages     https   github com daijifeng001 R FCN   Br     Description     Br  1                         position sensitive score map                                                                Br  2    CNN     ResNet 101   feature map   feature map    RPN                    K K  C 1  channel feature map  K K       K K          K 3              9      score       encode              RPN   ROI  position sensitive ROI pooling    K K ROI                      ROI      Br  3  R FCN   Faster R CNN    region wise layers                                            Br         FPN         Paper     Feature Pyramid Networks for Object Detection  Br     Year    NIPS 2016  Br     Authors      Tsung Yi Lin  https   vision cornell edu se3 people tsung yi lin     Piotr Doll ar  http   pdollar github io     Ross Girshick  http   www rossgirshick info     Kaiming He  http   kaiminghe com     Bharath Hariharan  http   home bharathh info     Serge Belongie  http   blogs cornell edu techfaculty serge belongie    Br      Pages        Br     Description     Br  1    SSD                                                    FPN      feature extractor                 Br  2  FPN     U Net    bottom up top down    top down   stage            bottom up          stage                  scale      Br      Reference      Br  https   blog csdn net u014380165 article details 72890275  Br  https   blog csdn net jesse mx article details 54588085  Br      One Stage       YOLO          Paper    Fast R CNN  Fast Region based Convolutional Networks for object detection   Br     Year    ICCV 2016  Br     Authors        Joseph Redmon  https   pjreddie com     Santosh Divvala  http   allenai org team santoshd     Ross Girshick  http   www rossgirshick info      Ali Farhadi  https   homes cs washington edu  ali     Br     Pages     Br   https   pjreddie com darknet yolo    Br   https   github com pjreddie darknet   Br   https   github com gliese581gg YOLO tensorflow  Br   https   github com thtrieu darkflow  Br     Description     Br  1    one stage                  bounding box                2       S S gird        region proposal          grid  B bounding box    x  y  h  w  confidence score    confidence score  bbox    IoU  grid                     grid             bbox            bbox           3  loss      loss          bbox      loss      bbox       bbox          loss          grid     loss                loss            loss   loss      h w      bbox                  YOLO9000         Paper    YOLO9000  Better Faster Stronger   Br     Year    CVPR 2017 Br     Authors       Joseph Redmon  https   pjreddie com     Ali Farhadi  https   homes cs washington edu  ali     Br     Pages     Br   http   pjreddie com yolo9000    Br   https   github com philipperemy yolo 9000   Br   https   github com allanzelener YAD2K  Br   https   github com hizhangp yolo tensorflow  Br   https   github com longcw yolo2 pytorch  Br     Description     Br  1  YOLO          SSD Faster RCNN                2                                           448  416        13 3 feature map           grid         3  2 Bounding box  Faster RCNN  Anchor box       bbox           K Means              bbox           1 IoU   bbox            4        SSD    feature map              26 26 feature map      concat      26 26 512    13 13 2048         map                            10 batch               YOLOv3         Paper    YOLO9000  Better Faster Stronger   Br     Year    arXiv 1804  Br     Authors       Joseph Redmon  https   pjreddie com     Ali Farhadi  https   homes cs washington edu  ali     Br     Pages     Br   https   pjreddie com darknet yolo   Br     Description     Br  1                                    backbone  Br         SSD          Paper    SSD  Single Shot MultiBox Detector   Br     Year    ECCV 2016 Oral  Br     Authors        Wei Liu  http   www cs unc edu  wliu    Dragomir Anguelov   Christian Szegedy  https   research google com pubs ChristianSzegedy html    Scott Reed  http   www scottreed info     Cheng Yang Fu  http   www cs unc edu  cyfu     Alexander C  Berg  http   acberg com     Br     Pages     Br   https   github com weiliu89 caffe tree ssd   Br   https   github com balancap SSD Tensorflow   Br     Description     Br  1     YOLO RPN                           2   feature map        default box   bounding box   default boxes offset     score               bbox                  YOLO      3   YOLO           feature         default box          1      ratio scale  2       bbox       score      object               3   kernel          4   RPN               anchor       1                sliding window     2       feature map      multi scale         feature map        anchor box     Other Interesting Methods       Taditional Classical Methods     Datasets    Leaderboards  PASCAL VOC http   host robots ox ac uk 8080 leaderboard main bootstrap php  Br    ILSVRC2016 http   image net org challenges LSVRC 2016 results  Br    Sources Lists https   handong1587 github io deep learning 2015 10 09 object detection html  Br   ","software":"md","book":"lcybuzz","full_link":"https://github.com/lcybuzz/Personal-Object-Detection-Paper-Record"},{"name":"juanluislm/MaskRCNN","artist":"mxnet, ieee, confer, train, test","id":75,"playcount":5365,"description":"juanluislm/MaskRCNN mxnet, ieee, confer, train, test   MX Mask R CNN An MXNet implementation of  Mask R CNN  https   arxiv org abs 1703 06870    This repository is based largely on the mx rcnn implementation of Faster RCNN available  here  https   github com precedenceguo mx rcnn      div align  center    img src  https   github com TuSimple mx maskrcnn blob master figures maskrcnn result png   br  br    div       Main Results       Cityscapes     Method  Training data  Test data  Average   person   rider   car   truck   bus    train  motorcycle  bicycle                                                                             Ours  fine only  test 26 9 33 0 25 7 47 7 21 6 27 4 23 0 19 9 16 9    Reference 5   fine only  test 26 2 30 5 23 8 46 9 22 8 32 2 18 6 19 1 16 0    Ours   fine only  val 31 3 32 6 26 6 49 5 26 5 45 4 32 1 17 6 20 4    Reference 5   fine only  val 31 5                                   Backbone  Resnet 50 FPN      COCO Coming soon  please stay tuned      Requirement  We tested our code on   Ubuntu 16 04  Python 2 7 with  numpy 1 12 1   cv2 2 4 9   PIL 4 3   matplotlib 2 1 0   cython 0 26 1   easydict     Preparation for Training  1  Download Cityscapes data  gtFine trainvaltest zip  leftImg8bit trainvaltest zip   Extract them into  data cityscape     The folder structure would then look as shown below       data cityscape      leftImg8bit          train          val          test      gtFine          train          val          test      imglists          train lst         val lst         test lst       2  Download Resnet 50 pretrained model      bash scripts download res50 sh       3  Build MXNet with ROIAlign operator       cp rcnn CXX OP   incubator mxnet src operator       To build MXNet from source  please refer to the  tutorial  https   mxnet incubator apache org get started build from source html    4  Build related cython code       make      5  Kick off training      bash scripts train alternate sh         Preparation for Evaluation 1  Prepare Cityscapes evaluation scripts       bash scripts download cityscapescripts sh     2  Eval     bash scripts eval sh         Demo 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Make sure that you have the cityscapes data in  data cityscapes  folder      bash scripts demo sh         Test single image 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Follow  Preparation for Training   step1 step4  3  run  bash scripts demo single image sh   you can change the image path in script demo single image sh      FAQ Q  It says    AttributeError   module  object has no attribute  ROIAlign       A  This is because either    you forget to copy the operators to your MXNet folder    or you forget to re compile MXNet and re install MXNet python interface    or you install the wrong MXNet        Please print  mxnet   path    to make sure you use correct MXNet       Q  I encounter    incubator mxnet mshadow mshadow         cuda tensor gpu inl cuh 110  Check failed  err    cudaSuccess  7 vs  0  Name  MapPlanKernel ErrStr too many resources requested for launch    at the begining   A  Please try adding  MSHADOW CFLAGS     DMSHADOW OLD CUDA 1  in  mxnet mshadow make mshadow mk  and re compile MXNet      References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In IEEE Transactions on Pattern Analysis and Machine Intelligence  2016  4  Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  Serge Belongie   Feature Pyramid Networks for Object Detection   In Computer Vision and Pattern Recognition  IEEE Conference on  2017  5  Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick   Mask R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2017  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  6  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  7  Marius Cordts  Mohamed Omran  Sebastian Ramos  Timo Rehfeld  Markus Enzweiler  Rodrigo Benenson  Uwe Franke  Stefan Roth  Bernt Schiele   The Cityscapes Dataset for Semantic Urban Scene Understanding   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  ","software":"md","book":"juanluislm","full_link":"https://github.com/juanluislm/MaskRCNN"},{"name":"TangWen920812/mx-maskrcnn","artist":"mxnet, ieee, confer, train, test","id":76,"playcount":5365,"description":"TangWen920812/mx-maskrcnn mxnet, ieee, confer, train, test   MX Mask R CNN An MXNet implementation of  Mask R CNN  https   arxiv org abs 1703 06870    This repository is based largely on the mx rcnn implementation of Faster RCNN available  here  https   github com precedenceguo mx rcnn      div align  center    img src  https   github com TuSimple mx maskrcnn blob master figures maskrcnn result png   br  br    div       Main Results       Cityscapes     Method  Training data  Test data  Average   person   rider   car   truck   bus    train  motorcycle  bicycle                                                                             Ours  fine only  test 26 9 33 0 25 7 47 7 21 6 27 4 23 0 19 9 16 9    Reference 5   fine only  test 26 2 30 5 23 8 46 9 22 8 32 2 18 6 19 1 16 0    Ours   fine only  val 31 3 32 6 26 6 49 5 26 5 45 4 32 1 17 6 20 4    Reference 5   fine only  val 31 5                                   Backbone  Resnet 50 FPN      COCO Coming soon  please stay tuned      Requirement  We tested our code on   Ubuntu 16 04  Python 2 7 with  numpy 1 12 1   cv2 2 4 9   PIL 4 3   matplotlib 2 1 0   cython 0 26 1   easydict     Preparation for Training  1  Download Cityscapes data  gtFine trainvaltest zip  leftImg8bit trainvaltest zip   Extract them into  data cityscape     The folder structure would then look as shown below       data cityscape      leftImg8bit          train          val          test      gtFine          train          val          test      imglists          train lst         val lst         test lst       2  Download Resnet 50 pretrained model      bash scripts download res50 sh       3  Build MXNet with ROIAlign operator       cp rcnn CXX OP   incubator mxnet src operator       To build MXNet from source  please refer to the  tutorial  https   mxnet incubator apache org get started build from source html    4  Build related cython code       make      5  Kick off training      bash scripts train alternate sh         Preparation for Evaluation 1  Prepare Cityscapes evaluation scripts       bash scripts download cityscapescripts sh     2  Eval     bash scripts eval sh         Demo 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Make sure that you have the cityscapes data in  data cityscapes  folder      bash scripts demo sh         Test single image 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Follow  Preparation for Training   step1 step4  3  run  bash scripts demo single image sh   you can change the image path in script demo single image sh      FAQ Q  It says    AttributeError   module  object has no attribute  ROIAlign       A  This is because either    you forget to copy the operators to your MXNet folder    or you forget to re compile MXNet and re install MXNet python interface    or you install the wrong MXNet        Please print  mxnet   path    to make sure you use correct MXNet       Q  I encounter    incubator mxnet mshadow mshadow         cuda tensor gpu inl cuh 110  Check failed  err    cudaSuccess  7 vs  0  Name  MapPlanKernel ErrStr too many resources requested for launch    at the begining   A  Please try adding  MSHADOW CFLAGS     DMSHADOW OLD CUDA 1  in  mxnet mshadow make mshadow mk  and re compile MXNet      References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In IEEE Transactions on Pattern Analysis and Machine Intelligence  2016  4  Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  Serge Belongie   Feature Pyramid Networks for Object Detection   In Computer Vision and Pattern Recognition  IEEE Conference on  2017  5  Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick   Mask R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2017  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  6  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  7  Marius Cordts  Mohamed Omran  Sebastian Ramos  Timo Rehfeld  Markus Enzweiler  Rodrigo Benenson  Uwe Franke  Stefan Roth  Bernt Schiele   The Cityscapes Dataset for Semantic Urban Scene Understanding   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  ","software":"md","book":"TangWen920812","full_link":"https://github.com/TangWen920812/mx-maskrcnn"},{"name":"oSimonXiaOo/VideoObjecDetectionPaper","artist":"object, detect, propos, cvpr, eccv","id":77,"playcount":4805,"description":"oSimonXiaOo/VideoObjecDetectionPaper object, detect, propos, cvpr, eccv   Video Object Detection Paper List                  Optical Flow     https   i imgur com tEoc9ol png     FlowNet       FlowNet  Learning Optical Flow With Convolutional Networks  https   www cv foundation org openaccess content iccv 2015 html Dosovitskiy FlowNet Learning Optical ICCV 2015 paper html    FlowNet2 0       Flownet 2 0  Evolution of optical flow estimation with deep networks  http   openaccess thecvf com content cvpr 2017 papers Ilg FlowNet 2 0 Evolution CVPR 2017 paper pdf      Video Object Detection     https   i imgur com Q5dBN76 png     Flow Guided Feature Aggregation      Flow Guided Feature Aggregation for Video Object Detection  https   arxiv org abs 1703 10025    Deep Feature Flow       Deep feature flow for video recognition  http   openaccess thecvf com content cvpr 2017 papers Zhu Deep Feature Flow CVPR 2017 paper pdf    Towards High Performance       Towards High Performance Video Object Detection  http   openaccess thecvf com content cvpr 2018 papers Zhu Towards High Performance CVPR 2018 paper pdf    Towards High Performance for Mobiles      Towards High Performance Video Object Detection for Mobiles  https   arxiv org pdf 1804 05830 pdf      Datasets    PASCAL   Project   http   host robots ox ac uk pascal VOC       Mark Everingham  Luc Van Gool  Christopher K  I  Williams  John Winn  and Andrew Zisserman   The PASCAL Visual Object Classes  VOC  Challenge  http   host robots ox ac uk pascal VOC pubs everingham10 pdf   IJCV  2010    MS COCO   Project   http   mscoco org       Tsung Yi Lin  Michael Maire  Serge Belongie  Lubomir Bourdev  Ross Girshick  James Hays  Pietro Perona  Deva Ramanan  C  Lawrence Zitnick  and Piotr Doll r   Microsoft COCO  Common Objects in Context  https   arxiv org pdf 1405 0312 pdf   ECCV  2014    ImageNet   Project   http   www image net org       Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li and Li Fei Fei   ImageNet  A Large Scale Hierarchical Image Database  http   www image net org papers imagenet cvpr09 pdf   CVPR  2009    NYU Depth Dataset   Project   http   cs nyu edu  silberman datasets nyu depth v2 html      Nathan Silberman  Pushmeet Kohli  Derek Hoiem  and Rob Fergus   Indoor Segmentation and Support Inference from RGBD Images  http   cs nyu edu  silberman papers indoor seg support pdf   ECCV  2012    KITTI   Project   http   www cvlibs net datasets kitti index php      Andreas Geiger and Philip Lenz and Raquel Urtasun   Are we ready for Autonomous Driving  The KITTI Vision Benchmark Suite  http   www cvlibs net publications Geiger2012CVPR pdf   CVPR  2012       Object Detection      R CNN   Code   https   github com rbgirshick rcnn      Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik   Rich feature hierarchies for accurate object detection and semantic segmentation  https   arxiv org pdf 1311 2524 pdf   CVPR  2014    Fast R CNN   Code   https   github com rbgirshick fast rcnn      Ross Girshick   Fast R CNN  https   arxiv org pdf 1504 08083 pdf   ICCV  2015    Faster R CNN   Code   https   github com ShaoqingRen faster rcnn    PyCode    https   github com rbgirshick py faster rcnn      Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  https   arxiv org pdf 1506 01497 pdf   NIPS  2015    R FCN   Code   https   github com daijifeng001 r fcn   PyCode   https   github com Orpine py R FCN      Jifeng Dai  Yi Li  Kaiming He  Jian Sun   R FCN  Object Detection via Region based Fully Convolutional Networks  https   arxiv org pdf 1605 06409 pdf   NIPS  2016    SSD   Code   https   github com weiliu89 caffe tree ssd      Wei Liu  Dragomir Anguelov  Dumitru Erhan  Christian Szegedy  Scott Reed  Cheng Yang Fu  Alexander C  Berg   SSD  Single Shot MultiBox Detector  https   arxiv org pdf 1512 02325v2 pdf   ECCV  2016    YOLO   Code   http   pjreddie com darknet yolo       Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   You Only Look Once  Unified  Real Time Object Detection  http   pjreddie com media files papers yolo pdf   ECCV  2016    YOLOv2  Code   tp   pjreddie com yolo9000        YOLO9000  Better  Faster  Stronger  https   arxiv org abs 1612 08242    YOLOv3      YOLOv3  An Incremental Improvemen  https   arxiv org abs 1804 02767    SPP   Code   https   github com ShaoqingRen SPP net      Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  https   arxiv org pdf 1406 4729 pdf   ECCV  2014    Light Head R CNN  Code   https   github com zengarden light head rcnn       Light Head R CNN  In Defense of Two Stage Object Detector  https   arxiv org abs 1711 07264     More Paper   Object Detection   https   handong1587 github io deep learning 2015 10 09 object detection html  ","software":"md","book":"oSimonXiaOo","full_link":"https://github.com/oSimonXiaOo/VideoObjecDetectionPaper"},{"name":"TuSimple/mx-maskrcnn","artist":"mxnet, ieee, confer, train, test","id":78,"playcount":5365,"description":"TuSimple/mx-maskrcnn mxnet, ieee, confer, train, test   MX Mask R CNN An MXNet implementation of  Mask R CNN  https   arxiv org abs 1703 06870    This repository is based largely on the mx rcnn implementation of Faster RCNN available  here  https   github com precedenceguo mx rcnn      div align  center    img src  https   github com TuSimple mx maskrcnn blob master figures maskrcnn result png   br  br    div       Main Results       Cityscapes     Method  Training data  Test data  Average   person   rider   car   truck   bus    train  motorcycle  bicycle                                                                             Ours  fine only  test 26 9 33 0 25 7 47 7 21 6 27 4 23 0 19 9 16 9    Reference 5   fine only  test 26 2 30 5 23 8 46 9 22 8 32 2 18 6 19 1 16 0    Ours   fine only  val 31 3 32 6 26 6 49 5 26 5 45 4 32 1 17 6 20 4    Reference 5   fine only  val 31 5                                   Backbone  Resnet 50 FPN      COCO Coming soon  please stay tuned      Requirement  We tested our code on   Ubuntu 16 04  Python 2 7 with  numpy 1 12 1   cv2 2 4 9   PIL 4 3   matplotlib 2 1 0   cython 0 26 1   easydict     Preparation for Training  1  Download Cityscapes data  gtFine trainvaltest zip  leftImg8bit trainvaltest zip   Extract them into  data cityscape     The folder structure would then look as shown below       data cityscape      leftImg8bit          train          val          test      gtFine          train          val          test      imglists          train lst         val lst         test lst       2  Download Resnet 50 pretrained model      bash scripts download res50 sh       3  Build MXNet with ROIAlign operator       cp rcnn CXX OP   incubator mxnet src operator       To build MXNet from source  please refer to the  tutorial  https   mxnet incubator apache org get started build from source html    4  Build related cython code       make      5  Kick off training      bash scripts train alternate sh         Preparation for Evaluation 1  Prepare Cityscapes evaluation scripts       bash scripts download cityscapescripts sh     2  Eval     bash scripts eval sh         Demo 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Make sure that you have the cityscapes data in  data cityscapes  folder      bash scripts demo sh         Test single image 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Follow  Preparation for Training   step1 step4  3  run  bash scripts demo single image sh   you can change the image path in script demo single image sh      FAQ Q  It says    AttributeError   module  object has no attribute  ROIAlign       A  This is because either    you forget to copy the operators to your MXNet folder    or you forget to re compile MXNet and re install MXNet python interface    or you install the wrong MXNet        Please print  mxnet   path    to make sure you use correct MXNet       Q  I encounter    incubator mxnet mshadow mshadow         cuda tensor gpu inl cuh 110  Check failed  err    cudaSuccess  7 vs  0  Name  MapPlanKernel ErrStr too many resources requested for launch    at the begining   A  Please try adding  MSHADOW CFLAGS     DMSHADOW OLD CUDA 1  in  mxnet mshadow make mshadow mk  and re compile MXNet      References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In IEEE Transactions on Pattern Analysis and Machine Intelligence  2016  4  Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  Serge Belongie   Feature Pyramid Networks for Object Detection   In Computer Vision and Pattern Recognition  IEEE Conference on  2017  5  Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick   Mask R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2017  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  6  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  7  Marius Cordts  Mohamed Omran  Sebastian Ramos  Timo Rehfeld  Markus Enzweiler  Rodrigo Benenson  Uwe Franke  Stefan Roth  Bernt Schiele   The Cityscapes Dataset for Semantic Urban Scene Understanding   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  ","software":"md","book":"TuSimple","full_link":"https://github.com/TuSimple/mx-maskrcnn"},{"name":"dragonfly90/mask-product","artist":"mxnet, ieee, confer, train, test","id":79,"playcount":5473,"description":"dragonfly90/mask-product mxnet, ieee, confer, train, test  The repository based on  Tusimple implementation  https   github com TuSimple mx maskrcnn     MX Mask R CNN An MXNet implementation of  Mask R CNN  https   arxiv org abs 1703 06870    This repository is based largely on the mx rcnn implementation of Faster RCNN available  here  https   github com precedenceguo mx rcnn      div align  center    img src  https   github com TuSimple mx maskrcnn blob master figures maskrcnn result png   br  br    div       Main Results       Cityscapes     Method  Training data  Test data  Average   person   rider   car   truck   bus    train  motorcycle  bicycle                                                                             Ours  fine only  test 26 9 33 0 25 7 47 7 21 6 27 4 23 0 19 9 16 9    Reference 5   fine only  test 26 2 30 5 23 8 46 9 22 8 32 2 18 6 19 1 16 0    Ours   fine only  val 31 3 32 6 26 6 49 5 26 5 45 4 32 1 17 6 20 4    Reference 5   fine only  val 31 5                                   Backbone  Resnet 50 FPN      COCO Coming soon  please stay tuned      Requirement  We tested our code on   Ubuntu 16 04  Python 2 7 with  numpy 1 12 1   cv2 2 4 9   PIL 4 3   matplotlib 2 1 0   cython 0 26 1   easydict     Preparation for Training  1  Download Cityscapes data  gtFine trainvaltest zip  leftImg8bit trainvaltest zip   Extract them into  data cityscape     The folder structure would then look as shown below       data cityscape      leftImg8bit          train          val          test      gtFine          train          val          test      imglists          train lst         val lst         test lst       2  Download Resnet 50 pretrained model      bash scripts download res50 sh       3  Build MXNet with ROIAlign operator       cp rcnn CXX OP   incubator mxnet src operator       To build MXNet from source  please refer to the  tutorial  https   mxnet incubator apache org get started build from source html    4  Build related cython code       make      5  Kick off training      bash scripts train alternate sh         Preparation for Evaluation 1  Prepare Cityscapes evaluation scripts       bash scripts download cityscapescripts sh     2  Eval     bash scripts eval sh         Demo 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Make sure that you have the cityscapes data in  data cityscapes  folder      bash scripts demo sh         Test single image 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Follow  Preparation for Training   step1 step4  3  run  bash scripts demo single image sh   you can change the image path in script demo single image sh      FAQ Q  It says    AttributeError   module  object has no attribute  ROIAlign       A  This is because either    you forget to copy the operators to your MXNet folder    or you forget to re compile MXNet and re install MXNet python interface    or you install the wrong MXNet        Please print  mxnet   path    to make sure you use correct MXNet       Q  I encounter    incubator mxnet mshadow mshadow         cuda tensor gpu inl cuh 110  Check failed  err    cudaSuccess  7 vs  0  Name  MapPlanKernel ErrStr too many resources requested for launch    at the begining   A  Please try adding  MSHADOW CFLAGS     DMSHADOW OLD CUDA 1  in  mxnet mshadow make mshadow mk  and re compile MXNet      References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In IEEE Transactions on Pattern Analysis and Machine Intelligence  2016  4  Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  Serge Belongie   Feature Pyramid Networks for Object Detection   In Computer Vision and Pattern Recognition  IEEE Conference on  2017  5  Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick   Mask R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2017  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  6  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  7  Marius Cordts  Mohamed Omran  Sebastian Ramos  Timo Rehfeld  Markus Enzweiler  Rodrigo Benenson  Uwe Franke  Stefan Roth  Bernt Schiele   The Cityscapes Dataset for Semantic Urban Scene Understanding   In Computer Vision and Pattern Recognition  IEEE Conference on  2016    mask product ","software":"md","book":"dragonfly90","full_link":"https://github.com/dragonfly90/mask-product"},{"name":"christopher5106/last_caffe_with_stn","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":80,"playcount":1278,"description":"christopher5106/last_caffe_with_stn “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Spatial Transformer Networks and LSTM RNN in Caffe     Spatial Transformer Networks  Spatial Transformer Networks from https   github com daerduoCarey SpatialTransformerLayer with an updated  last  version of Caffe and some code cleaning and corrections   Compile Caffe following my tutorial on  iOS  http   christopher5106 github io big data 2015 07 16 deep learning install caffe cudnn cuda for digits python on mac osx html  or  Ubuntu  http   christopher5106 github io big data 2015 07 16 deep learning install caffe cudnn cuda for digits python on ubuntu 14 04 html    My tutorial about  Spatial Transformer Networks  http   christopher5106 github io big data 2016 04 18 spatial transformer layers caffe tensorflow html    Commands to build a Docker        docker build  f docker standalone cpu Dockerfile   t caffe stn v1    or pull it directly        docker pull christopher5106 caffe stn     LSTM RNN  LSTM from https   github com junhyukoh caffe lstm  My tutorial about  LSTM in Caffe  http   christopher5106 github io deep learning 2016 06 07 recurrent neural net with Caffe html       Repeat Layer  As in https   github com skaae recurrent spatial transformer code I created a RepeatLayer designed for Recurrent Neural Nets      Smooth L1 layer  From Ross Girshick ","software":"md","book":"christopher5106","full_link":"https://github.com/christopher5106/last_caffe_with_stn"},{"name":"jiaruixu/Detectron-with-tensorboard","artist":"detectron, kaim, girshick, ross, piotr","id":81,"playcount":13425,"description":"jiaruixu/Detectron-with-tensorboard detectron, kaim, girshick, ross, piotr    Detectron with tensorboard This repository was forked from  Detectron with tensorboard  https   github com tfzhou Detectron with tensorboard    tools pascal voc xml2json py  was forked from  Gemfield  https   github com CivilNet Gemfield blob master src python pascal voc xml2json pascal voc xml2json py   This repository use  c2board  https   github com endernewton c2board  to visualize some training info of Detectron in tensorboard  It dumps the training info in the output folder of Detectron by default      Dataset preparation     Transfer GTA and Cityscapes to COCO format  1  Extract only car annotations of GTA and Cityscapes  2  Convert annotations to COCO format       Sample GTA dataset  Extract 8000 images with car annoations as train set and 2000 images with car annotations as valiation set   Not all the images in the GTA dataset has car annoations  So we first extract images with car annotations from GTA 200k dataset  instead of GTA 10k dataset  and then generate the train and val set by random sampling   Generate GTA train set  8000 images       python2 tools drop annotations and resample py      annotation dir   detectron datasets data GTA Pascal format Annotations instances caronly train json      sample number 8000      sample only True      output dir   detectron datasets data GTA Pascal format Annotations      Generate GTA val set  2000 images       python2 tools drop annotations and resample py      annotation dir   detectron datasets data GTA Pascal format Annotations instances caronly val json      sample number 2000      sample only True      output dir   detectron datasets data GTA Pascal format Annotations      Write image names to txt        train python tools write name to txt py      json dir  mnt fcav self training object detection dataset GTA Pascal format Annotations instances caronly train sample8000 json      output dir  mnt fcav self training object detection dataset GTA Pascal format VOCdevkit2012 VOC2012 ImageSets Main    val python tools write name to txt py      json dir  mnt fcav self training object detection dataset GTA Pascal format Annotations instances caronly val sample2000 json      output dir  mnt fcav self training object detection dataset GTA Pascal format VOCdevkit2012 VOC2012 ImageSets Main          Add dataset to catalog and modify configs     detectron datasets dataset catalog py      configs configs       Train Faster RCNN  Use  DetectronDocker  repository     Visualize average precision   eval py  will plot the   precision recall curve   and save the   corresponding scores   into an excel  While evaluating  you can also use tensorboard to visualize the change of average precision  It dumps the info in the output folder of Detectron by default   visualize lower bound      python2 tools eval py      cfg  mnt fcav self training object detection configs e2e faster rcnn X 101 64x4d FPN 1x lowerbound yaml    TEST WEIGHTS  mnt fcav self training object detection lowerbound train voc GTA caronly train sample8000 generalized rcnn    NUM GPUS 1    OUTPUT DIR  mnt fcav self training object detection lowerbound eval      visualize upperbound1      python2 tools eval py      cfg  mnt fcav self training object detection configs e2e faster rcnn X 101 64x4d FPN 1x upperbound1 yaml    TEST WEIGHTS  mnt fcav self training object detection upperbound1 train voc GTA caronly train sample8000 cityscapes caronly train generalized rcnn    NUM GPUS 1    OUTPUT DIR  mnt fcav self training object detection upperbound1 eval      visualize baseline      python2 tools eval py      cfg  mnt fcav self training object detection configs e2e faster rcnn X 101 64x4d FPN 1x baseline yaml    TEST WEIGHTS  mnt fcav self training object detection baseline train voc GTA caronly train cityscapes caronly train with prediction voc GTA caronly val generalized rcnn    NUM GPUS 1    OUTPUT DIR  mnt fcav self training object detection baseline eval      visualize upperbound2      python2 tools eval py      cfg  mnt fcav self training object detection configs e2e faster rcnn X 101 64x4d FPN 1x upperbound2 yaml    TEST WEIGHTS  mnt fcav self training object detection upperbound2 train voc GTA caronly train cityscapes caronly train with dropannotations voc GTA caronly val generalized rcnn    NUM GPUS 1    OUTPUT DIR  mnt fcav self training object detection upperbound2 eval      Use tensorboard      tensorboard   logdir  OUTPUT DIR         Prediction  predict with lowerbound      python2 tools test net py       cfg  mnt fcav self training object detection configs e2e faster rcnn X 101 64x4d FPN 1x lowerbound prediction yaml      vis     TEST WEIGHTS  mnt fcav self training object detection lowerbound train voc GTA caronly train voc GTA caronly val generalized rcnn model iter34999 pkl     NUM GPUS 1     OUTPUT DIR  mnt fcav self training object detection lowerbound prediction on cityscapes train      visualize prediction      python2 tools visualize results py      dataset cityscapes caronly train      detections  mnt fcav self training object detection lowerbound prediction on cityscapes train test cityscapes caronly train generalized rcnn detections pkl      thresh 0 96      output dir  mnt fcav self training object detection lowerbound prediction on cityscapes train        Transfer prediction to coco format  Predictions are saved as list in json format  This scipt transfer predictions with score    0 96 to json format       python2 tools prediction to coco format py      gt dir  mnt fcav self training object detection dataset cityscapes annotations instancesonly filtered gtFine train json      prediction dir  mnt fcav self training object detection lowerbound prediction on cityscapes train bbox cityscapes caronly train results json      output dir  mnt fcav self training object detection lowerbound prediction on cityscapes train      thresh 0 96         Drop Annotations  For dropping annotations only       python2 drop annotations py      annotation dir  mnt fcav self training object detection dataset COCO annotations instances train2014 json      drop rate 0 3      output dir  mnt fcav self training object detection dataset COCO annotations drop      For COCO dataset  sampling certain number of images and dropping annotations       python2 drop annotations and resample py      annotation dir  mnt fcav self training object detection dataset COCO annotations instances train2014 json      drop rate 0 3      sample number 20000      output dir  mnt fcav self training object detection dataset COCO annotations drop         Detectron  Detectron is Facebook AI Research s software system that implements state of the art object detection algorithms  including  Mask R CNN  https   arxiv org abs 1703 06870   It is written in Python and powered by the  Caffe2  https   github com caffe2 caffe2  deep learning framework   At FAIR  Detectron has enabled numerous research projects  including   Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144    Mask R CNN  https   arxiv org abs 1703 06870    Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333    Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Non local Neural Networks  https   arxiv org abs 1711 07971    Learning to Segment Every Thing  https   arxiv org abs 1711 10370    Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440    DensePose  Dense Human Pose Estimation In The Wild  https   arxiv org abs 1802 00434   and  Group Normalization  https   arxiv org abs 1803 08494     div align  center      img src  demo output 33823288584 1d21cf0a26 k example output jpg  width  700px        p Example Mask R CNN output   p    div      Introduction  The goal of Detectron is to provide a high quality  high performance codebase for object detection  research   It is designed to be flexible in order to support rapid implementation and evaluation of novel research  Detectron includes implementations of the following object detection algorithms      Mask R CNN  https   arxiv org abs 1703 06870      Marr Prize at ICCV 2017     RetinaNet  https   arxiv org abs 1708 02002      Best Student Paper Award at ICCV 2017     Faster R CNN  https   arxiv org abs 1506 01497     RPN  https   arxiv org abs 1506 01497     Fast R CNN  https   arxiv org abs 1504 08083     R FCN  https   arxiv org abs 1605 06409   using the following backbone network architectures      ResNeXt 50 101 152   https   arxiv org abs 1611 05431     ResNet 50 101 152   https   arxiv org abs 1512 03385     Feature Pyramid Networks  https   arxiv org abs 1612 03144   with ResNet ResNeXt     VGG16  https   arxiv org abs 1409 1556   Additional backbone architectures may be easily implemented  For more details about these models  please see  References   references  below      Update    4 2018  Support Group Normalization   see   GN README md     projects GN README md      License  Detectron is released under the  Apache 2 0 license  https   github com facebookresearch detectron blob master LICENSE   See the  NOTICE  https   github com facebookresearch detectron blob master NOTICE  file for additional details      Citing Detectron  If you use Detectron in your research or wish to refer to the baseline results published in the  Model Zoo  MODEL ZOO md   please use the following BibTeX entry        misc Detectron2018    author          Ross Girshick and Ilija Radosavovic and Georgia Gkioxari and                   Piotr Doll   a r and Kaiming He     title           Detectron     howpublished     url https   github com facebookresearch detectron      year            2018            Model Zoo and Baselines  We provide a large set of baseline results and trained models available for download in the  Detectron Model Zoo  MODEL ZOO md       Installation  Please find installation instructions for Caffe2 and Detectron in   INSTALL md   INSTALL md       Quick Start  Using Detectron  After installation  please see   GETTING STARTED md   GETTING STARTED md  for brief tutorials covering inference and training with Detectron      Getting Help  To start  please check the  troubleshooting  INSTALL md troubleshooting  section of our installation instructions as well as our  FAQ  FAQ md   If you couldn t find help there  try searching our GitHub issues  We intend the issues page to be a forum in which the community collectively troubleshoots problems   If bugs are found    we appreciate pull requests    including adding Q A s to  FAQ md  and improving our installation instructions and troubleshooting documents   Please see  CONTRIBUTING md  CONTRIBUTING md  for more information about contributing to Detectron      References     Data Distillation  Towards Omni Supervised Learning  https   arxiv org abs 1712 04440     Ilija Radosavovic  Piotr Doll r  Ross Girshick  Georgia Gkioxari  and Kaiming He    Tech report  arXiv  Dec  2017     Learning to Segment Every Thing  https   arxiv org abs 1711 10370     Ronghang Hu  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick    Tech report  arXiv  Nov  2017     Non Local Neural Networks  https   arxiv org abs 1711 07971     Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He    Tech report  arXiv  Nov  2017     Mask R CNN  https   arxiv org abs 1703 06870     Kaiming He  Georgia Gkioxari  Piotr Doll r  and Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2017     Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002     Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He  and Piotr Doll r    IEEE International Conference on Computer Vision  ICCV   2017     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour  https   arxiv org abs 1706 02677     Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  and Kaiming He    Tech report  arXiv  June 2017     Detecting and Recognizing Human Object Interactions  https   arxiv org abs 1704 07333     Georgia Gkioxari  Ross Girshick  Piotr Doll r  and Kaiming He    Tech report  arXiv  Apr  2017     Feature Pyramid Networks for Object Detection  https   arxiv org abs 1612 03144     Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  and Serge Belongie    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     Aggregated Residual Transformations for Deep Neural Networks  https   arxiv org abs 1611 05431     Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017     R FCN  Object Detection via Region based Fully Convolutional Networks  http   arxiv org abs 1605 06409     Jifeng Dai  Yi Li  Kaiming He  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2016     Deep Residual Learning for Image Recognition  http   arxiv org abs 1512 03385     Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun    IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2016     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org abs 1506 01497    Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun    Conference on Neural Information Processing Systems  NIPS   2015     Fast R CNN  http   arxiv org abs 1504 08083     Ross Girshick    IEEE International Conference on Computer Vision  ICCV   2015  ","software":"md","book":"jiaruixu","full_link":"https://github.com/jiaruixu/Detectron-with-tensorboard"},{"name":"Entheos1994/algobasis","artist":"arxiv, network, preprint, detect, object","id":82,"playcount":3020,"description":"Entheos1994/algobasis arxiv, network, preprint, detect, object   algobasis               x               source  http   interactivepython org runestone static pythonds SortSearch toctree html     x        2017 11 16              leetcode         arrays        string        tree        linkedlist        math               dp                 diff         8 7                     8 8                            8 8                     8 9      8 9      10 12  19 00 8 23              8 26              8 26    9 6          9 27  9 8      9 8 MSRA       9 9           2017 9 25  9 9  9 25  10 21  9 9      id 1311627371 9 18      19 00 9 9     9 10    9 18  19 00        diff                     boss                        9 19     10 30        C8                                                DeepLeaper                    2017 9 11                 2017 11 08   now              Computer Vision       Object Detection  2017 11 25     x  Szegedy  Christian  Alexander Toshev  and Dumitru Erhan   Deep neural networks for object detection   Advances in Neural Information Processing Systems  2013     x  Girshick  Ross  et al   Rich feature hierarchies for accurate object detection and semantic segmentation   Proceedings of the IEEE conference on computer vision and pattern recognition  2014     x  He  Kaiming  et al   Spatial pyramid pooling in deep convolutional networks for visual recognition   European Conference on Computer Vision  Springer International Publishing  2014     x  Girshick  Ross   Fast r cnn   Proceedings of the IEEE International Conference on Computer Vision  2015     x  Ren  Shaoqing  et al   Faster R CNN  Towards real time object detection with region proposal networks   Advances in neural information processing systems  2015     x  Redmon  Joseph  et al   You only look once  Unified  real time object detection   arXiv preprint arXiv 1506 02640  2015      x  Liu  Wei  et al   SSD  Single Shot MultiBox Detector   arXiv preprint arXiv 1512 02325  2015      x  Dai  Jifeng  et al   R FCN  Object Detection via Region based Fully Convolutional Networks   arXiv preprint arXiv 1605 06409  2016      x  He  Gkioxari  et al   Mask R CNN  arXiv preprint arXiv 1703 06870  2017      x  Joseph Redmon  Ali Farhadi   YOLO9000  Better  Faster  Stronger   arXiv 1612 08242  2016         ImageNet Evolution 2017 12     x  Krizhevsky  Alex  Ilya Sutskever  and Geoffrey E  Hinton   Imagenet classification with deep convolutional neural networks   Advances in neural information processing systems  2012   AlexNet  Deep Learning Breakthrough     x  Simonyan  Karen  and Andrew Zisserman   Very deep convolutional networks for large scale image recognition   arXiv preprint arXiv 1409 1556  2014    VGGNet Neural Networks become very deep       x  Szegedy  Christian  et al   Going deeper with convolutions   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015     x  He  Kaiming  et al   Deep residual learning for image recognition   arXiv preprint arXiv 1512 03385  2015    ResNet Very very deep networks  CVPR best paper     ","software":"md","book":"Entheos1994","full_link":"https://github.com/Entheos1994/algobasis"},{"name":"jooyounghun/AI-Team-5","artist":"rcnn, train, detect, network, faster","id":83,"playcount":2804,"description":"jooyounghun/AI-Team-5 rcnn, train, detect, network, faster   AI Team 5  Combine Two Paper using Python Project building architecture combining R CNN network in Faster R CNN paper and Facenet        Introduction we propose some application providing face detection of specific person and face blurring of the others  There is two Paper for achieving job of project application      Requirements    Previous Code Analytics from other git repository about FRCNN MRCNN   Build unique RCNN Network for mobile computing environment   python 3 x     Datasets   Imagenet  ImageNet is an image database organized according to the WordNet hierarchy  currently only the nouns   in which each node of the hierarchy is depicted by hundreds and thousands of images  Currently we have an average of over five hundred images per node  We hope ImageNet will become a useful resource for researchers  educators  students and all of you who share our passion for pictures    img src  images imagenet png          Train Image Dataset   download dataset from this  link  http   www image net org  and put it in this project      Test Image Dataset The test image dataset are sampled from this  link  http   www image net org  and put ti in this project     TODO   Reading Papers R CNN  Fast R CNN  Faster R CNN  FaceNet  and Studying   Analyze existing code from github  https   github com jooyounghun tensorpack tree master examples FasterRCNN    Build RCNN architecture     DONE    FaceNet  A Unified Embedding for Face Recognition and Clustering   Paper  https   arxiv org pdf 1503 03832      Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks   Paper  https   arxiv org pdf 1506 01497     Mask R CNN   Paper  https   arxiv org abs 1703 06870      Architecture of Network Faster R CNN   Mask R CNN      Faster RCNN      Key Architecture  Region Proposal Network   table     tr       td        img src  images architecture of frcnn png          td      tr    table     Detail of RPN   table     tr       td         img src  images sample view of frcnn png          td      tr    table          Mask RCNN      RoI Align  2d interpolation for high accuracy of segmentation  table     tr       td        img src  images architecture of mrcnn png          td      tr    table     Result view from paper  table     tr       td         img src  images sample view of mrcnn png          td      tr    table       Reference   Florian Schroff  Dmitry Kalenichenko  James Philbin  Google Inc  FaceNet  A Unified Embedding for Face Recognition and Clustering  arXiv 1503 03832  2015   Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  arXiv 1506 01497  2016   Kaiming He Georgia Gkioxari Piotr Dollar Ross Girshick  Facebook AI Research  FAIR   Mask R CNN  arXiv 1703 06870  2018 ","software":"md","book":"jooyounghun","full_link":"https://github.com/jooyounghun/AI-Team-5"},{"name":"yiwenguo/Dynamic-Network-Surgery","artist":"layer, type, prune, surgeri, network","id":84,"playcount":2083,"description":"yiwenguo/Dynamic-Network-Surgery layer, type, prune, surgeri, network   Dynamic network surgery  Dynamic network surgery is a very effective method for DNN pruning  To better use it with python and matlab  you may also need a  classic version  https   github com BVLC caffe tree aa2a6f55b9e50b29d607aaee0fae19bd085d6565  of the  Caffe framework  http   caffe berkeleyvision org   For the convolutional and fully connected layers to be pruned  change their layer types to  CConvolution  and  CInnerProduct  respectively  Then  pass  cconvolution param  and  cinner product param  messages to these modified layers for better pruning performance      Example for usage  Below is an example for pruning the  ip1  layer in LeNet5       layer         name   ip1        type   CInnerProduct        bottom   pool2        top   ip1        param           lr mult  1               param           lr mult  2               inner product param           num output  500         weight filler             type   xavier                    bias filler             type   constant                          cinner product param           gamma  0 0001         power  1         c rate  4         iter stop  14000           weight mask filler             type   constant            value  1                   bias mask filler             type   constant            value  1                                       Citation  Please cite our work in your publications if it helps your research        inproceedings guo2016dynamic          title    Dynamic Network Surgery for Efficient DNNs         author    Guo  Yiwen and Yao  Anbang and Chen  Yurong         booktitle    Advances in neural information processing systems  NIPS          year    2016            and do not forget about Caffe         article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         Enjoy your own surgeries  ","software":"md","book":"yiwenguo","full_link":"https://github.com/yiwenguo/Dynamic-Network-Surgery"},{"name":"ZhiwenShao/MCNet","artist":"caff, model, arxiv, year, fast","id":85,"playcount":1536,"description":"ZhiwenShao/MCNet caff, model, arxiv, year, fast   MCNet This code is the implementation of our paper MCNet  1  for both 29 and 68 facial landmarks  using the matlab interface of Caffe  2   We suggest you using caffe happynear  https   github com happynear caffe windows   which is a popular compiled windows version of Caffe   We give examples  mcnet 29 m  mcnet 68 m  for obtaining the face alignment results on COFW  3  and IBUG  4    If you find our code useful in your research work  please cite  1    Should you have any questions  don t hesitate to contact with us through email shaozhiwen sjtu edu cn   References    1  Zhiwen Shao  Hengliang Zhu  Yangyang  Hao  Min  Wang  and Lizhuang Ma   Learning a multi center convolutional network for unconstrained face alignment   in IEEE International Conference on Multimedia and Expo  IEEE  2017  pp  109 114    2  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross B Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding    in ACM International Conference on Multimedia  ACM  2014  pp  675 678    3  Xavier P Burgos Artizzu  Pietro Perona  and Piotr Dollar   Robust face landmark estimation under occlusion   in IEEE International Conference on Computer Vision  IEEE  2013  pp  1513 1520    4  Christos Sagonas  Georgios Tzimiropoulos  Stefanos Zafeiriou  and Maja Pantic   300 faces in the wild challenge  The first facial landmark localization challenge   in IEEE International Conference on Computer VisionWorkshops  IEEE  2013  pp  397 403  ","software":"md","book":"ZhiwenShao","full_link":"https://github.com/ZhiwenShao/MCNet"},{"name":"tsapphire/mx-maskRCNN","artist":"mxnet, ieee, confer, train, test","id":86,"playcount":5365,"description":"tsapphire/mx-maskRCNN mxnet, ieee, confer, train, test   MX Mask R CNN An MXNet implementation of  Mask R CNN  https   arxiv org abs 1703 06870    This repository is based largely on the mx rcnn implementation of Faster RCNN available  here  https   github com precedenceguo mx rcnn      div align  center    img src  https   github com TuSimple mx maskrcnn blob master figures maskrcnn result png   br  br    div       Main Results       Cityscapes     Method  Training data  Test data  Average   person   rider   car   truck   bus    train  motorcycle  bicycle                                                                             Ours  fine only  test 26 9 33 0 25 7 47 7 21 6 27 4 23 0 19 9 16 9    Reference 5   fine only  test 26 2 30 5 23 8 46 9 22 8 32 2 18 6 19 1 16 0    Ours   fine only  val 31 3 32 6 26 6 49 5 26 5 45 4 32 1 17 6 20 4    Reference 5   fine only  val 31 5                                   Backbone  Resnet 50 FPN      COCO Coming soon  please stay tuned      Requirement  We tested our code on   Ubuntu 16 04  Python 2 7 with  numpy 1 12 1   cv2 2 4 9   PIL 4 3   matplotlib 2 1 0   cython 0 26 1   easydict     Preparation for Training  1  Download Cityscapes data  gtFine trainvaltest zip  leftImg8bit trainvaltest zip   Extract them into  data cityscape     The folder structure would then look as shown below       data cityscape      leftImg8bit          train          val          test      gtFine          train          val          test      imglists          train lst         val lst         test lst       2  Download Resnet 50 pretrained model      bash scripts download res50 sh       3  Build MXNet with ROIAlign operator       cp rcnn CXX OP   incubator mxnet src operator       To build MXNet from source  please refer to the  tutorial  https   mxnet incubator apache org get started build from source html    4  Build related cython code       make      5  Kick off training      bash scripts train alternate sh         Preparation for Evaluation 1  Prepare Cityscapes evaluation scripts       bash scripts download cityscapescripts sh     2  Eval     bash scripts eval sh         Demo 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Make sure that you have the cityscapes data in  data cityscapes  folder      bash scripts demo sh         Test single image 1  Download model  available at  Dropbox  https   www dropbox com s zidcbbt7apwg3z6 final 0000 params dl 0   BaiduYun  https   pan baidu com s 1o8n4VMU   and place it in the model folder   2  Follow  Preparation for Training   step1 step4  3  run  bash scripts demo single image sh   you can change the image path in script demo single image sh      FAQ Q  It says    AttributeError   module  object has no attribute  ROIAlign       A  This is because either    you forget to copy the operators to your MXNet folder    or you forget to re compile MXNet and re install MXNet python interface    or you install the wrong MXNet        Please print  mxnet   path    to make sure you use correct MXNet       Q  I encounter    incubator mxnet mshadow mshadow         cuda tensor gpu inl cuh 110  Check failed  err    cudaSuccess  7 vs  0  Name  MapPlanKernel ErrStr too many resources requested for launch    at the begining   A  Please try adding  MSHADOW CFLAGS     DMSHADOW OLD CUDA 1  in  mxnet mshadow make mshadow mk  and re compile MXNet      References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In IEEE Transactions on Pattern Analysis and Machine Intelligence  2016  4  Tsung Yi Lin  Piotr Doll r  Ross Girshick  Kaiming He  Bharath Hariharan  Serge Belongie   Feature Pyramid Networks for Object Detection   In Computer Vision and Pattern Recognition  IEEE Conference on  2017  5  Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick   Mask R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2017  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  6  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  7  Marius Cordts  Mohamed Omran  Sebastian Ramos  Timo Rehfeld  Markus Enzweiler  Rodrigo Benenson  Uwe Franke  Stefan Roth  Bernt Schiele   The Cityscapes Dataset for Semantic Urban Scene Understanding   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  ","software":"md","book":"tsapphire","full_link":"https://github.com/tsapphire/mx-maskRCNN"},{"name":"XWalways/Edge-Boxes","artist":"code, edg, object, propos, fast","id":87,"playcount":1498,"description":"XWalways/Edge-Boxes code, edg, object, propos, fast This is mostly Piotr Dollar s code for Edge Boxes object proposals from  Edge Boxes  Locating Object Proposals from Edges  https   github com pdollar edges   downloaded in July 2015  I needed a way to call this stuff from Python   edge boxes py  and  edge boxes wrapper m  are the only new files you need to use the code  They have been adapted from  Sergey Karayev s  Selective Search IJCV with Python  https   github com sergeyk selective search ijcv with python  code  which wraps an alternative object proposal generator   Make sure that the edges directory is in your PYTHONPATH and just do    import edges    windows   edge boxes get windows image filenames   To make sure this works  simply  python edge boxes py    Finally  I needed the code to be able to use the proposals together with Ross Girshick s Fast R CNN   Fast Region based Convolutional Networks for object detection  https   github com rbgirshick fast rcnn    A demo file for this is also included   demo edgeboxes py    To try it out build Fast R CNN and drop the file in its  tools  subdirectory    The license is the same as for Piotr Dollar s Structured Edge Detection Toolbox V3 0  see  license txt   and his original readme is in  sedt readme txt    Enjoy   Dubravko Culibrk 22 Jul 2015  P S  Please note that the code uses Piotr s MATLAB toolbox  https   pdollar github io toolbox    which needs to be installed for any of this to work   Thanks to Thomas Lau for pointing out that this should be stated in this README   ","software":"md","book":"XWalways","full_link":"https://github.com/XWalways/Edge-Boxes"},{"name":"yu239/paper-reading","artist":"deep, learn, network, convolut, imag","id":88,"playcount":1811,"description":"yu239/paper-reading deep, learn, network, convolut, imag   Paper reading This repo hosts a collection of interesting papers that involve  reinforcement learning  AGI  and language grounding to vision and control  It may serve the purpose of literature review      Reinforcement learning  Towards Deep Symbolic Reinforcement Learning  https   arxiv org pdf 1609 05518 pdf   Marta Garnelo  Kai Arulkumaran  Murray Shanahan  arxiv 1609 05518    Reinforcement Learning for Robots Using Neural Networks  https   pdfs semanticscholar org 54c4 cf3a8168c1b70f91cf78a3dc98b671935492 pdf   Long Ji Lin  PhD Thesis  1993      Artificial general intelligence  Universal Intelligence  A Definition of Machine Intelligence  https   arxiv org pdf 0712 3329 pdf   Shane Legg  Marcus Hutter  arxiv 0712 3329      Lanugage grounding  Where is Misty  Interpreting Spatial Descriptors by Modeling Regions in Space  http   aclweb org anthology D17 1015    Nikita Kitaev and Dan Klein  ACL 2017    Modulating early visual processing by language  https   arxiv org pdf 1707 00683 pdf   Harm de Vries  Florian Strub  J r mie Mary  Hugo Larochelle  Olivier Pietquin  Aaron Courville  NIPS 2017    Learning Interpretable Spatial Operations in a Rich 3D Blocks World  https   arxiv org pdf 1712 03463v1 pdf    Yonatan Bisk  Kevin J  Shih  Yejin Choi  Daniel Marcu  AAAI 2017    Inferring and Executing Programs for Visual Reasoning  https   arxiv org pdf 1705 03633 pdf   Justin Johnson  Bharath Hariharan  Laurens van der Maaten  Judy Hoffman  Li Fei Fei  C  Lawrence Zitnick  Ross Girshick  ICCV 2017    How Language Programs the Mind  http   sapir psych wisc edu papers lupyan bergen topics inPress pdf   Gary Lupyan    Learning to Count Objects in Natural Images for Visual Question Answering  https   arxiv org pdf 1802 05766 pdf   Yan Zhang  Jonathon Hare  Adam Prugel Bennett  ICLR 2018  ","software":"md","book":"yu239","full_link":"https://github.com/yu239/paper-reading"},{"name":"DennisLeoUTS/aprcnn_cvpr16","artist":"rcnn, train, detect, network, faster","id":89,"playcount":1741,"description":"DennisLeoUTS/aprcnn_cvpr16 rcnn, train, detect, network, faster Weakly supervised Dataset augmented Part based RCNNs for Fine grained Category Detection                 This work is created by Zhe Xu from UTS  Credit to Ning Zhang  Jeff Donahue  Ross Girshick and Trevor Darrell from UC Berkeley who share the original RCNN and Part based RCNN code        Prerequisites 0    Caffe      Download caffe from http   caffe berkeleyvision org  and follow the instructions to install      Change caffe matlab wrapper path in init m  0    RCNN       A modified RCNN code is attached in the code patch       If you want to access the original RCNN code to see the modifications  download source code from https   github com rbgirshick rcnn and follow the instructions to install      Follow rcnn instructions to train the part detectors   0    Liblinear       Download liblinear package from http   www csie ntu edu tw  cjlin liblinear        Download MALSAR package from http   www public asu edu  jye02 Software MALSAR     Annotation  has annotated part boxes on CUB200 2011 dataset         Cached Files       Recommended file  https   drive google com file d 0Bwo0SFiZwl3JR1RFdnM0R3EyNDA view       Full file  https   drive google com file d 0Bwo0SFiZwl3JSmZNXzZJVG5FbEE view        Usage       If you have installed cached files  run run prcnn sample m to get results       To run the whole procedure of extracting selective search data    finetune part cnns    train RCNN part detectors    get augmented   training data from weak dataset    re finetune part cnns    get final classification results  go to   rcnn directory and run rcnn run m        Modify the paths in config prcnn m and get bird data m       Bug report   If you have any issues running the codes  please contact Zhe Xu  xz303010 gmail com  ","software":"md","book":"DennisLeoUTS","full_link":"https://github.com/DennisLeoUTS/aprcnn_cvpr16"},{"name":"feifeibear/SWCaffe","artist":"caff, arxiv, convolut, featur, titl","id":90,"playcount":1329,"description":"feifeibear/SWCaffe caff, arxiv, convolut, featur, titl   SWCaffe  SWCaffe is a deep learning framework on SW26010 based by Caffe with MPI supported  Compiling method is the same with  Caffe  https   github com BVLC caffe blob master LICENSE   This repo is maintained by National Supercomputer Center in Wuxi  More details about optimization tricks to convolutional layers please see our  Technical Report  https   fangjiarui github io assets pdf swcaffe pdf  and our IPDPS 17 s paper  swDNN  A Library for Accelerating Deep Learning Applications on Sunway TaihuLight  https   fangjiarui github io assets pdf swdnn ipdps 2017 pdf   We also have a conference paper on swCaffe in submission      Authors Jiarui Fang  fang jiarui 163 com   Liandeng Li liandeng li 163 com      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"feifeibear","full_link":"https://github.com/feifeibear/SWCaffe"},{"name":"kulikovv/ostrov2018","artist":"deep, learn, network, convolut, imag","id":91,"playcount":6400,"description":"kulikovv/ostrov2018 deep, learn, network, convolut, imag                                         10 21  2018                                                                          1   Courser Machine Learning  http   coursera org learn machine learning   2   Udacity DeepLearning  https   classroom udacity com courses ud730  3   Stanford CS201n  https   www youtube com watch v vT1JzLTH4G4      Datasets  1   PASCAL VOC 2012 Segmentation Competition  http   host robots ox ac uk pascal VOC voc2012 index html  2   COCO 2018 Stuff Segmentation Task  http   cocodataset org  stuff 2018  3   BDD100K  A Large scale Diverse Driving Video Database  http   bair berkeley edu blog 2018 05 30 bdd   4   Cambridge driving Labeled Video Database  CamVid   http   mi eng cam ac uk research projects VideoRec CamVid   5   Cityscapes Dataset  https   www cityscapes dataset com   6   Mapillary Vistas Dataset  https   www mapillary com dataset vistas  7   ApolloScape Scene Parsing  http   apolloscape auto scene html  8   CVPPP dataset  https   www plant phenotyping org CVPPP2017            1  https   ai googleblog com  2  https   research fb com category computer vision  3  https   www jeremyjordan me  4  http   www computervisionblog com  5  http   mccormickml com  6  http   www cs ox ac uk people yarin gal website blog html 7  http   colah github io  8  http   karpathy github io      Fun https   experiments withgoogle com collection ai                                           Yann LeCun  Bernhard E  Boser  John S  Denker  Donnie Henderson  R  E  Howard  Wayne E  Hubbard Lawrence D  Jackel  Handwritten Digit Recognition with a Back Propagation Network  NIPS 1989  396 404    Alex Krizhevsky  Ilya Sutskever  Geoffrey E  Hinton  ImageNet Classification with Deep Convolutional Neural Networks  NIPS 2012  1106 1114    Joan Bruna  Wojciech Zaremba  Arthur Szlam  Yann LeCun  Spectral Networks and Locally Connected Networks on Graphs  ICLR 2014    Kumar Chellapilla and Sidd Puri and Patrice Simard  High Performance Convolutional Neural Networks for Document Processing    Karen Simonyan  Andrea Vedaldi  Andrew Zisserman  Deep Inside Convolutional Networks  Visualising Image Classification Models and Saliency Maps CoRR abs 1312 6034  2013     Karen Simonyan  Andrew Zisserman  Very Deep Convolutional Networks for Large Scale Image Recognition  CoRR abs 1409 1556  2014     Christian Szegedy  Wei Liu  Yangqing Jia  Pierre Sermanet  Scott Reed  Dragomir Anguelov  Dumitru Erhan Vincent Vanhoucke  Andrew Rabinovich  Going deeper with convolutions  CVPR 2015  1 9    Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  Deep Residual Learning for Image Recognition  CoRR abs 1512 03385  2015     Gao Huang  Zhuang Liu  Laurens van der Maaten  Kilian Q  Weinberger  Densely Connected Convolutional Networks  CVPR 2017  2261 2269    Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  Deep Residual Learning for Image Recognition  CoRR abs 1512 03385  2015     Alex Krizhevsky  Ilya Sutskever  Geoffrey E  Hinton  ImageNet Classification with Deep Convolutional Neural Networks  NIPS 2012    Karen Simonyan  Andrea Vedaldi  Andrew Zisserman  Deep Inside Convolutional Networks  Visualising Image Classification Models and Saliency Maps CoRR abs 1312 6034  2013     Karen Simonyan  Andrew Zisserman  Very Deep Convolutional Networks for Large Scale Image Recognition  CoRR abs 1409 1556  2014     Christian Szegedy  Wei Liu  Yangqing Jia  Pierre Sermanet  Scott Reed  Dragomir Anguelov  Dumitru Erhan Vincent Vanhoucke  Andrew Rabinovich  Going deeper with convolutions  CVPR 2015  1 9    Christian Szegedy  Wojciech Zaremba  Ilya Sutskever  Joan Bruna  Dumitru Erhan  Ian J  Goodfellow  Rob Fergus  Intriguing properties of neural networks  CoRR abs 1312 6199  2013     Christian Szegedy  Sergey Ioffe  Vincent Vanhoucke  Inception v4  Inception ResNet and the Impact of Residual Connections on Learning  CoRRabs 1602 07261  2016     Olga Russakovsky  Jia Deng  Hao Su  Jonathan Krause  Sanjeev Satheesh  Sean Ma  Zhiheng Huang  Andrej Karpathy  Aditya Khosla  Michael S  Bernstein  Alexander C  Berg  Fei Fei Li  ImageNet Large Scale Visual Recognition Challenge  CoRR abs 1409 0575  2014       Computer Vision   Jonathan Long  Evan Shelhamer  Trevor Darrell  Fully convolutional networks for semantic segmentation  CVPR 2015    Olaf Ronneberger  Philipp Fischer  Thomas Brox  U Net  Convolutional Networks for Biomedical Image Segmentation  MICCAI  3  2015    Fisher Yu  Vladlen Koltun  Multi Scale Context Aggregation by Dilated Convolutions  ICLR 2016    Ross B  Girshick  Fast R CNN  ICCV 2015    Ross B  Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik  Rich Feature Hierarchies for Accurate Object Detection and Semantic Segmentation  CVPR 2014    Shaoqing Ren  Kaiming He  Ross B  Girshick  Xiangyu Zhang  Jian Sun  Object Detection Networks on Convolutional Feature Maps  NIPS 2015    Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  ECCV  3  2014    Koen E  A  van de Sande  Jasper R  R  Uijlings  Theo Gevers  Arnold W  M  Smeulders  Segmentation as selective search for object recognition  ICCV 2011    Dumitru Erhan  Christian Szegedy  Alexander Toshev  Dragomir Anguelov  Scalable Object Detection Using Deep Neural Networks  CVPR 2014    Spyros Gidaris  Nikos Komodakis  LocNet  Improving Localization Accuracy for Object Detection  CoRR abs 1511 07763    Wei Liu  Dragomir Anguelov  Dumitru Erhan  Christian Szegedy  Scott E  Reed  Cheng Yang Fu  Alexander C  Berg  SSD  Single Shot MultiBox Detector  ECCV  1  2016  21 37    Marius Cordts  Mohamed Omran  Sebastian Ramos  Timo Rehfeld  Markus Enzweiler  Rodrigo Benenson  Uwe Franke  Stefan Roth  Bernt Schiele  The Cityscapes Dataset for Semantic Urban Scene Understanding  CVPR 2016  3213 3223    Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick Mask R CNN  ArXiV 2017    Hengshuang Zhao  Jianping Shi  Xiaojuan Qi  Xiaogang Wang  Jiaya Jia  Pyramid Scene Parsing Network  CVPR 2017  6230 6239    Eduardo Romera  Jose M  Alvarez  Luis Miguel Bergasa  Roberto Arroyo  ERFNet  Efficient Residual Factorized ConvNet for Real Time Semantic Segmentation  IEEE Trans  Intelligent Transportation Systems 19 1   263 272  2018     Redmon  Joseph  et al   You only look once  Unified  real time object detection   Proceedings of the IEEE conference on computer vision and pattern recognition  2016   ","software":"md","book":"kulikovv","full_link":"https://github.com/kulikovv/ostrov2018"},{"name":"richardharmadi/nvcaffe-yolov2","artist":"caff, learn, model, deep, layer","id":92,"playcount":1720,"description":"richardharmadi/nvcaffe-yolov2 caff, learn, model, deep, layer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like    NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations     Caffe YOLOv2 by  gklz  https   github com gklz1982 caffe yolov2   Custom Caffe distribution with support to train YOLO v2 using Caffe custom layers     Build Setup See the  Dockerfile  https   github com richardharmadi nvcaffe yolov2 git      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            Credits This application uses Open Source components  You can find the source code of their open source projects below  We acknowledge and are grateful to these developers for their contributions to open source   Project  Caffe YOLOv2 by  gklz  https   github com gklz1982 caffe yolov2  for the implementation of reorg layer  region layer  and detection loss layer ","software":"md","book":"richardharmadi","full_link":"https://github.com/richardharmadi/nvcaffe-yolov2"},{"name":"4nc3str4l/VA_GiC","artist":"caff, model, arxiv, year, fast","id":93,"playcount":1533,"description":"4nc3str4l/VA_GiC caff, model, arxiv, year, fast Background Subtraction applied to Object Recognition         Visi  Artificial  Guillem Pascual i Cristian Muriel  Getting pre trained cnn         Our pre trained caffemodel might be downloaded from  by iterations number     5000  https   www dropbox com s 8mcnj8j5hhytn6z bsaor iter 5000 caffemodel dl 0   10000  https   www dropbox com s yw5535ckknlo17d bsaor iter 10000 caffemodel dl 0   15000  https   www dropbox com s g5gh7lmab31d0x5 bsaor iter 15000 caffemodel dl 0   20000  https   www dropbox com s vuxo1ayux971z84 bsaor iter 20000 caffemodel dl 0    25000  https   www dropbox com s y81588ziy4iglyj bsaor iter 25000 caffemodel dl 0  And be freely used  We would  however  appreciate being cited  as does caffe   Requierements         You must have python  2 7 is strongly recommended  might work on 3 0   alongside with latest OpenCV distribution for python  numpy and Caffe   Installing Anaconda Python might be the fastest way to obtain all python related requierements  OpenCV might be installed by issuing    conda install binstar     binstar search opencv     binstar show menpo opencv    conda install   channel https   conda binstar org menpo opencv  Citing      We have used caffe  http   caffe berkeleyvision org   as CNN     Author  Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor    Journal  arXiv preprint arXiv 1408 5093    Title  Caffe  Convolutional Architecture for Fast Feature Embedding    Year  2014 ","software":"md","book":"4nc3str4l","full_link":"https://github.com/4nc3str4l/VA_GiC"},{"name":"zepx/Dynamic-Network-Surgery-Merged","artist":"layer, type, prune, surgeri, network","id":94,"playcount":2097,"description":"zepx/Dynamic-Network-Surgery-Merged layer, type, prune, surgeri, network   Dynamic network surgery  Dynamic network surgery is a very effective method for DNN pruning  To better use it with python and matlab  you may also need a  classic version  https   github com BVLC caffe tree aa2a6f55b9e50b29d607aaee0fae19bd085d6565  of the  Caffe framework  http   caffe berkeleyvision org   For the convolutional and fully connected layers to be pruned  change their layer types to  CConvolution  and  CInnerProduct  respectively  Then  pass  cconvolution param  and  cinner product param  messages to these modified layers for better pruning performance      Example for usage  Below is an example for pruning the  ip1  layer in LeNet5       layer        layer         name   ip1        type   CInnerProduct        bottom   pool2        top   ip1        param           lr mult  1               param           lr mult  2               inner product param           num output  500         weight filler             type   xavier                    bias filler             type   constant                          cinner product param           dgamma  0 0001         power  1         c rate  4         iter stop  14000           weight mask filler             type   constant            value  1                   bias mask filler             type   constant            value  1                                       Citation  Please cite our work in your publications if it helps your research        inproceedings guo2016dynamic          title    Dynamic Network Surgery for Efficient DNNs         author    Guo  Yiwen and Yao  Anbang and Chen  Yurong         booktitle    Advances in neural information processing systems  NIPS          year    2016            and do not forget about Caffe         article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         Enjoy your own surgeries  ","software":"md","book":"zepx","full_link":"https://github.com/zepx/Dynamic-Network-Surgery-Merged"},{"name":"pkuCactus/EdgeDetection","artist":"layer, type, prune, surgeri, network","id":95,"playcount":1364,"description":"pkuCactus/EdgeDetection layer, type, prune, surgeri, network   EdgeDetection this is all the edge detection of my experiments    Dynamic network surgery  Dynamic network surgery is a very effective method for DNN pruning  To better use it with python and matlab  you may also need a  classic version  https   github com BVLC caffe tree aa2a6f55b9e50b29d607aaee0fae19bd085d6565  of the  Caffe framework  http   caffe berkeleyvision org   For the convolutional and fully connected layers to be pruned  change their layer types to  CConvolution  and  CInnerProduct  respectively  Then  pass  cconvolution param  and  cinner product param  messages to these modified layers for better pruning performance      Citation  Please cite the publications if it helps your research        inproceedings guo2016dynamic          title    Dynamic Network Surgery for Efficient DNNs         author    Guo  Yiwen and Yao  Anbang and Chen  Yurong         booktitle    Advances in neural information processing systems  NIPS          year    2016            and do not forget about Caffe         article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pkuCactus","full_link":"https://github.com/pkuCactus/EdgeDetection"},{"name":"lyttonhao/Reading-Notes","artist":"deep, learn, network, convolut, imag","id":96,"playcount":1582,"description":"lyttonhao/Reading-Notes deep, learn, network, convolut, imag   Reading Notes Reading Notes of papers in Image Processing  Computer Vision etc      Table of Contents      Super Resolution   super resolution      Face Hallucination   face hallucination      Super Resolution    Super resolution Person Re identification with Semi coupled Low rank Discriminant Dictionary Learning  2015 CVPR  Xiao Yuan Jing   Notes  Notes 2015 CVPR super md      Image Denoising    CID  Combined Image Denoising in Spatial and Frequency Domains Using Web Images  2014 CVPR  Huanjing Yue   Notes  Notes 2014 CVPR cid md     Super Resolving Noisy Images  2014 CVPR  Abhishek Singh   Notes  Notes 2014 CVPR superresolving md      Face Hallucination     Color Transfer    Color Transfer between Images  2001 ICCA  Erik Reinhard   Notes  Notes 2001 ICCA color md      Image Completion    Scene Completion Using Millions of Photographs  2007 SIGGRAPH  James Hays   Notes  Notes 2007 SIG scene md      Deep Learning    ImageNet Classification with Deep Convolutional Neural Networks  2012 NIPS  Alex Krizhevsky     OverFeat  Integrated Recognition  Localization and Detection using Convolutional Networks  2014 ICLR  Pierre Sermanet   Notes  Notes 2014 ICLR overfeat md     Rich feature hierarchies for accurate object detection and semantic segmentation  2014 CVPR  Ross Girshick   Notes  Notes 2014 CVPR RCNN md     Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  2015 PAMI  Kaiming He   Notes  Notes 2015 PAMI spp md     Part based R CNNs for Fine grained Category Detection  2014 ECCV  Ning Zhang   Notes  Notes 2014 eccv part md     ","software":"md","book":"lyttonhao","full_link":"https://github.com/lyttonhao/Reading-Notes"},{"name":"krrish94/caffe-keypoint","artist":"caff, learn, model, deep, layer","id":97,"playcount":1254,"description":"krrish94/caffe-keypoint caff, learn, model, deep, layer   caffe keypoint     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   This is my fork of Caffe that implements layers  examples  and other functionality for training and evaluating networks for object pose  keypoint estimation   Check out the  project site  http   caffe berkeleyvision org  for     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples       License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"krrish94","full_link":"https://github.com/krrish94/caffe-keypoint"},{"name":"genema/caffe-ghma","artist":"caff, model, learn, communiti, berkeley","id":98,"playcount":1536,"description":"genema/caffe-ghma caff, model, learn, communiti, berkeley   Caffe ghma     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   This version add some loss function for particular tasks       Also some custom distributions if you want to use DIGITS try NVIDIA caffe      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows       Original License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use      Please cite Caffe s original developers in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"genema","full_link":"https://github.com/genema/caffe-ghma"},{"name":"darthsuogles/caphi","artist":"caff, learn, model, framework, vision","id":99,"playcount":2102,"description":"darthsuogles/caphi caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"darthsuogles","full_link":"https://github.com/darthsuogles/caphi"},{"name":"xcls1117/caffe","artist":"caff, learn, model, framework, vision","id":100,"playcount":2102,"description":"xcls1117/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xcls1117","full_link":"https://github.com/xcls1117/caffe"},{"name":"dongshuhao/caffe_aug","artist":"caff, learn, model, framework, vision","id":101,"playcount":2102,"description":"dongshuhao/caffe_aug caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dongshuhao","full_link":"https://github.com/dongshuhao/caffe_aug"},{"name":"Rushab1/Image_Tagging","artist":"caff, model, arxiv, year, fast","id":102,"playcount":1742,"description":"Rushab1/Image_Tagging caff, model, arxiv, year, fast     Image Tagging         Implementations of Fast Tag and Fast Zero Tag    br          Code sources     We procured the codes for Deep Learning for Fast Zero Tag from http   crcv ucf edu projects fastzeroshot  and Fast Tag from www cse wustl edu  mchen code FastTag fasttag tar gz    We implemented Rank SVM for Fast Tag ourselves    We also modified the above code for learning the kernelized mapping from image vector to principal   direction in ranking SVM s    We implemented the neural network Figure 3  for fasttag in caffe 5     DATASET  IAPRTC 12  br          Acknowledgments   We thank our instructor  Professor Piyush Rai for motivating us and guiding us throughout the project   br          References    1  Minmin Chen  Amazon com  Seattle  WA 98109   Alice Zheng  Microsoft Research  Redmond  WA 98052   Kilian Q  Weinberger  Washington University in St  Louis  St  Louis  MO 63130 Fast Image Tagging 2013  br     2  Yang Zhang  Boqing Gong  and Mubarak Shah  Center for Research in Computer Vision  University of Central Florida  Orlando  FL 32816 Fast Zero Shot Image Tagging 2016  br     3  Guillaumin  M   Mensink  T   Verbeek  J   and Schmid  C  Tagprop  Discriminative metric learning in nearest neighbor models for image auto annotation  In Computer Vision  2009 IEEE 12th International Conference on  pp  309 316  Ieee 2009  br     4  Simonyan  K  and Zisserman  AVery Deep Convolutional Networks for Large Scale Image Recognition  CoRR  abs 1409 1556 2014  br     5  Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor  arXiv preprint arXiv 1408 5093  Caffe  Convolutional Architecture for Fast Feature Embedding   2014","software":"md","book":"Rushab1","full_link":"https://github.com/Rushab1/Image_Tagging"},{"name":"vlukiyanov/pt-dec","artist":"dec, code, python, mnist, cluster","id":103,"playcount":1411,"description":"vlukiyanov/pt-dec dec, code, python, mnist, cluster   pt dec  PyTorch implementation of a version of the Deep Embedded Clustering  DEC  algorithm  Compatible with PyTorch 0 4 0 and Python 3 6 with or without CUDA     This follows  or attempts to  the algorithm described in  Unsupervised Deep Embedding for Clustering Analysis  of Junyuan Xie  Ross Girshick  Ali Farhadi  https   arxiv org abs 1511 06335         Examples    An example using MNIST data can be found in the  examples mnist mnist py  which achieves around 85  accuracy     Here is an example  confusion matrix  http   scikit learn org stable modules generated sklearn metrics confusion matrix html   true labels on y axis and predicted labels on the x axis       Alt text  confusion 2f447ee621ea4a8aa818ffcedae43b21 png        Usage    This is distributed as a Python package  ptdec  and can be installed with  python setup py install  after installing  ptsdae  from https   github com vlukiyanov pt sdae  The PyTorch  nn Module  class representing the DEC is  DEC  in  ptdec dec   while the  train  function from  ptdec model  is used to train DEC        Other implementations of DEC      Original Caffe  https   github com piiswrong dec    Keras  https   github com XifengGuo DEC keras and https   github com fferroni DEC Keras    MXNet  https   github com apache incubator mxnet blob master example deep embedded clustering dec py    Chainer  https   github com ymym3412 DeepEmbeddedClustering  ","software":"md","book":"vlukiyanov","full_link":"https://github.com/vlukiyanov/pt-dec"},{"name":"faceteam/detectBody","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":104,"playcount":1574,"description":"faceteam/detectBody “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>     title                               URL  categories           description          ccv                                                          INRIA Person Dataset  http   pascal inrialpes fr data human            ccv               C                      DPM                http   libccv org doc doc dpm            The original paper refers to  Object Detection with Discriminatively Trained Part Based Models  Pedro F  Felzenszwalb  Ross B  Girshick  David McAllester and Deva Ramanan            1   ccv  git clone https   github com liuliu ccv git 2        linux         sudo apt get install clang libjpeg dev libpng dev libfftw3 dev libgsl0 dev libblas dev liblinear dev libblas dev 3       cd lib    configure force  cd    bin  make  3   bin            4   DPM       a png                         dpmdetect   a png    samples pedestrian m output png 5               result txt     dpmdetect filelist txt    samples pedestrian m   result txt                5    filelist txt   INRIA     Test pos           288           https   github com faceteam detectBody      result txt                  Test pos crop 000001 png 173 78 188 564 0 830314 8    149 112 112 112 0 156994    205 373 112 112 0 071194    149 261 93 149 0 042143    280 261 93 149  0 178776    187 504 93 131 0 511169    224 504 93 131 0 601668    187 56 93 149 0 529543    243 56 93 149 0 806625                 9                                                           https   github com faceteam detectBody   result txt                                        crop 000001 png           Linux OpenCV ","software":"md","book":"faceteam","full_link":"https://github.com/faceteam/detectBody"},{"name":"riadhayachi/ARnet","artist":"shell, train, model, rcnn, demo","id":105,"playcount":1563,"description":"riadhayachi/ARnet shell, train, model, rcnn, demo   ARnet This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     export PATH  PATH  usr local cuda 8 0 bin     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  ","software":"md","book":"riadhayachi","full_link":"https://github.com/riadhayachi/ARnet"},{"name":"oneTaken/researcher_homepage","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":106,"playcount":1836,"description":"oneTaken/researcher_homepage “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   researcher homepage This is a collection of homepages of some researchers     Hinton  homepage  http   www cs toronto edu  hinton     Bengio  homepage  http   www iro umontreal ca  bengioy yoshua en     Ansrew Ng  homepage  http   www andrewng org     Yann Lecun  homepage  http   yann lecun com     FeiFei Li  homepage  http   vision stanford edu feifeili     Yangqing Jia  homepage  http   daggerfs com     Ross Girshick  homepage  http   www rossgirshick info     Andrej Karpathy  homepage  http   cs stanford edu people karpathy      Andrew W  Moore  homepage  https   www cs cmu edu  awm index html    Qiang Yang  homepage  http   www cse ust hk  qyang     Shuai Zheng  homepage  http   www robots ox ac uk  szheng     Bolei Zhou  homepage  http   people csail mit edu bzhou     Georgia Gkioxari  homepage  https   gkioxari github io     Alex Graves  homepage  http   www cs toronto edu  graves     Ilya Sutskever  homepage  http   www cs toronto edu  ilya     rodrigob  homepage  https   rodrigob github io     genekogan  homepage  http   genekogan com     Justin Johnson  homepage  http   cs stanford edu people jcjohns     Jue Wang  homepage  http   www juew org     xtao  homepage  http   www xtao website     Yoon Kim  homepage  http   www people fas harvard edu  yoonkim     Kaiming He  homepage  http   kaiminghe com     Alex Kendall  homepage  https   alexgkendall com     Richard Zhang homepage  https   richzhang github io     Zheng SHOU  homepage  http   www columbia edu  zs2262     Huazhe Xu  homepage  http   hxu rocks     Tamara L  Berg  homepage  http   tamaraberg com     Kenji Kawaguchi  homepage  http   www mit edu  kawaguch     Chelsea Finn  homepage  https   people eecs berkeley edu  cbfinn     Zhuang Liu  homepage  https   liuzhuang13 github io     Zhiqiang Shen  homepage  http   www zhiqiangshen com   ","software":"md","book":"oneTaken","full_link":"https://github.com/oneTaken/researcher_homepage"},{"name":"nickshao/PlayerTracker","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":107,"playcount":3120,"description":"nickshao/PlayerTracker “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   PlayerTracker  Neural Basketball Assistant  Final Project of Applied Deep Learning 2017 in NTU   Track the movements of NBA players and map them onto a tactic board        System Pipeline        0  Preprocessing    Extract frames from NBA highlight video taking advantage of ffmpeg    p s  In  warrior vs jazz   directory       1  Object Detection    Use YOLO or Faster rcnn to detect players in each frame    p s  In  yolo   directory       2  Team Classifier    Tandform each bounding box into histogram vector and label three bounding box to classify players  corresponding teams    p s  In  player classify   directory       3  Mapping between video and tatic board    Utilize court line to map frame to tatic board    p s  In  mapping   directory       4  Player Tracking    For each frame  use their former or latter frame to delete rebundant point and do track smoothing    p s  In  index2court   directory      5  Postprocessing    Convert frames into video with ffmpeg    p s   warroirs vs jazz mp4            Train      sh train sh               Test      cd index2court  python3 6 player track warriors py     p s  Output frames will store in  index2court game out2              Demo  Original image     img src  https   github com nickshao PlayerTracker blob master assets t original jpg  width  50   height  50        Step1   Object detection  YOLO     img src  https   github com nickshao PlayerTracker blob master assets Picture1 png  width  50   height  50       Step2   Team Classifier    img src  https   github com nickshao PlayerTracker blob master assets Picture3 png  width  50   height  50      Step3   Mapping   1  Line detection and DBSCAN     img src  https   github com nickshao PlayerTracker blob master assets t houghlines jpg  width  50   height  50        2  Warped Frame     img src  https   github com nickshao PlayerTracker blob master assets t warped jpg  width  50   height  50      Step4   Player Tracking    img src  https   github com nickshao PlayerTracker blob master assets Picture4 png  width  50   height  50        Step5   Postprocessing    img src  https   github com nickshao PlayerTracker blob master assets w j gif  width  50   height  50        Final Compare        img src  https   github com nickshao PlayerTracker blob master assets compare gif  width  50   height  50                 Dependency   cython   google   protobuf   cv2   ffmpeg   matplotlib   numpy   pandas   pickle   python3 6   sklearn           Contributors  Team   ADL           B03902009 https   github com Spicy30        B03902033 https   github com falloutboyrocks         B03902052 https   github com y95847frank         B03902059 https   github com dianyo         B03902090 https   github com nickshao            Reference   1  S  Ren  K  He  R  Girshick  and J  Sun  Faster r cnn  To  wards real time object detection with region proposal net  works      2  Joseph Redmon  Santosh Divvala  Ross Girshick  and Ali Farhadi  You Only Look Once  Unified  Real Time Object Detection      3  Evan Cheshire  Cibele Halasz  and Jose Krause Perin  Player Tracking and Analysis of Basketball Plays     ","software":"md","book":"nickshao","full_link":"https://github.com/nickshao/PlayerTracker"},{"name":"daijialun/caffe_mvco","artist":"caff, learn, model, framework, vision","id":108,"playcount":1700,"description":"daijialun/caffe_mvco caff, learn, model, framework, vision   Caffe MVCO  Caffe MVCO is a modified version of Caffe for implementing the classification of MVCO 103 classes dataset       Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"daijialun","full_link":"https://github.com/daijialun/caffe_mvco"},{"name":"Edouard360/Faster-RCNN_TF","artist":"rcnn, train, detect, network, faster","id":109,"playcount":1418,"description":"Edouard360/Faster-RCNN_TF rcnn, train, detect, network, faster   Faster RCNN TF  Faster RCNN TF on synthetic text data  Fork of this  repo  https   github com smallcorgi Faster RCNN TF    This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Generate data  You can either generate data from the command line or in a python script using the functions in  generate data   folder        Using the command line  The following will generate one image and its corresponding xml in the  generate data   folder      cd generate data  python main py      Also check out        python main py   help      To see available options for tuning     Number of images to generate   Number of symbols per images   Path where to put the  xml   Path where to put the  jpeg   Maximum overlap btw images  For instance the following command would generate 10 images with at most 5 symbols per image and put both at the project root      python main py   n images 10   n samples per image 5   filepath                 References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF ","software":"md","book":"Edouard360","full_link":"https://github.com/Edouard360/Faster-RCNN_TF"},{"name":"kensun0/Face-Detecion-with-the-Faster-R-CNN-R-FCN","artist":"rcnn, train, detect, network, faster","id":110,"playcount":1591,"description":"kensun0/Face-Detecion-with-the-Faster-R-CNN-R-FCN rcnn, train, detect, network, faster   Face Detecion with the Faster R CNN  or  R FCN The Faster R CNN code  written in Python  is available https   github com rbgirshick py faster rcnn  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             The R FCN code  written in Python  is available https   github com Orpine py R FCN  If you find R FCN useful in your research  please consider citing        article dai16rfcn          Author    Jifeng Dai  Yi Li  Kaiming He  Jian Sun           Title     R FCN   Object Detection via Region based Fully Convolutional Networks           Journal    arXiv preprint arXiv 1605 06409           Year    2016              Some modification  1  Add lib st face py for reading WIDER dataset  modified factory py  2  Add tools demo4fddb py for testing the model with FDDB dataset  3  Modify tools train net py  Set    imdb   default  st face   4  Add prototxt to model       Installation  As the same as Faster R CNN and R FCN       Trained models  exmaple models http   pan baidu com s 1kVI3IQj       Result on FDDB   img src  discROC png  width  600         Some  Mistakes   red is ground truth   img src  601 jpg  width  300    img src  1843 jpg  width  300    img src  1062 jpg  width  500    img src  2 jpg  width  500   ","software":"md","book":"kensun0","full_link":"https://github.com/kensun0/Face-Detecion-with-the-Faster-R-CNN-R-FCN"},{"name":"RyanJDick/flownet-tests","artist":"caff, arxiv, convolut, featur, titl","id":111,"playcount":1610,"description":"RyanJDick/flownet-tests caff, arxiv, convolut, featur, titl   flownet tests  An experiment to evaluate the effectiveness of improvements made on top of the Flownet architecture for optical flow prediction  Specifically  this project looks into  1  Using a CRF as a post processing step  2  Using dilated convolutions to increase the resolution of the predictions made before upsampling   More details to come      Citations      article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014              article DBLP journals corr FischerDIHHGSCB15        author       Philipp Fischer and                    Alexey Dosovitskiy and                    Eddy Ilg and                    Philip H    a  usser and                    Caner Hazirbas and                    Vladimir Golkov and                    Patrick van der Smagt and                    Daniel Cremers and                    Thomas Brox         title        FlowNet  Learning Optical Flow with Convolutional Networks         journal      CoRR         volume       abs 1504 06852         year         2015         url          http   arxiv org abs 1504 06852         archivePrefix    arXiv         eprint       1504 06852         timestamp    Wed  07 Jun 2017 14 41 04  0200         biburl       http   dblp org rec bib journals corr FischerDIHHGSCB15         bibsource    dblp computer science bibliography  http   dblp org        ","software":"md","book":"RyanJDick","full_link":"https://github.com/RyanJDick/flownet-tests"},{"name":"anerudhr/edge_boxes_with_python","artist":"code, edg, object, propos, fast","id":112,"playcount":1264,"description":"anerudhr/edge_boxes_with_python code, edg, object, propos, fast This is mostly Piotr Dollar s code for Edge Boxes object proposals from  Edge Boxes  Locating Object Proposals from Edges  https   github com pdollar edges   downloaded in July 2015  I needed a way to call this stuff from Python   edge boxes py  and  edge boxes wrapper m  are the only new files you need to use the code  They have been adapted from  Sergey Karayev s  Selective Search IJCV with Python  https   github com sergeyk selective search ijcv with python  code  which wraps an alternative object proposal generator   Make sure that the edges directory is in your PYTHONPATH and just do    import edges    windows   edge boxes get windows image filenames   To make sure this works  simply  python edge boxes py    Finally  I needed the code to be able to use the proposals together with Ross Girshick s Fast R CNN   Fast Region based Convolutional Networks for object detection  https   github com rbgirshick fast rcnn    A demo file for this is also included   demo edgeboxes py    To try it out build Fast R CNN and drop the file in its  tools  subdirectory    The license is the same as for Piotr Dollar s Structured Edge Detection Toolbox V3 0  see  license txt   and his original readme is in  sedt readme txt    Enjoy   Dubravko Culibrk 22 Jul 2015 ","software":"md","book":"anerudhr","full_link":"https://github.com/anerudhr/edge_boxes_with_python"},{"name":"zjnqh/caffe","artist":"caff, model, learn, bvlc, refer","id":113,"playcount":1924,"description":"zjnqh/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zjnqh","full_link":"https://github.com/zjnqh/caffe"},{"name":"pooyadavoodi/mycaffe","artist":"caff, model, learn, bvlc, refer","id":114,"playcount":1925,"description":"pooyadavoodi/mycaffe caff, model, learn, bvlc, refer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pooyadavoodi","full_link":"https://github.com/pooyadavoodi/mycaffe"},{"name":"dculibrk/edge_boxes_with_python","artist":"code, edg, object, propos, fast","id":115,"playcount":1498,"description":"dculibrk/edge_boxes_with_python code, edg, object, propos, fast This is mostly Piotr Dollar s code for Edge Boxes object proposals from  Edge Boxes  Locating Object Proposals from Edges  https   github com pdollar edges   downloaded in July 2015  I needed a way to call this stuff from Python   edge boxes py  and  edge boxes wrapper m  are the only new files you need to use the code  They have been adapted from  Sergey Karayev s  Selective Search IJCV with Python  https   github com sergeyk selective search ijcv with python  code  which wraps an alternative object proposal generator   Make sure that the edges directory is in your PYTHONPATH and just do    import edges    windows   edge boxes get windows image filenames   To make sure this works  simply  python edge boxes py    Finally  I needed the code to be able to use the proposals together with Ross Girshick s Fast R CNN   Fast Region based Convolutional Networks for object detection  https   github com rbgirshick fast rcnn    A demo file for this is also included   demo edgeboxes py    To try it out build Fast R CNN and drop the file in its  tools  subdirectory    The license is the same as for Piotr Dollar s Structured Edge Detection Toolbox V3 0  see  license txt   and his original readme is in  sedt readme txt    Enjoy   Dubravko Culibrk 22 Jul 2015  P S  Please note that the code uses Piotr s MATLAB toolbox  https   pdollar github io toolbox    which needs to be installed for any of this to work   Thanks to Thomas Lau for pointing out that this should be stated in this README   ","software":"md","book":"dculibrk","full_link":"https://github.com/dculibrk/edge_boxes_with_python"},{"name":"colinhli/caffe","artist":"caff, learn, model, framework, vision","id":116,"playcount":2102,"description":"colinhli/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"colinhli","full_link":"https://github.com/colinhli/caffe"},{"name":"aocsa/mycaffe","artist":"caff, learn, model, framework, vision","id":117,"playcount":2112,"description":"aocsa/mycaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          mycaffe ","software":"md","book":"aocsa","full_link":"https://github.com/aocsa/mycaffe"},{"name":"superxuang/caffe_3d_faster_rcnn","artist":"caff, model, arxiv, year, fast","id":118,"playcount":1590,"description":"superxuang/caffe_3d_faster_rcnn caff, model, arxiv, year, fast   Caffe with 3D Faster R CNN This is a modified version of  Caffe  https   github com BVLC caffe  which supports the   3D Faster R CNN framework   and   3D Region Proposal Network   as described in our paper  Efficient Multiple Organ Localization in CT Image using Volumetric Region Proposal Network  Under review    This code has been compiled and passed on  Windows 7  64 bits   using  Visual Studio 2013       How to build    Requirements     Visual Studio 2013    ITK 4 10    CUDA 8 0  and  cuDNN v5       Pre Build Steps Please make sure CUDA and cuDNN have been installed correctly on your computer   Clone the project by running      git clone https   github com superxuang caffe 3d faster rcnn git      In    windows Caffe bat  set  ITK PATH  to ITK intall path  the path containing ITK  include   lib  folders        Build Run    windows Caffe bat  and build the project  caffe  in  Visual Studio 2013       License and Citation  Please cite our paper and Caffe if it is useful for your research   Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014       ","software":"md","book":"superxuang","full_link":"https://github.com/superxuang/caffe_3d_faster_rcnn"},{"name":"josephuan/caffe-master","artist":"caff, learn, model, framework, vision","id":119,"playcount":2102,"description":"josephuan/caffe-master caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"josephuan","full_link":"https://github.com/josephuan/caffe-master"},{"name":"Seaball/crfasrnn_newercaffe","artist":"caff, learn, model, framework, vision","id":120,"playcount":2173,"description":"Seaball/crfasrnn_newercaffe caff, learn, model, framework, vision   Caffe      Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   This repository can be used for crfasrnn on Windows with newer Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Seaball","full_link":"https://github.com/Seaball/crfasrnn_newercaffe"},{"name":"xiaolonw/fast-rcnn-norm2","artist":"caff, shell, model, make, requir","id":121,"playcount":3798,"description":"xiaolonw/fast-rcnn-norm2 caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation   fast rcnn backup ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/fast-rcnn-norm2"},{"name":"scan561/deepmind","artist":"caff, model, learn, bvlc, refer","id":122,"playcount":1924,"description":"scan561/deepmind caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"scan561","full_link":"https://github.com/scan561/deepmind"},{"name":"bfakhri/caffe_weighted_mpii","artist":"caff, learn, model, framework, vision","id":123,"playcount":2102,"description":"bfakhri/caffe_weighted_mpii caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bfakhri","full_link":"https://github.com/bfakhri/caffe_weighted_mpii"},{"name":"HansonSun/caffe","artist":"caff, learn, model, communiti, releas","id":124,"playcount":2130,"description":"HansonSun/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"HansonSun","full_link":"https://github.com/HansonSun/caffe"},{"name":"cbelth/Caffe2","artist":"caff, learn, model, framework, vision","id":125,"playcount":2102,"description":"cbelth/Caffe2 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cbelth","full_link":"https://github.com/cbelth/Caffe2"},{"name":"mapleneverfade/caffe","artist":"caff, learn, model, framework, vision","id":126,"playcount":2102,"description":"mapleneverfade/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mapleneverfade","full_link":"https://github.com/mapleneverfade/caffe"},{"name":"philadias/caffe","artist":"caff, learn, model, framework, vision","id":127,"playcount":2102,"description":"philadias/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"philadias","full_link":"https://github.com/philadias/caffe"},{"name":"zhangqianhui/caffe-multilabel","artist":"caff, learn, model, framework, vision","id":128,"playcount":2102,"description":"zhangqianhui/caffe-multilabel caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhangqianhui","full_link":"https://github.com/zhangqianhui/caffe-multilabel"},{"name":"Cibale/hands-annotation","artist":"model, imag, train, caff, download","id":129,"playcount":1934,"description":"Cibale/hands-annotation model, imag, train, caff, download   Hands detection app   This project is a domain specific  usage of  Keras implementaion of RetinaNet  https   github com fizyr keras retinanet      RetinaNet is a deep neural network for object detection and it is described in  Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002  by Tsung Yi Lin  Priya Goyal  Ross Girshick  Kaiming He and Piotr Doll r     Here is RetinaNet trained for a specific object detection   namely for detecting hands  Dataset used for training is  publicly available  http   www robots ox ac uk  vgg data hands           Installation    0  Clone this repository   1  Create virtual environment for python   execute  virtualenv  p python3 venv  and activate it by executing  source venv bin activate    2  Install requirements by executing  pip install  r requirements txt   3  In the repository  execute  python setup py install    4  As of writing  this repository requires the master branch of  keras resnet   run  pip install   upgrade git https   github com broadinstitute keras resnet             Usage  By default  pretrained model is used which can be downloaded  here  https   www dropbox com s docoy4p0hl40v1n resnet50 csv 17 h5   To use it  move it to the  snapshots  directory without renaming it  However  this model is unfortunately weak and not well trained because of lack of hardware resources     Script  main py  in  examples  directory is one of the examples how this model can be used  It comes with two options  annotating JPG image    i   or annotating video    v       Scheme for usage is the following      python examples main py  option  input file path   output file path    where   option  is either   i  or   v           Results      Result of running    python examples main  i image jpg image annotated jpg  where  image jpg  is  this one  https   image ibb co hwtFwm image jpg          it works moment  https   image ibb co cUcBK6 image annotated jpg   ","software":"md","book":"Cibale","full_link":"https://github.com/Cibale/hands-annotation"},{"name":"jnulzl/CaffefaceAlign","artist":"caff, learn, model, framework, vision","id":130,"playcount":2102,"description":"jnulzl/CaffefaceAlign caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jnulzl","full_link":"https://github.com/jnulzl/CaffefaceAlign"},{"name":"xuqiantong/MyCaffe","artist":"caff, learn, model, framework, vision","id":131,"playcount":2102,"description":"xuqiantong/MyCaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xuqiantong","full_link":"https://github.com/xuqiantong/MyCaffe"},{"name":"xiaolonw/caffe-render","artist":"caff, learn, model, framework, vision","id":132,"playcount":2117,"description":"xiaolonw/caffe-render caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          caffe render ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/caffe-render"},{"name":"GBJim/caffe-fast-rcnn","artist":"caff, model, learn, bvlc, refer","id":133,"playcount":1924,"description":"GBJim/caffe-fast-rcnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"GBJim","full_link":"https://github.com/GBJim/caffe-fast-rcnn"},{"name":"alfonsolink/tf_rfcn","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":134,"playcount":1928,"description":"alfonsolink/tf_rfcn “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   tf rfcn  This is an experimental tensorflow implementation of R FCN by  Dai  Jifeng  et al   R FCN  Object Detection via Region based Fully Convolutional Networks   arXiv preprint arXiv 1605 06409  2016    Base trunk is a ResNet  can be 50 101 152 layers   Training is done end to end    Anchor  proposal  and proposal target layers are based on Ross Girshick s py faster rcnn  https   github com rbgirshick py faster rcnn   with some modifications by Orpine in  https   github com Orpine py R FCN  for the proposal target layer   Training only for the moment  no testing phase yet   created by A  Labao under Pros Naval of CVMIG Lab  University of the Philippines    Specs tf rfcn fixed   accepts any image  as specified in source folder  and resacles to 600 x 1000  input is JPEG image  br    tf rfcn dynamic   accepts any image size and tensors are adjusted to a size of 600 for the shorter side  input is roidb pkl file  A sample code for making the imdb is  here  https   github com alfonsolink roidb maker   adopted from the original MNC  code  https   github com daijifeng001 MNC    code has to be modified to your local PASCAL VOC datasets folders     Performance In terms of end cls accuracy  tf rfcn dynamic has an accuracy of 93  after  70k iterations  with an anchor accuracy of 99  given the PASCAL VOC 2012 SDS dataset  and a 101 layer ResNet trunk  Results are obtained with ImageNet pretrained  weights  https   1drv ms f s AtPFjf hfC81kUrPD2Kazg1Gtkz6   which can be called using saver all trunkrcnn restore      which sets the base trunk and  rcnn  layers to ImageNet weights   fc  layers are not included in ImageNet initialization     Requirements GTX 1070  br    OpenCV 3 1  br    Cuda 7 5   br    Cudnn 5 0   br    tensorflow v10   br    and psroi pooling op so installed   check my other git repository  here   https   github com alfonsolink tensorflow user ops  for the psroi pooling tensorflow wrap   ","software":"md","book":"alfonsolink","full_link":"https://github.com/alfonsolink/tf_rfcn"},{"name":"sunzy301/CaffeWithAnnotation","artist":"caff, learn, model, framework, vision","id":135,"playcount":2157,"description":"sunzy301/CaffeWithAnnotation caff, learn, model, framework, vision Caffe Project With Chinese Annotation        Caffe       Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"sunzy301","full_link":"https://github.com/sunzy301/CaffeWithAnnotation"},{"name":"erikaek/caffe","artist":"caff, learn, model, framework, vision","id":136,"playcount":2102,"description":"erikaek/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"erikaek","full_link":"https://github.com/erikaek/caffe"},{"name":"wangxuya/caffe-yf","artist":"caff, learn, model, framework, vision","id":137,"playcount":2102,"description":"wangxuya/caffe-yf caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wangxuya","full_link":"https://github.com/wangxuya/caffe-yf"},{"name":"caocuong0306/a-cnn-roadmap","artist":"deep, learn, network, convolut, imag","id":138,"playcount":9190,"description":"caocuong0306/a-cnn-roadmap deep, learn, network, convolut, imag   A CNN Roadmap  A reading roadmap of CNN and Deep Learning basics      Table of Contents    Books   books     Courses   courses     Tutorials   tutorials     Blogs   blogs       Understanding CNN   understanding cnn       Understanding Backpropagation   understanding backpropagation       Deep Learning   deep learning     Papers   papers       CNN Architectures   cnn architectures       Training Techniques   training techniques       Object Detection   object detection       Books      Neural Networks and Deep Learning  http   neuralnetworksanddeeplearning com   by Michael Nielsen  Determination Press  2015      Deep Learning  http   www deeplearningbook org   by Yoshua Bengio  Ian Goodfellow and Aaron Courville  MIT Press  2016      Hands On Machine Learning with Scikit Learn and TensorFlow  https   github com ageron handson ml  by Aur lien Geron  O Reilly Media  2016       Courses     CS231n  Convolutional Neural Networks for Visual Recognition  http   cs231n stanford edu   by y Fei Fei Li  Andrej Karpathy  Justin Johnson      CS224d  Deep Learning for Natural Language Processing  http   cs224d stanford edu   by Richard Socher     NVIDIA Self Paced Courses for Deep Learning  https   www nvidia com en us deep learning ai education      Udacity   Deep Learning by Google  https   www udacity com course deep learning  ud730  by Vincent Vanhoucke and Arpan Chakraborty     Neural networks class  http   info usherbrooke ca hlarochelle neural networks content html  by Hugo Larochelle     Bay Area Deep Learning School  https   www bayareadlschool org    Stanford 2016     Deep Learning Summer School  http   videolectures net deeplearning2016 montreal    Montreal 2016       Tutorials    UFLDL Tutorial  http   deeplearning stanford edu tutorial      VGG Convolutional Neural Networks Practical  https   www robots ox ac uk  vgg practicals cnn index html  by Andrea Vedaldi and Andrew Zisserman     A Tutorial on Deep Learning  http   www trivedigaurav com blog quoc les lectures on deep learning   by Quoc Le       Part 1  Nonlinear Classifiers and The Backpropagation Algorithm  http   cs stanford edu  quocle tutorial1 pdf       Part 2  Autoencoders  Convolutional Neural Networks and Recurrent Neural Networks  http   cs stanford edu  quocle tutorial2 pdf     A Deep Learning Tutorial  From Perceptrons to Deep Networks  https   www toptal com machine learning an introduction to deep learning from perceptrons to deep networks  by Ivan Vasilev     ICML 2016 Tutorial on Deep Residual Networks  http   kaiminghe com icml16tutorial index html  by Kaiming He       Blogs       Understanding CNN   A Beginner s Guide To Understanding Convolutional Neural Networks Series  by Adit Deshpande       Part 1  https   adeshpande3 github io adeshpande3 github io A Beginner s Guide To Understanding Convolutional Neural Networks     Part 2  https   adeshpande3 github io adeshpande3 github io A Beginner s Guide To Understanding Convolutional Neural Networks Part 2     Part 3  https   adeshpande3 github io adeshpande3 github io The 9 Deep Learning Papers You Need To Know About html     Understanding Convolution in Deep Learning  http   timdettmers com 2015 03 26 convolution deep learning   by Tim Dettmers     Understanding Convolutions  http   colah github io posts 2014 07 Understanding Convolutions   by Christopher Olah     Understanding Convolutional Neural Networks for NLP   http   www wildml com 2015 11 understanding convolutional neural networks for nlp   by Denny Britz  WildML     Machine Learning is Fun  Series  by Adam Geitgey       Part 1  The world s easiest introduction to Machine Learning  https   medium com  ageitgey machine learning is fun 80ea3ec3c471       Part 2  Using Machine Learning to generate Super Mario Maker levels  https   medium com  ageitgey machine learning is fun part 2 a26a10b68df3       Part 3  Deep Learning and Convolutional Neural Networks  https   medium com  ageitgey machine learning is fun part 3 deep learning and convolutional neural networks f40359318721       Part 4  Modern Face Recognition with Deep Learning  https   medium com  ageitgey machine learning is fun part 4 modern face recognition with deep learning c3cffc121d78          Understanding Backpropagation    How the backpropagation algorithm works   http   neuralnetworksanddeeplearning com chap2 html  by Michael Nielsen     Yes you should understand backprop  https   medium com  karpathy yes you should understand backprop e2f06eab496b  hkbx92e9f  by Andrej Karpathy     A Visual Explanation of the Back Propagation Algorithm for Neural Networks  http   www kdnuggets com 2016 06 visual explanation backpropagation algorithm neural networks html          Deep Learning    The Neural Network Zoo  http   www asimovinstitute org neural network zoo       Neural Network Architectures  https   culurciello github io tech 2016 06 04 nets html  by Eugenio Culurciello     The major advancements in Deep Learning in 2016  https   tryolabs com blog 2016 12 06 major advancements deep learning 2016     Tombone s Series      Deep down the rabbit hole  CVPR 2015 and beyond  http   www computervisionblog com 2015 06 deep down rabbit hole cvpr 2015 and html       ICCV 2015  Twenty one hottest research papers  http   www computervisionblog com 2015 12 iccv 2015 twenty one hottest research html       From feature descriptors to deep learning  20 years of computer vision  http   www computervisionblog com 2015 06 deep down rabbit hole cvpr 2015 and html       Deep Learning Trends   ICLR 2016  http   www computervisionblog com 2016 06 deep learning trends iclr 2016 html       Deep Learning vs Machine Learning vs Pattern Recognition  http   www computervisionblog com 2015 03 deep learning vs machine learning vs html             Papers       CNN Architectures   ResNet   Paper   https   arxiv org abs 1512 03385   Project   https   github com KaimingHe deep residual networks      Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun  Deep Residual Learning for Image Recognition  CVPR  2016    VGG Net   Paper   https   arxiv org pdf 1409 4842 pdf   Project   http   www robots ox ac uk  vgg research very deep       Karen Simonyan and Andrew Zisserman  Very Deep Convolutional Networks for Large Scale Visual Recognition  ICLR  2015    GoogLeNet   Paper   https   arxiv org pdf 1409 4842 pdf      Christian Szegedy  Wei Liu  Yangqing Jia  Pierre Sermanet  Scott Reed  Dragomir Anguelov  Dumitru Erhan  Vincent Vanhoucke  Andrew Rabinovich  Going deeper with convolutions  CVPR  2015    ZF Net   Paper   https   arxiv org pdf 1311 2901 pdf      Matthew Zeiler and Rob Fergus  Visualizing and Understanding Convolutional Networks  ECCV  2014    AlexNet   Paper   http   www cs toronto edu  kriz imagenet classification with deep convolutional pdf      Alex Krizhevsky  Ilya Sutskever  and Geoffrey E  Hinton  ImageNet Classification with Deep Convolutional Neural Networks  NIPS  2012        Training Techniques   Batch normalization   Paper   https   arxiv org pdf 1502 03167 pdf      Sergey Ioffe and Christian Szegedy  Batch normalization  Accelerating deep network training by reducing internal covariate shift  ICML  2015    Dropout   Paper   https   arxiv org pdf 1502 03167 pdf      Nitish Srivastava  Geoffrey Hinton  Alex Krizhevsky  Ilya Sutskever  and Ruslan Salakhutdinov  Dropout  A Simple Way to Prevent Neural Networks from Overfitting  JMLR  2014           Object Detection   R FCN   Paper   https   arxiv org pdf 1605 06409 pdf   Code   https   github com daijifeng001 r fcn   PyCode   https   github com Orpine py R FCN      Jifeng Dai  Yi Li  Kaiming He  Jian Sun  R FCN  Object Detection via Region based Fully Convolutional Networks  NIPS  2016    SSD   Paper   https   arxiv org pdf 1512 02325v2 pdf   Code   https   github com weiliu89 caffe tree ssd      Wei Liu  Dragomir Anguelov  Dumitru Erhan  Christian Szegedy  Scott Reed  Cheng Yang Fu  Alexander C  Berg  SSD  Single Shot MultiBox Detector  ECCV  2016    YOLO   Paper   http   pjreddie com media files papers yolo pdf   Code   http   pjreddie com darknet yolo       Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi  You Only Look Once  Unified  Real Time Object Detection  ECCV  2016    Faster R CNN   Paper   https   arxiv org pdf 1506 01497 pdf   Code   https   github com ShaoqingRen faster rcnn    PyCode    https   github com rbgirshick py faster rcnn      Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  NIPS  2015    Fast R CNN   Paper   https   arxiv org pdf 1504 08083 pdf   Code   https   github com rbgirshick fast rcnn      Ross Girshick  Fast R CNN  ICCV  2015    SPP   Paper   https   arxiv org pdf 1406 4729 pdf   Code   https   github com ShaoqingRen SPP net      Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  ECCV  2014    R CNN   Paper   https   arxiv org pdf 1311 2524 pdf   Code   https   github com rbgirshick rcnn      Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik  Rich feature hierarchies for accurate object detection and semantic segmentation  CVPR  2014  ","software":"md","book":"caocuong0306","full_link":"https://github.com/caocuong0306/a-cnn-roadmap"},{"name":"szq0214/caffe","artist":"caff, learn, model, framework, vision","id":139,"playcount":2102,"description":"szq0214/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"szq0214","full_link":"https://github.com/szq0214/caffe"},{"name":"gy20073/CS267","artist":"caff, learn, model, framework, vision","id":140,"playcount":2102,"description":"gy20073/CS267 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"gy20073","full_link":"https://github.com/gy20073/CS267"},{"name":"xyyu-kevin/web_CC","artist":"caff, learn, model, framework, vision","id":141,"playcount":2102,"description":"xyyu-kevin/web_CC caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xyyu-kevin","full_link":"https://github.com/xyyu-kevin/web_CC"},{"name":"joe8767/caffe-with-crop","artist":"caff, model, learn, bvlc, refer","id":142,"playcount":2113,"description":"joe8767/caffe-with-crop caff, model, learn, bvlc, refer   Modification Added Crop Layers while BVLC Caffe didn t have for implementation FCN    Fork from kashefy caffe Branch with crop    Fully Convolutional Networks for Semantic Segmentation     Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"joe8767","full_link":"https://github.com/joe8767/caffe-with-crop"},{"name":"apir8181/caffe_icml2016","artist":"caff, learn, model, framework, vision","id":143,"playcount":2102,"description":"apir8181/caffe_icml2016 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"apir8181","full_link":"https://github.com/apir8181/caffe_icml2016"},{"name":"CaffeCN/CaffeCN","artist":"caff, learn, model, framework, vision","id":144,"playcount":2231,"description":"CaffeCN/CaffeCN caff, learn, model, framework, vision   CaffeCN   Caffe Branch of Caffe China User Group    Acknowledgement    MichaelXin    shicai     Coldmooon     HolidayXue       Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples        Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CaffeCN","full_link":"https://github.com/CaffeCN/CaffeCN"},{"name":"CastellanLiu/DeepLearning-project","artist":"caff, learn, model, framework, vision","id":145,"playcount":2102,"description":"CastellanLiu/DeepLearning-project caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CastellanLiu","full_link":"https://github.com/CastellanLiu/DeepLearning-project"},{"name":"glbing/caffe","artist":"caff, learn, model, framework, vision","id":146,"playcount":2102,"description":"glbing/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"glbing","full_link":"https://github.com/glbing/caffe"},{"name":"timurvural/caffe","artist":"caff, learn, model, framework, vision","id":147,"playcount":2102,"description":"timurvural/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"timurvural","full_link":"https://github.com/timurvural/caffe"},{"name":"ashly1yeo/caffe_clone","artist":"caff, learn, model, framework, vision","id":148,"playcount":2102,"description":"ashly1yeo/caffe_clone caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ashly1yeo","full_link":"https://github.com/ashly1yeo/caffe_clone"},{"name":"tianyuan702/caffe","artist":"caff, learn, model, framework, vision","id":149,"playcount":2102,"description":"tianyuan702/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tianyuan702","full_link":"https://github.com/tianyuan702/caffe"},{"name":"huangdl007/caffe","artist":"caff, model, learn, bvlc, refer","id":150,"playcount":1924,"description":"huangdl007/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"huangdl007","full_link":"https://github.com/huangdl007/caffe"},{"name":"JazzeYoung/C-DeepLearning","artist":"caff, learn, model, framework, vision","id":151,"playcount":2189,"description":"JazzeYoung/C-DeepLearning caff, learn, model, framework, vision         HEAD   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                  C DeepLearning         79f3cb9de046ed891f8860537e2a7baac1a0d00d ","software":"md","book":"JazzeYoung","full_link":"https://github.com/JazzeYoung/C-DeepLearning"},{"name":"prateekbs/kevin_bache_caffe","artist":"caff, model, learn, bvlc, refer","id":152,"playcount":1924,"description":"prateekbs/kevin_bache_caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"prateekbs","full_link":"https://github.com/prateekbs/kevin_bache_caffe"},{"name":"yolandaSyn/caffe","artist":"caff, learn, model, framework, vision","id":153,"playcount":2102,"description":"yolandaSyn/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yolandaSyn","full_link":"https://github.com/yolandaSyn/caffe"},{"name":"Jim61C/caffe-fast-rcnn","artist":"caff, model, learn, bvlc, refer","id":154,"playcount":1924,"description":"Jim61C/caffe-fast-rcnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Jim61C","full_link":"https://github.com/Jim61C/caffe-fast-rcnn"},{"name":"minghuam/caffe-dev","artist":"caff, model, learn, bvlc, refer","id":155,"playcount":1924,"description":"minghuam/caffe-dev caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"minghuam","full_link":"https://github.com/minghuam/caffe-dev"},{"name":"yanmeng5/caffe","artist":"caff, model, learn, bvlc, refer","id":156,"playcount":1924,"description":"yanmeng5/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yanmeng5","full_link":"https://github.com/yanmeng5/caffe"},{"name":"ATDupuis/Deep-Learning---Project","artist":"caff, learn, model, framework, vision","id":157,"playcount":2102,"description":"ATDupuis/Deep-Learning---Project caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ATDupuis","full_link":"https://github.com/ATDupuis/Deep-Learning---Project"},{"name":"houkai/caffe","artist":"caff, learn, model, framework, vision","id":158,"playcount":2102,"description":"houkai/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"houkai","full_link":"https://github.com/houkai/caffe"},{"name":"urandal/shadow","artist":"caff, learn, model, framework, vision","id":159,"playcount":2102,"description":"urandal/shadow caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"urandal","full_link":"https://github.com/urandal/shadow"},{"name":"FredHuang16/of_caffe","artist":"caff, learn, model, framework, vision","id":160,"playcount":2102,"description":"FredHuang16/of_caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"FredHuang16","full_link":"https://github.com/FredHuang16/of_caffe"},{"name":"cwlseu/deephash","artist":"caff, learn, model, communiti, releas","id":161,"playcount":2130,"description":"cwlseu/deephash caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cwlseu","full_link":"https://github.com/cwlseu/deephash"},{"name":"jjn037/caffe-priv-mult-thread","artist":"caff, learn, model, framework, vision","id":162,"playcount":2102,"description":"jjn037/caffe-priv-mult-thread caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jjn037","full_link":"https://github.com/jjn037/caffe-priv-mult-thread"},{"name":"dcharua/DEC","artist":"dec, code, python, mnist, cluster","id":163,"playcount":2139,"description":"dcharua/DEC dec, code, python, mnist, cluster   Deep Embedding Clustering  DEC   Keras implementation for ICML 2016 paper     Junyuan Xie  Ross Girshick  and Ali Farhadi  Unsupervised deep embedding for clustering analysis  ICML 2016      Usage 1  Install  Keras  2 0 9  https   github com fchollet keras   scikit learn       pip install keras scikit learn        2  Clone the code to local         git clone https   github com XifengGuo DEC keras git DEC cd DEC     3  Prepare datasets       Download   STL        cd data stl bash get data sh cd             MNIST   and   Fashion MNIST  FMNIST    can be downloaded automatically when you run the code     Reuters   and   USPS    If you cannot find these datasets yourself  you can download them from     https   pan baidu com s 1hsMQ8Tm  password   4ss4   for   Reuters    and   https   pan baidu com s 1skRg9Dr  password   sc58   for   USPS     4  Run experiment on MNIST      python DEC py   dataset mnist     or  if there s pretrained autoencoder weights    The DEC model will be saved to  results DEC model final h5    5  Other usages      Use  python DEC py  h  for help      Results      python run exp py     Table 1  Mean performance over 10 trials  See  results csv    results exp1 results csv  for detailed results for each trial                        kmeans AE kmeans   DEC     paper                                                           mnist     acc   53     88        91      84                nmi   50     81        87             fmnist    acc   47     61        62                       nmi   51     64        65             usps      acc   67     71        76                       nmi   63     68        79             stl       acc   70     79        86                       nmi   71     72        82             reuters   acc   52     76        78      72               nmi   31     52        57              Autoencoder model      autoencoders png      Other implementations  Original code  Caffe   https   github com piiswrong dec    MXNet implementation  https   github com dmlc mxnet blob master example dec dec py    Keras implementation without pretraining code  https   github com fferroni DEC Keras ","software":"md","book":"dcharua","full_link":"https://github.com/dcharua/DEC"},{"name":"hhlfjjs/dispnet","artist":"caff, learn, model, framework, vision","id":164,"playcount":2102,"description":"hhlfjjs/dispnet caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hhlfjjs","full_link":"https://github.com/hhlfjjs/dispnet"},{"name":"Aveirof7/diff-fpn-res101","artist":"caff, learn, model, framework, vision","id":165,"playcount":2102,"description":"Aveirof7/diff-fpn-res101 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Aveirof7","full_link":"https://github.com/Aveirof7/diff-fpn-res101"},{"name":"Charleen777/caffecode","artist":"caff, model, learn, bvlc, refer","id":166,"playcount":1924,"description":"Charleen777/caffecode caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Charleen777","full_link":"https://github.com/Charleen777/caffecode"},{"name":"zixie1991/caffe","artist":"caff, learn, model, framework, vision","id":167,"playcount":2102,"description":"zixie1991/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zixie1991","full_link":"https://github.com/zixie1991/caffe"},{"name":"hustzxd/z0","artist":"caff, learn, model, framework, vision","id":168,"playcount":2189,"description":"hustzxd/z0 caff, learn, model, framework, vision                 yolo2 in caffe tool  https   github com hustzxd yolo2 to caffe tool      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hustzxd","full_link":"https://github.com/hustzxd/z0"},{"name":"samuelzhz/caffe","artist":"caff, learn, model, framework, vision","id":169,"playcount":2102,"description":"samuelzhz/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"samuelzhz","full_link":"https://github.com/samuelzhz/caffe"},{"name":"mhauskn/recurrent-caffe","artist":"caff, model, learn, bvlc, refer","id":170,"playcount":1924,"description":"mhauskn/recurrent-caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mhauskn","full_link":"https://github.com/mhauskn/recurrent-caffe"},{"name":"MarkWissler/caffe-fork","artist":"caff, model, learn, bvlc, refer","id":171,"playcount":1924,"description":"MarkWissler/caffe-fork caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"MarkWissler","full_link":"https://github.com/MarkWissler/caffe-fork"},{"name":"esquije/caffe_jessedits","artist":"caff, learn, model, framework, vision","id":172,"playcount":2102,"description":"esquije/caffe_jessedits caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"esquije","full_link":"https://github.com/esquije/caffe_jessedits"},{"name":"ChaoZhang25/MergeTest","artist":"caff, learn, model, framework, vision","id":173,"playcount":2102,"description":"ChaoZhang25/MergeTest caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ChaoZhang25","full_link":"https://github.com/ChaoZhang25/MergeTest"},{"name":"zx3Leonoardo/caffe","artist":"caff, learn, model, framework, vision","id":174,"playcount":2102,"description":"zx3Leonoardo/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zx3Leonoardo","full_link":"https://github.com/zx3Leonoardo/caffe"},{"name":"luolongqiang/caffe-luolongqiang","artist":"caff, learn, model, framework, vision","id":175,"playcount":2102,"description":"luolongqiang/caffe-luolongqiang caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"luolongqiang","full_link":"https://github.com/luolongqiang/caffe-luolongqiang"},{"name":"antran89/New-C3D-Caffe","artist":"caff, learn, model, framework, vision","id":176,"playcount":2102,"description":"antran89/New-C3D-Caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"antran89","full_link":"https://github.com/antran89/New-C3D-Caffe"},{"name":"huangshunliang/caffe","artist":"caff, learn, model, communiti, releas","id":177,"playcount":2130,"description":"huangshunliang/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"huangshunliang","full_link":"https://github.com/huangshunliang/caffe"},{"name":"Edwardmark/caffe","artist":"caff, learn, model, communiti, releas","id":178,"playcount":2130,"description":"Edwardmark/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Edwardmark","full_link":"https://github.com/Edwardmark/caffe"},{"name":"jjzhang166/caffe","artist":"caff, model, learn, bvlc, refer","id":179,"playcount":1924,"description":"jjzhang166/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jjzhang166","full_link":"https://github.com/jjzhang166/caffe"},{"name":"CERN-NASA-MD/mau5maths","artist":"caff, model, learn, bvlc, refer","id":180,"playcount":1924,"description":"CERN-NASA-MD/mau5maths caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CERN-NASA-MD","full_link":"https://github.com/CERN-NASA-MD/mau5maths"},{"name":"fastalgo/nvcaffe-yy","artist":"caff, multigpu, bvlc, convolut, nvidia","id":181,"playcount":2185,"description":"fastalgo/nvcaffe-yy caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v6        Automatic selection of the best cuDNN convolution algorithm        Integration with v1 3 4 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"fastalgo","full_link":"https://github.com/fastalgo/nvcaffe-yy"},{"name":"cvjena/caffe_pp","artist":"caff, model, learn, bvlc, refer","id":182,"playcount":1924,"description":"cvjena/caffe_pp caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cvjena","full_link":"https://github.com/cvjena/caffe_pp"},{"name":"Svjatogor/caffe_for_ev3dev","artist":"caff, learn, model, framework, vision","id":183,"playcount":2102,"description":"Svjatogor/caffe_for_ev3dev caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Svjatogor","full_link":"https://github.com/Svjatogor/caffe_for_ev3dev"},{"name":"xiyu-autox/ssd_caffe","artist":"caff, learn, model, framework, vision","id":184,"playcount":2102,"description":"xiyu-autox/ssd_caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xiyu-autox","full_link":"https://github.com/xiyu-autox/ssd_caffe"},{"name":"BryantLJ/py-faster-rcnn-pedestrian","artist":"caff, learn, model, framework, vision","id":185,"playcount":2102,"description":"BryantLJ/py-faster-rcnn-pedestrian caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"BryantLJ","full_link":"https://github.com/BryantLJ/py-faster-rcnn-pedestrian"},{"name":"TinyJie/Caffe_mscnn","artist":"caff, learn, model, framework, vision","id":186,"playcount":2102,"description":"TinyJie/Caffe_mscnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"TinyJie","full_link":"https://github.com/TinyJie/Caffe_mscnn"},{"name":"qianwenjun0801/caffe_ssd","artist":"caff, learn, model, framework, vision","id":187,"playcount":2102,"description":"qianwenjun0801/caffe_ssd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"qianwenjun0801","full_link":"https://github.com/qianwenjun0801/caffe_ssd"},{"name":"byangderek/caffe-fast-rcnn","artist":"caff, model, learn, bvlc, refer","id":188,"playcount":1924,"description":"byangderek/caffe-fast-rcnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"byangderek","full_link":"https://github.com/byangderek/caffe-fast-rcnn"},{"name":"hkleecn/blvccaffe","artist":"caff, learn, model, framework, vision","id":189,"playcount":2102,"description":"hkleecn/blvccaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hkleecn","full_link":"https://github.com/hkleecn/blvccaffe"},{"name":"pyrominsoo/minsoo_caffe","artist":"caff, learn, model, framework, vision","id":190,"playcount":2102,"description":"pyrominsoo/minsoo_caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pyrominsoo","full_link":"https://github.com/pyrominsoo/minsoo_caffe"},{"name":"liuqingjie/caffe","artist":"caff, model, learn, bvlc, refer","id":191,"playcount":1924,"description":"liuqingjie/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"liuqingjie","full_link":"https://github.com/liuqingjie/caffe"},{"name":"KareemYousrii/2015-DL-TIWafer","artist":"caff, model, learn, bvlc, refer","id":192,"playcount":1924,"description":"KareemYousrii/2015-DL-TIWafer caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"KareemYousrii","full_link":"https://github.com/KareemYousrii/2015-DL-TIWafer"},{"name":"yshean/caffe-recurrent-unpooling","artist":"caff, learn, model, framework, vision","id":193,"playcount":2102,"description":"yshean/caffe-recurrent-unpooling caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yshean","full_link":"https://github.com/yshean/caffe-recurrent-unpooling"},{"name":"TonyChouZJU/ssd_mobilenet","artist":"caff, learn, model, framework, vision","id":194,"playcount":2102,"description":"TonyChouZJU/ssd_mobilenet caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"TonyChouZJU","full_link":"https://github.com/TonyChouZJU/ssd_mobilenet"},{"name":"Luoyadan/Test_caffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":195,"playcount":2199,"description":"Luoyadan/Test_caffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v6        Automatic selection of the best cuDNN convolution algorithm        Integration with v1 3 4 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          dgx 1 caffe ","software":"md","book":"Luoyadan","full_link":"https://github.com/Luoyadan/Test_caffe"},{"name":"SiYue0211/dssd_caffe","artist":"caff, model, learn, bvlc, refer","id":196,"playcount":1925,"description":"SiYue0211/dssd_caffe caff, model, learn, bvlc, refer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"SiYue0211","full_link":"https://github.com/SiYue0211/dssd_caffe"},{"name":"xiangqiaolxq/caffe-parallel","artist":"caff, learn, model, framework, vision","id":197,"playcount":2252,"description":"xiangqiaolxq/caffe-parallel caff, learn, model, framework, vision  myslef  Using a CPU thread to communication   Share test phase data blob with train phase blob to save GPU memory   MultiGPU test when train phase     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xiangqiaolxq","full_link":"https://github.com/xiangqiaolxq/caffe-parallel"},{"name":"cleverzhouhui/caffe-master","artist":"caff, learn, model, framework, vision","id":198,"playcount":2102,"description":"cleverzhouhui/caffe-master caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cleverzhouhui","full_link":"https://github.com/cleverzhouhui/caffe-master"},{"name":"arwinpan/ssd","artist":"caff, learn, model, framework, vision","id":199,"playcount":2102,"description":"arwinpan/ssd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"arwinpan","full_link":"https://github.com/arwinpan/ssd"},{"name":"twtygqyy/caffe-fast-rcnn-upstream","artist":"caff, learn, model, framework, vision","id":200,"playcount":2139,"description":"twtygqyy/caffe-fast-rcnn-upstream caff, learn, model, framework, vision   Caffe faster rcnn with upstream caffe fork     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"twtygqyy","full_link":"https://github.com/twtygqyy/caffe-fast-rcnn-upstream"},{"name":"rezkitrianto/caffe-git","artist":"caff, learn, model, framework, vision","id":201,"playcount":2109,"description":"rezkitrianto/caffe-git caff, learn, model, framework, vision   Caffeaaaaa     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   aaCaffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rezkitrianto","full_link":"https://github.com/rezkitrianto/caffe-git"},{"name":"smajida/caffe-yolo","artist":"caff, learn, model, framework, vision","id":202,"playcount":2102,"description":"smajida/caffe-yolo caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"smajida","full_link":"https://github.com/smajida/caffe-yolo"},{"name":"zhangli-nus/caffe","artist":"caff, learn, model, framework, vision","id":203,"playcount":2102,"description":"zhangli-nus/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhangli-nus","full_link":"https://github.com/zhangli-nus/caffe"},{"name":"natanielruiz/caffe-rebase-rcnn","artist":"caff, learn, model, framework, vision","id":204,"playcount":2102,"description":"natanielruiz/caffe-rebase-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"natanielruiz","full_link":"https://github.com/natanielruiz/caffe-rebase-rcnn"},{"name":"zhangnju/nv_caffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":205,"playcount":2185,"description":"zhangnju/nv_caffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v6        Automatic selection of the best cuDNN convolution algorithm        Integration with v1 3 4 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhangnju","full_link":"https://github.com/zhangnju/nv_caffe"},{"name":"heagoo/caffe_remove_bn","artist":"caff, learn, model, deep, layer","id":206,"playcount":1792,"description":"heagoo/caffe_remove_bn caff, learn, model, deep, layer   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   This repository added a tool named caffe remove bn  which is designed to remove the BatchNorm and Scale layer inside the network topologies like ResNet  Inception v3 v4  etc   Of course  ONLY for inference  as the inference uses the global mean and variance  which can be combined into the convolution layer   It will take a trained model as input  and output a transformed model   Usage example   build release tools remove bn layer bin ResNet 50 deploy prototxt ResNet 50 model caffemodel bn removed prototxt bn removed caffemodel  Please note  Many special cases are not considered in the implementation  Please modifiy the code if needed   Happy brewing      Modifications modified    include caffe net hpp modified    src caffe net cpp Added       tools remove bn layer cpp     License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"heagoo","full_link":"https://github.com/heagoo/caffe_remove_bn"},{"name":"jingjunLi/caffe-1.0","artist":"caff, learn, model, communiti, releas","id":207,"playcount":2130,"description":"jingjunLi/caffe-1.0 caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jingjunLi","full_link":"https://github.com/jingjunLi/caffe-1.0"},{"name":"rohitgirdhar-cmu-experimental/caffe-PatchLearn","artist":"caff, model, learn, bvlc, refer","id":208,"playcount":1924,"description":"rohitgirdhar-cmu-experimental/caffe-PatchLearn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rohitgirdhar-cmu-experimental","full_link":"https://github.com/rohitgirdhar-cmu-experimental/caffe-PatchLearn"},{"name":"Bug88/apollocaffe","artist":"caff, model, learn, bvlc, refer","id":209,"playcount":1924,"description":"Bug88/apollocaffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Bug88","full_link":"https://github.com/Bug88/apollocaffe"},{"name":"albanie/mcnResNeXt","artist":"model, imag, train, caff, download","id":210,"playcount":2154,"description":"albanie/mcnResNeXt model, imag, train, caff, download    ResNeXt  This directory contains code to import and evaluate some of the ResNeXt models described in the  paper  https   arxiv org abs 1611 05431        Aggregated Residual Transformations for Deep Neural Networks by Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  Kaiming He          Models  Currently only model evaluation is supported   Training will be added when the original performance has been reproduced   Pre trained models have been imported from PyTorch using the  mcnPyTorch  https   github com albanie mcnPyTorch   tool  The models can be downloaded  here  http   www robots ox ac uk  albanie models html resnext models    The runtime speed of the models on a single Tesla M 40 GPU  together with their performance on the ImageNet validation set is given below   The timing benchmarks are provided to give an approximate model speed  and should not be considered precise     model                        Top 1 error   Top 5 error   Runtime                                                                            resnext  50  32x4d pt mcn    22 60         6 49          211 1 Hz     resnext  101 32x4d pt mcn    21 55         5 93          144 1 Hz     resnext  101  64x4d pt mcn   20 81         5 66          88 9 Hz          Demo  The  demo resnext m  script gives an example of how to run a pre trained model  on a single image   The  core run resnext benchmarks m  will reproduce the table above  this requires a local copy of the imagenet dataset         Dependencies   mcnResNext  requires the following two modules      autonn  https   github com vlfeat autonn    automatic differenation    mcnExtraLayers  https   github com albanie mcnExtraLayers    extra MatConvNet layers  Both of these can be setup directly with  vl contrib   i e  run  vl contrib install  module name   then  vl contrib setup  module name          Installation  The easiest way to use this module is to install it with the  vl contrib   package manager   mcnSSD  can be installed with  the following commands from the root directory of your MatConvNet  installation       vl contrib  install    mcnResNeXt     vl contrib  setup    mcnResNext        ","software":"md","book":"albanie","full_link":"https://github.com/albanie/mcnResNeXt"},{"name":"wk910930/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":211,"playcount":2102,"description":"wk910930/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wk910930","full_link":"https://github.com/wk910930/caffe-fast-rcnn"},{"name":"Booley/caffe_compile","artist":"caff, learn, model, framework, vision","id":212,"playcount":2102,"description":"Booley/caffe_compile caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Booley","full_link":"https://github.com/Booley/caffe_compile"},{"name":"xpain1/caffe","artist":"caff, model, learn, bvlc, refer","id":213,"playcount":1924,"description":"xpain1/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xpain1","full_link":"https://github.com/xpain1/caffe"},{"name":"diz-vara/CaffeMS","artist":"caff, learn, model, framework, vision","id":214,"playcount":2102,"description":"diz-vara/CaffeMS caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"diz-vara","full_link":"https://github.com/diz-vara/CaffeMS"},{"name":"Lejboelle/caffe_custom","artist":"caff, learn, model, framework, vision","id":215,"playcount":2102,"description":"Lejboelle/caffe_custom caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Lejboelle","full_link":"https://github.com/Lejboelle/caffe_custom"},{"name":"AmirooR/caffe_video_segmentation","artist":"caff, learn, model, framework, vision","id":216,"playcount":2102,"description":"AmirooR/caffe_video_segmentation caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"AmirooR","full_link":"https://github.com/AmirooR/caffe_video_segmentation"},{"name":"stoneyang/caffe_ristretto","artist":"caff, learn, model, framework, vision","id":217,"playcount":2102,"description":"stoneyang/caffe_ristretto caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"stoneyang","full_link":"https://github.com/stoneyang/caffe_ristretto"},{"name":"ankitladdha/caffe-ss","artist":"caff, model, learn, bvlc, refer","id":218,"playcount":1991,"description":"ankitladdha/caffe-ss caff, model, learn, bvlc, refer   Caffe Modified version of Caffe for Semantic Segmentation at NavLab CMU   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ankitladdha","full_link":"https://github.com/ankitladdha/caffe-ss"},{"name":"matex-org/caffe-nvidia","artist":"caff, model, learn, bvlc, refer","id":219,"playcount":1925,"description":"matex-org/caffe-nvidia caff, model, learn, bvlc, refer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"matex-org","full_link":"https://github.com/matex-org/caffe-nvidia"},{"name":"guoyilin/caffe","artist":"caff, model, learn, bvlc, refer","id":220,"playcount":2161,"description":"guoyilin/caffe caff, model, learn, bvlc, refer This code is deprecated  please use my friend s code  https   github com tyandzx caffe  This code support l2 norm     Caffe 1  Implement triplet loss of facenet paper  Now this project is not finished  it needs to add l2 normalization later      Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"guoyilin","full_link":"https://github.com/guoyilin/caffe"},{"name":"iniverno/MIsim","artist":"caff, learn, model, framework, vision","id":221,"playcount":2102,"description":"iniverno/MIsim caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"iniverno","full_link":"https://github.com/iniverno/MIsim"},{"name":"vincentliubuaa/caffe","artist":"caff, learn, model, framework, vision","id":222,"playcount":2102,"description":"vincentliubuaa/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"vincentliubuaa","full_link":"https://github.com/vincentliubuaa/caffe"},{"name":"yshean/caffe-unpooling","artist":"caff, learn, model, framework, vision","id":223,"playcount":2102,"description":"yshean/caffe-unpooling caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yshean","full_link":"https://github.com/yshean/caffe-unpooling"},{"name":"xiangqiaolxq/caffe-parallel","artist":"caff, learn, model, framework, vision","id":224,"playcount":2252,"description":"xiangqiaolxq/caffe-parallel caff, learn, model, framework, vision  myslef  Using a CPU thread to communication   Share test phase data blob with train phase blob to save GPU memory   MultiGPU test when train phase     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xiangqiaolxq","full_link":"https://github.com/xiangqiaolxq/caffe-parallel"},{"name":"cleverzhouhui/caffe-master","artist":"caff, learn, model, framework, vision","id":225,"playcount":2102,"description":"cleverzhouhui/caffe-master caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cleverzhouhui","full_link":"https://github.com/cleverzhouhui/caffe-master"},{"name":"arwinpan/ssd","artist":"caff, learn, model, framework, vision","id":226,"playcount":2102,"description":"arwinpan/ssd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"arwinpan","full_link":"https://github.com/arwinpan/ssd"},{"name":"twtygqyy/caffe-fast-rcnn-upstream","artist":"caff, learn, model, framework, vision","id":227,"playcount":2139,"description":"twtygqyy/caffe-fast-rcnn-upstream caff, learn, model, framework, vision   Caffe faster rcnn with upstream caffe fork     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"twtygqyy","full_link":"https://github.com/twtygqyy/caffe-fast-rcnn-upstream"},{"name":"Yongqiang116/yqgao","artist":"caff, model, learn, bvlc, refer","id":228,"playcount":1924,"description":"Yongqiang116/yqgao caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Yongqiang116","full_link":"https://github.com/Yongqiang116/yqgao"},{"name":"anguyen8/caffe_lrcn","artist":"caff, model, learn, bvlc, refer","id":229,"playcount":1924,"description":"anguyen8/caffe_lrcn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"anguyen8","full_link":"https://github.com/anguyen8/caffe_lrcn"},{"name":"josh-xu/caffe","artist":"caff, learn, model, framework, vision","id":230,"playcount":2102,"description":"josh-xu/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"josh-xu","full_link":"https://github.com/josh-xu/caffe"},{"name":"TangChangcheng/caffe","artist":"caff, model, learn, bvlc, refer","id":231,"playcount":1924,"description":"TangChangcheng/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"TangChangcheng","full_link":"https://github.com/TangChangcheng/caffe"},{"name":"dennis910130/caffe_crop_based","artist":"caff, model, learn, bvlc, refer","id":232,"playcount":1924,"description":"dennis910130/caffe_crop_based caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dennis910130","full_link":"https://github.com/dennis910130/caffe_crop_based"},{"name":"rickyHong/CaffeForOpenCL","artist":"caff, model, learn, bvlc, refer","id":233,"playcount":1924,"description":"rickyHong/CaffeForOpenCL caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/CaffeForOpenCL"},{"name":"MudeLin/caffe_mpi","artist":"caff, learn, model, framework, vision","id":234,"playcount":2102,"description":"MudeLin/caffe_mpi caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"MudeLin","full_link":"https://github.com/MudeLin/caffe_mpi"},{"name":"iwamidsn/caffe","artist":"caff, learn, model, framework, vision","id":235,"playcount":2102,"description":"iwamidsn/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"iwamidsn","full_link":"https://github.com/iwamidsn/caffe"},{"name":"hanshizhong1105/caffe-sc","artist":"caff, learn, model, framework, vision","id":236,"playcount":2139,"description":"hanshizhong1105/caffe-sc caff, learn, model, framework, vision   Caffe       Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe      License  https   img shields io badge license BSD blue svg   LICENSE     Caffe is a deep learning framework made with expression  speed  and modularity in mind   It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     Check out the  project site  http   caffe berkeleyvision org  for all the details like       DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p      Tutorial Documentation  http   caffe berkeleyvision org tutorial       BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo      Installation instructions  http   caffe berkeleyvision org installation html     and step by step examples        Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge     Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models   Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues      Happy brewing        License and Citation    Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE    The BVLC reference models are released for unrestricted use     Please cite Caffe in your publications if it helps your research          article jia2014caffe         Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor          Journal    arXiv preprint arXiv 1408 5093          Title    Caffe  Convolutional Architecture for Fast Feature Embedding          Year    2014          ","software":"md","book":"hanshizhong1105","full_link":"https://github.com/hanshizhong1105/caffe-sc"},{"name":"huiba/frcnn_caffe_backup","artist":"caff, model, learn, bvlc, refer","id":237,"playcount":1924,"description":"huiba/frcnn_caffe_backup caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"huiba","full_link":"https://github.com/huiba/frcnn_caffe_backup"},{"name":"braveld/caffe_origin","artist":"caff, learn, model, communiti, releas","id":238,"playcount":2130,"description":"braveld/caffe_origin caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"braveld","full_link":"https://github.com/braveld/caffe_origin"},{"name":"dhaivat666/Intersection_detection","artist":"caff, model, learn, bvlc, refer","id":239,"playcount":2247,"description":"dhaivat666/Intersection_detection caff, model, learn, bvlc, refer   This is adapted to detect road intersections using LRCN   Paper  http   robotics iiit ac in uploads Main Publications resources Dhaivat et al iros17 Intersection detection pdf  The new codes and various scripts to process the dataset can be be found at          Intersection detection examples LRCN activity recognition    Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dhaivat666","full_link":"https://github.com/dhaivat666/Intersection_detection"},{"name":"hguosc/caffe_attribute","artist":"caff, learn, model, framework, vision","id":240,"playcount":2102,"description":"hguosc/caffe_attribute caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hguosc","full_link":"https://github.com/hguosc/caffe_attribute"},{"name":"postpascal/AC_caffe","artist":"caff, learn, model, framework, vision","id":241,"playcount":2157,"description":"postpascal/AC_caffe caff, learn, model, framework, vision   Caffe        Action Recognition     Using UCF 101 Database       Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"postpascal","full_link":"https://github.com/postpascal/AC_caffe"},{"name":"Asgariftm/FHE-Multi-QA","artist":"caff, learn, model, framework, vision","id":242,"playcount":2102,"description":"Asgariftm/FHE-Multi-QA caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Asgariftm","full_link":"https://github.com/Asgariftm/FHE-Multi-QA"},{"name":"hym310/caffe","artist":"caff, learn, model, communiti, releas","id":243,"playcount":2130,"description":"hym310/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hym310","full_link":"https://github.com/hym310/caffe"},{"name":"lc12git/caffe","artist":"caff, learn, model, framework, vision","id":244,"playcount":2102,"description":"lc12git/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lc12git","full_link":"https://github.com/lc12git/caffe"},{"name":"Asgariftm/iheart","artist":"caff, learn, model, framework, vision","id":245,"playcount":2102,"description":"Asgariftm/iheart caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Asgariftm","full_link":"https://github.com/Asgariftm/iheart"},{"name":"xpain1/caffe-sds","artist":"caff, model, learn, bvlc, refer","id":246,"playcount":1924,"description":"xpain1/caffe-sds caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xpain1","full_link":"https://github.com/xpain1/caffe-sds"},{"name":"DG9J/QuantizedCaffe","artist":"caff, learn, model, framework, vision","id":247,"playcount":2154,"description":"DG9J/QuantizedCaffe caff, learn, model, framework, vision   Quantized Caffe  Caffe with quantization support    Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"DG9J","full_link":"https://github.com/DG9J/QuantizedCaffe"},{"name":"SoonminHwang/ssd","artist":"caff, learn, model, framework, vision","id":248,"playcount":2102,"description":"SoonminHwang/ssd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"SoonminHwang","full_link":"https://github.com/SoonminHwang/ssd"},{"name":"zhenyangli/caffe-lang-track","artist":"caff, learn, model, framework, vision","id":249,"playcount":2102,"description":"zhenyangli/caffe-lang-track caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhenyangli","full_link":"https://github.com/zhenyangli/caffe-lang-track"},{"name":"xiaolonw/fast-rcnn-normg","artist":"caff, shell, model, make, requir","id":250,"playcount":3798,"description":"xiaolonw/fast-rcnn-normg caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation   fast rcnn backup ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/fast-rcnn-normg"},{"name":"PeaceOrwell/caffe-pruned","artist":"caff, learn, model, framework, vision","id":251,"playcount":2102,"description":"PeaceOrwell/caffe-pruned caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"PeaceOrwell","full_link":"https://github.com/PeaceOrwell/caffe-pruned"},{"name":"EricWeiYb/caffe","artist":"caff, model, learn, bvlc, refer","id":252,"playcount":1924,"description":"EricWeiYb/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"EricWeiYb","full_link":"https://github.com/EricWeiYb/caffe"},{"name":"tingjianlau/caffe-commons","artist":"caff, learn, model, framework, vision","id":253,"playcount":2118,"description":"tingjianlau/caffe-commons caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          caffe commons ","software":"md","book":"tingjianlau","full_link":"https://github.com/tingjianlau/caffe-commons"},{"name":"anguoyang/jcaffe","artist":"caff, learn, model, framework, vision","id":254,"playcount":2102,"description":"anguoyang/jcaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"anguoyang","full_link":"https://github.com/anguoyang/jcaffe"},{"name":"KangweiLiu/caffe-cluster","artist":"caff, learn, model, framework, vision","id":255,"playcount":2118,"description":"KangweiLiu/caffe-cluster caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          caffe cluster ","software":"md","book":"KangweiLiu","full_link":"https://github.com/KangweiLiu/caffe-cluster"},{"name":"gy1874/caffe-rpnbf-cudnn5","artist":"caff, learn, model, framework, vision","id":256,"playcount":2102,"description":"gy1874/caffe-rpnbf-cudnn5 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"gy1874","full_link":"https://github.com/gy1874/caffe-rpnbf-cudnn5"},{"name":"jizhuoran/caffe_cpu_sj","artist":"caff, model, learn, communiti, berkeley","id":257,"playcount":2487,"description":"jizhuoran/caffe_cpu_sj caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jizhuoran","full_link":"https://github.com/jizhuoran/caffe_cpu_sj"},{"name":"CyrusChiu/Image-recognition","artist":"deep, learn, network, convolut, imag","id":258,"playcount":2619,"description":"CyrusChiu/Image-recognition deep, learn, network, convolut, imag   Image recognition Image recognition methods from bag of words  BoW   Spatial Pyramid Matching  SPM   Sparse Codeing SPM  ScSPM  to convolutional neural networks  CNN  and CNN SVM     Author     CyrusChiu   ntu     Included methods     Bag of words  1      Spatial Pyramid Matching  2      Sparse Coding SPM  3      Convolutional neural networks  4      CNN SVM  5      Requirements      Basic  BoW  SPM  ScSPM      Python 2 7     NumPy     SciPy     Scikit learn     OpenCV 3 0 0   opencv contrib  installation instructions  http   www pyimagesearch com 2015 06 22 install opencv 3 0 and python 2 7 on ubuntu      We use OpenCV here to load the image and extract SIFT descriptor only  you can use any image library if you want       Optional  CNN  CNN SVM      keras     Caffe  pycaffe  installation instructions  http   caffe berkeleyvision org installation html        Demo  example py  training a SVM with SPM method on Caltech101 Dataset  6        python example py   train Caltech101 DatasetFile txt          Usage An end to end script with training and testing is provided    Dataset     Dataset File   is a text file with the format of    label   and   path   like            train txt   label path to train1 jpg     label path to train2 jpg     label path to train3 jpg                  test txt   label path to test1 jpg   label path to test2 jpg          Training and evaluation on training set  predict on test set which is labeled              python yourMethod py   train path to train txt   test path to test py                    References  1  CSURKA  Gabriella  et al  Visual categorization with bags of keypoints  In  Workshop on statistical learning in computer vision  ECCV  2004  p  1 2    2  LAZEBNIK  Svetlana  SCHMID  Cordelia  PONCE  Jean  Beyond bags of features  Spatial pyramid matching for recognizing natural scene categories  In  Computer Vision and Pattern Recognition  2006 IEEE Computer Society Conference on  IEEE  2006  p  2169 2178    3  Jianchao Yang  Kai Yu  Yihong Gong  and Thomas Huang  Linear spatial pyramid matching using sparse coding for image classification  CVPR2009   4  Krizhevsky  Alex  Ilya Sutskever  and Geoffrey E  Hinton   Imagenet classification with deep convolutional neural networks   Advances in neural information processing systems  2012    5  Girshick  Ross  et al   Rich feature hierarchies for accurate object detection and semantic segmentation   Computer Vision and Pattern Recognition  CVPR   2014 IEEE Conference on  IEEE  2014  2014    6  http   www vision caltech edu Image Datasets Caltech101    7  http   www cs toronto edu  kriz cifar html  ","software":"md","book":"CyrusChiu","full_link":"https://github.com/CyrusChiu/Image-recognition"},{"name":"makefile/frcnn","artist":"model, imag, train, caff, download","id":259,"playcount":11092,"description":"makefile/frcnn model, imag, train, caff, download   Special Features for This Caffe Repository      approximate joint train  test and evaluate models of Faster rcnn R FCN   etc   support  R FCN  https   arxiv org abs 1605 06409  with OHEM   support  Light head R CNN  https   arxiv org abs 1711 07264     R FCN    https   www aaai org ocs index php AAAI AAAI18 paper viewPDFInterstitial 16463 16297    support  Cascade R CNN  https   arxiv org abs 1712 00726    support FPN   Feature Pyramid Network  https   arxiv org abs 1612 03144     support  Deformable Conv  https   arxiv org abs 1703 06211  and Deformable PSROIPooling   support SSD layers   support YOLOv3 inference   Action recognition  Two Stream CNN    CTPN layers for scene text detection  port from  tianzhi0549 CTPN  https   github com tianzhi0549 CTPN    script for merging  Conv   BatchNorm   Scale  layers to 1 layer when those layer are freezed to reduce memory   examples FRCNN res50 gen  merged  model py   script for merge ResNet   examples FRCNN merge  resnet sh     support snapshot after got  SIGTERM  kill command s default signal    logger tools by VisualDL which can visualize loss scalars and feature images  etc   support NMS and IOU calc on GPU   Soft NMS  https   arxiv org abs 1704 04503  on CPU   support box voting   multi scale testing   support solver learning rate warm up strategy   cosine decay lr   Cyclical lr  see sgd  solver cpp    support model file encrypt decrypt  see  encrypt  model cpp     frcnn  api cpp    support CUDA 8 0  CuDNN 7 0    Special layers      ROIAlign proposed in  Mask R CNN  https   arxiv org abs 1703 06870    FocalLoss in  Focal Loss for Dense Object Detection  https   arxiv org abs 1708 02002    Swish Activation function in  Searching for Activation Functions  https   arxiv org abs 1710 05941    Eltwise layer using in place sum to reduce memory  from  this PR  https   github com BVLC caffe pull 3708    caffe layer module  layer definition and usage like  Python layer  from caffe  PR 5294  https   github com BVLC caffe pull 5294    CuDNNDeconv layer  Depth wise Conv layer  Upsample layer   CTPN layers include LSTM layer implemented by   junhyukoh  https   github com junhyukoh caffe lstm  which is faster than upstream master branch of Caffe     Data Preprocess    data enhancement    support Histogram equalization of color image   haze free algorithm  data augmentation    random flip horizontal   random jitter   hue  saturation  exposure   rotate multiple of 90 degree     TODO list          support batch image greater than 1  on branch batch     x  support Rotated R CNN for rotated bounding box  on branch r frcnn     x  support OHEM  see r fcn      Installation  This repository uses C  11 features  so make sure to use compiler that is compatible of C  11     shell cd  CAFFE ROOT cp Makefile config example Makefile config   modify the content in Makefile config to adapt your system   if you like to use VisualDL to log losses  set USE VISUALDL to 1    and cd src logger    make make  j make pyfrcnn   if you need use python to demo      All following steps  you should do these in the   CAFFE ROOT  path      Faster R CNN      Disclaimer The official  Faster R CNN  https   arxiv org abs 1506 01497  code of NIPS 2015 paper  written in MATLAB  is  available  https   github com ShaoqingRen faster rcnn  here  It is worth noticing that     This repository contains a C   reimplementation of the Python code  py faster rcnn  https   github com rbgirshick py faster rcnn    which is built on  caffe  https   github com BVLC caffe     This repository used code from  caffe faster rcnn  https   github com D X Y caffe faster rcnn tree dev   commit 8ba1d26  as base framework       Demo Using  sh example FRCNN demo frcnn sh   the will process five pictures in the  examples FRCNN images   and put results into  examples FRCNN results    Note  You should prepare the trained caffemodel into  models FRCNN   such as  ZF faster rcnn final caffemodel  for ZF model       Prepare for training and evaluation   The list of training data is  examples FRCNN dataset voc2007 trainval     The list of testing data is  examples FRCNN dataset voc2007 trainval     Create symlinks for the PASCAL VOC dataset  ln  s  YOUR VOCdevkit Path  CAFFE ROOT VOCdevkit    As shown in VGG example  models FRCNN vgg16 train val proto   the original pictures should appear at   CAFFE ROOT VOCdevkit VOC2007 JPEGImages     Check window  data  param in FrcnnRoiData   If you want to train Faster R CNN on your own dataset  you may prepare custom dataset list  The format is as below       image id image name number of boxes label x1 y1 x2 y2 difficulty              Training  sh examples FRCNN zf train frcnn sh  will start training process of voc2007 data using ZF model   The ImageNet pre trained models can be found in  this link  https   drive google com drive folders 1xjFL ZeVzXkY584ZsEnr9O6O3P1Ypjwd usp sharing   If you use the provided training script  please make sure    VOCdevkit is within  CAFFE  ROOT and VOC2007 in within VOCdevkit   ZF pretrain model should be put into models FRCNN  as ZF v2 caffemodel   examples FRCNN convert model py  transform the parameters of  bbox pred  layer by mean and stds values  because the regression value is normalized during training and we should recover it to obtain the final model       Evaluation  sh examples FRCNN zf test frcnn sh  the will evaluate the performance of voc2007 test data using the trained ZF model     First Step of This Shell   Test all voc 2007 test images and output results in a text file    Second Step of This Shell   Compare the results with the ground truth file and calculate the mAP       Config  The program use config file named like  config json  to set params  Special params need to be cared about      data jitter   data augmentation  if set  0 then no jitter hue saturation exposure    im size align   set to stride of last conv layer of FPN to avoid Deconv shape problem  such as 64  set to 0 to disable    bbox normalize targets   do bbox norm in training  and do unnorm at testing do not need convert model weight before testing     test rpn score thresh   you can set  0 to speed up NMS at testing      Detail  Scripts and prototxts for different models are listed in the  examples FRCNN   More details about the code in include and src directory      api FRCNN  for demo and test api    caffe FRCNN  contains codes related to Faster R CNN    caffe RFCN  for R FCN    caffe DeformConv  for Deformable Conv    caffe SSD  for SSD    examples YOLO  for YOLOv3 inference  includes converter script and demo  pay attention to the Upsample layer usage     logger  dir relates to logger tools    modules  and  yaml cpp  relate to Caffe module layers  which include FPN layers  etc    python frcnn  relates to pybind11 interface for demo    caffe ACTION REC  Two Stream Convolutional Networks for Action Recognition in Video    caffe CTPN  relates to CTPN special layers for scene text detection    caffe PR  for some layers from caffe PR      Commands  Rebase From Caffe Master    For synchronous with official caffe      git remote add caffe https   github com BVLC caffe git   git fetch caffe   git checkout master   git rebase caffe master    Rebase the dev branch     git checkout dev   git rebase master    git push  f origin dev     QA    CUB not found  when compile for GPU version   frcnn proposal layer cu  requires a head file   cub cub cuh    CUB is library contained in the official Cuda Toolkit  usually can be found in    usr local cuda include thrust system cuda detail    You should add this path in your  Makefile config   try  locate cub cuh  to find cub on your system    When Get  error  RPC failed  result 22  HTTP code   0   use  git config http postBuffer 524288000   increases git buffer to 500mb   Cannot load module layer dynamic library  the program search the modules first in enviroment variable  CAFFE LAYER PATH  then in predefined  DEFAULT LAYER PATH  in Makefile  So try to set  CAFFE LAYER PATH  in shell script  And this could be happen when using pycaffe    about R FCN  currently not support class agnostic  although it is easy to modify   and OHEM method has very little improvement in joint train  also remember to set  bg thresh lo  to 0 when use OHEM      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite the following papers in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014             inproceedings girshick2015fast        title  Fast R CNN         author  Girshick  Ross         booktitle  International Conference on Computer Vision         pages  1440  1448         year  2015             inproceedings ren2015faster        title  Faster  R CNN   Towards real time object detection with region proposal networks         author  Ren  Shaoqing and He  Kaiming and Girshick  Ross and Sun  Jian         booktitle  Neural Information Processing Systems         pages  91  99         year  2015             article ren2017faster        title  Faster  R CNN   Towards real time object detection with region proposal networks         author  Ren  Shaoqing and He  Kaiming and Girshick  Ross and Sun  Jian         journal  IEEE Transactions on Pattern Analysis and Machine Intelligence         volume  39         number  6         pages  1137  1149         year  2017         publisher  IEEE             article dai16rfcn          Author    Jifeng Dai  Yi Li  Kaiming He  Jian Sun           Title     R FCN   Object Detection via Region based Fully Convolutional Networks           Journal    arXiv preprint arXiv 1605 06409           Year    2016             article dai17dcn          Author    Jifeng Dai  Haozhi Qi  Yuwen Xiong  Yi Li  Guodong Zhang  Han Hu  Yichen Wei           Title    Deformable Convolutional Networks           Journal    arXiv preprint arXiv 1703 06211           Year    2017             article          Author    Navaneeth Bodla and Bharat Singh and Rama Chellappa and Larry S  Davis           Title    Soft NMS    Improving Object Detection With One Line of Code           Booktitle    Proceedings of the IEEE International Conference on Computer Vision           Year    2017             article li2017light        title  Light Head R CNN  In Defense of Two Stage Object Detector         author  Li  Zeming and Peng  Chao and Yu  Gang and Zhang  Xiangyu and Deng  Yangdong and Sun  Jian         journal  arXiv preprint arXiv 1711 07264         year  2017             inproceedings cai18cascadercnn        author    Zhaowei Cai and Nuno Vasconcelos         Title    Cascade R CNN  Delving into High Quality Object Detection         booktitle    CVPR         Year     2018         ","software":"md","book":"makefile","full_link":"https://github.com/makefile/frcnn"},{"name":"ZENGXH/caff","artist":"caff, model, learn, bvlc, refer","id":260,"playcount":1924,"description":"ZENGXH/caff caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ZENGXH","full_link":"https://github.com/ZENGXH/caff"},{"name":"AIROBOTAI/caffe-mnode","artist":"caff, learn, model, framework, vision","id":261,"playcount":2102,"description":"AIROBOTAI/caffe-mnode caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"AIROBOTAI","full_link":"https://github.com/AIROBOTAI/caffe-mnode"},{"name":"HungWei-Andy/caffe","artist":"caff, learn, model, framework, vision","id":262,"playcount":2102,"description":"HungWei-Andy/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"HungWei-Andy","full_link":"https://github.com/HungWei-Andy/caffe"},{"name":"spacegoing/iep_nmn","artist":"model, imag, train, caff, download","id":263,"playcount":3488,"description":"spacegoing/iep_nmn model, imag, train, caff, download   inferring and executing  This is the code for the paper      a href  https   arxiv org abs 1705 03633  Inferring and Executing Programs for Visual Reasoning  a      br    a href  http   cs stanford edu people jcjohns   Justin Johnson  a     a href  http   home bharathh info   Bharath Hariharan  a     a href  https   lvdmaaten github io   Laurens van der Maaten  a     a href  http   cs stanford edu  jhoffman   Judy Hoffman  a     a href  http   vision stanford edu feifeili   Fei Fei Li  a     a href  http   larryzitnick org   Larry Zitnick  a     a href  http   www rossgirshick info   Ross Girshick  a    br   To appear at  ICCV 2017  http   iccv2017 thecvf com     div align  center      img src  https   github com facebookresearch clevr iep blob master img system png  width  450px     div   If you find this code useful in your research then please cite       inproceedings johnson2017inferring    title  Inferring and Executing Programs for Visual Reasoning     author  Johnson  Justin and Hariharan  Bharath and van der Maaten  Laurens and Hoffman  Judy           and Fei Fei  Li and Zitnick  C Lawrence and Girshick  Ross     booktitle  ICCV     year  2017           Setup  All code was developed and tested on Ubuntu 16 04 with Python 3 5   You can set up a virtual environment to run the code like this      bash virtualenv  p python3  env         Create virtual environment source  env bin activate           Activate virtual environment pip install  r requirements txt    Install dependencies echo  PWD    env lib python3 5 site packages iep pth   Add this package to virtual environment   Work for a while     deactivate   Exit virtual environment        Pretrained Models You can download and unzip the pretrained models by running  bash scripts download pretrained models sh   the models will take about 1 1 GB on disk   We provide two sets of pretrained models    The models in  models CLEVR  were trained on the CLEVR dataset  these were used to make Table 1 in the paper    The models in  models CLEVR Humans  were first trained on CLEVR and then finetuned on the CLEVR Humans dataset     these models were used to make Table 3 in the paper     Running models  You can easily run any of the pretrained models on new images and questions  As an example  we will run several models on the following example image from the CLEVR validation set    div align  center     img src  https   github com facebookresearch clevr iep blob master img CLEVR val 000013 png     div   After downloading the pretrained models  you can use the pretrained model to answer questions about this image with the following command      bash python scripts run model py       program generator models CLEVR program generator 18k pt       execution engine models CLEVR execution engine 18k pt       image img CLEVR val 000013 png       question  Does the small sphere have the same color as the cube left of the gray cube        This will print the predicted answer  as well as the program that the model used to produce the answer  For the example command we get the output      bash Question   Does the small sphere have the same color as the cube left of the gray cube   Predicted answer   yes  Predicted program  equal color query color unique filter shape sphere  filter size small  scene query color unique filter shape cube  relate left  unique filter shape cube  filter color gray  scene        Training  The procedure for training your own models  is described here  TRAINING md   ","software":"md","book":"spacegoing","full_link":"https://github.com/spacegoing/iep_nmn"},{"name":"kirk86/comp_caffe","artist":"caff, learn, model, framework, vision","id":264,"playcount":2102,"description":"kirk86/comp_caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kirk86","full_link":"https://github.com/kirk86/comp_caffe"},{"name":"caomw/caffe_parallel_win","artist":"caff, model, learn, bvlc, refer","id":265,"playcount":2122,"description":"caomw/caffe_parallel_win caff, model, learn, bvlc, refer This is a port of Caffe parallel on Windows  Last Update  9 29 2015   Dependencies               CUDA 7 0 for windows   third party  https   github com jh yu jiah third party   Visual Studio 2013     Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"caomw","full_link":"https://github.com/caomw/caffe_parallel_win"},{"name":"cmsl3456/caffe","artist":"caff, learn, model, framework, vision","id":266,"playcount":2102,"description":"cmsl3456/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cmsl3456","full_link":"https://github.com/cmsl3456/caffe"},{"name":"kt2501/dev","artist":"caff, learn, model, framework, vision","id":267,"playcount":2102,"description":"kt2501/dev caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kt2501","full_link":"https://github.com/kt2501/dev"},{"name":"AliGhadirzadeh/Caffe","artist":"caff, learn, model, framework, vision","id":268,"playcount":2102,"description":"AliGhadirzadeh/Caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"AliGhadirzadeh","full_link":"https://github.com/AliGhadirzadeh/Caffe"},{"name":"yihui-he/nvcaffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":269,"playcount":2185,"description":"yihui-he/nvcaffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v6        Automatic selection of the best cuDNN convolution algorithm        Integration with v1 3 4 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yihui-he","full_link":"https://github.com/yihui-he/nvcaffe"},{"name":"DLlearn/dl","artist":"caff, model, learn, bvlc, refer","id":270,"playcount":1924,"description":"DLlearn/dl caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"DLlearn","full_link":"https://github.com/DLlearn/dl"},{"name":"ravisankaradepu/symmetryinvariant","artist":"caff, learn, model, framework, vision","id":271,"playcount":2102,"description":"ravisankaradepu/symmetryinvariant caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ravisankaradepu","full_link":"https://github.com/ravisankaradepu/symmetryinvariant"},{"name":"coldrainyht/caffe_cvpr17","artist":"caff, learn, model, framework, vision","id":272,"playcount":2102,"description":"coldrainyht/caffe_cvpr17 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"coldrainyht","full_link":"https://github.com/coldrainyht/caffe_cvpr17"},{"name":"coldrainyht/ICME2017","artist":"caff, learn, model, framework, vision","id":273,"playcount":2102,"description":"coldrainyht/ICME2017 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"coldrainyht","full_link":"https://github.com/coldrainyht/ICME2017"},{"name":"geshiming/caffe-yolo","artist":"caff, learn, model, framework, vision","id":274,"playcount":2102,"description":"geshiming/caffe-yolo caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"geshiming","full_link":"https://github.com/geshiming/caffe-yolo"},{"name":"rickyHong/SSD-clone","artist":"caff, learn, model, framework, vision","id":275,"playcount":2102,"description":"rickyHong/SSD-clone caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/SSD-clone"},{"name":"xelalin/Caffe_AlexNet","artist":"caff, learn, model, framework, vision","id":276,"playcount":2102,"description":"xelalin/Caffe_AlexNet caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xelalin","full_link":"https://github.com/xelalin/Caffe_AlexNet"},{"name":"binlidaily/caffe-mine","artist":"caff, learn, model, framework, vision","id":277,"playcount":2102,"description":"binlidaily/caffe-mine caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"binlidaily","full_link":"https://github.com/binlidaily/caffe-mine"},{"name":"pierre-ecarlat/food_detection","artist":"caff, learn, model, framework, vision","id":278,"playcount":2102,"description":"pierre-ecarlat/food_detection caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pierre-ecarlat","full_link":"https://github.com/pierre-ecarlat/food_detection"},{"name":"xn8812/caffe","artist":"caff, model, learn, bvlc, refer","id":279,"playcount":1924,"description":"xn8812/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xn8812","full_link":"https://github.com/xn8812/caffe"},{"name":"yahoo/caffe","artist":"caff, learn, model, framework, vision","id":280,"playcount":2102,"description":"yahoo/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yahoo","full_link":"https://github.com/yahoo/caffe"},{"name":"huzi96/caffe-android-distro","artist":"caff, learn, model, framework, vision","id":281,"playcount":2102,"description":"huzi96/caffe-android-distro caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"huzi96","full_link":"https://github.com/huzi96/caffe-android-distro"},{"name":"DiligentPanda/MyCaffe","artist":"caff, learn, model, framework, vision","id":282,"playcount":2148,"description":"DiligentPanda/MyCaffe caff, learn, model, framework, vision   MyCaffe Learn and modify Caffe codes here     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"DiligentPanda","full_link":"https://github.com/DiligentPanda/MyCaffe"},{"name":"HaoshengZou/caffe_test","artist":"caff, model, learn, bvlc, refer","id":283,"playcount":1924,"description":"HaoshengZou/caffe_test caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"HaoshengZou","full_link":"https://github.com/HaoshengZou/caffe_test"},{"name":"caoyue10/icml-caffe","artist":"caff, model, learn, bvlc, refer","id":284,"playcount":1924,"description":"caoyue10/icml-caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"caoyue10","full_link":"https://github.com/caoyue10/icml-caffe"},{"name":"itortoise/mycaffe","artist":"caff, model, learn, bvlc, refer","id":285,"playcount":1924,"description":"itortoise/mycaffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"itortoise","full_link":"https://github.com/itortoise/mycaffe"},{"name":"feiranwang/caffe","artist":"caff, model, learn, bvlc, refer","id":286,"playcount":1924,"description":"feiranwang/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"feiranwang","full_link":"https://github.com/feiranwang/caffe"},{"name":"aaron-xichen/caffe","artist":"caff, learn, model, framework, vision","id":287,"playcount":2102,"description":"aaron-xichen/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"aaron-xichen","full_link":"https://github.com/aaron-xichen/caffe"},{"name":"yulequan/3D-Caffe-old","artist":"caff, learn, model, framework, vision","id":288,"playcount":2102,"description":"yulequan/3D-Caffe-old caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yulequan","full_link":"https://github.com/yulequan/3D-Caffe-old"},{"name":"jamescharters/caffe-nv","artist":"caff, model, learn, bvlc, refer","id":289,"playcount":1925,"description":"jamescharters/caffe-nv caff, model, learn, bvlc, refer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jamescharters","full_link":"https://github.com/jamescharters/caffe-nv"},{"name":"rohitgirdhar-cmu-experimental/caffe-3dobjdet","artist":"caff, model, learn, bvlc, refer","id":290,"playcount":1924,"description":"rohitgirdhar-cmu-experimental/caffe-3dobjdet caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rohitgirdhar-cmu-experimental","full_link":"https://github.com/rohitgirdhar-cmu-experimental/caffe-3dobjdet"},{"name":"xiaolonw/fast-rcnn-backup","artist":"caff, shell, model, make, requir","id":291,"playcount":3798,"description":"xiaolonw/fast-rcnn-backup caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation   fast rcnn backup ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/fast-rcnn-backup"},{"name":"godisboy/caffe_InfoGAN","artist":"caff, learn, model, framework, vision","id":292,"playcount":2244,"description":"godisboy/caffe_InfoGAN caff, learn, model, framework, vision         HEAD   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                info GAN           This is a implement of Info GAN on caffe framework           071620ca46f0cbaedac75150559e08f187ab5e6d ","software":"md","book":"godisboy","full_link":"https://github.com/godisboy/caffe_InfoGAN"},{"name":"rickyHong/CaffeDLFramework","artist":"caff, model, learn, bvlc, refer","id":293,"playcount":1924,"description":"rickyHong/CaffeDLFramework caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/CaffeDLFramework"},{"name":"yifanw90/caffe-blvc","artist":"caff, learn, model, framework, vision","id":294,"playcount":2102,"description":"yifanw90/caffe-blvc caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yifanw90","full_link":"https://github.com/yifanw90/caffe-blvc"},{"name":"honghuis/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":295,"playcount":2102,"description":"honghuis/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"honghuis","full_link":"https://github.com/honghuis/caffe-fast-rcnn"},{"name":"yangshun2005/caffeFrame","artist":"caff, learn, model, framework, vision","id":296,"playcount":2102,"description":"yangshun2005/caffeFrame caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yangshun2005","full_link":"https://github.com/yangshun2005/caffeFrame"},{"name":"leequan/caffe-fast","artist":"caff, learn, model, framework, vision","id":297,"playcount":2102,"description":"leequan/caffe-fast caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"leequan","full_link":"https://github.com/leequan/caffe-fast"},{"name":"laceyg/fpgacaffe","artist":"caff, learn, model, framework, vision","id":298,"playcount":2207,"description":"laceyg/fpgacaffe caff, learn, model, framework, vision  Caffeinated FPGAs  FPGA Framework For Convolutional Neural Networks  https   arxiv org abs 1609 09671     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"laceyg","full_link":"https://github.com/laceyg/fpgacaffe"},{"name":"herman-cb/caffe","artist":"caff, learn, model, communiti, releas","id":299,"playcount":2130,"description":"herman-cb/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"herman-cb","full_link":"https://github.com/herman-cb/caffe"},{"name":"pva701/caffe","artist":"caff, learn, model, framework, vision","id":300,"playcount":2102,"description":"pva701/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pva701","full_link":"https://github.com/pva701/caffe"},{"name":"herman-cb/caffe","artist":"caff, learn, model, communiti, releas","id":301,"playcount":2130,"description":"herman-cb/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"herman-cb","full_link":"https://github.com/herman-cb/caffe"},{"name":"pva701/caffe","artist":"caff, learn, model, framework, vision","id":302,"playcount":2102,"description":"pva701/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pva701","full_link":"https://github.com/pva701/caffe"},{"name":"rickyHong/CaffeDLFramework","artist":"caff, model, learn, bvlc, refer","id":303,"playcount":1924,"description":"rickyHong/CaffeDLFramework caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/CaffeDLFramework"},{"name":"yifanw90/caffe-blvc","artist":"caff, learn, model, framework, vision","id":304,"playcount":2102,"description":"yifanw90/caffe-blvc caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yifanw90","full_link":"https://github.com/yifanw90/caffe-blvc"},{"name":"honghuis/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":305,"playcount":2102,"description":"honghuis/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"honghuis","full_link":"https://github.com/honghuis/caffe-fast-rcnn"},{"name":"deepbasu007/caffe-fast","artist":"caff, learn, model, framework, vision","id":306,"playcount":2102,"description":"deepbasu007/caffe-fast caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"deepbasu007","full_link":"https://github.com/deepbasu007/caffe-fast"},{"name":"yootaesang/caffe","artist":"caff, learn, model, framework, vision","id":307,"playcount":2102,"description":"yootaesang/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yootaesang","full_link":"https://github.com/yootaesang/caffe"},{"name":"newbee2012/myCaffe","artist":"caff, learn, model, framework, vision","id":308,"playcount":2102,"description":"newbee2012/myCaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"newbee2012","full_link":"https://github.com/newbee2012/myCaffe"},{"name":"pmineiro/mycaffe","artist":"caff, learn, model, framework, vision","id":309,"playcount":2102,"description":"pmineiro/mycaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pmineiro","full_link":"https://github.com/pmineiro/mycaffe"},{"name":"939706171/HCPM-Caffe-","artist":"caff, learn, model, framework, vision","id":310,"playcount":2102,"description":"939706171/HCPM-Caffe- caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"939706171","full_link":"https://github.com/939706171/HCPM-Caffe-"},{"name":"123chengbo/memory-useless-caffe","artist":"caff, learn, model, framework, vision","id":311,"playcount":2102,"description":"123chengbo/memory-useless-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"123chengbo","full_link":"https://github.com/123chengbo/memory-useless-caffe"},{"name":"pujoseno/Counting-and-Object-Detection-keras-frcnn","artist":"rcnn, train, detect, network, faster","id":312,"playcount":2200,"description":"pujoseno/Counting-and-Object-Detection-keras-frcnn rcnn, train, detect, network, faster   Counting and Object Detection keras frcnn How to practice Counting and Object Detection keras frcnn    Case In this case we practice about Counting and Objecct detection using keras and frcnn  In frcnn model we have class are background  aeroplane  bicycle  bird  boat  bottle  bus  car  cat  chair  cow  diningtable  dog  horse  motorbike  person  pottedplant  sheep  sofa  train  tvmonitor   Region based Deep Convolutional Networks are exciting tools  enabling software developers to solve many interesting problems  The presented solution just scratches the surface  By fine tuning the network for the particular data set or using transfer learning from other trained models  we can achieve high accuracy and speed while detecting objects       Architechture   Faster R CNN        Faster R CNN  https   raw githubusercontent com sunshineatnoon Paper Collection master images faster rcnn png     Region Proposal Network        RPN  https   raw githubusercontent com sunshineatnoon Paper Collection master images RPN png        Structure   Counting and Object Detection     keras frcnn       config pickle       config py       data augment py       data generator py       FixedBatchNormalization py       losses py       pascal voc parser py       resnet py       roi helpers py       RoiPoolingConv py       simple parser py      outputs     pre trained model       pretrainedmodel hdf5     Videos       test mp4     test frcnn py     train frcnn py        Dependencies     Keras     Imutils     cv2     Numpy        Pretrained model   Download  here  https   drive google com file d 1xNjHc2bLwRc HkqwtIwIKApP50r0 vOw view         How to Run     Add input dir and ouput dir directory in test frcnn py          parser add option   d      input dir   dest  input dir   default    F  counting   outputs            parser add option   u      output dir   dest  output dir   default    F  counting   outputs       run          python test frcnn py   input file videos test mp4   output file outputs output4 mp4   frame rate 25         Reference   Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks   arXiv 1506 01497   ","software":"md","book":"pujoseno","full_link":"https://github.com/pujoseno/Counting-and-Object-Detection-keras-frcnn"},{"name":"wk910930/self-paper-reading","artist":"deep, learn, network, convolut, imag","id":313,"playcount":10024,"description":"wk910930/self-paper-reading deep, learn, network, convolut, imag   Self Paper Reading  A curated list of deep learning resources for computer vision  inspired by  awesome computer vision  https   github com jbhuang0604 awesome computer vision  and  awesome deep vision  https   github com kjw0612 awesome deep vision   Many thanks to  Jiwon Kim  https   github com kjw0612   great work      Contributing  Please feel free to  pull requests  https   github com wk910930 self paper reading pulls  to add papers      Table of Contents     Papers   papers       ImageNet Classification   imagenet classification       Object Detection   object detection       Object Tracking   object tracking       Semantic Segmentation   semantic segmentation       Object Recognition   object recognition       Understanding CNN   understanding cnn       Image Generation   image generation       Reinforcement Learning   reinforcement learning       Visual Question Answering  VQA    visual question answering       Other Source   other source     Books   books     Tutorials   tutorials     Blogs   blogs      Papers      ImageNet Classification    Matching Networks for One Shot Learning   Paper   https   arxiv org abs 1606 04080      Oriol Vinyals  Charles Blundell  Timothy Lillicrap  Koray Kavukcuoglu  Daan Wierstra   Active Convolution  Learning the Shape of Convolution for Image Classification   Paper   https   arxiv org abs 1703 09076      Yunho Jeon  Junmo Kim   CVPR   2017   Aggregated Residual Transformations for Deep Neural Networks   Paper   https   arxiv org abs 1611 05431    Code   https   github com facebookresearch ResNeXt       Saining Xie  http   vcl ucsd edu  sxie     Ross Girshick  http   www rossgirshick info     Piotr Doll r  https   pdollar github io index html   Zhuowen Tu   Kaiming He  http   kaiminghe com     Convolutional Neural Fabrics   Paper   https   arxiv org abs 1606 02492    Code   https   github com shreyassaxena convolutional neural fabrics      Shreyas Saxena  Jakob Verbeek   Locally Scale Invariant Convolutional Neural Networks   Paper   https   arxiv org abs 1412 5104    Code   https   github com akanazawa si convnet      Angjoo Kanazawa  Abhishek Sharma  David Jacobs       Object Detection    Mask R CNN   Paper   https   arxiv org abs 1703 06870       Kaiming He  http   kaiminghe com     Georgia Gkioxari  http   people eecs berkeley edu  gkioxari     Piotr Doll r  https   pdollar github io index html    Ross Girshick  http   www rossgirshick info    Mask R CNN   CVPR   2017   Deformable Convolutional Networks   Paper   https   arxiv org abs 1703 06211    Code   https   github com msracver Deformable ConvNets       Jifeng Dai  http   www jifengdai org    Haozhi Qi  Yuwen Xiong  Yi Li  Guodong Zhang  Han Hu  Yichen Wei  Arxiv tech report  2017   A Fast RCNN  Hard positive generation via adversary for object detection   Paper   http   abhinavsh info papers pdfs adversarial object detection pdf    Code   https   github com xiaolonw adversarial frcnn       Xiaolong Wang  http   www cs cmu edu  xiaolonw    Abhinav Shrivastava  Abhinav Gupta   CVPR   2017   Spatial Memory for Context Reasoning in Object Detection   Paper   https   arxiv org abs 1704 04224       Xinlei Chen  https   www cs cmu edu  xinleic index html    Abhinav Gupta  http   www cs cmu edu  abhinavg     Learning Features by Watching Objects Move   Paper   https   arxiv org abs 1612 06370    Code   https   github com pathak22 unsupervised video       Deepak Pathak  https   people eecs berkeley edu  pathak     Ross Girshick  http   www rossgirshick info     Piotr Doll r  https   pdollar github io index html   Trevor Darrell  Bharath Hariharan   Improving Object Detection With One Line of Code   Paper   https   arxiv org abs 1704 04503    Code   https   github com bharatsingh430 soft nms      Navaneeth Bodla  Bharat Singh  Rama Chellappa  Larry S  Davis      Object Tracking    Deep Feature Flow for Video Recognition   Paper   https   arxiv org abs 1611 07715    Code   https   github com msracver Deep Feature Flow      Xizhou Zhu  Yuwen Xiong   Jifeng Dai  http   www jifengdai org    Lu Yuan  Yichen Wei      Semantic Segmentation    Fully Convolutional Instance aware Semantic Segmentation   Paper   https   arxiv org abs 1611 07709    Code   https   github com daijifeng001 TA FCN      Yi Li  Haozhi Qi   Jifeng Dai  http   www jifengdai org    Xiangyang Ji  Yichen Wei   CVPR   2017  Spotlight    PixelNet  Representation of the pixels  by the pixels  and for the pixels   Paper   https   arxiv org abs 1702 06506    Code   https   github com aayushbansal PixelNet       Aayush Bansal  http   www cs cmu edu  aayushb     Xinlei Chen  http   www cs cmu edu  xinleic    Bryan Russell  Abhinav Gupta  Deva Ramanan   Semantic Image Segmentation with Task Specific Edge Detection Using CNNs and a Discriminatively Trained Domain Transform   Paper   https   arxiv org abs 1511 03328       Liang Chieh Chen  http   liangchiehchen com   Jonathan T  Barron  George Papandreou  Kevin Murphy  Alan L  Yuille      Object Recognition    Discovering objects and their relations from entangled scene representations   Paper   https   arxiv org abs 1702 05068      David Raposo  Adam Santoro  David Barrett  Razvan Pascanu  Timothy Lillicrap  Peter Battaglia   ICLR   2017   Learning Spatiotemporal Features with 3D Convolutional Networks   Paper   https   arxiv org abs 1412 0767    Code   https   github com facebook C3D       Du Tran  http   www cs dartmouth edu  dutran    Lubomir Bourdev  Rob Fergus  Lorenzo Torresani  Manohar Paluri      Understanding CNN    Structured Receptive Fields in CNNs   Paper   https   arxiv org abs 1605 02971       J rn Henrik Jacobsen  https   jhjacobsen github io   Jan van Gemert  Zhongyu Lou  Arnold W  M  Smeulders   CVPR   2016   Understanding image representations by measuring their equivariance and equivalence   Paper   https   arxiv org abs 1411 5908       Karel Lenc  http   www robots ox ac uk  karel    Andrea Vedaldi   CVPR   2015   Dynamic Filter Networks   Paper   https   arxiv org abs 1605 09673      Bert De Brabandere  Xu Jia  Tinne Tuytelaars  Luc Van Gool   NIPS   2016   Network Dissection  Quantifying Interpretability of Deep Visual Representations   Paper   https   arxiv org abs 1704 05796      David Bau   Bolei Zhou  http   people csail mit edu bzhou     Aditya Khosla  http   people csail mit edu khosla    Aude Oliva  Antonio Torralba   CVPR   2017  Oral    On Large Batch Training for Deep Learning  Generalization Gap and Sharp Minima   Paper   https   arxiv org abs 1609 04836    Code   https   github com keskarnitish large batch training       Nitish Shirish Keskar  http   users iems northwestern edu  nitish     Dheevatsa Mudigere  https   sites google com site dheevatsa home   Jorge Nocedal  Mikhail Smelyanskiy  Ping Tak Peter Tang   ICLR   2017   Auto Encoding Variational Bayes   Paper   https   arxiv org abs 1312 6114       Diederik P Kingma  http   dpkingma com   Max Welling   Intriguing properties of neural networks   Paper   https   arxiv org abs 1312 6199      Christian Szegedy  Wojciech Zaremba  Ilya Sutskever  Joan Bruna  Dumitru Erhan   Ian Goodfellow  http   www iangoodfellow com    Rob Fergus   Convolutional Sequence to Sequence Learning   Paper   https   arxiv org abs 1705 03122      Jonas Gehring  Michael Auli  David Grangier  Denis Yarats  Yann N  Dauphin       Image Generation    Unpaired Image to Image Translation using Cycle Consistent Adversarial Networks   Paper   https   arxiv org abs 1703 10593    Code   https   github com junyanz CycleGAN       Jun Yan Zhu  http   people eecs berkeley edu  junyanz    Taesung Park  Phillip Isola   Alexei A  Efros  https   people eecs berkeley edu  efros     Adversarial Feature Learning   Paper   https   arxiv org abs 1605 09782    Code   https   github com jeffdonahue bigan       Jeff Donahue  http   jeffdonahue com   Philipp Kr henb hl  Trevor Darrell      Reinforcement Learning    Playing Atari with Deep Reinforcement Learning   Paper   https   arxiv org abs 1312 5602       Volodymyr Mnih  https   www cs toronto edu  vmnih    Koray Kavukcuoglu  David Silver  Alex Graves  Ioannis Antonoglou  Daan Wierstra  Martin Riedmiller      Visual Question Answering    Inferring and Executing Programs for Visual Reasoning   Paper   https   arxiv org abs 1705 03633    Code   https   github com facebookresearch clevr iep      Justin Johnson  Bharath Hariharan  Laurens van der Maaten  Judy Hoffman   Li Fei Fei  http   vision stanford edu feifeili     C  Lawrence Zitnick  http   larryzitnick org     Ross Girshick  http   www rossgirshick info        Other Source     Newly published papers    6 months  which are worth reading  https   github com terryum awesome deep learning papers new papers       terryum  https   github com terryum     Recent Submissions  Computer Vision and Pattern Recognition  https   arxiv org list cs CV recent       arXiv org  https   arxiv org      DeepMind  https   deepmind com research publications       DeepMind s publications     Books    Free Online Books      Deep Learning  http   www deeplearningbook org  by  Ian Goodfellow  http   www iangoodfellow com    Yoshua Bengio  and Aaron Courville      Neural Networks and Deep Learning  http   neuralnetworksanddeeplearning com   by Michael Nielsen      Deep Natural Language Processing  https   github com oxford cs deepnlp 2017 lectures  by Hilary Term 2017 at the University of Oxford     Tutorials     UFDL  http   deeplearning stanford edu wiki index php UFLDL Tutorial   Unsupervised Feature Learning and Deep Learning    Distill  http   distill pub   a modern medium for presenting research    GAN  https   arxiv org abs 1701 00160   Generative Adversarial Networks   NIPS  2016 Tutorial    Edward  http   edwardlib org tutorials    Edward provides a testbed for rapid experimentation and research with probabilistic models     Blogs     Andrej Karpathy s blog  http   karpathy github io     Colah s blog  http   colah github io     WILDML  http   www wildml com     Google Research Blog  https   research googleblog com  ","software":"md","book":"wk910930","full_link":"https://github.com/wk910930/self-paper-reading"},{"name":"DuHao10086/skin-caffe","artist":"caff, learn, model, framework, vision","id":314,"playcount":2102,"description":"DuHao10086/skin-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"DuHao10086","full_link":"https://github.com/DuHao10086/skin-caffe"},{"name":"vohoaiviet/R-CNN-Object-detection","artist":"python, caff, box, detect, object","id":315,"playcount":2155,"description":"vohoaiviet/R-CNN-Object-detection python, caff, box, detect, object   R CNN Object detection Python caffe simplified implementation of the R CNN object detection method    I have taken as a starting point the caffe ipython notebook available at http   nbviewer ipython org github BVLC caffe blob master examples detection ipynb    Thus  for getting the model and all the other files I recommend to take a look there   The tutorial requires the use of matlab code for calculating selective search bounding boxes  This make it hard to use and slow    Thus  I have implemented bounding boxes proposal with a pythonized BING that I have implemented in another repository     I have also changed the interaction with the script so that the result is a nicer demo  At the end of the execution  you get an immediate visual response of the results of the classifier on the selected image   Objects detection takes approximately 15 seconds for image on an Intel i7 4930K processor and an Nvidia Titan Black GPU   Dependencies     Python   Caffe   numpy   opencv   scikit image   BING Objectness  available at https   github com alessandroferrari BING Objectness    For explaination on the usage     Move to the repository folder on your command line    type  cd source    type  python detect py  h  for getting complete synopsys about the program   Example of usage  python detect py   crop mode bing    pretrained model  path to caffe models bvlc reference rcnn ilsvrc13 bvlc reference rcnn ilsvrc13 caffemodel    model def  path to caffe models bvlc reference rcnn ilsvrc13 deploy prototxt    mean file  path to caffe python caffe imagenet ilsvrc 2012 mean npy   gpu    raw scale 255   weights 1st stage bing  path to BING Objectness doc weights txt    sizes idx bing  path to BING Objectness doc sizes txt    weights 2nd stage bing  path to BING Objectness doc 2nd stage weights json    num bbs final 2000   detection threshold 0 1  path to pictures image jpg   path to results output jpg  path to caffe data ilsvrc12 det synset words txt  Acknowledgments  Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik and to the Caffe folks   Authors  Alessandro Ferrari   alessandroferrari87 gmail com  Licensing  gpl 3 0  Enjoy ","software":"md","book":"vohoaiviet","full_link":"https://github.com/vohoaiviet/R-CNN-Object-detection"},{"name":"chenguanfu511/caffeLabUsing","artist":"caff, model, arxiv, year, fast","id":316,"playcount":1944,"description":"chenguanfu511/caffeLabUsing caff, model, arxiv, year, fast   Caffe    Thanks to the caffe contributors I have site the author of the origina version in the last  This is my version using and rechange on their basic version code for my reaearch       Usage    I use this the caffe for now is just useing the imagenet network  So my work is to using some auto complete scripts to produce my own module  There are total three directories which I am using        data  MODULE  example  MODULE  module  MODULE  python caffe  MODULE       and its subfiles are all named with the  MODULE for different modules  Do like this can quickly deploy a module which is using the AlexNet network to train your module       Still  Contributes to create our own network template and also use this quick deploy to produce our own different modules         Project       FetchMe    The fethme project is my first project using CNN   The aid of the project is to train a model to classify the cats and dogs  In order to compare with the paper CatsAndDogs I am using the same class number with the paper including 37 classes  especially  12 Cats  and  25 Dogs   The main reason using caffe is for implementing the models which alreay trained in PC to simply upload the  Android             Contact  Welcome to start playing CNN games with me   Email   chenguanfu511 gmail com  chenguanfu511 gmail com        License and Citation    Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE    The BVLC reference models are released for unrestricted use     Please cite Caffe in your publications if it helps your research          article jia2014caffe         Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor          Journal    arXiv preprint arXiv 1408 5093          Title    Caffe  Convolutional Architecture for Fast Feature Embedding          Year    2014        ","software":"md","book":"chenguanfu511","full_link":"https://github.com/chenguanfu511/caffeLabUsing"},{"name":"xhhong/my_caffe","artist":"caff, model, learn, bvlc, refer","id":317,"playcount":1924,"description":"xhhong/my_caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xhhong","full_link":"https://github.com/xhhong/my_caffe"},{"name":"Forwil/caffe","artist":"caff, learn, model, communiti, releas","id":318,"playcount":2130,"description":"Forwil/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Forwil","full_link":"https://github.com/Forwil/caffe"},{"name":"feihuzhang/mycaffe","artist":"caff, learn, model, framework, vision","id":319,"playcount":2102,"description":"feihuzhang/mycaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"feihuzhang","full_link":"https://github.com/feihuzhang/mycaffe"},{"name":"kk12333/SSD","artist":"caff, learn, model, framework, vision","id":320,"playcount":2102,"description":"kk12333/SSD caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kk12333","full_link":"https://github.com/kk12333/SSD"},{"name":"caitouwh/caffe_lstm","artist":"caff, learn, model, framework, vision","id":321,"playcount":2102,"description":"caitouwh/caffe_lstm caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"caitouwh","full_link":"https://github.com/caitouwh/caffe_lstm"},{"name":"ysh329/caffe","artist":"caff, learn, model, framework, vision","id":322,"playcount":2102,"description":"ysh329/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ysh329","full_link":"https://github.com/ysh329/caffe"},{"name":"stoneyang-caffes/caffe_DNS","artist":"caff, model, learn, bvlc, refer","id":323,"playcount":1924,"description":"stoneyang-caffes/caffe_DNS caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"stoneyang-caffes","full_link":"https://github.com/stoneyang-caffes/caffe_DNS"},{"name":"ErlangZ/Caffe","artist":"caff, learn, model, framework, vision","id":324,"playcount":2102,"description":"ErlangZ/Caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ErlangZ","full_link":"https://github.com/ErlangZ/Caffe"},{"name":"Aveirof7/diff-cas-res101","artist":"caff, learn, model, framework, vision","id":325,"playcount":2102,"description":"Aveirof7/diff-cas-res101 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Aveirof7","full_link":"https://github.com/Aveirof7/diff-cas-res101"},{"name":"1157354/caffecode","artist":"caff, model, learn, bvlc, refer","id":326,"playcount":1924,"description":"1157354/caffecode caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"1157354","full_link":"https://github.com/1157354/caffecode"},{"name":"daijifeng001/caffe-mnc","artist":"caff, learn, model, framework, vision","id":327,"playcount":2102,"description":"daijifeng001/caffe-mnc caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"daijifeng001","full_link":"https://github.com/daijifeng001/caffe-mnc"},{"name":"fyu/caffe3d","artist":"caff, learn, model, framework, vision","id":328,"playcount":2102,"description":"fyu/caffe3d caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"fyu","full_link":"https://github.com/fyu/caffe3d"},{"name":"taokong/caffe-ron","artist":"caff, learn, model, framework, vision","id":329,"playcount":2102,"description":"taokong/caffe-ron caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"taokong","full_link":"https://github.com/taokong/caffe-ron"},{"name":"pathak22/unsupervised-video","artist":"model, imag, train, caff, download","id":330,"playcount":3649,"description":"pathak22/unsupervised-video model, imag, train, caff, download    Learning Features by Watching Objects Move    In CVPR 2017    Project Website   http   cs berkeley edu  pathak unsupervised video      Deepak Pathak  https   people eecs berkeley edu  pathak     Ross Girshick  http   www rossgirshick info     Piotr Doll aacute r  https   pdollar github io     Trevor Darrell  https   people eecs berkeley edu  trevor     Bharath Hariharan  http   home bharathh info   br   University of California  Berkeley br   Facebook AI Research  FAIR  br     img src  images overview jpg  width  550    This is the code for our  CVPR 2017 paper on Unsupervised Learning using unlabeled videos  http   cs berkeley edu  pathak unsupervised video    This repository contains models trained by the unsupervised motion grouping algorithm both in Caffe and Torch  If you find this work useful in your research  please cite        inproceedings pathakCVPR17learning          Author    Pathak  Deepak and Girshick  Ross and Doll   a r                    Piotr and Darrell  Trevor and Hariharan  Bharath           Title    Learning Features by Watching Objects Move           Booktitle    Computer Vision and Pattern Recognition   CVPR             Year    2017             1  Fetching Models for Unsupervised Transfer The models below only contains the layer that are used for unsupervised transfer learning  For the full model that contains motion segmentation  see next section   1  Clone the repository      Shell   git clone https   github com pathak22 unsupervised video git        2  Fetch caffe models      Shell   cd unsupervised video    bash   models download caffe models sh     This will populate the    models   folder with trained models          The models were initially trained in Torch and then converted to caffe  Hence  please include pycaffe based  image transform layer py  in your folder  It converts the scale and mean of the input image as needed   3  Fetch torch models      Shell   cd unsupervised video    bash   models download torch models sh     This will populate the    models   folder with trained models             2  Fetching Motion Segmentation models Follow the instructions below to download full motion segmentation model trained on the automatically selected 205K videos from YFCC100m  I trained it in Torch  but you can train your own model from the full data  available here  https   people eecs berkeley edu  pathak unsupervised video index html data  in any deep learning package using the training details from paper     Shell cd unsupervised video  bash   models download torch motion model sh   This will populate the    models   folder with trained model   cd motionseg  th load motionmodel lua  input    models motionSegmenter fullModel t7          3  Additional Software Packages  We are releasing software packages which were developed in the project  but could be generally useful for computer vision research  If you find them useful  please consider citing our work  These include    a   a href  https   github com pathak22 videoseg   b uNLC  github   b   a   Implementation of unsupervised bottom up video segmentation algorithm which is unsupervised adaptation of NLC algorithm by Faktor and Irani  BMVC 2014  For additional details  see section 5 1 in the  a href  http   cs berkeley edu  pathak unsupervised video   paper  a   br   br    b   a href  https   github com pathak22 pyflow   b PyFlow  github   b   a   This is python wrapper around Ce Liu s  a href  http   people csail mit edu celiu OpticalFlow   target   blank  C   implementation  a  of Coarse2Fine Optical Flow  This is used inside uNLC implementation  and also generally useful as an independent package  ","software":"md","book":"pathak22","full_link":"https://github.com/pathak22/unsupervised-video"},{"name":"CCChenfei/pose_estimation","artist":"caff, learn, model, framework, vision","id":331,"playcount":2102,"description":"CCChenfei/pose_estimation caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CCChenfei","full_link":"https://github.com/CCChenfei/pose_estimation"},{"name":"dengdan/ssd-caffe","artist":"caff, learn, model, framework, vision","id":332,"playcount":2102,"description":"dengdan/ssd-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dengdan","full_link":"https://github.com/dengdan/ssd-caffe"},{"name":"Shikhar8990/CGO_Project","artist":"caff, learn, model, communiti, releas","id":333,"playcount":2130,"description":"Shikhar8990/CGO_Project caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Shikhar8990","full_link":"https://github.com/Shikhar8990/CGO_Project"},{"name":"caomw/CaffebasedOpenCVproject","artist":"caff, model, learn, bvlc, refer","id":334,"playcount":1924,"description":"caomw/CaffebasedOpenCVproject caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"caomw","full_link":"https://github.com/caomw/CaffebasedOpenCVproject"},{"name":"rendezvoush/caffe","artist":"caff, learn, model, framework, vision","id":335,"playcount":2102,"description":"rendezvoush/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rendezvoush","full_link":"https://github.com/rendezvoush/caffe"},{"name":"wanglijun1989/caffe-cvpr17","artist":"caff, learn, model, framework, vision","id":336,"playcount":2102,"description":"wanglijun1989/caffe-cvpr17 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wanglijun1989","full_link":"https://github.com/wanglijun1989/caffe-cvpr17"},{"name":"mathrho/caffe_recurrent","artist":"caff, model, learn, bvlc, refer","id":337,"playcount":1924,"description":"mathrho/caffe_recurrent caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mathrho","full_link":"https://github.com/mathrho/caffe_recurrent"},{"name":"algred/caffe_sgm","artist":"caff, model, learn, bvlc, refer","id":338,"playcount":1924,"description":"algred/caffe_sgm caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"algred","full_link":"https://github.com/algred/caffe_sgm"},{"name":"adihayat/caffe_DSR_Solver","artist":"caff, learn, model, communiti, releas","id":339,"playcount":2130,"description":"adihayat/caffe_DSR_Solver caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"adihayat","full_link":"https://github.com/adihayat/caffe_DSR_Solver"},{"name":"xmyqsh/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":340,"playcount":2192,"description":"xmyqsh/caffe-fast-rcnn caff, learn, model, framework, vision  fast rcnn  upcompatible  with  caffe master  for supporting the latest cuDNN 5 1 5         Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xmyqsh","full_link":"https://github.com/xmyqsh/caffe-fast-rcnn"},{"name":"riyasavla/ml601_hw9","artist":"caff, learn, model, framework, vision","id":341,"playcount":2102,"description":"riyasavla/ml601_hw9 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"riyasavla","full_link":"https://github.com/riyasavla/ml601_hw9"},{"name":"tomueeen93/tmkcaffe","artist":"caff, learn, model, framework, vision","id":342,"playcount":2102,"description":"tomueeen93/tmkcaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tomueeen93","full_link":"https://github.com/tomueeen93/tmkcaffe"},{"name":"lucasb-eyer/nonlocal-tf","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":343,"playcount":1897,"description":"lucasb-eyer/nonlocal-tf “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Non local Neural Networks in TensorFlow  This is a TensorFlow  no Keras  implementation of the building blocks described in  Non local Neural Networks  https   arxiv org abs 1711 07971  by Xiaolong Wang  Ross Girshick  Abhinav Gupta  and Kaiming He  It can simply be dropped into any existing model  and is compatible with TensorFlow s pre trained ResNet models     Usage  The core code for the block is located in the  nonlocal resnet utils py  file  you can just drop it into your code and use it as is  Usage is described in the heredoc comment and should be straightforward   An example of a ResNet50  dramatically simplified from TensorFlow s  official  implementation  can be found in  nonlocal resnet v1 50 nl3 py   again with usage described in the heredoc   The nice thing is that simplified implementation is compatible with the  ImageNet pre trained weights released by Google  https   github com tensorflow models tree master research slim pre trained models   So overall  to create a ResNet50 with one non local block at stage 3  and loading pre trained ImageNet weights  it s as simple as      python import nonlocal resnet v1 50 nl3 as model endpoints  body prefix   model endpoints images  is training True     BEFORE DEFINING THE OPTIMIZER  because it creates new global variables    model variables   tf get collection tf GraphKeys GLOBAL VARIABLES  body prefix     IF LOADING PRE TRAINED WEIGHTS  inside your with Session    block  in the first iteration    saver   tf train Saver model variables  saver restore sess  args initial checkpoint     Do something with  endpoints  model output         Note that the last endpoint is the result of the global average pooling operation  so this code does not include the final 1000 classes classification layer  If you are not doing ImageNet classification  in which case  why use this     you typically don t want that one anyways  ","software":"md","book":"lucasb-eyer","full_link":"https://github.com/lucasb-eyer/nonlocal-tf"},{"name":"apsvvfb/caffe_qi","artist":"caff, learn, model, framework, vision","id":344,"playcount":2102,"description":"apsvvfb/caffe_qi caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"apsvvfb","full_link":"https://github.com/apsvvfb/caffe_qi"},{"name":"runaway/studycaffe","artist":"caff, learn, model, framework, vision","id":345,"playcount":2118,"description":"runaway/studycaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014           studycaffe   ","software":"md","book":"runaway","full_link":"https://github.com/runaway/studycaffe"},{"name":"cpatrick/caffe","artist":"caff, learn, model, framework, vision","id":346,"playcount":2102,"description":"cpatrick/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cpatrick","full_link":"https://github.com/cpatrick/caffe"},{"name":"t2mhanh/caffe_convLSTM_WTA","artist":"caff, learn, model, communiti, releas","id":347,"playcount":2130,"description":"t2mhanh/caffe_convLSTM_WTA caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"t2mhanh","full_link":"https://github.com/t2mhanh/caffe_convLSTM_WTA"},{"name":"Ding-Liu/caffe-videoSR","artist":"caff, learn, model, framework, vision","id":348,"playcount":2102,"description":"Ding-Liu/caffe-videoSR caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Ding-Liu","full_link":"https://github.com/Ding-Liu/caffe-videoSR"},{"name":"daerduoCarey/mycaffe","artist":"caff, model, learn, bvlc, refer","id":349,"playcount":1924,"description":"daerduoCarey/mycaffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"daerduoCarey","full_link":"https://github.com/daerduoCarey/mycaffe"},{"name":"Z-Jetflow/jetflow-caffe","artist":"caff, learn, model, communiti, releas","id":350,"playcount":2130,"description":"Z-Jetflow/jetflow-caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Z-Jetflow","full_link":"https://github.com/Z-Jetflow/jetflow-caffe"},{"name":"yshean/caffe-gpu-custom","artist":"caff, learn, model, framework, vision","id":351,"playcount":2102,"description":"yshean/caffe-gpu-custom caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yshean","full_link":"https://github.com/yshean/caffe-gpu-custom"},{"name":"liyangliu/deepid","artist":"caff, learn, model, framework, vision","id":352,"playcount":2102,"description":"liyangliu/deepid caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"liyangliu","full_link":"https://github.com/liyangliu/deepid"},{"name":"howardhe/caffe-basic","artist":"caff, learn, model, communiti, releas","id":353,"playcount":2130,"description":"howardhe/caffe-basic caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"howardhe","full_link":"https://github.com/howardhe/caffe-basic"},{"name":"jiecaoyu/caffe_cccp","artist":"caff, model, learn, bvlc, refer","id":354,"playcount":1924,"description":"jiecaoyu/caffe_cccp caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jiecaoyu","full_link":"https://github.com/jiecaoyu/caffe_cccp"},{"name":"alpesis-fork/NVCaffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":355,"playcount":2185,"description":"alpesis-fork/NVCaffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v6        Automatic selection of the best cuDNN convolution algorithm        Integration with v1 3 4 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"alpesis-fork","full_link":"https://github.com/alpesis-fork/NVCaffe"},{"name":"weien8899/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":356,"playcount":2102,"description":"weien8899/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"weien8899","full_link":"https://github.com/weien8899/caffe-fast-rcnn"},{"name":"RickLee26/Caffe-oMPi","artist":"caff, learn, model, framework, vision","id":357,"playcount":2102,"description":"RickLee26/Caffe-oMPi caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"RickLee26","full_link":"https://github.com/RickLee26/Caffe-oMPi"},{"name":"kezbreen/symmetry-invariant-caffe","artist":"caff, learn, model, framework, vision","id":358,"playcount":2102,"description":"kezbreen/symmetry-invariant-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kezbreen","full_link":"https://github.com/kezbreen/symmetry-invariant-caffe"},{"name":"Hahnnz/caffe_vectorizedPooling","artist":"pool, learn, oper, caff, max","id":359,"playcount":2175,"description":"Hahnnz/caffe_vectorizedPooling pool, learn, oper, caff, max   Caffe vectorizedPooling  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors       What is it  At pooling step  pooling has output Max value that is biggest among activate nodes in kernel or Average value However  as domain goes  we cannot grant Max pooling or Ave pooling extract good feature to train data  So We Propose Another new way beside Max   Ave pooling  Based on previously existing Max   Average Pooling we will Make Operation Vectorizing With adding Weights       What is it good      b  Enable to extract MORE effective feature when learn it   b          For Each Kernel node  Weights vector can weight heavily if it looks important or get lighter even get 0 to make it unable to join operation if it looks not good or bad       b  It can be learned even if features we want to make it learned are weak relatively in given data   b          When we make it learned object on given image  Weight vectors can weight weakly to arounds feature we don t want to be learned  and weight strongly the feature we want    How To Use Vectorized Mode  You can use it by setting  pool  as  VEC   see below example     layer            name   pool layer           type   Pooling           bottom   convolution output           top   pool output           pooling param                    pool  VEC                  kernel size  3                  stride  2                     License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Hahnnz","full_link":"https://github.com/Hahnnz/caffe_vectorizedPooling"},{"name":"CambriconTeam/caffe","artist":"caff, learn, model, framework, vision","id":360,"playcount":2102,"description":"CambriconTeam/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CambriconTeam","full_link":"https://github.com/CambriconTeam/caffe"},{"name":"scott89/caffe","artist":"caff, model, learn, bvlc, refer","id":361,"playcount":1924,"description":"scott89/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"scott89","full_link":"https://github.com/scott89/caffe"},{"name":"anujkhare/caffe-cedn","artist":"caff, learn, model, framework, vision","id":362,"playcount":2102,"description":"anujkhare/caffe-cedn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"anujkhare","full_link":"https://github.com/anujkhare/caffe-cedn"},{"name":"iammilaoshu/caffe_wangcw","artist":"caff, learn, model, framework, vision","id":363,"playcount":2102,"description":"iammilaoshu/caffe_wangcw caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"iammilaoshu","full_link":"https://github.com/iammilaoshu/caffe_wangcw"},{"name":"kuitang/convbayes-caffe","artist":"caff, model, learn, bvlc, refer","id":364,"playcount":1924,"description":"kuitang/convbayes-caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kuitang","full_link":"https://github.com/kuitang/convbayes-caffe"},{"name":"kambstreat/caffe_IS","artist":"caff, model, learn, bvlc, refer","id":365,"playcount":1924,"description":"kambstreat/caffe_IS caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kambstreat","full_link":"https://github.com/kambstreat/caffe_IS"},{"name":"wcy405100/Graduation_Research","artist":"caff, model, learn, bvlc, refer","id":366,"playcount":1924,"description":"wcy405100/Graduation_Research caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wcy405100","full_link":"https://github.com/wcy405100/Graduation_Research"},{"name":"ramonbal/direct-intrinsics","artist":"caff, model, learn, bvlc, refer","id":367,"playcount":1924,"description":"ramonbal/direct-intrinsics caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ramonbal","full_link":"https://github.com/ramonbal/direct-intrinsics"},{"name":"henryacm/SSD","artist":"caff, learn, model, framework, vision","id":368,"playcount":2102,"description":"henryacm/SSD caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"henryacm","full_link":"https://github.com/henryacm/SSD"},{"name":"medivhgu/caffe_gu","artist":"caff, learn, model, framework, vision","id":369,"playcount":2102,"description":"medivhgu/caffe_gu caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"medivhgu","full_link":"https://github.com/medivhgu/caffe_gu"},{"name":"superxuang/caffe_3d_crf_rnn","artist":"caff, model, arxiv, year, fast","id":370,"playcount":2154,"description":"superxuang/caffe_3d_crf_rnn caff, model, arxiv, year, fast   Caffe with 3D CRF RNN This is a modified version of  Caffe  https   github com BVLC caffe  which supports the   3D Conditional Random Field Recurrent Neural Network  3D CRF RNN  architecture   as described in our paper  Automatic bladder segmentation from CT images using deep CNN and 3D fully connected CRF RNN  https   doi org 10 1007 s11548 018 1733 7   The implementation of 3D CRF RNN is extended from the  2D CRF RNN  https   github com torrvision crfasrnn     This code has been compiled and passed on  Windows 7  64 bits   using  Visual Studio 2013       How to build    Requirements     Visual Studio 2013    ITK 4 10    CUDA 8 0  and  cuDNN v5       Pre Build Steps Please make sure CUDA and cuDNN have been installed correctly on your computer   Clone the project by running      git clone https   github com superxuang caffe 3d crf rnn git      In    windows Caffe bat  set  ITK PATH  to ITK intall path  the path containing ITK  include   lib  folders        Build Run    windows Caffe bat  and build the project  caffe  in  Visual Studio 2013       License and Citation  Please cite our paper and Caffe if it is useful for your research        article Xu 2018        doi    10 1007 s11548 018 1733 7         url    https   doi org 10 1007 2Fs11548 018 1733 7         year   2018        month    mar         author    Xuanang Xu and Fugen Zhou and Bo Liu         title    Automatic bladder segmentation from CT images using deep CNN and 3D fully connected CRF RNN         journal    International Journal of Computer Assisted Radiology and Surgery         Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014       ","software":"md","book":"superxuang","full_link":"https://github.com/superxuang/caffe_3d_crf_rnn"},{"name":"wenzishou/caffe-learn","artist":"caff, learn, model, framework, vision","id":371,"playcount":2102,"description":"wenzishou/caffe-learn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wenzishou","full_link":"https://github.com/wenzishou/caffe-learn"},{"name":"daivikswarup/caffe","artist":"caff, learn, model, framework, vision","id":372,"playcount":2102,"description":"daivikswarup/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"daivikswarup","full_link":"https://github.com/daivikswarup/caffe"},{"name":"jwcom79/myproject","artist":"caff, learn, model, framework, vision","id":373,"playcount":2102,"description":"jwcom79/myproject caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jwcom79","full_link":"https://github.com/jwcom79/myproject"},{"name":"yonghenglh6/lstr","artist":"caff, model, learn, bvlc, refer","id":374,"playcount":1924,"description":"yonghenglh6/lstr caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yonghenglh6","full_link":"https://github.com/yonghenglh6/lstr"},{"name":"waelHamdan/Caffe","artist":"caff, model, learn, bvlc, refer","id":375,"playcount":1924,"description":"waelHamdan/Caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"waelHamdan","full_link":"https://github.com/waelHamdan/Caffe"},{"name":"wupeng78/weiliu89-caffe","artist":"caff, learn, model, framework, vision","id":376,"playcount":2102,"description":"wupeng78/weiliu89-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wupeng78","full_link":"https://github.com/wupeng78/weiliu89-caffe"},{"name":"le-k/caffe","artist":"caff, learn, model, framework, vision","id":377,"playcount":2102,"description":"le-k/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"le-k","full_link":"https://github.com/le-k/caffe"},{"name":"bachml/myCaffe","artist":"caff, model, learn, bvlc, refer","id":378,"playcount":2078,"description":"bachml/myCaffe caff, model, learn, bvlc, refer     README Caffe   Caffe    New layers   center loss  channel shuffle   margin inner product  large margin inner product  chunking  label specific add  normalize  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bachml","full_link":"https://github.com/bachml/myCaffe"},{"name":"xieguotian/caffe","artist":"caff, learn, model, framework, vision","id":379,"playcount":2102,"description":"xieguotian/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xieguotian","full_link":"https://github.com/xieguotian/caffe"},{"name":"rioyokotalab/caffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":380,"playcount":2185,"description":"rioyokotalab/caffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v6        Automatic selection of the best cuDNN convolution algorithm        Integration with v1 3 4 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rioyokotalab","full_link":"https://github.com/rioyokotalab/caffe"},{"name":"medivhgu/caffe_multi_label","artist":"caff, learn, model, framework, vision","id":381,"playcount":2102,"description":"medivhgu/caffe_multi_label caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"medivhgu","full_link":"https://github.com/medivhgu/caffe_multi_label"},{"name":"ZhengRui/caffe","artist":"caff, learn, model, framework, vision","id":382,"playcount":2102,"description":"ZhengRui/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ZhengRui","full_link":"https://github.com/ZhengRui/caffe"},{"name":"sodeypunk/caffe-bibsmart","artist":"caff, learn, model, framework, vision","id":383,"playcount":2102,"description":"sodeypunk/caffe-bibsmart caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"sodeypunk","full_link":"https://github.com/sodeypunk/caffe-bibsmart"},{"name":"rickyHong/SSD-R-CNN","artist":"caff, learn, model, framework, vision","id":384,"playcount":2102,"description":"rickyHong/SSD-R-CNN caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/SSD-R-CNN"},{"name":"SOLARleisu/caffe-depthwiseconvolution","artist":"caff, learn, model, communiti, releas","id":385,"playcount":2130,"description":"SOLARleisu/caffe-depthwiseconvolution caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"SOLARleisu","full_link":"https://github.com/SOLARleisu/caffe-depthwiseconvolution"},{"name":"happier9216/face-caffe","artist":"caff, model, learn, bvlc, refer","id":386,"playcount":1924,"description":"happier9216/face-caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"happier9216","full_link":"https://github.com/happier9216/face-caffe"},{"name":"zzrnuist/3D-caffe-with-deformation-layer","artist":"caff, learn, model, framework, vision","id":387,"playcount":2102,"description":"zzrnuist/3D-caffe-with-deformation-layer caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zzrnuist","full_link":"https://github.com/zzrnuist/3D-caffe-with-deformation-layer"},{"name":"antoniodourado/caffetk1","artist":"caff, model, learn, bvlc, refer","id":388,"playcount":1935,"description":"antoniodourado/caffetk1 caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          caffetk1 ","software":"md","book":"antoniodourado","full_link":"https://github.com/antoniodourado/caffetk1"},{"name":"taozhi2yaoyao/caffe","artist":"caff, learn, model, framework, vision","id":389,"playcount":2102,"description":"taozhi2yaoyao/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"taozhi2yaoyao","full_link":"https://github.com/taozhi2yaoyao/caffe"},{"name":"TongM123/caffe","artist":"caff, learn, model, framework, vision","id":390,"playcount":2102,"description":"TongM123/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"TongM123","full_link":"https://github.com/TongM123/caffe"},{"name":"L706077/caffe-center-loss","artist":"caff, learn, model, framework, vision","id":391,"playcount":2102,"description":"L706077/caffe-center-loss caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"L706077","full_link":"https://github.com/L706077/caffe-center-loss"},{"name":"rickyHong/ActionRecognition","artist":"caff, learn, model, framework, vision","id":392,"playcount":2102,"description":"rickyHong/ActionRecognition caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/ActionRecognition"},{"name":"CrazyAlan/caffe","artist":"caff, model, learn, bvlc, refer","id":393,"playcount":1924,"description":"CrazyAlan/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CrazyAlan","full_link":"https://github.com/CrazyAlan/caffe"},{"name":"xiaolonw/lisa-caffe-lstm","artist":"caff, model, learn, bvlc, refer","id":394,"playcount":2003,"description":"xiaolonw/lisa-caffe-lstm caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          lisa caffe lstm  fork from    https   github com LisaAnne lisa caffe public  ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/lisa-caffe-lstm"},{"name":"waitsam/SSD","artist":"caff, learn, model, framework, vision","id":395,"playcount":2102,"description":"waitsam/SSD caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"waitsam","full_link":"https://github.com/waitsam/SSD"},{"name":"lijiaman/caffe-spatial","artist":"caff, learn, model, framework, vision","id":396,"playcount":2102,"description":"lijiaman/caffe-spatial caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lijiaman","full_link":"https://github.com/lijiaman/caffe-spatial"},{"name":"sunshineatnoon/Paper-Collection","artist":"arxiv, network, preprint, detect, object","id":397,"playcount":17617,"description":"sunshineatnoon/Paper-Collection arxiv, network, preprint, detect, object   Paper Collection   A List of Computer Vision Papers and Notes    Image Classification   image classification     Popular Module   popular module     Object Detection in Image   object detection in image     Image Caption   image caption     Image Generations   image generations     Image and Language   image and language     Activation Maximization   activation maximization     Style Transfer   style transfer     Super Resolution   super resolution     Image Segmentation   image segmentation     Open Courses   open courses     Online Books   online books        Image Classification  Network in Network   Paper   https   arxiv org abs 1312 4400    Note   https   github com sunshineatnoon Paper Collection blob master NIN md    Torch Code   https   github com szagoruyko cifar torch blob master models nin lua       Lin  Min  Qiang Chen  and Shuicheng Yan   Network in network   arXiv preprint arXiv 1312 4400  2013    VGG   Paper   https   arxiv org abs 1409 1556    Note   https   github com sunshineatnoon Paper Collection blob master VGG md    Torch Code   https   github com szagoruyko cifar torch blob master models vgg bn drop lua       Simonyan  Karen  and Andrew Zisserman   Very deep convolutional networks for large scale image recognition   arXiv preprint arXiv 1409 1556  2014    GoogleNet   Paper   http   www cv foundation org openaccess content cvpr 2015 papers Szegedy Going Deeper With 2015 CVPR paper pdf    Note   https   github com sunshineatnoon Paper Collection blob master GoogleNet md    Torch Code   https   github com soumith inception torch blob master googlenet lua       Szegedy  Christian  et al   Going deeper with convolutions   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015   ResNet   Paper   https   arxiv org pdf 1512 03385 pdf    Note       Torch Code   https   github com facebook fb resnet torch       He  Kaiming  et al   Deep residual learning for image recognition   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016       Popular Module Dropout   Paper   http   www jmlr org papers volume15 srivastava14a old source srivastava14a pdf    Note   https   github com sunshineatnoon Paper Collection blob master Dropout md    Srivastava  Nitish  et al   Dropout  a simple way to prevent neural networks from overfitting   Journal of Machine Learning Research 15 1  2014   1929 1958   Batch Normalization   Paper   https   arxiv org abs 1502 03167    Note   https   github com sunshineatnoon Paper Collection blob master BN md    Ioffe S  Szegedy C  Batch normalization  Accelerating deep network training by reducing internal covariate shift J   arXiv preprint arXiv 1502 03167  2015       Object Detection in Image RCNN   Paper   http   arxiv org abs 1311 2524    Note   https   github com sunshineatnoon Paper Collection blob master RCNN md    Code   https   github com rbgirshick rcnn       Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik  Rich feature hierarchies for accurate object detection and semantic segmentation  Spatial pyramid pooling in deep convolutional networks for visual recognition   Paper    http   arxiv org abs 1406 4729    Note   https   github com sunshineatnoon Paper Collection blob master SPPNet md    Code   https   github com ShaoqingRen SPP net      He K  Zhang X  Ren S  et al  Spatial pyramid pooling in deep convolutional networks for visual recognition J   Pattern Analysis and Machine Intelligence  IEEE Transactions on  2015  37 9   1904 1916   Fast R CNN   Paper    http   arxiv org pdf 1504 08083    Note   https   github com sunshineatnoon Paper Collection blob master Fast RCNN md    Code   https   github com rbgirshick fast rcnn       Ross Girshick  Fast R CNN  arXiv 1504 08083   Faster R CNN  Microsoft Research   Paper    http   arxiv org pdf 1506 01497    Note   https   github com sunshineatnoon Paper Collection blob master Faster 20R CNN md    Code   https   github com ShaoqingRen faster rcnn    Python Code   https   github com rbgirshick py faster rcnn       Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  arXiv 1506 01497   End to end people detection in crowded scenes   Paper    http   arxiv org abs 1506 04878     Note   https   github com sunshineatnoon Paper Collection blob master End to end people detection in crowded scenes md    Code   https   github com Russell91 ReInspect       Russell Stewart  Mykhaylo Andriluka  End to end people detection in crowded scenes  arXiv 1506 04878   You Only Look Once  Unified  Real Time Object Detection   Paper    http   arxiv org abs 1506 02640    Note   https   github com sunshineatnoon Paper Collection blob master YOLO md    Code   http   pjreddie com darknet yolo        Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi  You Only Look Once  Unified  Real Time Object Detection  arXiv 1506 02640  Adaptive Object Detection Using Adjacency and Zoom Prediction   Paper    http   arxiv org abs 1512 07711    Note   https   github com sunshineatnoon Paper Collection blob master AZNet md       Lu Y  Javidi T  Lazebnik S  Adaptive Object Detection Using Adjacency and Zoom Prediction J   arXiv 1512 07711  2015   Inside Outside Net  Detecting Objects in Context with Skip Pooling and Recurrent Neural Networks   Paper   http   arxiv org abs 1512 04143    Note   https   github com sunshineatnoon Paper Collection blob master Inside Outside Net md       Sean Bell  C  Lawrence Zitnick  Kavita Bala  Ross Girshick  arXiv 1512 04143  2015   G CNN  an Iterative Grid Based Object Detector   Paper   http   arxiv org abs 1512 07729v1       Mahyar Najibi  Mohammad Rastegari  Larry S  Davis  arXiv 1512 07729  2015   Seq NMS for Video Object Detection   Paper   http   arxiv org abs 1602 08465    Note   https   github com sunshineatnoon Paper Collection blob master Seq NMS md       Wei Han  Pooya Khorrami  Tom Le Paine  Prajit Ramachandran  Mohammad Babaeizadeh  Honghui Shi  Jianan Li  Shuicheng Yan  Thomas S  Huang  Seq NMS for Video Object Detection  arXiv preprint arXiv 1602 08465  2016      Image Caption  Exploring Nearest Neighbor Approaches for Image Captioning   Paper   http   arxiv org abs 1505 04467       Devlin J  Gupta S  Girshick R  et al  Exploring Nearest Neighbor Approaches for Image Captioning J   arXiv preprint arXiv 1505 04467  2015   Show and Tell  A Neural Image Caption Generator   Paper   http   www cv foundation org openaccess content cvpr 2015 html Vinyals Show and Tell 2015 CVPR paper html    Note   https   github com sunshineatnoon Paper Collection blob master ShowAndTell md       Vinyals  Oriol  et al   Show and tell  A neural image caption generator   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015       Image Generations  Pixel Recurrent Neural Networks   Paper   https   arxiv org abs 1601 06759    Note   https   github com sunshineatnoon Paper Collection blob master pixel rnn md     van den Oord A  Kalchbrenner N  Kavukcuoglu K  Pixel Recurrent Neural Networks J   arXiv preprint arXiv 1601 06759  2016   Variational Autoencoder   Paper   http   arxiv org abs 1312 6114    Note   http   sunshineatnoon github io VAE        Kingma D P  Welling M  Auto encoding variational bayes J   arXiv preprint arXiv 1312 6114  2013   DRAW  A recurrent neural network for image generation   Paper   http   arxiv org abs 1502 04623    Torch Code   https   github com vivanov879 draw    Tensorflow Code   https   github com ericjang draw    Note   https   github com sunshineatnoon Paper Collection blob master DRAW md       Gregor K  Danihelka I  Graves A  et al  DRAW  A recurrent neural network for image generation J   arXiv preprint arXiv 1502 04623  2015   Scribbler  Controlling Deep Image Synthesis with Sketch and Color   Paper   https   arxiv org pdf 1612 00835v2 pdf    Note   https   github com sunshineatnoon Paper Collection blob master scribble md       Patsorn Sangkloy  Jingwan Lu  et al  Scribbler  Controlling Deep Image Synthesis with Sketch and Color  arXiv preprint arXiv 1612 00835  2016   Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks   Paper   http   arxiv org abs 1511 06434      Radford A  Metz L  Chintala S  Unsupervised representation learning with deep convolutional generative adversarial networks J   arXiv preprint arXiv 1511 06434  2015   Improved Techniques for Training GANs   Paper   http   arxiv org abs 1606 03498      Salimans T  Goodfellow I  Zaremba W  et al  Improved Techniques for Training GANs J   arXiv preprint arXiv 1606 03498  2016   InfoGAN  Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets  Paper   https   arxiv org abs 1606 03657      Chen X  Duan Y  Houthooft R  et al  InfoGAN  Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets J   arXiv preprint arXiv 1606 03657  2016   Image to Image Translation with Conditional Adversarial Networks   Paper   https   arxiv org abs 1611 07004    Note   https   github com sunshineatnoon Paper Collection blob master pix2pix md    Torch Code   https   github com phillipi pix2pix    Tensorflow Code   https   github com yenchenlin pix2pix tensorflow      Isola P  Zhu J Y  Zhou T  et al  Image to Image Translation with Conditional Adversarial Networks J   arXiv preprint arXiv 1611 07004  2016   Learning to Generate Images of Outdoor Scenes from Attributes and Semantic Layouts   Paper   https   arxiv org abs 1612 00215    Note   https   github com sunshineatnoon Paper Collection blob master AL CGAN md      Levent Karacan  Zeynep Akata  Aykut Erdem  Erkut Erdem  Learning to Generate Images of Outdoor Scenes from Attributes and Semantic Layouts  J   arXiv preprint arXiv 1612 00215  2016   Learning to Discover Cross Domain Relations with Generative Adversarial Networks   Paper   https   arxiv org abs 1703 05192    Note   https   github com sunshineatnoon Paper Collection blob master DiscoGAN md    Kim  Taeksoo  et al   Learning to Discover Cross Domain Relations with Generative Adversarial Networks   arXiv preprint arXiv 1703 05192  2017    Unpaired Image to Image Translation using Cycle Consistent Adversarial Networks    Paper   https   arxiv org abs 1703 10593     Note   https   github com sunshineatnoon Paper Collection blob master cycleGAN md     Zhu J Y  Park T  Isola P  et al  Unpaired Image to Image Translation using Cycle Consistent Adversarial Networks J   arXiv preprint arXiv 1703 10593  2017   BEGAN  Boundary Equilibrium Generative Adversarial Networks   Paper   https   arxiv org abs 1703 10717    Note   https   github com sunshineatnoon Paper Collection blob master BEGAN md     Berthelot  David  Tom Schumm  and Luke Metz   BEGAN  Boundary Equilibrium Generative Adversarial Networks   arXiv preprint arXiv 1703 10717  2017    StackGAN  Text to Photo realistic Image Synthesis with Stacked Generative Adversarial Networks   Paper   https   arxiv org abs 1612 03242    Note   https   github com sunshineatnoon Paper Collection blob master StackGAN md    Tensorflow Code   https   github com hanzhanggit StackGAN     Zhang  Han  et al   StackGAN  Text to Photo realistic Image Synthesis with Stacked Generative Adversarial Networks   arXiv preprint arXiv 1612 03242  2016    Invertible Conditional GANs for image editing   Paper   https   arxiv org abs 1611 06355    Note   https   github com sunshineatnoon Paper Collection blob master documents IcGAN md    Perarnau G  van de Weijer J  Raducanu B  et al  Invertible Conditional GANs for image editing J   arXiv preprint arXiv 1611 06355  2016   Stacked Generative Adversarial Networks   Paper   https   arxiv org abs 1612 04357    Note   https   github com sunshineatnoon Paper Collection blob master documents SGAN md    Huang X  Li Y  Poursaeed O  et al  Stacked generative adversarial networks J   arXiv preprint arXiv 1612 04357  2016   Rotating Your Face Using Multi task Deep Neural Network   Paper   http   www cv foundation org openaccess content cvpr 2015 html Yim Rotating Your Face 2015 CVPR paper html    Note   https   github com sunshineatnoon Paper Collection blob master documents Yim16 md    Yim J  Jung H  Yoo B I  et al  Rotating your face using multi task deep neural network C   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015  676 684       Image and Language Learning Deep Representations of Fine Grained Visual Descriptions   Paper   https   arxiv org abs 1605 05395    Note   https   github com sunshineatnoon Paper Collection blob master DS JSE pdf      Reed  Scott  et al   Learning deep representations of fine grained visual descriptions   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016       Activation Maximization Synthesizing the preferred inputs for neurons in neural networks via deep generator networks   Paper   https   arxiv org abs 1605 09304    Note   https   github com sunshineatnoon Paper Collection blob master DGN AM md      Nguyen A  Dosovitskiy A  Yosinski J  et al  Synthesizing the preferred inputs for neurons in neural networks via deep generator networks J   arXiv preprint arXiv 1605 09304  2016       Style Transfer A neural algorithm of artistic style   Paper   http   arxiv org abs 1508 06576    Note   https   github com sunshineatnoon Paper Collection blob master A 20Neural 20Algorithm 20of 20Artistic 20Style md      Gatys L A  Ecker A S  Bethge M  A neural algorithm of artistic style J   arXiv preprint arXiv 1508 06576  2015   Perceptual losses for real time style transfer and super resolution   Paper   https   arxiv org abs 1603 08155    Note   https   github com sunshineatnoon Paper Collection blob master Perceptual 20Losses 20Neural 20Style md      Johnson J  Alahi A  Fei Fei L  Perceptual losses for real time style transfer and super resolution J   arXiv preprint arXiv 1603 08155  2016   Preserving Color in Neural Artistic Style Transfer   Paper   https   arxiv org abs 1606 05897    Note   https   github com sunshineatnoon Paper Collection blob master preserveNT md    Pytorch Code   https   github com sunshineatnoon Paper Implementations tree master NeuralSytleTransfer neural style transfer with color preservation      Gatys  Leon A   et al   Preserving color in neural artistic style transfer   arXiv preprint arXiv 1606 05897  2016    A Learned Representation For Artistic Style   Paper   https   arxiv org pdf 1610 07629 pdf    Note   https   github com sunshineatnoon Paper Collection blob master multi neural md    Tensorflow Code   https   github com tensorflow magenta tree master magenta models image stylization    Lasagne Code   https   github com joelmoniz gogh figure      Dumoulin  Vincent  Jonathon Shlens  and Manjunath Kudlur   A learned representation for artistic style    2017    Demystifying Neural Style Transfer   Paper   https   arxiv org abs 1701 01036      Li  Yanghao  et al   Demystifying Neural Style Transfer   arXiv preprint arXiv 1701 01036  2017    Arbitrary Style Transfer in Real time with Adaptive Instance Normalization   Paper   https   arxiv org abs 1703 06868      Huang  Xun  and Serge Belongie   Arbitrary Style Transfer in Real time with Adaptive Instance Normalization   arXiv preprint arXiv 1703 06868  2017    Fast Patch based Style Transfer of Arbitrary Style   Paper   https   arxiv org pdf 1612 04337v1 pdf      Chen  Tian Qi  and Mark Schmidt   Fast Patch based Style Transfer of Arbitrary Style   arXiv preprint arXiv 1612 04337  2016        Low level vision Texture Enhancement via High Resolution Style Transfer for Single Image Super Resolution   Paper   https   arxiv org abs 1612 00085    Note   https   github com sunshineatnoon Paper Collection blob master style SR md      Il Jun Ahn  Woo Hyun Nam  Texture Enhancement via High Resolution Style Transfer for Single Image Super Resolution  J   arXiv preprint arXiv 1612 00085  2016   Deep Joint Image Filtering   Paper   https   pdfs semanticscholar org 9bc0 d4609fadc139480096ca95772bd82303a985 pdf    Note   https   github com sunshineatnoon Paper Collection blob master documents ECCVJointFilter md      Li Y  Huang J B  Ahuja N  et al  Deep joint image filtering C   European Conference on Computer Vision  Springer International Publishing  2016  154 169         Image Segmentation   Fully convolutional networks for semantic segmentation   Paper   https   arxiv org abs 1411 4038    Note   https   github com sunshineatnoon Paper Collection blob master FCN md       Long J  Shelhamer E  Darrell T  Fully convolutional networks for semantic segmentation C   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015  3431 3440       Open Courses   CS231n  Convolutional Neural Networks for Visual Recognition   Course Page   http   vision stanford edu teaching cs231n index html    CS224d  Deep Learning for Natural Language Processing   Course Page   http   cs224d stanford edu index html       Online Books    Deep Learning  http   www deeplearningbook org  by Ian Goodfellow  Yoshua Bengio and Aaron Courville      Mathmatics   Introduction to Probability Models  Sheldon M  Ross      Misc k means    The advantages of careful seeding   Paper   http   theory stanford edu  sergei papers kMeansPP soda pdf    Note   https   github com sunshineatnoon Paper Collection blob master k means   md       Arthur D  Vassilvitskii S  k means    The advantages of careful seeding C   Proceedings of the eighteenth annual ACM SIAM symposium on Discrete algorithms  Society for Industrial and Applied Mathematics  2007  1027 1035  ","software":"md","book":"sunshineatnoon","full_link":"https://github.com/sunshineatnoon/Paper-Collection"},{"name":"facebookresearch/clevr-iep","artist":"model, imag, train, caff, download","id":398,"playcount":3488,"description":"facebookresearch/clevr-iep model, imag, train, caff, download   inferring and executing  This is the code for the paper      a href  https   arxiv org abs 1705 03633  Inferring and Executing Programs for Visual Reasoning  a      br    a href  http   cs stanford edu people jcjohns   Justin Johnson  a     a href  http   home bharathh info   Bharath Hariharan  a     a href  https   lvdmaaten github io   Laurens van der Maaten  a     a href  http   cs stanford edu  jhoffman   Judy Hoffman  a     a href  http   vision stanford edu feifeili   Fei Fei Li  a     a href  http   larryzitnick org   Larry Zitnick  a     a href  http   www rossgirshick info   Ross Girshick  a    br   To appear at  ICCV 2017  http   iccv2017 thecvf com     div align  center      img src  https   github com facebookresearch clevr iep blob master img system png  width  450px     div   If you find this code useful in your research then please cite       inproceedings johnson2017inferring    title  Inferring and Executing Programs for Visual Reasoning     author  Johnson  Justin and Hariharan  Bharath and van der Maaten  Laurens and Hoffman  Judy           and Fei Fei  Li and Zitnick  C Lawrence and Girshick  Ross     booktitle  ICCV     year  2017           Setup  All code was developed and tested on Ubuntu 16 04 with Python 3 5   You can set up a virtual environment to run the code like this      bash virtualenv  p python3  env         Create virtual environment source  env bin activate           Activate virtual environment pip install  r requirements txt    Install dependencies echo  PWD    env lib python3 5 site packages iep pth   Add this package to virtual environment   Work for a while     deactivate   Exit virtual environment        Pretrained Models You can download and unzip the pretrained models by running  bash scripts download pretrained models sh   the models will take about 1 1 GB on disk   We provide two sets of pretrained models    The models in  models CLEVR  were trained on the CLEVR dataset  these were used to make Table 1 in the paper    The models in  models CLEVR Humans  were first trained on CLEVR and then finetuned on the CLEVR Humans dataset     these models were used to make Table 3 in the paper     Running models  You can easily run any of the pretrained models on new images and questions  As an example  we will run several models on the following example image from the CLEVR validation set    div align  center     img src  https   github com facebookresearch clevr iep blob master img CLEVR val 000013 png     div   After downloading the pretrained models  you can use the pretrained model to answer questions about this image with the following command      bash python scripts run model py       program generator models CLEVR program generator 18k pt       execution engine models CLEVR execution engine 18k pt       image img CLEVR val 000013 png       question  Does the small sphere have the same color as the cube left of the gray cube        This will print the predicted answer  as well as the program that the model used to produce the answer  For the example command we get the output      bash Question   Does the small sphere have the same color as the cube left of the gray cube   Predicted answer   yes  Predicted program  equal color query color unique filter shape sphere  filter size small  scene query color unique filter shape cube  relate left  unique filter shape cube  filter color gray  scene        Training  The procedure for training your own models  is described here  TRAINING md   ","software":"md","book":"facebookresearch","full_link":"https://github.com/facebookresearch/clevr-iep"},{"name":"xiaolonw/fast-rcnn-distillation","artist":"caff, shell, model, make, requir","id":399,"playcount":3779,"description":"xiaolonw/fast-rcnn-distillation caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/fast-rcnn-distillation"},{"name":"insmod-he/TS-det","artist":"caff, model, learn, bvlc, refer","id":400,"playcount":1924,"description":"insmod-he/TS-det caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"insmod-he","full_link":"https://github.com/insmod-he/TS-det"},{"name":"xiaolonw/fast-rcnn-distillation","artist":"caff, shell, model, make, requir","id":401,"playcount":3779,"description":"xiaolonw/fast-rcnn-distillation caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/fast-rcnn-distillation"},{"name":"insmod-he/TS-det","artist":"caff, model, learn, bvlc, refer","id":402,"playcount":1924,"description":"insmod-he/TS-det caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"insmod-he","full_link":"https://github.com/insmod-he/TS-det"},{"name":"tianzhi0549/caffe-fast-rcnn","artist":"caff, learn, model, communiti, releas","id":403,"playcount":2130,"description":"tianzhi0549/caffe-fast-rcnn caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tianzhi0549","full_link":"https://github.com/tianzhi0549/caffe-fast-rcnn"},{"name":"rohitgirdhar-cmu-experimental/caffe_yell","artist":"caff, model, learn, bvlc, refer","id":404,"playcount":2032,"description":"rohitgirdhar-cmu-experimental/caffe_yell caff, model, learn, bvlc, refer   To run matcaffe on yell LD PRELOAD  usr lib x86 64 linux gnu libstdc   so 6 nice  n 10 matlab  nodisplay    Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rohitgirdhar-cmu-experimental","full_link":"https://github.com/rohitgirdhar-cmu-experimental/caffe_yell"},{"name":"yihui-he/caffe-fast-rcnn","artist":"caff, model, learn, bvlc, refer","id":405,"playcount":1924,"description":"yihui-he/caffe-fast-rcnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yihui-he","full_link":"https://github.com/yihui-he/caffe-fast-rcnn"},{"name":"jdehotin/caffewin","artist":"caff, learn, model, framework, vision","id":406,"playcount":2102,"description":"jdehotin/caffewin caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jdehotin","full_link":"https://github.com/jdehotin/caffewin"},{"name":"LisaAnne/lisa-caffe-public","artist":"caff, model, learn, bvlc, refer","id":407,"playcount":1924,"description":"LisaAnne/lisa-caffe-public caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"LisaAnne","full_link":"https://github.com/LisaAnne/lisa-caffe-public"},{"name":"chengchengowen/multi_gpu","artist":"caff, model, learn, bvlc, refer","id":408,"playcount":1924,"description":"chengchengowen/multi_gpu caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"chengchengowen","full_link":"https://github.com/chengchengowen/multi_gpu"},{"name":"tigergao198914/caffe_extended","artist":"caff, learn, model, framework, vision","id":409,"playcount":2102,"description":"tigergao198914/caffe_extended caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tigergao198914","full_link":"https://github.com/tigergao198914/caffe_extended"},{"name":"gzygzy9211/caffe","artist":"caff, learn, model, communiti, releas","id":410,"playcount":2130,"description":"gzygzy9211/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"gzygzy9211","full_link":"https://github.com/gzygzy9211/caffe"},{"name":"Lizw14/caffe_conv_pm","artist":"caff, learn, model, framework, vision","id":411,"playcount":2102,"description":"Lizw14/caffe_conv_pm caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Lizw14","full_link":"https://github.com/Lizw14/caffe_conv_pm"},{"name":"SineXue/ssd","artist":"caff, learn, model, framework, vision","id":412,"playcount":2102,"description":"SineXue/ssd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"SineXue","full_link":"https://github.com/SineXue/ssd"},{"name":"xiaolonw/lisa-caffe-lstm","artist":"caff, model, learn, bvlc, refer","id":413,"playcount":2003,"description":"xiaolonw/lisa-caffe-lstm caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          lisa caffe lstm  fork from    https   github com LisaAnne lisa caffe public  ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/lisa-caffe-lstm"},{"name":"CZCV/s-dilation-caffe","artist":"caff, learn, model, framework, vision","id":414,"playcount":2102,"description":"CZCV/s-dilation-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CZCV","full_link":"https://github.com/CZCV/s-dilation-caffe"},{"name":"XifengGuo/DEC-keras","artist":"dec, code, python, mnist, cluster","id":415,"playcount":2139,"description":"XifengGuo/DEC-keras dec, code, python, mnist, cluster   Deep Embedding Clustering  DEC   Keras implementation for ICML 2016 paper     Junyuan Xie  Ross Girshick  and Ali Farhadi  Unsupervised deep embedding for clustering analysis  ICML 2016      Usage 1  Install  Keras  2 0 9  https   github com fchollet keras   scikit learn       pip install keras scikit learn        2  Clone the code to local         git clone https   github com XifengGuo DEC keras git DEC cd DEC     3  Prepare datasets       Download   STL        cd data stl bash get data sh cd             MNIST   and   Fashion MNIST  FMNIST    can be downloaded automatically when you run the code     Reuters   and   USPS    If you cannot find these datasets yourself  you can download them from     https   pan baidu com s 1hsMQ8Tm  password   4ss4   for   Reuters    and   https   pan baidu com s 1skRg9Dr  password   sc58   for   USPS     4  Run experiment on MNIST      python DEC py   dataset mnist     or  if there s pretrained autoencoder weights    The DEC model will be saved to  results DEC model final h5    5  Other usages      Use  python DEC py  h  for help      Results      python run exp py     Table 1  Mean performance over 10 trials  See  results csv    results exp1 results csv  for detailed results for each trial                        kmeans AE kmeans   DEC     paper                                                           mnist     acc   53     88        91      84                nmi   50     81        87             fmnist    acc   47     61        62                       nmi   51     64        65             usps      acc   67     71        76                       nmi   63     68        79             stl       acc   70     79        86                       nmi   71     72        82             reuters   acc   52     76        78      72               nmi   31     52        57              Autoencoder model      autoencoders png      Other implementations  Original code  Caffe   https   github com piiswrong dec    MXNet implementation  https   github com dmlc mxnet blob master example dec dec py    Keras implementation without pretraining code  https   github com fferroni DEC Keras ","software":"md","book":"XifengGuo","full_link":"https://github.com/XifengGuo/DEC-keras"},{"name":"TLESORT/YOLO-TensorRT-GIE-","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":416,"playcount":1971,"description":"TLESORT/YOLO-TensorRT-GIE- “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Project YOLO TensorRT GIE This code is an implementation of trained YOLO neural network used with the TensorRT framework    YOLO    You Only Look Once  Unified  Real Time Object Detection  by Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi    There is issue with this implementation    for now the output of the neural network isn t good and I am currently searching for the solution if you have any idea don t hesitate to create an issue   The ouputed result for detecting a cat is       Data example  Images cat detection jpg  br     Example of bad detection for a cat   When the ouputed result with the very same network implemented with caffe gives       Data example  Images true detection jpg  br     True detection for a cat when the network is run with the caffe framework    Furthermore a different images will gives very close results  For example with a matrice of zeros the result seems to be exactly the same      Data example  Images zeros detection jpg  br     Outputed detection for a matrice of zeros      UPDATE    As pointed out by AastaLLL at https   devtalk nvidia com default topic 990426 jetson tx1 tensorrt yolo inference error post 5087820  the leaky relu layer was not supported by TensorRT and should be remplaced  by standard relu scale eltwise to approximate it  The results with the modified prototxt  yolo small modified prototxt  are the following     The 32 bits versions of tensorRT gives similar results to caffe results with yolov1 small     Data example  Images cat detection modified 32bits jpg  br     Example of the 32 bits detection with modified prototxt    But the result of the 16 bits version of tensorRT does not gives correct detections      Data example  Images cat detection modified 16bits jpg  br     Example of the 16 bits detection with modified prototxt     Data example  Images zeros detection modified 16bits jpg  br     Example of the 16 bits detection with modified prototxt with a matrice of zeros  ","software":"md","book":"TLESORT","full_link":"https://github.com/TLESORT/YOLO-TensorRT-GIE-"},{"name":"kuke/caffe_to_c","artist":"caff, learn, model, framework, vision","id":417,"playcount":2102,"description":"kuke/caffe_to_c caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kuke","full_link":"https://github.com/kuke/caffe_to_c"},{"name":"jasonustc/caffe-multigpu","artist":"caff, model, arxiv, year, fast","id":418,"playcount":2106,"description":"jasonustc/caffe-multigpu caff, model, arxiv, year, fast Here is the linux windows compatible version of caffe forked from https   github com BVLC caffe in 04 10 2016  Multi GPU is supported in this version   I also have a talk on brief introduction of Deep Learning   nbsp  part1  http   v youku com v show id XMTYyMTk1NDU2MA   html    nbsp  part2  http   v youku com v show id XMTYyMTk2MTEwOA   html    nbsp  slides  http   pan baidu com s 1hrMmyS8    Besides  I shared some practical tricks for deep learning quite general    nbsp   DeepLearnigTricks  https   github com jasonustc my libs blob master tricks wiki md       Windows Tools   1  Visual Studio 2013  2  Cuda 7 5   nbsp   you should install cuda after the installation of Visual Studio 2013 to incorporate cuda vs integration into VS     3  OpenCV 2 4 9  4  Boost  Steps   1  Copy folder  3rdparty   http   pan baidu com s 1ge3nKRp  and  bin   http   pan baidu com s 1jIyEjKq  to the caffe root directory  2  Configure the environment variables   BOOST 1 56 0   e g   C  local boost 1 56 0     OPENCV 2 4 9   e g   D  apps opencv build    3  Compile the caffe sln in  build windows  by VS2013  Notes   1  Currently Caffe works with cuDNN v3 or cuDNN v4    The current settings in caffe sln do not use cuDNN     You need copy More details at https   github com BVLC caffe tree windows     Linux  Please follow the official tutorials here  http   caffe berkeleyvision org installation html      License and Citation  The official turtorial is here   caffe tutorial  http   caffe berkeleyvision org installation html   Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jasonustc","full_link":"https://github.com/jasonustc/caffe-multigpu"},{"name":"dinhtuyen/caffe-fast-rcnn","artist":"caff, model, learn, bvlc, refer","id":419,"playcount":1924,"description":"dinhtuyen/caffe-fast-rcnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dinhtuyen","full_link":"https://github.com/dinhtuyen/caffe-fast-rcnn"},{"name":"djingming/CaffeCompilation","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":420,"playcount":3831,"description":"djingming/CaffeCompilation “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Caffe Compilation This manuscript describes how to compile Caffe on Ubuntu   Created by  Jingming Dong  http   vision ucla edu  jingming    12 10 2015       Tested Platform Ubuntu 14 04 3 LTS  3 19 0 25 generic   python2 7  Matlab 2015b  Caffe version  master branch on 12 10 2015      Prerequisites      CUDA  Download from https   developer nvidia com cuda downloads and run the installer   Install the latest GPU driver again as recommend by Caffe instruction    Note that sometimes the latest driver crashes Ubuntu  then use the one that comes with the cuda installer        cuDNN  Download from https   developer nvidia com cudnn and set up include library path as mentioned later       Prerequisites installed from terminal       sudo apt get install libprotobuf dev libleveldb dev libsnappy dev libopencv dev libhdf5 serial dev protobuf compiler sudo apt get install   no install recommends libboost all dev sudo apt get install libatlas base dev sudo apt get install python dev sudo apt get install libgflags dev libgoogle glog dev liblmdb dev          Prerequisites installed from synaptic  Search and install python numpy  python scipy  python yaml      Set up Bash      export PATH  usr local MATLAB R2015b bin  usr local cuda bin  PATH export LD LIBRARY PATH  usr local cuda lib64  usr local cudnn lib  LD LIBRARY PATH export CUBLAS PATH  usr local cuda lib64 export CUDNN PATH  usr local cudnn include export PYTHONPATH  path to caffe python  PYTHONPATH          Set up cuDNN Put cudnn h to  cuDNN ROOT include   and cudnn libraries to  cuDNN ROOT lib   where  cuDNN ROOT  can be any folder you prefer  Edit Makefile config to include these paths      INCLUDE DIRS      PYTHON INCLUDE   usr local include cuDNN ROOT include LIBRARY DIRS      PYTHON LIB   usr local lib  usr lib cuDNN ROOT lib     Add library path to  LD LIBRARY PATH      export LD LIBRARY PATH  usr local cuda lib64 cuDNN ROOT lib  LD LIBRARY PATH         Compilation      Caffe  Edit configuration file and compile     cp Makefile config example Makefile config     Edit configuration file  An example compatible with the above prerequisites is provided in this repository  Makefile config   Note that it uses OpenCV 3 x by installing libopencv dev  If you are using OpenCV 2 x  change accordingly      make all make test make runtest          Python interface     make pycaffe sudo pip install  U scikit image sudo pip install protobuf      You need to add module to PYTHONPATH     export PYTHONPATH  path to caffe root  python  PYTHONPATH          Matlab interface     make matcaffe make mattest     You need to add path in Matlab to use the matcaffe     addpath genpath   path to caffe root    matlab              Download models      scripts download model binary py  dirname       where   dirname   is specified below   BVLC Reference CaffeNet in models bvlc reference caffenet  AlexNet trained on ILSVRC 2012  with a minor variation from the version as described in ImageNet classification with deep convolutional neural networks by Krizhevsky et al  in NIPS 2012   Trained by Jeff Donahue  jeffdonahue   BVLC AlexNet in models bvlc alexnet  AlexNet trained on ILSVRC 2012  almost exactly as described in ImageNet classification with deep convolutional neural networks by Krizhevsky et al  in NIPS 2012   Trained by Evan Shelhamer  shelhamer   BVLC Reference R CNN ILSVRC 2013 in models bvlc reference rcnn ilsvrc13  pure Caffe implementation of R CNN as described by Girshick et al  in CVPR 2014   Trained by Ross Girshick  rbgirshick   BVLC GoogLeNet in models bvlc googlenet  GoogLeNet trained on ILSVRC 2012  almost exactly as described in Going Deeper with Convolutions by Szegedy et al  in ILSVRC 2014   Trained by Sergio Guadarrama  sguada   You can find more models in Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   ","software":"md","book":"djingming","full_link":"https://github.com/djingming/CaffeCompilation"},{"name":"kranthisai/apollocaffe-pi","artist":"caff, model, learn, bvlc, refer","id":421,"playcount":1924,"description":"kranthisai/apollocaffe-pi caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kranthisai","full_link":"https://github.com/kranthisai/apollocaffe-pi"},{"name":"pcmoritz/caffe","artist":"caff, model, learn, bvlc, refer","id":422,"playcount":1924,"description":"pcmoritz/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"pcmoritz","full_link":"https://github.com/pcmoritz/caffe"},{"name":"steflee/MCL_Caffe","artist":"caff, model, learn, bvlc, refer","id":423,"playcount":1924,"description":"steflee/MCL_Caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"steflee","full_link":"https://github.com/steflee/MCL_Caffe"},{"name":"andreaskoepf/faster-rcnn.torch","artist":"rcnn, train, detect, network, faster","id":424,"playcount":1721,"description":"andreaskoepf/faster-rcnn.torch rcnn, train, detect, network, faster   faster rcnn This is an experimental Torch7 implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun      Work in progress Status  Basic detection in my personal environment works  A  small  network is used that can be trained on a 4 GB GPU with 800x450 images  Began experimenting with ImageNet  create imagenet traindat lua can be used to create a training data file for the ILSVRC2015 dataset      Todo        regularly evaluate net during traning to compute test set loss   generate training graph with  gnuplot  https   github com torch gnuplot    add final per class non maximum suppression to generate final proposals  already included but eval code rewrite still pending    remove hard coded path  create full set of command line options   add parameters to separately enable disable training of bounding box proposal network and fine tuning   classification      Experiments to run    test smaller networks   6x6 vs  7x7 classification ROI pooling output size   impact of RGB  YUV  Lab color space   test relevance of local contrast normalization     References   Review   Useful Links    SPP Paper  http   arxiv org pdf 1406 4729 pdf     Fast R CNN paper  http   arxiv org abs 1504 08083     R CNN paper  http   arxiv org abs 1311 2524     vgg net  cifar torch  https   github com szagoruyko cifar torch blob master models vgg bn drop lua     55 epoche learn rate schedule   https   github com soumith imagenet multiGPU torch blob master train lua  ","software":"md","book":"andreaskoepf","full_link":"https://github.com/andreaskoepf/faster-rcnn.torch"},{"name":"wuerflts/Deep-Learning-Computed-Tomography","artist":"caff, learn, model, framework, vision","id":425,"playcount":2102,"description":"wuerflts/Deep-Learning-Computed-Tomography caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wuerflts","full_link":"https://github.com/wuerflts/Deep-Learning-Computed-Tomography"},{"name":"mcahny/caffe-future","artist":"caff, learn, model, framework, vision","id":426,"playcount":2102,"description":"mcahny/caffe-future caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mcahny","full_link":"https://github.com/mcahny/caffe-future"},{"name":"alpesis-fork/Ristretto","artist":"caff, learn, model, framework, vision","id":427,"playcount":2102,"description":"alpesis-fork/Ristretto caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"alpesis-fork","full_link":"https://github.com/alpesis-fork/Ristretto"},{"name":"Nortinwell/LRCN","artist":"caff, model, learn, bvlc, refer","id":428,"playcount":1924,"description":"Nortinwell/LRCN caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Nortinwell","full_link":"https://github.com/Nortinwell/LRCN"},{"name":"coldrainyht/caffe_dr2","artist":"caff, learn, model, framework, vision","id":429,"playcount":2102,"description":"coldrainyht/caffe_dr2 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"coldrainyht","full_link":"https://github.com/coldrainyht/caffe_dr2"},{"name":"rickyHong/SSD-latest","artist":"caff, learn, model, framework, vision","id":430,"playcount":2102,"description":"rickyHong/SSD-latest caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/SSD-latest"},{"name":"rbgirshick/caffe-fast-rcnn","artist":"caff, model, learn, bvlc, refer","id":431,"playcount":1924,"description":"rbgirshick/caffe-fast-rcnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rbgirshick","full_link":"https://github.com/rbgirshick/caffe-fast-rcnn"},{"name":"superyyzg/deep-filter-panorama","artist":"caff, learn, model, framework, vision","id":432,"playcount":2182,"description":"superyyzg/deep-filter-panorama caff, learn, model, framework, vision   Caffe  Wei s folk of caffe  mainly some layers added and some python interface tweak      Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"superyyzg","full_link":"https://github.com/superyyzg/deep-filter-panorama"},{"name":"leinok/caffe_cuda9_cudnn7_titanv","artist":"caff, learn, model, framework, vision","id":433,"playcount":2276,"description":"leinok/caffe_cuda9_cudnn7_titanv caff, learn, model, framework, vision         HEAD   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                  caffe cuda9 cudnn7 titanv This is a working version of caffe using cuda9 and cudnn7 on my workstation         e9e104eca2a893ef135f5bd1a61a7e7036dbb5d7 ","software":"md","book":"leinok","full_link":"https://github.com/leinok/caffe_cuda9_cudnn7_titanv"},{"name":"freelist/caffe-fast-rcnn-myfork","artist":"caff, learn, model, framework, vision","id":434,"playcount":2102,"description":"freelist/caffe-fast-rcnn-myfork caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"freelist","full_link":"https://github.com/freelist/caffe-fast-rcnn-myfork"},{"name":"Junsong-Wang/deep-learning","artist":"arxiv, network, preprint, detect, object","id":435,"playcount":5306,"description":"Junsong-Wang/deep-learning arxiv, network, preprint, detect, object   Deep Learning Courses                                             1 Deep Learning Paper List for computer vision     0    Bengio  Yoshua  Ian J  Goodfellow  and Aaron Courville     Deep learning     An MIT Press book   2015     html   http   www deeplearningbook org      Deep Learning Bible  you can read this book while reading following papers      star  star  star  star  star      1    LeCun  Yann  Yoshua Bengio  and Geoffrey Hinton     Deep learning     Nature 521 7553  2015   436 444    pdf   http   www cs toronto edu  hinton absps NatureDeepReview pdf     Three Giants  Survey     star  star  star  star  star      2    Krizhevsky  Alex  Ilya Sutskever  and Geoffrey E  Hinton     Imagenet classification with deep convolutional neural networks     Advances in neural information processing systems  2012    pdf   http   papers nips cc paper 4824 imagenet classification with deep convolutional neural networks pdf     AlexNet  Deep Learning Breakthrough     star  star  star  star  star      3    Simonyan  Karen  and Andrew Zisserman     Very deep convolutional networks for large scale image recognition     arXiv preprint arXiv 1409 1556  2014     pdf   https   arxiv org pdf 1409 1556 pdf     VGGNet Neural Networks become very deep      star  star  star      4    Szegedy  Christian  et al     Going deeper with convolutions     Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015    pdf   http   www cv foundation org openaccess content cvpr 2015 papers Szegedy Going Deeper With 2015 CVPR paper pdf     GoogLeNet     star  star  star      5    He  Kaiming  et al     Deep residual learning for image recognition     arXiv preprint arXiv 1512 03385  2015     pdf   https   arxiv org pdf 1512 03385 pdf     ResNet Very very deep networks  CVPR best paper     star  star  star  star  star      6    Srivastava  Nitish  et al     Dropout  a simple way to prevent neural networks from overfitting     Journal of Machine Learning Research 15 1  2014   1929 1958    pdf   http   www jmlr org papers volume15 srivastava14a old source srivastava14a pdf   star  star  star      7    Ioffe  Sergey  and Christian Szegedy     Batch normalization  Accelerating deep network training by reducing internal covariate shift     arXiv preprint arXiv 1502 03167  2015     pdf   http   arxiv org pdf 1502 03167     An outstanding Work in 2015     star  star  star  star      8    Szegedy  Christian  Alexander Toshev  and Dumitru Erhan     Deep neural networks for object detection     Advances in Neural Information Processing Systems  2013    pdf   http   papers nips cc paper 5207 deep neural networks for object detection pdf   star  star  star      9    Girshick  Ross  et al     Rich feature hierarchies for accurate object detection and semantic segmentation     Proceedings of the IEEE conference on computer vision and pattern recognition  2014    pdf   http   www cv foundation org openaccess content cvpr 2014 papers Girshick Rich Feature Hierarchies 2014 CVPR paper pdf     RCNN     star  star  star  star  star      10    He  Kaiming  et al     Spatial pyramid pooling in deep convolutional networks for visual recognition     European Conference on Computer Vision  Springer International Publishing  2014    pdf   http   arxiv org pdf 1406 4729     SPPNet     star  star  star  star      11   Girshick  Ross     Fast r cnn     Proceedings of the IEEE International Conference on Computer Vision  2015    pdf   https   pdfs semanticscholar org 8f67 64a59f0d17081f2a2a9d06f4ed1cdea1a0ad pdf   star  star  star  star      12    Ren  Shaoqing  et al     Faster R CNN  Towards real time object detection with region proposal networks     Advances in neural information processing systems  2015    pdf   http   papers nips cc paper 5638 analysis of variational bayesian latent dirichlet allocation weaker sparsity than map pdf   star  star  star  star      13    Redmon  Joseph  et al     You only look once  Unified  real time object detection     arXiv preprint arXiv 1506 02640  2015     pdf   http   homes cs washington edu  ali papers YOLO pdf     YOLO Oustanding Work  really practical     star  star  star  star  star      14    Liu  Wei  et al     SSD  Single Shot MultiBox Detector     arXiv preprint arXiv 1512 02325  2015     pdf   http   arxiv org pdf 1512 02325   star  star  star      15    Dai  Jifeng  et al     R FCN  Object Detection via Region based Fully Convolutional Networks     arXiv preprint arXiv 1605 06409  2016     pdf   https   arxiv org abs 1605 06409   star  star  star  star      16    He  Gkioxari  et al     Mask R CNN    arXiv preprint arXiv 1703 06870  2017     pdf   https   arxiv org abs 1703 06870   star  star  star  star      2 Deep Learning Courses  Lecture 1  Introduction to machine learning  basic concepts   Lecture 2  Introduction to machine learning  linear classifier   Practice 1  Design a linear classifier using Python   Lecture 3  Introduction to deep learning  basic concepts and BP algorithm   Lecture 4  Introduction to deep learning  covolution neural network   Practice 2  Train a speed limit sign classifier based on covolution neural network using Caffe   Lecture 5  Recent object detection algorithms based on deep learning   Practice 3  Design  a deep neural network for speed limit sign detection    ","software":"md","book":"Junsong-Wang","full_link":"https://github.com/Junsong-Wang/deep-learning"},{"name":"supersom/lrcn-caffe","artist":"caff, model, learn, bvlc, refer","id":436,"playcount":1924,"description":"supersom/lrcn-caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"supersom","full_link":"https://github.com/supersom/lrcn-caffe"},{"name":"daerduoCarey/caffe","artist":"caff, model, learn, bvlc, refer","id":437,"playcount":1924,"description":"daerduoCarey/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"daerduoCarey","full_link":"https://github.com/daerduoCarey/caffe"},{"name":"ibmsoe/caffe-nv","artist":"caff, model, learn, bvlc, refer","id":438,"playcount":1925,"description":"ibmsoe/caffe-nv caff, model, learn, bvlc, refer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ibmsoe","full_link":"https://github.com/ibmsoe/caffe-nv"},{"name":"yshean/caffe-docker","artist":"caff, learn, model, framework, vision","id":439,"playcount":2102,"description":"yshean/caffe-docker caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yshean","full_link":"https://github.com/yshean/caffe-docker"},{"name":"vodp/caffe","artist":"caff, learn, model, framework, vision","id":440,"playcount":2102,"description":"vodp/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"vodp","full_link":"https://github.com/vodp/caffe"},{"name":"codyhan/caffe-local","artist":"caff, learn, model, communiti, releas","id":441,"playcount":2130,"description":"codyhan/caffe-local caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"codyhan","full_link":"https://github.com/codyhan/caffe-local"},{"name":"Hwang64/caffe-mlkp","artist":"caff, learn, model, framework, vision","id":442,"playcount":2102,"description":"Hwang64/caffe-mlkp caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Hwang64","full_link":"https://github.com/Hwang64/caffe-mlkp"},{"name":"hujun100/8-22-22-23--2017","artist":"caff, learn, model, framework, vision","id":443,"playcount":2102,"description":"hujun100/8-22-22-23--2017 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hujun100","full_link":"https://github.com/hujun100/8-22-22-23--2017"},{"name":"deepsense-ai/roi-pooling","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":444,"playcount":1755,"description":"deepsense-ai/roi-pooling “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   RoI pooling in TensorFlow  This repo contains the implementation of   Region of Interest pooling   as a custom TensorFlow operation  The CUDA code responsible for the computations was largely taken from the original  Caffe implementation by Ross Girshick  https   github com rbgirshick fast rcnn    For more information about RoI pooling you can check out  Region of interest pooling explained  https   deepsense io region of interest pooling explained   at our  deepsense io  https   deepsense io   blog     Region of Interest Pooling animation  roi pooling animation gif      Requirements  To compile and use  roi pooling  layer you need to have      CUDA  https   developer nvidia com cuda toolkit   tested with 8 0     https   www tensorflow org   TensorFlow   tested with 0 12 0 and 1 0 0   Only official TensorFlow releases are currently supported  If you re using a custom built TensorFlow compiled with a different GCC version  e g  5 X  you may need to modify the makefile to  enable the new ABI version  https   gcc gnu org onlinedocs libstdc   manual using dual abi html       Install  Since it uses compilation     bash   git clone git github com deepsense io roi pooling git   cd roi pooling   python setup py install      Right now we provide only GPU implementation  no CPU at this time       Usage  After successful installation you can use the operation like this      python from roi pooling roi pooling ops import roi pooling    here obtain feature map and regions of interest rpooling   roi pooling feature map  rois  7  7    continue the model      Working example in Jupyter Notebook   examples roi pooling minimal example ipynb  https   github com deepsense io roi pooling blob master examples roi pooling minimal example ipynb   ","software":"md","book":"deepsense-ai","full_link":"https://github.com/deepsense-ai/roi-pooling"},{"name":"scott89/caffe-crowd","artist":"caff, model, learn, bvlc, refer","id":445,"playcount":1924,"description":"scott89/caffe-crowd caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"scott89","full_link":"https://github.com/scott89/caffe-crowd"},{"name":"mathrho/caffe_lstm_video","artist":"caff, model, learn, bvlc, refer","id":446,"playcount":1924,"description":"mathrho/caffe_lstm_video caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mathrho","full_link":"https://github.com/mathrho/caffe_lstm_video"},{"name":"cvjena/caffe_pp2","artist":"caff, learn, model, communiti, releas","id":447,"playcount":2130,"description":"cvjena/caffe_pp2 caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cvjena","full_link":"https://github.com/cvjena/caffe_pp2"},{"name":"zhangyuygss/caffe-modified","artist":"caff, learn, model, framework, vision","id":448,"playcount":2102,"description":"zhangyuygss/caffe-modified caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhangyuygss","full_link":"https://github.com/zhangyuygss/caffe-modified"},{"name":"jesse1029/caffe-jess","artist":"caff, model, learn, bvlc, refer","id":449,"playcount":1924,"description":"jesse1029/caffe-jess caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jesse1029","full_link":"https://github.com/jesse1029/caffe-jess"},{"name":"ShufengWang/caffe-master","artist":"caff, model, learn, bvlc, refer","id":450,"playcount":1924,"description":"ShufengWang/caffe-master caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ShufengWang","full_link":"https://github.com/ShufengWang/caffe-master"},{"name":"EunhyeokPark/caffe-WQ","artist":"caff, learn, model, framework, vision","id":451,"playcount":2102,"description":"EunhyeokPark/caffe-WQ caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"EunhyeokPark","full_link":"https://github.com/EunhyeokPark/caffe-WQ"},{"name":"edz504/lstm_dd","artist":"caff, model, learn, bvlc, refer","id":452,"playcount":2124,"description":"edz504/lstm_dd caff, model, learn, bvlc, refer   Please see  my senior thesis repo  https   github com edz504 thesis  for documented additions to the base Caffe directory   The content below is included directly from the master branch of Caffe      Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"edz504","full_link":"https://github.com/edz504/lstm_dd"},{"name":"Santiago810/caffe-san","artist":"caff, learn, model, framework, vision","id":453,"playcount":2102,"description":"Santiago810/caffe-san caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Santiago810","full_link":"https://github.com/Santiago810/caffe-san"},{"name":"maunzzz/caffe-crfgd","artist":"caff, model, arxiv, year, fast","id":454,"playcount":2393,"description":"maunzzz/caffe-crfgd caff, model, arxiv, year, fast   Caffe crfgd Public repository containing implementations of the work done in  A Projected Gradient Descent Method for CRF Inference Allowing End to End Training of Arbitrary Pairwise Potentials  and  Revisiting Deep Structured Models in Semantic Segmentation with Gradient Based Inference   The latter is not yet published but can be found as a part of  End to End Learning of Deep Structured Models for Semantic Segmentation    This repository also uses code from  this repo  https   github com MPI IS bilateralNN  that implements  Learning sparse high dimensional filters   Image Filtering  Dense CRFs and Bilateral Neural Networks       Usage The different types of CRF models presented in the paper are implemented as caffe layers  For example usage see the crfgd tools folder  This folder contains code for data handling  training and result visualization      Citation Please consider citing the following publications if it helps your research     PhdThesis crfe2e2018     author         Larsson  M  aa ns      title         End to End Learning of Deep Structured Models for Semantic Segmentation      school         Chalmers University of Technology  CTH   Gothenburg  Sweden      year         2018      type         Licentiate Thesis      month         Mar         InProceedings crfgd2018     author  Larsson  M  aa ns and Arnab  Anurag and Kahl  Fredrik and Zheng  Shuai and Torr  Philip   editor  Pelillo  Marcello and Hancock  Edwin      title  A Projected Gradient Descent Method for CRF Inference Allowing End to End Training of Arbitrary Pairwise Potentials      booktitle  Energy Minimization Methods in Computer Vision and Pattern Recognition      year  2018      publisher  Springer International Publishing      address  Cham      pages  564  579         Caffe License and Citation Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use    Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"maunzzz","full_link":"https://github.com/maunzzz/caffe-crfgd"},{"name":"xiaolonw/caffe-rgbd","artist":"caff, learn, model, framework, vision","id":455,"playcount":2117,"description":"xiaolonw/caffe-rgbd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          caffe render ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/caffe-rgbd"},{"name":"rickyHong/caffe-fast-rcnn-ms","artist":"caff, model, learn, bvlc, refer","id":456,"playcount":1924,"description":"rickyHong/caffe-fast-rcnn-ms caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/caffe-fast-rcnn-ms"},{"name":"xiaohujecky/caffe","artist":"caff, learn, model, framework, vision","id":457,"playcount":2102,"description":"xiaohujecky/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xiaohujecky","full_link":"https://github.com/xiaohujecky/caffe"},{"name":"ds2268/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":458,"playcount":2102,"description":"ds2268/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ds2268","full_link":"https://github.com/ds2268/caffe-fast-rcnn"},{"name":"herobd/caffe","artist":"caff, learn, model, framework, vision","id":459,"playcount":2102,"description":"herobd/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"herobd","full_link":"https://github.com/herobd/caffe"},{"name":"thijser/NeuroFunctional","artist":"caff, learn, model, framework, vision","id":460,"playcount":2120,"description":"thijser/NeuroFunctional caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          NeuroFunctional ","software":"md","book":"thijser","full_link":"https://github.com/thijser/NeuroFunctional"},{"name":"kovibalu/caffe-cnntools","artist":"caff, learn, model, framework, vision","id":461,"playcount":2102,"description":"kovibalu/caffe-cnntools caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kovibalu","full_link":"https://github.com/kovibalu/caffe-cnntools"},{"name":"532867531/caffe","artist":"caff, learn, model, framework, vision","id":462,"playcount":2102,"description":"532867531/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"532867531","full_link":"https://github.com/532867531/caffe"},{"name":"alex-tolstov/sparseconv","artist":"caff, model, learn, bvlc, refer","id":463,"playcount":1924,"description":"alex-tolstov/sparseconv caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"alex-tolstov","full_link":"https://github.com/alex-tolstov/sparseconv"},{"name":"zhoupengML/slllsllld","artist":"caff, learn, model, framework, vision","id":464,"playcount":2102,"description":"zhoupengML/slllsllld caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhoupengML","full_link":"https://github.com/zhoupengML/slllsllld"},{"name":"chaos5958/caffe-TX2","artist":"caff, learn, model, framework, vision","id":465,"playcount":2102,"description":"chaos5958/caffe-TX2 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"chaos5958","full_link":"https://github.com/chaos5958/caffe-TX2"},{"name":"rksltnl/Song-ICML2014-release1","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":466,"playcount":2658,"description":"rksltnl/Song-ICML2014-release1 “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> Song ICML2014                    Citing the paper    inproceedings Song ICML2014    title    On learning to localize objects with minimum supervision     booktitle    International Conference on Machine Learning  ICML      year    2014      author    Hyun Oh Song and Ross Girshick and Stefanie Jegelka and Julien Mairal and Zaid Harchaoui and Trevor Darrell           License  This code is released under the Simplified BSD License  refer to the LICENSE file for details        System Requirements   Linux   MATLAB       Install instructions  1  Download and install R CNN code  https   github com rbgirshick rcnn  2  Following the instructions in R CNN code  precompute fc7 features on the dataset  i e  PASCAL VOC 2007  3  Unpack this code  4  Start Matlab where the unpacked code is  5  Mex compile the simplex projection cc code      curdir pwd  cd  projsplx    mex projsplx c float cc  cd curdir         Train   Test work flow  Extract  not finetuned  and save fc7 features on all Selective Search windows on your dataset  i e  PASCAL VOC2007     Cluster features    Initial detector training via coverage maximization    Refine via Smooth Latent SVM    Test the detectors       Usage   A  Feature extraction on SS windows    1  Following the instructions in R CNN code  precompute fc7 features    2  Save features under feat cache voc 2007 flip 0 layer fc7 finetuned 0    B  Clustering  This is the slowest and the most computationally expensive step  Suggestions are welcomed  If you want to short cut and get a list of estimated foreground boxes on PASCAL 2007 trainval for all 20 classes  Check  saved foreground coords  directory    1  On cluster  launch  cluster patches parallel single nogt 20x1 m  in parallel with inputs  positive image id  classid   The first argument goes from 1    positive image per class  The second argument goes from 1   20    2  This will save about 70GB of clustering results for PASCAL VOC2007 under directory  paris results nogt 20x1  s  d mat  where the first string is for the image id and the second integer if for class id  1 20     C  Initial detector training via coverage maximization    1  Start matlab    2  Launch  train classes 20x1 smooth greedycover m  with input  classid    D  Refine via Smooth Latent SVM    1  Start matlab   2  Launch  train classes 20x1 smooth lsvm topK bagmine greedycover m  with input  classid    E  Test the detectors    1  Start matlab   2  Launch  eval classes 20x1 smooth lsvm topK bagmine greedycover m  with input  classid    3   optional  to save a nicely parsed table of AP numbers for each class  launch   parse smooth lsvm topK bagmine greedycover maxiter june17 m   ","software":"md","book":"rksltnl","full_link":"https://github.com/rksltnl/Song-ICML2014-release1"},{"name":"parmance/hsa-caffe","artist":"caff, learn, model, communiti, releas","id":467,"playcount":2130,"description":"parmance/hsa-caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"parmance","full_link":"https://github.com/parmance/hsa-caffe"},{"name":"maheenRashid/caffe","artist":"caff, model, learn, bvlc, refer","id":468,"playcount":1924,"description":"maheenRashid/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"maheenRashid","full_link":"https://github.com/maheenRashid/caffe"},{"name":"borisgin/nvcaffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":469,"playcount":2185,"description":"borisgin/nvcaffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v6        Automatic selection of the best cuDNN convolution algorithm        Integration with v1 3 4 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"borisgin","full_link":"https://github.com/borisgin/nvcaffe"},{"name":"zengzhaoyang/caffe_mask","artist":"caff, learn, model, framework, vision","id":470,"playcount":2102,"description":"zengzhaoyang/caffe_mask caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zengzhaoyang","full_link":"https://github.com/zengzhaoyang/caffe_mask"},{"name":"niuchuangnn/Caffe_custom","artist":"caff, learn, model, framework, vision","id":471,"playcount":2102,"description":"niuchuangnn/Caffe_custom caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"niuchuangnn","full_link":"https://github.com/niuchuangnn/Caffe_custom"},{"name":"wanglukun/ssd","artist":"caff, learn, model, framework, vision","id":472,"playcount":2102,"description":"wanglukun/ssd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wanglukun","full_link":"https://github.com/wanglukun/ssd"},{"name":"grapeot/caffeWindows","artist":"caff, model, learn, bvlc, refer","id":473,"playcount":1924,"description":"grapeot/caffeWindows caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"grapeot","full_link":"https://github.com/grapeot/caffeWindows"},{"name":"highclow/caffe","artist":"caff, learn, model, framework, vision","id":474,"playcount":2102,"description":"highclow/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"highclow","full_link":"https://github.com/highclow/caffe"},{"name":"abaelhe/BERKELEY-VISION-AND-LEARNING-CENTER","artist":"caff, learn, model, framework, vision","id":475,"playcount":2102,"description":"abaelhe/BERKELEY-VISION-AND-LEARNING-CENTER caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"abaelhe","full_link":"https://github.com/abaelhe/BERKELEY-VISION-AND-LEARNING-CENTER"},{"name":"thommiano/caffe_lrcn_joel","artist":"caff, model, learn, bvlc, refer","id":476,"playcount":1924,"description":"thommiano/caffe_lrcn_joel caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"thommiano","full_link":"https://github.com/thommiano/caffe_lrcn_joel"},{"name":"vineet54/Papers-on-large-mini-batch-SGD","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":477,"playcount":2133,"description":"vineet54/Papers-on-large-mini-batch-SGD “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Papers on large mini batch SGD  There has been a lot interesting work on training with large batches recently  This is a list of papers on large batch distributed training of deep learning models     Accurate  Large Minibatch SGD  Training ImageNet in 1 Hour   pdf   https   arxiv org abs 1706 02677      Priya Goyal  Piotr Doll r  Ross Girshick  Pieter Noordhuis  Lukasz Wesolowski  Aapo Kyrola  Andrew Tulloch  Yangqing Jia  Kaiming He      Extremely Large Minibatch SGD  Training ResNet 50 on ImageNet in 15 Minutes   pdf   https   arxiv org pdf 1711 04325      Takuya Akiba  Shuji Suzuki  Keisuke Fukuda      100 epoch ImageNet Training with AlexNet in 24 Minutes   pdf   https   arxiv org pdf 1711 04325      You  Y   Zhang  Z   Hsieh  C J  and Demmel  J       Scale out for large minibatch SGD  Residual network training on ImageNet 1K with improved accuracy and reduced time to train   pdf   https   arxiv org abs 1711 04291      Valeriu Codreanu  Damian Podareanu  Vikram Saletore      Train longer  generalize better  closing the generalization gap in large batch training of neural networks   pdf   https   arxiv org pdf 1705 08741      Hoffer  E   Hubara  I  and Soudry  D       Gradient Diversity  a Key Ingredient for Scalable Distributed Learning   pdf   https   arxiv org abs 1705 08741      Dong Yin  Ashwin Pananjady  Max Lam  Dimitris Papailiopoulos  Kannan Ramchandran  Peter Bartlett      On Large Batch Training for Deep Learning  Generalization Gap and Sharp Minima   pdf   https   arxiv org abs 1609 04836      Nitish Shirish Keskar  Dheevatsa Mudigere  Jorge Nocedal  Mikhail Smelyanskiy  Ping Tak Peter Tang    Don t Decay the Learning Rate  Increase the Batch Size   pdf   https   arxiv org abs 1711 00489      Smith  S L   Kindermans  P J  and Le  Q V       ImageNet Training in Minutes   pdf   https   arxiv org abs 1709 05011 context cs      Yang You  Zhao Zhang  Cho Jui Hsieh  James Demmel  Kurt Keutzer    Deep Gradient Compression  Reducing the Communication Bandwidth for Distributed Training   pdf   https   arxiv org abs 1712 01887      Yujun Lin  Song Han  Huizi Mao  Yu Wang  William J  Dally ","software":"md","book":"vineet54","full_link":"https://github.com/vineet54/Papers-on-large-mini-batch-SGD"},{"name":"rickyHong/Caffe_action_cnn","artist":"caff, model, learn, bvlc, refer","id":478,"playcount":1924,"description":"rickyHong/Caffe_action_cnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/Caffe_action_cnn"},{"name":"zengzhaoyang/caffe","artist":"caff, learn, model, framework, vision","id":479,"playcount":2102,"description":"zengzhaoyang/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zengzhaoyang","full_link":"https://github.com/zengzhaoyang/caffe"},{"name":"jhung0/caffe","artist":"caff, model, learn, bvlc, refer","id":480,"playcount":1924,"description":"jhung0/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jhung0","full_link":"https://github.com/jhung0/caffe"},{"name":"lilyzimu/caffecook","artist":"caff, learn, model, framework, vision","id":481,"playcount":2102,"description":"lilyzimu/caffecook caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lilyzimu","full_link":"https://github.com/lilyzimu/caffecook"},{"name":"nguyenhoangson/caffe-backup","artist":"caff, learn, model, framework, vision","id":482,"playcount":2102,"description":"nguyenhoangson/caffe-backup caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"nguyenhoangson","full_link":"https://github.com/nguyenhoangson/caffe-backup"},{"name":"lidong04/caffe_tray","artist":"caff, learn, model, framework, vision","id":483,"playcount":2102,"description":"lidong04/caffe_tray caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lidong04","full_link":"https://github.com/lidong04/caffe_tray"},{"name":"mcahny/caffe","artist":"caff, learn, model, framework, vision","id":484,"playcount":2246,"description":"mcahny/caffe caff, learn, model, framework, vision   Note Please   do not fork   this branch directly  It is auto generated by the  make future sh  script and will get overwritten periodically     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mcahny","full_link":"https://github.com/mcahny/caffe"},{"name":"seasker/caffe-seasker","artist":"caff, learn, model, framework, vision","id":485,"playcount":2102,"description":"seasker/caffe-seasker caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"seasker","full_link":"https://github.com/seasker/caffe-seasker"},{"name":"CosmosHua/DeMeshFace","artist":"caff, learn, model, framework, vision","id":486,"playcount":2225,"description":"CosmosHua/DeMeshFace caff, learn, model, framework, vision   Caffe for DeMeshNet  Spatial transformer layer is adopted from https   github com daerduoCarey SpatialTransformerLayer     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CosmosHua","full_link":"https://github.com/CosmosHua/DeMeshFace"},{"name":"stephenyan1231/caffe-hybridnet","artist":"caff, learn, model, framework, vision","id":487,"playcount":2102,"description":"stephenyan1231/caffe-hybridnet caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"stephenyan1231","full_link":"https://github.com/stephenyan1231/caffe-hybridnet"},{"name":"Steven-Ho/caffe-multilabel","artist":"caff, model, learn, bvlc, refer","id":488,"playcount":1924,"description":"Steven-Ho/caffe-multilabel caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Steven-Ho","full_link":"https://github.com/Steven-Ho/caffe-multilabel"},{"name":"DannyDelott/caffe","artist":"caff, model, learn, bvlc, refer","id":489,"playcount":1924,"description":"DannyDelott/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"DannyDelott","full_link":"https://github.com/DannyDelott/caffe"},{"name":"moushuai/caffe","artist":"caff, model, learn, bvlc, refer","id":490,"playcount":1924,"description":"moushuai/caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"moushuai","full_link":"https://github.com/moushuai/caffe"},{"name":"FuchenUSTC/caffe","artist":"caff, learn, model, framework, vision","id":491,"playcount":2102,"description":"FuchenUSTC/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"FuchenUSTC","full_link":"https://github.com/FuchenUSTC/caffe"},{"name":"whitenightwu/caffe-pruning","artist":"caff, learn, model, framework, vision","id":492,"playcount":2102,"description":"whitenightwu/caffe-pruning caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"whitenightwu","full_link":"https://github.com/whitenightwu/caffe-pruning"},{"name":"swift-n-brutal/caffe","artist":"caff, learn, model, framework, vision","id":493,"playcount":2102,"description":"swift-n-brutal/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"swift-n-brutal","full_link":"https://github.com/swift-n-brutal/caffe"},{"name":"shubhtuls/caffePose","artist":"caff, model, learn, bvlc, refer","id":494,"playcount":1924,"description":"shubhtuls/caffePose caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"shubhtuls","full_link":"https://github.com/shubhtuls/caffePose"},{"name":"LisaAnne/set2set","artist":"caff, model, learn, bvlc, refer","id":495,"playcount":1924,"description":"LisaAnne/set2set caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"LisaAnne","full_link":"https://github.com/LisaAnne/set2set"},{"name":"xiaolonw/fast-rcnn-normal","artist":"caff, shell, model, make, requir","id":496,"playcount":3798,"description":"xiaolonw/fast-rcnn-normal caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation   fast rcnn backup ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/fast-rcnn-normal"},{"name":"dingjie1993/lower-caffe","artist":"caff, learn, model, framework, vision","id":497,"playcount":2118,"description":"dingjie1993/lower-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          lower   caffe ","software":"md","book":"dingjie1993","full_link":"https://github.com/dingjie1993/lower-caffe"},{"name":"alessandroferrari/R-CNN-Object-detection","artist":"python, caff, box, detect, object","id":498,"playcount":2155,"description":"alessandroferrari/R-CNN-Object-detection python, caff, box, detect, object   R CNN Object detection Python caffe simplified implementation of the R CNN object detection method    I have taken as a starting point the caffe ipython notebook available at http   nbviewer ipython org github BVLC caffe blob master examples detection ipynb    Thus  for getting the model and all the other files I recommend to take a look there   The tutorial requires the use of matlab code for calculating selective search bounding boxes  This make it hard to use and slow    Thus  I have implemented bounding boxes proposal with a pythonized BING that I have implemented in another repository     I have also changed the interaction with the script so that the result is a nicer demo  At the end of the execution  you get an immediate visual response of the results of the classifier on the selected image   Objects detection takes approximately 15 seconds for image on an Intel i7 4930K processor and an Nvidia Titan Black GPU   Dependencies     Python   Caffe   numpy   opencv   scikit image   BING Objectness  available at https   github com alessandroferrari BING Objectness    For explaination on the usage     Move to the repository folder on your command line    type  cd source    type  python detect py  h  for getting complete synopsys about the program   Example of usage  python detect py   crop mode bing    pretrained model  path to caffe models bvlc reference rcnn ilsvrc13 bvlc reference rcnn ilsvrc13 caffemodel    model def  path to caffe models bvlc reference rcnn ilsvrc13 deploy prototxt    mean file  path to caffe python caffe imagenet ilsvrc 2012 mean npy   gpu    raw scale 255   weights 1st stage bing  path to BING Objectness doc weights txt    sizes idx bing  path to BING Objectness doc sizes txt    weights 2nd stage bing  path to BING Objectness doc 2nd stage weights json    num bbs final 2000   detection threshold 0 1  path to pictures image jpg   path to results output jpg  path to caffe data ilsvrc12 det synset words txt  Acknowledgments  Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik and to the Caffe folks   Authors  Alessandro Ferrari   alessandroferrari87 gmail com  Licensing  gpl 3 0  Enjoy ","software":"md","book":"alessandroferrari","full_link":"https://github.com/alessandroferrari/R-CNN-Object-detection"},{"name":"leehomyc/caffe_lmdb","artist":"caff, model, learn, bvlc, refer","id":499,"playcount":2021,"description":"leehomyc/caffe_lmdb caff, model, learn, bvlc, refer   Caffe    Note    Read about the new features in this branch in  BRANCHFEATURES md  BRANCHFEATURES md    Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"leehomyc","full_link":"https://github.com/leehomyc/caffe_lmdb"},{"name":"iori/my_caffe","artist":"caff, learn, model, framework, vision","id":500,"playcount":2102,"description":"iori/my_caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"iori","full_link":"https://github.com/iori/my_caffe"},{"name":"BestSonny/apollocaffe","artist":"caff, model, learn, bvlc, refer","id":501,"playcount":1924,"description":"BestSonny/apollocaffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"BestSonny","full_link":"https://github.com/BestSonny/apollocaffe"},{"name":"bkj/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":502,"playcount":2102,"description":"bkj/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bkj","full_link":"https://github.com/bkj/caffe-fast-rcnn"},{"name":"kityan147/Car-License-Plate-Recognition","artist":"rcnn, train, detect, network, faster","id":503,"playcount":2131,"description":"kityan147/Car-License-Plate-Recognition rcnn, train, detect, network, faster   Car License Plate Recognition Using Faster RCNN and KNN to perform Car License Plate Recognition  This project uses the Faster RCNN to localize the car license plate  Then  the localized car license plate will be cropped and resize in to larger image  By obtaining the Hue value and convert it into a binary threshold image noise cancelling with tophat filter can easily differentiate different character  The characters recognition uses K Nearest Neighbour  K   1  with a pre trained classifiction value to determine the character   The neural network architecture can be found in the model folder  There are 3  prototxt files  1  train prototxt       The network architecture definition with specified Input data layer for training        It has 5 convolutional layers  Region Proposal Network   Softmax with loss layer for labels and Smooth L1 loss for bounding box     prediction  2  text prototxt       The network architecture definition with non specified Input data layer for testing        It has 5 convolutional layers  Region Proposal Network   Softmax layer for class probability  which is similar to the train prototxt  3  solver prototxt       This prototxt defines the learning parameters of the training process        The learning parameters that include           Base Learning Rate          Learning Rate Policy  like step down exponential          Gamma for learning rate          Step size          Display Prompt          Average loss          Weight Decay   The demo can be performed with the demo plate number py in tools folder  The following code has to be modified before it runs       prototxt     Path of test prototxt    caffemodel     Path of the pre trained caffe model         im names      Path of the desired image            Reference     renNIPS15fasterrcnn     Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun       Title    Faster  R CNN   Towards Real Time Object Detection              with Region Proposal Networks       Booktitle    Advances in Neural Information Processing Systems   NIPS         Year    2015           https   github com rbgirshick py faster rcnn ","software":"md","book":"kityan147","full_link":"https://github.com/kityan147/Car-License-Plate-Recognition"},{"name":"xiaolonw/fast-rcnn-hha","artist":"caff, shell, model, make, requir","id":504,"playcount":3779,"description":"xiaolonw/fast-rcnn-hha caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/fast-rcnn-hha"},{"name":"dbxinj/tianchi","artist":"caff, learn, model, framework, vision","id":505,"playcount":2102,"description":"dbxinj/tianchi caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dbxinj","full_link":"https://github.com/dbxinj/tianchi"},{"name":"Maratyszcza/caffe-nnpack","artist":"caff, learn, model, framework, vision","id":506,"playcount":2102,"description":"Maratyszcza/caffe-nnpack caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Maratyszcza","full_link":"https://github.com/Maratyszcza/caffe-nnpack"},{"name":"charlesq34/caffe-render-for-cnn","artist":"caff, model, learn, bvlc, refer","id":507,"playcount":1924,"description":"charlesq34/caffe-render-for-cnn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"charlesq34","full_link":"https://github.com/charlesq34/caffe-render-for-cnn"},{"name":"caomw/fast-rcnn-depth","artist":"caff, shell, model, make, requir","id":508,"playcount":3779,"description":"caomw/fast-rcnn-depth caff, shell, model, make, requir   Cross Modal Distillation for Supervision Transfer Saurabh Gupta  Judy Hoffman  Jitendra Malik  This codebase allows use of RGB D object detection models from this  arXiv tech report  http   arxiv org abs 1507 00448         License  This code base is built on Fast R CNN  License for Fast R CNN can be found in LICENSE fast rcnn       Citing   If you find this code base and models useful in your research  please consider citing an appropriate sub set of the following papers        article gupta2015cross        title  Cross Modal Distillation for Supervision Transfer         author  Gupta  Saurabh and Hoffman  Judy and Malik  Jitendra         journal  arXiv preprint arXiv 1507 00448         year  2015              incollection gupta2014learning        title  Learning rich features from RGB D images for object detection and segmentation         author  Gupta  Saurabh and Girshick  Ross and Arbel   a ez  Pablo and Malik  Jitendra         booktitle  Computer Vision  ECCV 2014         pages  345  360         year  2014         publisher  Springer              article girshick15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Journal    arXiv preprint arXiv 1504 08083           Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the repository      Shell     Clone the python code   git clone git github com s gupta fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT   Clone Caffe with roi pooling layers          Shell     cd  FRCNN ROOT     git clone https   github com rbgirshick caffe fast rcnn git caffe fast rcnn     cd caffe fast rcnn       caffe fast rcnn needs to be on the fast rcnn branch  or equivalent detached state       git checkout fast rcnn              3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do        Make sure caffe is built with PYTHON layers      make  j8    make pycaffe                  Download models and data 1  Download the NYUD2 data       Shell   cd  FRCN ROOT     data scripts fetch nyud2 data sh         2  Download the NYUD2 MCG boxes       Shell   cd  FRCN ROOT     data scripts fetch nyud2 mcg boxes sh        3  Download the ImageNet and Supervision Transfer Models        Shell   cd  FRCN ROOT     data scripts fetch init models sh        4  Fetch NYUD2 Object Detector Models        Shell   cd  FRCN ROOT     outputs scripts fetch nyud2 detectors sh            Usage  Look at experiments test pretrained models sh and experiments train models sh to use pretrained models and train your models yourself    fast rcnn distillation ","software":"md","book":"caomw","full_link":"https://github.com/caomw/fast-rcnn-depth"},{"name":"sharpstill/caffe_with_comment","artist":"caff, learn, model, framework, vision","id":509,"playcount":2247,"description":"sharpstill/caffe_with_comment caff, learn, model, framework, vision         HEAD   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                  caffe with comment copy from BVLC caffe and add Chinese language comment         1e4ba315f21da1c63b11678fdbfb49c0fefcf6c3 ","software":"md","book":"sharpstill","full_link":"https://github.com/sharpstill/caffe_with_comment"},{"name":"ctensmeyer/caffe-cs484","artist":"caff, learn, model, framework, vision","id":510,"playcount":2102,"description":"ctensmeyer/caffe-cs484 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ctensmeyer","full_link":"https://github.com/ctensmeyer/caffe-cs484"},{"name":"faustomilletari/3D-Caffe","artist":"caff, model, learn, bvlc, refer","id":511,"playcount":1924,"description":"faustomilletari/3D-Caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"faustomilletari","full_link":"https://github.com/faustomilletari/3D-Caffe"},{"name":"CastellanLiu/cdvm-gpu","artist":"caff, learn, model, framework, vision","id":512,"playcount":2102,"description":"CastellanLiu/cdvm-gpu caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"CastellanLiu","full_link":"https://github.com/CastellanLiu/cdvm-gpu"},{"name":"sunke123/FW-Net","artist":"caff, model, arxiv, year, fast","id":513,"playcount":1915,"description":"sunke123/FW-Net caff, model, arxiv, year, fast   FW Net FW Net for image denoising  Our Configurations  CUDA 8 0  cudnn v5  Python 2 7  GPU 1080Ti   I trained these models on windows servers  I will release the DLLs of windows caffe asap   This code is based on Linux Caffe  including training and testing parts   Our models are under the folder  pretrained model    You can check the details in our paper   https   arxiv org abs 1802 10252   This code will be continually updated  If you have any question  please feel free to contact me   E Mail  sunk mail ustc edu cn  if it helps your research  please cite our paper        article fw net        Author    Ke Sun and Zhangyang Wang and Dong Liu and Runsheng Liu         Journal    CoRR         Title    L p Norm Constrained Coding With Frank Wolfe Network         Year    2018           Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors      Installation instructions  http   caffe berkeleyvision org installation html      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"sunke123","full_link":"https://github.com/sunke123/FW-Net"},{"name":"GuideWsp/caffe","artist":"caff, model, learn, communiti, berkeley","id":514,"playcount":2482,"description":"GuideWsp/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"GuideWsp","full_link":"https://github.com/GuideWsp/caffe"},{"name":"yuxi5002/caffe-master","artist":"caff, model, learn, communiti, berkeley","id":515,"playcount":2487,"description":"yuxi5002/caffe-master caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yuxi5002","full_link":"https://github.com/yuxi5002/caffe-master"},{"name":"tuonion/caffe-master2","artist":"caff, learn, model, framework, vision","id":516,"playcount":2102,"description":"tuonion/caffe-master2 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tuonion","full_link":"https://github.com/tuonion/caffe-master2"},{"name":"Anna0509/caffe_","artist":"caff, learn, model, framework, vision","id":517,"playcount":2102,"description":"Anna0509/caffe_ caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Anna0509","full_link":"https://github.com/Anna0509/caffe_"},{"name":"bobo0892/caffe-minist","artist":"caff, model, learn, bvlc, refer","id":518,"playcount":1924,"description":"bobo0892/caffe-minist caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bobo0892","full_link":"https://github.com/bobo0892/caffe-minist"},{"name":"kiran4399/my_caffe","artist":"caff, learn, model, framework, vision","id":519,"playcount":2102,"description":"kiran4399/my_caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kiran4399","full_link":"https://github.com/kiran4399/my_caffe"},{"name":"mcahny/caffe1","artist":"caff, learn, model, framework, vision","id":520,"playcount":2102,"description":"mcahny/caffe1 caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mcahny","full_link":"https://github.com/mcahny/caffe1"},{"name":"Robert0812/apollocaffe","artist":"caff, model, learn, bvlc, refer","id":521,"playcount":1924,"description":"Robert0812/apollocaffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Robert0812","full_link":"https://github.com/Robert0812/apollocaffe"},{"name":"cjld/mycaffe","artist":"caff, model, learn, bvlc, refer","id":522,"playcount":1924,"description":"cjld/mycaffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cjld","full_link":"https://github.com/cjld/mycaffe"},{"name":"dingdingcai/caffe-convlstm2d","artist":"caff, learn, model, framework, vision","id":523,"playcount":2102,"description":"dingdingcai/caffe-convlstm2d caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dingdingcai","full_link":"https://github.com/dingdingcai/caffe-convlstm2d"},{"name":"kafkafield/caffe_nhwb","artist":"caff, learn, model, framework, vision","id":524,"playcount":2102,"description":"kafkafield/caffe_nhwb caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kafkafield","full_link":"https://github.com/kafkafield/caffe_nhwb"},{"name":"danny1984/caffe_reading","artist":"caff, learn, model, framework, vision","id":525,"playcount":2102,"description":"danny1984/caffe_reading caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"danny1984","full_link":"https://github.com/danny1984/caffe_reading"},{"name":"lrg1213/Caffe_action","artist":"caff, model, learn, bvlc, refer","id":526,"playcount":2009,"description":"lrg1213/Caffe_action caff, model, learn, bvlc, refer         HEAD   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                  Caffe action         cb1445a82f90e13833ad14075b4a7e1f7983dc6d ","software":"md","book":"lrg1213","full_link":"https://github.com/lrg1213/Caffe_action"},{"name":"jihyoun0331/Caffe_SSD_","artist":"caff, learn, model, framework, vision","id":527,"playcount":2102,"description":"jihyoun0331/Caffe_SSD_ caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jihyoun0331","full_link":"https://github.com/jihyoun0331/Caffe_SSD_"},{"name":"gaoyongwyl/VmmrAuxLinux","artist":"caff, model, learn, bvlc, refer","id":528,"playcount":1924,"description":"gaoyongwyl/VmmrAuxLinux caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"gaoyongwyl","full_link":"https://github.com/gaoyongwyl/VmmrAuxLinux"},{"name":"bharath272/caffe-sds","artist":"caff, model, learn, bvlc, refer","id":529,"playcount":1924,"description":"bharath272/caffe-sds caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bharath272","full_link":"https://github.com/bharath272/caffe-sds"},{"name":"WilsonWangTHU/pedestrian-detection-thu2015","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":530,"playcount":2179,"description":"WilsonWangTHU/pedestrian-detection-thu2015 “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Pedestrian Detection with DPM Created by Tingwu Wang at Sense Time  Beijing and also with Tsinghua University   It is a course projects  and sorry we have only a linux port one       Citing and based ons This pedestrian detection is based on the work of DPM and libccv  If you want to cite the original work  please cite    article girshick15fastrcnn    Author    Ross Girshick     Title    Fast R CNN     Journal    arXiv preprint arXiv 1504 08083     Year    2015       misc libccv    author          Liu Liu     title           C based Cached Core Computer Vision Library  A Modern Computer Vision Library     howpublished    https   github com liuliu ccv          License This pedestrian detector is under the MIT License  refer to the LICENSE file for details         Requirement  software 1  The libccv dependency     Shell  lm  lcblas  latlas  lpng  ljpeg  lfftw3  lfftw3f  lpthread  llinear  lavcodec  lavformat  lswscale  lgsl  lgslcblas  lcuda  lcudart  lcublas  L usr local cuda lib64     The cuda  cblas  atlas is what you really need to get  Other packages  you either already have it in Ubuntu  or could easily install using a sudo trick  2  OpenCV library with 2 6  3  g   with 4 6 or earlier      Requirements  hardware A GPU that support CUDA 7  or CUDA 6  earlier versions are your own adventures  cause I don t know what will happen       Requirements  Data The data is a big issue  Check out the  PEDESTRIAN data whats in the data directory png It lists all the data I used to run the projects  Take a look in the source file  PEDESTRIAN pedestrian   download what is necessary       install 1  make sure you download all the lib you need  2  make the ccv library by      shell  cd lib    configure    make      3  download the data you need  check out the     shell  pedestrian detection thu2015 data whats in the data directory png       4  Using the g   to compile the source code      shell  cd pedestrian detection thu2015 pedestrian   g            Remember to add the ccv dependency in  lib  dep  and the ccv lib you just make in the step 2  and the OpenCV lib of course  5  The results is stored in the  data results  or change the path if you want  ","software":"md","book":"WilsonWangTHU","full_link":"https://github.com/WilsonWangTHU/pedestrian-detection-thu2015"},{"name":"madiken/caffe-CUDNN-fork","artist":"caff, model, learn, bvlc, refer","id":531,"playcount":1925,"description":"madiken/caffe-CUDNN-fork caff, model, learn, bvlc, refer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"madiken","full_link":"https://github.com/madiken/caffe-CUDNN-fork"},{"name":"liruoteng/Caffe","artist":"caff, learn, model, framework, vision","id":532,"playcount":2102,"description":"liruoteng/Caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"liruoteng","full_link":"https://github.com/liruoteng/Caffe"},{"name":"chenhui-bupt/BVLC-caffe","artist":"caff, learn, model, framework, vision","id":533,"playcount":2102,"description":"chenhui-bupt/BVLC-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"chenhui-bupt","full_link":"https://github.com/chenhui-bupt/BVLC-caffe"},{"name":"vohoaiviet/caffe-face","artist":"caff, learn, model, framework, vision","id":534,"playcount":2102,"description":"vohoaiviet/caffe-face caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"vohoaiviet","full_link":"https://github.com/vohoaiviet/caffe-face"},{"name":"panzhenfu/caffe_Unsupervised_Depth_Estimation","artist":"caff, learn, model, communiti, releas","id":535,"playcount":2130,"description":"panzhenfu/caffe_Unsupervised_Depth_Estimation caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"panzhenfu","full_link":"https://github.com/panzhenfu/caffe_Unsupervised_Depth_Estimation"},{"name":"yshean/new-recurrent-unpooling","artist":"caff, learn, model, framework, vision","id":536,"playcount":2102,"description":"yshean/new-recurrent-unpooling caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yshean","full_link":"https://github.com/yshean/new-recurrent-unpooling"},{"name":"ganyk/LSTM-CF","artist":"caff, model, learn, bvlc, refer","id":537,"playcount":1928,"description":"ganyk/LSTM-CF caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples          Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ganyk","full_link":"https://github.com/ganyk/LSTM-CF"},{"name":"MudeLin/caffe_cpm","artist":"caff, learn, model, framework, vision","id":538,"playcount":2225,"description":"MudeLin/caffe_cpm caff, learn, model, framework, vision   Add  CPM Training code  https   github com shihenw convolutional pose machines release  to recently published Caffe        Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"MudeLin","full_link":"https://github.com/MudeLin/caffe_cpm"},{"name":"yupinggong/caffe-PS","artist":"caff, learn, model, framework, vision","id":539,"playcount":2102,"description":"yupinggong/caffe-PS caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yupinggong","full_link":"https://github.com/yupinggong/caffe-PS"},{"name":"szymonzareba/perturb_and_map_caffe","artist":"caff, model, learn, bvlc, refer","id":540,"playcount":1924,"description":"szymonzareba/perturb_and_map_caffe caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"szymonzareba","full_link":"https://github.com/szymonzareba/perturb_and_map_caffe"},{"name":"mmoghimi/caffe_bn","artist":"caff, model, learn, bvlc, refer","id":541,"playcount":1924,"description":"mmoghimi/caffe_bn caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mmoghimi","full_link":"https://github.com/mmoghimi/caffe_bn"},{"name":"zhoulinyuan/caffe","artist":"caff, learn, model, framework, vision","id":542,"playcount":2102,"description":"zhoulinyuan/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhoulinyuan","full_link":"https://github.com/zhoulinyuan/caffe"},{"name":"chetanmanjesh/seq2seq_video_to_caption_with_attention","artist":"caff, learn, model, framework, vision","id":543,"playcount":2102,"description":"chetanmanjesh/seq2seq_video_to_caption_with_attention caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"chetanmanjesh","full_link":"https://github.com/chetanmanjesh/seq2seq_video_to_caption_with_attention"},{"name":"kevjshih/caffe-kp","artist":"caff, model, learn, bvlc, refer","id":544,"playcount":1924,"description":"kevjshih/caffe-kp caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kevjshih","full_link":"https://github.com/kevjshih/caffe-kp"},{"name":"wopeizl/caffe-vs","artist":"caff, learn, model, communiti, releas","id":545,"playcount":2130,"description":"wopeizl/caffe-vs caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wopeizl","full_link":"https://github.com/wopeizl/caffe-vs"},{"name":"EnesGulg/caffe-master","artist":"caff, model, learn, bvlc, refer","id":546,"playcount":1924,"description":"EnesGulg/caffe-master caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"EnesGulg","full_link":"https://github.com/EnesGulg/caffe-master"},{"name":"nickvill/SSD-Caffe","artist":"caff, learn, model, framework, vision","id":547,"playcount":2102,"description":"nickvill/SSD-Caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"nickvill","full_link":"https://github.com/nickvill/SSD-Caffe"},{"name":"GBJim/caffe-PETA","artist":"caff, learn, model, framework, vision","id":548,"playcount":2102,"description":"GBJim/caffe-PETA caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"GBJim","full_link":"https://github.com/GBJim/caffe-PETA"},{"name":"ROCmSoftwarePlatform/hipCaffe","artist":"caff, learn, model, framework, vision","id":549,"playcount":2301,"description":"ROCmSoftwarePlatform/hipCaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            hipCaffe  the HIP Port of Caffe  For details on the HIP Port of Caffe  please take a look at the  README ROCm md  https   github com ROCmSoftwarePlatform hipCaffe blob hip README ROCm md  file   ","software":"md","book":"ROCmSoftwarePlatform","full_link":"https://github.com/ROCmSoftwarePlatform/hipCaffe"},{"name":"123chengbo/ssd-windows","artist":"caff, learn, model, framework, vision","id":550,"playcount":2102,"description":"123chengbo/ssd-windows caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"123chengbo","full_link":"https://github.com/123chengbo/ssd-windows"},{"name":"akosiorek/uncertainty","artist":"caff, learn, model, framework, vision","id":551,"playcount":2102,"description":"akosiorek/uncertainty caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"akosiorek","full_link":"https://github.com/akosiorek/uncertainty"},{"name":"clxiao/Paper_Reading_List","artist":"deep, learn, network, convolut, imag","id":552,"playcount":26407,"description":"clxiao/Paper_Reading_List deep, learn, network, convolut, imag   Recommended Papers   Maintenance  https   img shields io badge maintained yes brightgreen svg     DUB  https   img shields io badge MIT license brightgreen svg   LICENSE    The goal of this document is to provide a reading list for Deep Learning in Computer Vision Field       Recommended Links   new  https   img shields io badge docs New brightgreen svg     Deep Learning Paper Reading Roadmap from  songrotek  https   github com songrotek     If you are a newcomer to the Deep Learning area  the first question you may have is  Which paper should I start reading from       Here is a reading roadmap of Deep Learning papers    link   https   github com songrotek Deep Learning Papers Reading Roadmap     Deep Learning Paper list from  sbrugman  https   github com sbrugman       Deep Learning Papers by task    link   https   github com sbrugman deep learning papers     Deep Learning Paper Notes from  dennybritz  https   github com dennybritz       Summaries and notes on Deep Learning research papers   sorted by time    link   https   github com dennybritz deeplearning papernotes         Paper Collections     new  https   img shields io badge docs New brightgreen svg     CVPR 2017 papers related to Attention Model  CVPR2017 Attention model README md     Paper List for Instance Aware Tasks  Instance Aware Paper List README md       Topics Concerned    Salient Object Detection   salient object detection     Visual Object Tracking   visual object tracking     Object Detection   object detection     Object Localization   object localization     Semantic Segmentation and Scene Parsing   semantic segmentation and scene parsing     Edge Detection   edge detection     Pose Estimation   pose estimation     Super Resolution   super resolution     Image Classification   image classification     Others   others        Papers Paper list         Salient Object Detection  No    Figure    Title    Authors   Pub    Links                                                 1   MDF  data MDF png    Visual Saliency Based on Multiscale Deep Features    Guanbin Li  https   sites google com site ligb86    Yizhou Yu   CVPR 2015     project page   https   sites google com site ligb86 mdfsaliency     2   MCDL  data MCDL png    Saliency Detection by Multi context Deep Learning    Rui Zhao  http   www ee cuhk edu hk  rzhao    Wanli Ouyang  Hongsheng Li  Xiaogang Wang   CVPR 2015     paper   http   www ee cuhk edu hk  rzhao project deepsal cvpr15 zhaoOLWcvpr15 pdf    code   https   github com Robert0812 deepsaldet    3   LEGS  data LEGS png    Deep Networks for Saliency Detection via Local Estimation and Global Search   Lijun Wang  Huchuan Lu  Xiang Ruan  Ming Hsuan Yang   CVPR 2015     paper   http   www cv foundation org openaccess content cvpr 2015 papers Wang Deep Networks for 2015 CVPR paper pdf    code   https   drive google com file d 0B5rfGpkt3dDaVmhucE1jTVZGeTA view    4   DHS  data DHS png    DHSNet  Deep Hierarchical Saliency Network for Salient Object Detection    Nian Liu  https   sites google com site liunian228    Junwei Han   CVPR 2016     paper   http   www cv foundation org openaccess content cvpr 2016 papers Liu DHSNet Deep Hierarchical CVPR 2016 paper pdf    Google Drive   https   drive google com file d 0B1sbejbIJIW3RlJJY1NNNkFydEU view    Baidu Yun   https   pan baidu com s 1jIm8cfk   star    5   DCL  data DCL png    Deep Contrast Learning for Salient Object Detection    Guanbin Li  https   sites google com site ligb86    Yizhou Yu   CVPR 2016     project page   http   i cs hku hk  gbli deep saliency html    6   SU  data SU png    Saliency Unified  A Deep Architecture for Simultaneous Eye Fixation Prediction and Salient Object Segmentation   Srinivas S S Kruthiventi  Vennela Gudisa  Jaley H Dholakiya and R  Venkatesh Babu   CVPR 2016     project page   http   val serc iisc ernet in saliency unified     7   ELD  data ELD png    Deep Saliency with Encoded Low level Distance Map and High Level Features   Gayoung Lee  Yu Wing Tai  Junmo Kim   CVPR 2016     paper   http   www cv foundation org openaccess content cvpr 2016 papers Lee Deep Saliency With CVPR 2016 paper pdf    code   https   github com gylee1103 SaliencyELD    8   RAN  data RAN png    Recurrent Attentional Networks for Saliency Detection   Jason Kuen  Zhenhua Wang  Gang Wang   CVPR 2016     paper   http   www cv foundation org openaccess content cvpr 2016 papers Kuen Recurrent Attentional Networks CVPR 2016 paper pdf    9   DS  data DS png    DeepSaliency  Multi Task Deep Neural Network Model for Salient Object Detection   Xi Li  Liming Zhao  Lina Wei  Ming Hsuan Yang  Fei Wu  Yueting Zhuang  Haibin Ling  Jingdong Wang   TIP 2016     project page   http   www zhaoliming net research deepsaliency    10   SSD HS  data SSD HS png    A Shape Based Approach for Salient Object Detection Using Deep Learning    Jongpil Kim  http   www research cs rutgers edu  jpkim    Vladimir Pavlovic   ECCV 2016     paper   http   www research cs rutgers edu  jpkim papers jpkim eccv2016 pdf    Pre computed Maps   http   www research cs rutgers edu  jpkim papers resources ssd hs tar gz    11   RFCN  data RFCN png    Saliency Detection with Recurrent Fully Convolutional Networks   Linzhao Wang  Lijun Wang  Huchuan Lu  Pingping Zhang  Xiang Ruan   ECCV 2016     paper   https   www researchgate net profile Pingping Zhang6 publication 308278832 Saliency Detection with Recurrent Fully Convolutional Networks links 584b5da208aecb6bd8c157e0 Saliency Detection with Recurrent Fully Convolutional Networks pdf    code   https   drive google com file d 0B5rfGpkt3dDaODFRZ0ZXZjQyWDg view    12   DSS  data DSS png    Deeply Supervised Salient Object Detection with Short Connections   Qibin Hou   Ming Ming Cheng  http   mmcheng net cmm    Xiaowei Hu  Ali Borji   Zhuowen Tu  http   pages ucsd edu  ztu    Philip Torr   CVPR 2017     paper   https   arxiv org abs 1611 04849    github   https   github com Andrew Qibin DSS   star    13   NLDF  data NLDF png    Non Local Deep Features for Salient Object Detection   Zhiming Luo  Akshaya Mishra   Andrew Achkar   Justin Eichel   Shaozi Li   Pierre Marc Jodoin   CVPR 2017     project page   https   sites google com view zhimingluo nldf    14   MSRNet  data MSRNet png    Instance Level Salient Object Segmentation    Guanbin Li  https   sites google com site ligb86    Yuan Xie  Liang Lin  Yizhou Yu   CVPR 2017     paper   https   arxiv org pdf 1704 03604 pdf    github   https   github com Xyuan13 MSRNet    15   WSS  data WSS png    Learning to Detect Salient Objects with Image level Supervision   Lijun Wang  Huchuan Lu  Yifan Wang  Mengyang Feng  Dong Wang  Baocai Yin   Xiang Ruan   CVPR 2017     paper   http   saliencydetection net duts download camera ready pdf    github   https   github com scott89 WSS    16   DLS  data DLS png    Deep Level Sets for Salient Object Detection   Ping Hu  Bing Shuai  Jun Liu  Gang Wang   CVPR 2017     paper   http   openaccess thecvf com content cvpr 2017 papers Hu Deep Level Sets CVPR 2017 paper pdf    17   UCF  data UCF png    Learning Uncertain Convolutional Features for Accurate Saliency Detection   Pingping Zhang  Dong Wang  Huchuan Lu  Hongyu Wang  Baocai Yin   ICCV 2017     paper   https   arxiv org abs 1708 02031    github   https   github com Pchank caffe sal    18   Amulet  data Amulet png    Amulet  Aggregating Multi level Convolutional Features for Salient Object Detection   Pingping Zhang  Dong Wang  Huchuan Lu  Hongyu Wang  Xiang Ruan   ICCV 2017     paper   https   arxiv org abs 1708 02001    github   https   github com Pchank caffe sal          Visual Object Tracking  Recommended Homepage   OTB Results  This shares results for more recent trackers   https   github com foolwood benchmark results         Object Detection  No   Figure    Title    Authors   Pub    Links                                                 1   R CNN  data R CNN png    Rich feature hierarchies for accurate object detection and semantic segmentation   Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik   CVPR 2014     paper   http   www cv foundation org openaccess content cvpr 2014 papers Girshick Rich Feature Hierarchies 2014 CVPR paper pdf    github   https   github com rbgirshick rcnn   star    2   Fast R CNN  data Fast R CNN png    Fast R CNN   Ross Girshick   ICCV 2015     paper   http   www cv foundation org openaccess content iccv 2015 papers Girshick Fast R CNN ICCV 2015 paper pdf    github   https   github com rbgirshick fast rcnn   star    3   Faster R CNN  data Faster R CNN png    Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks   Shaoqing Ren   Kaiming He  http   kaiminghe com    Ross Girshick  Jian Sun   NIPS 2015     paper   http   papers nips cc paper 5638 faster r cnn towards real time object detection with region proposal networks pdf    matlab   https   github com ShaoqingRen faster rcnn    python   https   github com rbgirshick py faster rcnn    pytorch   https   github com longcw faster rcnn pytorch   star    4   CFM  data CFM png    Convolutional Feature Masking for Joint Object and Stuff Segmentation   Jifeng Dai   Kaiming He  http   kaiminghe com    Jian Sun   CVPR 2015     paper   http   www cv foundation org openaccess content cvpr 2015 papers Dai Convolutional Feature Masking 2015 CVPR paper pdf    5   MNC  data MNC png    Instance aware Semantic Segmentation via Multi task Network Cascades   Jifeng Dai   Kaiming He  http   kaiminghe com    Jian Sun   CVPR 2016     paper   http   www cv foundation org openaccess content cvpr 2016 papers Dai Instance Aware Semantic Segmentation CVPR 2016 paper pdf    github   https   github com daijifeng001 MNC   star    6   Region FCN  data Region FCN png    R FCN  Object Detection via Region based Fully Convolutional Networks   Jifeng Dai  Yi Li   Kaiming He  http   kaiminghe com    Jian Sun   NIPS 2016     paper   https   arxiv org abs 1605 06409    github   https   github com daijifeng001 R FCN    7   YOLO  data YOLO png    You Only Look Once  Unified  Real Time Object Detection   Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   CVPR 2016     paper   https   arxiv org abs 1506 02640    project page   http   pjreddie com yolo   star    8   SSD  data SSD png    SSD  Single Shot MultiBox Detector   Wei Liu  Dragomir Anguelov  Dumitru Erhan  Christian Szegedy  Scott Reed  Cheng Yang Fu  Alexander C  Berg   ECCV 2016     paper   https   arxiv org abs 1512 02325    github    https   github com weiliu89 caffe tree ssd   star    9   FPN  data FPN png    Feature Pyramid Networks for Object Detection   Tsung Yi Lin  Piotr Doll r  Ross Girshick   Kaiming He  http   kaiminghe com    Bharath Hariharan  and Serge Belongie   CVPR 2017     paper   https   arxiv org pdf 1612 03144 pdf    10   Mask R CNN  data Mask R CNN png    Mask R CNN   Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick   ICCV 2017     paper   https   arxiv org abs 1703 06870   star    11   A Fast R CNN  data A Fast R CNN png    A Fast RCNN  Hard Positive Generation via Adversary for Object Detection   Xiaolong Wang  Abhinav Shrivastava  Abhinav Gupta   CVPR 2017     paper   https   arxiv org abs 1704 03414     github   https   github com xiaolonw adversarial frcnn   star    12   MIDN  data MIDN png    Multiple Instance Detection Network with Online Instance Classifier Refinement   Peng Tang  Xinggang Wang  Xiang Bai  Wenyu Liu   CVPR 2017     paper   https   arxiv org abs 1704 00138    13   R FCN 3000  data R FCN 3000 png    R FCN 3000 at 30fps  Decoupling Detection and Classification   Bharat Singh  Hengdou Li  Abhishek Sharma and Larry S  Davis   Tech Report     paper   https   arxiv org abs 1712 01802          Object Localization  No    Figure    Title    Authors   Pub    Links                                                  1   SDS  data SDS png    Simultaneous Detection and Segmentation   Bharath Hariharan  Pablo Arbel ez  Ross Girshick  Jitendra Malik   ECCV 2014     paper   https   arxiv org abs 1407 1808   star    2   WSOL  data WSOL png    Deep Self Taught Learning for Weakly Supervised Object Localization   Zequn Jie  Yunchao Wei  Xiaojie Jin  Jiashi Feng  Wei Liu   CVPR 2017     paper   https   arxiv org abs 1704 05188    3   LDDP  data LDDP png    Learning Detection with Diverse Proposals   Samaneh Azadi  Jiashi Feng  Trevor Darrell   CVPR 2017     paper   https   arxiv org abs 1704 03533    4   TPL  data TPL png    Two Phase Learning for Weakly Supervised Object Localization   Dahun Kim  Donghyeon Cho  Donggeun Yoo  In So Kweon   ICCV 2017     paper   https   arxiv org abs 1708 02108    5   SPN  data SPN png    Soft Proposal Networks for Weakly Supervised Object Localization   Yi Zhu  Yanzhao Zhou  Qixiang Ye  Qiang Qiu and Jianbin Jiao   ICCV 2017     paper   https   arxiv org abs 1709 01829    github   https   github com ZhouYanzhao SPN          Semantic Segmentation and Scene Parsing  No    Figure    Title    Authors   Pub    Links                                                    1   FCN  data FCN png    Fully Convolutional Networks for Semantic Segmentation   Jonathan Long  Evan Shelhamer  Trevor Darrell   CVPR 2015     paper   https   people eecs berkeley edu  jonlong long shelhamer fcn pdf   star    2   LSOC  data LSOC png    Learning to Segment Object Candidates   Pedro O  Pinheiro  Ronan Collobert  Piotr Dollar   NIPS 2015     paper   http   papers nips cc paper 5852 learning to segment object candidates pdf    3   LROS  data LROS png    Learning to Refine Object Segments   Pedro O  Pinheiro   Tsung Yi Lin   Ronan Collobert  Piotr Doll  ar   arXiv 1603 08695     paper   https   arxiv org pdf 1603 08695 pdf    4   CRFRNN  data CRFRNN png    Conditional Random Fields as Recurrent Neural Networks   Shuai Zheng  Sadeep Jayasumana  Bernardino Romera Paredes  Vibhav Vineet  ZhiZhong Su  Dalong Du  Chang Huang  and Philip H  S  Torr   ICCV 2015     paper   http   www cv foundation org openaccess content iccv 2015 html Zheng Conditional Random Fields ICCV 2015 paper html    5   LDN  data LDN png    Learning Deconvolution Network for Semantic Segmentation   Heonwoo Noh  Seunghoon Hong  Bohyung Han   ICCV 2015     paper   http   www cv foundation org openaccess content iccv 2015 html Noh Learning Deconvolution Network ICCV 2015 paper html    6   ISFCN  data ISFCN png    Instance sensitive Fully Convolutional Networks   Jifeng Dai  Kaiming He  Yi Li  Shaoqing Ren  Jian Sun   ECCV 2016     paper   https   arxiv org abs 1603 08678    7   LPRR  data LPRR png    Laplacian Pyramid Reconstruction and Refinement for Semantic Segmentation   Golnaz Ghiasi  Charless C  Fowlkes   ECCV 2016     paper   https   link springer com chapter 10 1007 978 3 319 46487 9 32     github   https   github com golnazghiasi LRR    8   Attention to scale  data Attention to scale png    Attention to Scale  Scale aware Semantic Image Segmentation   Liang Chieh Chen  Yi Yang  Jiang Wang  Wei Xu   CVPR 2016     paper   http   www cv foundation org openaccess content cvpr 2016 html Chen Attention to Scale CVPR 2016 paper html    DeepLab   http   liangchiehchen com projects DeepLab html   star    9   RefineNet  data RefineNet png    RefineNet  Multi Path Refinement Networks for High Resolution Semantic Segmentation   Guosheng Lin  Anton Milan  Chunhua Shen  Ian Reid   CVPR 2017     paper   https   arxiv org abs 1611 06612     github   https   github com guosheng refinenet    10   PSPNet  data PSPNet png    Pyramid Scene Parsing Network   Hengshuang Zhao  Jianping Shi  Xiaojuan Qi  Xiaogang Wang  Jiaya Jia   CVPR 2017     paper   https   arxiv org abs 1612 01105     github   https   github com hszhao PSPNet    11   DRN  data DRN png    Dilated Residual Networks   Fisher Yu  Vladlen Koltun  Thomas Funkhouser   CVPR 2017     paper   https   arxiv org abs 1705 09914    github   https   github com fyu drn    12   FCIS  data FCIS png    Fully Convolutional Instance aware Semantic Segmentation   Yi Li  Haozhi Qi  Jifeng Dai  Xiangyang Ji  Yichen Wei   CVPR 2017     paper   https   arxiv org abs 1611 07709    github   https   github com msracver FCIS    13   FRRN  data FRRN png    Full Resolution Residual Networks for Semantic Segmentation in Street Scenes   Tobias Pohlen  Alexander Hermans  Markus Mathias  Bastian Leibe   CVPR 2017     paper   https   arxiv org abs 1611 08323    github   https   github com TobyPDE FRRN    14   A Erasing  data A Erasing png    Object Region Mining with Adversarial Erasing  A Simple Classification toSemantic Segmentation Approach   Yunchao Wei  Jiashi Feng  Xiaodan Liang  Ming Ming Cheng  Yao Zhao  Shuicheng Yan   CVPR 2017     paper   https   arxiv org abs 1703 08448   star    15   Not All Pixels Are Equal  data Not All Pixels Are Equal png    Not All Pixels Are Equal  Difficulty Aware Semantic Segmentation via Deep Layer Cascade   Xiaoxiao Li  Ziwei Liu  Ping Luo  Chen Change Loy  Xiaoou Tang   CVPR 2017     paper   https   arxiv org abs 1704 01344    16   Rev Attention  data Rev Attention png    Semantic Segmentation with Reverse Attention   Qin Huang  Chunyang Xia  Wuchi Hao  Siyang Li  Ye Wang  Yuhang Song and C  C  Jay Kuo   BMVC 2017     paper   https   arxiv org abs 1707 06426    code   https   drive google com drive folders 0By2w AaM8Rzbllnc3JCQjhHYnM usp sharing    17   Deeper into Future  data Deeper into Future png    Predicting Deeper into the Future of Semantic Segmentation   Pauline Luc  Natalia Neverova  Camille Couprie  Jakob Verbeek and Yann LeCun   ICCV 2017     paper   https   arxiv org abs 1703 07684    project page   https   thoth inrialpes fr people pluc iccv2017    18   Seg Everything  data Seg Everything png    Learning to Segment Every Thing   Ronghang Hu  Piotr Dollar  Kaiming He  Trevor Darrell  Ross Girshick   Tech Report     paper   https   arxiv org abs 1711 10370          Edge Detection  No   Figure    Title    Authors   Pub    Links                                                 1   HED  data HED png    Holistically Nested Edge Detection   Saining Xie  Zhuowen Tu   ICCV 2015     paper   http   www cv foundation org openaccess content iccv 2015 papers Xie Holistically Nested Edge Detection ICCV 2015 paper pdf    github   https   github com s9xie hed   star    2   RCF  data RCF png    Richer Convolutional Features for Edge Detection   Yun Liu  Ming Ming Cheng  Xiaowei Hu  Kai Wang  Xiang Bai   CVPR 2017     paper   https   arxiv org abs 1612 02103    project page   http   mmcheng net rcfedge     3   CASENet  data CASENet png    CASENet  Deep Category Aware Semantic Edge Detection   Zhiding Yu  Chen Feng  Ming Yu Liu  Srikumar Ramalingam   CVPR 2017     paper   https   arxiv org abs 1705 09759          Pose Estimation  No   Figure    Title    Authors   Pub    Links                                                1   Hourglass  data Hourglass png    Stacked Hourglass Networks for Human Pose Estimation   Alejandro Newell  Kaiyu Yang  and Jia Deng   ECCV 2016     paper   https   arxiv org abs 1603 06937   star    2   MCA  data MCA png    Multi Context Attention for Human Pose Estimation    Xiao Chu  http   www ee cuhk edu hk  xchu    Wei Yang   Wanli Ouyang  http   www ee cuhk edu hk  wlouyang    Cheng Ma  Alan L  Yuille   Xiaogang Wang  http   www ee cuhk edu hk  xgwang     CVPR 2017     paper   https   arxiv org abs 1702 07432    github   https   github com bearpaw pose attention          Super Resolution  No   Figure    Title    Authors   Pub    Links                                                  1   LapSRN  data LapSRN png    Deep Laplacian Pyramid Networks for Fast and Accurate Super Resolution   Wei Sheng Lai  Jia Bin Huang  Narendra Ahuja  Ming Hsuan Yang   CVPR 2017     project page   http   vllab1 ucmerced edu  wlai24 LapSRN     2   DRRN  data DRRN png    Image Super Resolution via Deep Recursive Residual Network   Ying Tai  Jian Yang  and Xiaoming Liu   CVPR 2017     paper   https   www researchgate net profile Xiaoming Liu8 publication 316017318 Image Super Resolution via Deep Recursive Residual Network links 58eda40b0f7e9b37ed14f5d7 Image Super Resolution via Deep Recursive Residual Network pdf    github   https   github com tyshiwo DRRN CVPR17          Image Classification  No   Figure    Title    Authors   Pub    Links                                                 1   GoogLeNet  data GoogLeNet png    Going Deeper with Convolutions   Christian Szegedy  Wei Liu  Yangqing Jia  Pierre Sermanet  Scott Reed   CVPR 2015     paper   http   www cv foundation org openaccess content cvpr 2015 html Szegedy Going Deeper With 2015 CVPR paper html   star    2   ResNet  data ResNet png    Deep Residual Learning for Image Recognition   Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun   CVPR 2016     best     paper   https   arxiv org abs 1512 03385    github   https   github com KaimingHe deep residual networks   star    3   Res Attention Network  data Res Attention Network png    Residual Attention Network for Image Classification   Fei Wang  Mengqing Jiang  Chen Qian  Shuo Yang  Cheng Li  Honggang Zhang  Xiaogang Wang  Xiaoou Tang   CVPR 2017     paper   https   arxiv org abs 1704 06904    github   https   github com buptwangfei residual attention network   star    4   ResNeXt  data ResNeXt png    Aggregated Residual Transformations for Deep Neural Networks   Saining Xie  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He   CVPR 2017     paper   https   arxiv org abs 1611 05431    github   https   github com facebookresearch ResNeXt    5   DenseNet  data DenseNet png    Densely Connected Convolutional Networks   Gao Huang  Zhuang Liu  Kilian Q  Weinberger   CVPR 2017     best     paper   https   arxiv org abs 1608 06993    github   https   github com liuzhuang13 DenseNet   star    6   PyramidNet  data PyramidNet png    Deep Pyramidal Residual Networks   Dongyoon Han  Jiwhan Kim  Junmo Kim   CVPR 2017     paper   https   arxiv org pdf 1610 02915 pdf    github   https   github com jhkim89 PyramidNet   star          Others  No     Figure    Title    Authors   Pub    Links                                                 1   FSDSO  data FSDSO png    Object Skeleton Extraction in Natural Images by Fusing Scale associated Deep Side Outputs   Wei Shen  Kai Zhao  Yuan Jiang  Yan Wang  Zhijiang Zhang  Xiang Bai   ICCV 2016     paper   http   www cv foundation org openaccess content cvpr 2016 html Shen Object Skeleton Extraction CVPR 2016 paper html    github   https   github com zeakey DeepSkeleton    2   AnchorNet  data AnchorNet png    AnchorNet  A Weakly Supervised Network to Learn Geometry sensitive Features For Semantic Matching   David Novotny  DianeLarlus  Andrea Vedaldi   CVPR 2017     paper   https   arxiv org abs 1704 04749    3   SRN  data SRN png    SRN Side output Residual Network for Object Symmetry Detection in the Wild   Wei Ke  Jie Chen  Jianbin Jiao  Guoying Zhao and Qixiang Ye   CVPR 2017     paper   https   arxiv org abs 1703 02243    github   https   github com KevinKecc SRN   star    4   QAN  data QAN png    Quality Aware Network for Set to Set Recognition   Yu Liu  Junjie Yan  Wanli Ouyang   CVPR 2017     paper   https   arxiv org abs 1704 03373    5   Continuous CRFs  data Continuous CRFs png    Multi Scale Continuous CRFs as Sequential Deep Networks for Monocular Depth Estimation   Dan Xu  Elisa Ricci  Wanli Ouyang  Xiaogang Wang  Nicu Sebe   CVPR 2017     paper   https   arxiv org abs 1704 02157    github   https   github com danxuhk ContinuousCRF CNN   star    6   CMT  data CMT png    Learning Cross Modal Deep Representations for Robust Pedestrian Detection   Dan Xu  Wanli Ouyang  Elisa Ricci  Xiaogang Wang  Nicu Sebe   CVPR 2017     paper   https   arxiv org abs 1704 02431    7   SS DMP  data SS DMP png    Semi Supervised Deep Learning for Monocular Depth Map Prediction   Yevhen Kuznietsov  J rg St ckler  Bastian Leibe   CVPR 2017     paper   https   arxiv org abs 1702 02706    8   DRNet  data DRNet png    Detecting Visual Relationships with Deep Relational Networks   Bo Dai  Yuqi Zhang  Dahua Lin   CVPR 2017     paper   https   arxiv org pdf 1704 03114 pdf    github   https   github com doubledaibo drnet    9   Polygon RNN  data Polygon RNN png    Annotating Object Instances with a Polygon RNN   Lluis Castrejon  Kaustav Kundu  Raquel Urtasun  Sanja Fidler   CVPR 2017     paper   https   arxiv org abs 1704 05548   star    10   WCCN  data WCCN png    Weakly Supervised Cascaded Convolutional Networks   Ali Diba  Vivek Sharma  Ali Pazandeh  Hamed Pirsiavash  Luc Van Gool   CVPR 2017     paper   https   arxiv org abs 1611 08258    11   GRU  data GRU png    Full Resolution Image Compression with Recurrent Neural Networks   George Toderici  Damien Vincent  Nick Johnston  Sung Jin Hwang  David Minnen  Joel Shor  Michele Covell   CVPR 2017     paper   https   arxiv org abs 1608 05148    github   https   github com tensorflow models tree master compression    12   FSOR  data FSOR png    Few Shot Object Recognition from Machine Labeled Web Images   Zhongwen Xu  Linchao Zhu  Yi Yang   CVPR 2017     paper   https   arxiv org abs 1612 06152    13   UberNet  data UberNet png    UberNet  Training a  Universal  Convolutional Neural Network for Low   Mid   and High Level Vision using Diverse Datasets and Limited Memory   Iasonas Kokkinos   CVPR 2017     paper   https   arxiv org abs 1609 02132    code   http   cvn ecp fr ubernet     14   CP CNN  data CP CNN png    Generating High Quality Crowd Density Maps using Contextual Pyramid CNNs   Vishwanath A  Sindagi and Vishal M  Patel   ICCV 2017     paper   https   arxiv org abs 1708 00953    15   MemNet  data MemNet png    MemNet  A Persistent Memory Network for Image Restoration    Ying Tai  Jian Yang  Xiaoming Liu  Chunyan Xu   ICCV 2017     paper   https   arxiv org abs 1708 02209    github   https   github com tyshiwo MemNet    16   DataDis  data Data Distillation png    Data Distillation  Towards Omni Supervised Learning    Ilija Radosavovic  Piotr Dollar  Ross Girshick  GeorgiaGkioxari and Kaiming He   Tech Report     paper   https   arxiv org abs 1712 04440    17   NonLocalNN  data Non Local NN png    Non local Neural Networks    Xiaolong Wang  Ross Girshick  Abhinav Gupta and Kaiming He   Tech Report     paper   https   arxiv org abs 1711 07971    18   NASNet  data NASNet png    Learning Transferable Architectures for Scalable Image Recognition    Barret Zoph  Vijay Vasudevan  Jonathon Shlens  Quoc V  Le   Tech Report     paper   https   arxiv org abs 1707 07012  ","software":"md","book":"clxiao","full_link":"https://github.com/clxiao/Paper_Reading_List"},{"name":"shehabk/mycaffe","artist":"caff, learn, model, framework, vision","id":553,"playcount":2102,"description":"shehabk/mycaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"shehabk","full_link":"https://github.com/shehabk/mycaffe"},{"name":"dangweili/caffe_openblas","artist":"caff, model, learn, bvlc, refer","id":554,"playcount":1924,"description":"dangweili/caffe_openblas caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dangweili","full_link":"https://github.com/dangweili/caffe_openblas"},{"name":"cbra12/caffe","artist":"caff, learn, model, framework, vision","id":555,"playcount":2102,"description":"cbra12/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cbra12","full_link":"https://github.com/cbra12/caffe"},{"name":"oscmansan/nvcaffe","artist":"caff, model, learn, bvlc, refer","id":556,"playcount":1925,"description":"oscmansan/nvcaffe caff, model, learn, bvlc, refer   Caffe   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"oscmansan","full_link":"https://github.com/oscmansan/nvcaffe"},{"name":"Liusifei/Propagation-Network","artist":"caff, learn, model, communiti, releas","id":557,"playcount":2130,"description":"Liusifei/Propagation-Network caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Liusifei","full_link":"https://github.com/Liusifei/Propagation-Network"},{"name":"zlinker/mycaffe","artist":"caff, learn, model, framework, vision","id":558,"playcount":2102,"description":"zlinker/mycaffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zlinker","full_link":"https://github.com/zlinker/mycaffe"},{"name":"madongyu/sz_caffe","artist":"caff, learn, model, framework, vision","id":559,"playcount":2102,"description":"madongyu/sz_caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"madongyu","full_link":"https://github.com/madongyu/sz_caffe"},{"name":"maony/alpha-caffe","artist":"caff, learn, model, framework, vision","id":560,"playcount":2102,"description":"maony/alpha-caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"maony","full_link":"https://github.com/maony/alpha-caffe"},{"name":"kl456123/caffe","artist":"caff, learn, model, communiti, releas","id":561,"playcount":2130,"description":"kl456123/caffe caff, learn, model, communiti, releas   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kl456123","full_link":"https://github.com/kl456123/caffe"},{"name":"WuCPMark/CAFFE","artist":"caff, model, learn, bvlc, refer","id":562,"playcount":1924,"description":"WuCPMark/CAFFE caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"WuCPMark","full_link":"https://github.com/WuCPMark/CAFFE"},{"name":"jy9387/car_detection","artist":"caff, learn, model, framework, vision","id":563,"playcount":2102,"description":"jy9387/car_detection caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jy9387","full_link":"https://github.com/jy9387/car_detection"},{"name":"THighlander/oaa","artist":"caff, model, learn, bvlc, refer","id":564,"playcount":1924,"description":"THighlander/oaa caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"THighlander","full_link":"https://github.com/THighlander/oaa"},{"name":"ugv-tracking/mx-rcnn","artist":"rcnn, train, detect, network, faster","id":565,"playcount":7939,"description":"ugv-tracking/mx-rcnn rcnn, train, detect, network, faster   Faster R CNN in MXNet with distributed implementation and data parallelization  Region Proposal Network solves object detection as a regression problem  from the objectness perspective  Bounding boxes are predicted by applying  learned bounding box deltas to base boxes  namely anchor boxes across  different positions in feature maps  Training process directly learns a  mapping from raw image intensities to bounding box transformation targets   Fast R CNN treats general object detection as a classification problem and bounding box prediction as a regression problem  Classifying cropped region feature maps and predicting bounding box displacements together yields detection results  Cropping feature maps instead of image input accelerates computation utilizing shared convolution maps  Bounding box displacements are simultaneously learned in the training process   Faster R CNN utilize an alternate optimization training process between RPN  and Fast R CNN  Fast R CNN weights are used to initiate RPN for training      Getting Started   Install python package  easydict    cv2    matplotlib   MXNet require  numpy     Install MXNet with version no later than Commit 8a3424e  preferably the latest master    Follow the instructions at http   mxnet readthedocs io en latest how to build html  Install the python interface    Try out detection result by running  python demo py   prefix final   epoch 0   image myimage jpg   gpu 0     Suppose you have downloaded pretrained network and place the extracted file  final 0000 params  in this folder and there is an image named  myimage jpg       Training and Testing Faster R CNN   Install additional python package  scipy     Download Pascal VOC data and place them to  data  folder according to  Data Folder Structure     You might want to create a symbolic link to VOCdevkit folder by  ln  s  path to your VOCdevkit data VOCdevkit     Download VGG16 pretrained model  use  mxnet tools caffe converter  to convert it    rename to  vgg16 symbol json  and  vgg16 0001 params  and place it in  model  folder     model  folder will be used to place model checkpoints along the training process       Alternate   Start training by running  python train alternate py  after VOCdevkit is ready    A typical command would be  python train alternate py   gpus 0   This will train the network on the VOC07 trainval    More control of training process can be found in the argparse help accessed by  python train alternate py  h     Start testing by running  python test py  after completing the training process    A typical command would be  python test py   has rpn   prefix model final   epoch 8   This will test the network on the VOC07 test    Adding a    vis  will turn on visualization and   h  will show help as in the training process    An experiment yields 69 54 mAP  close to 69 9 as reported       End to end   End to end training is the same as  py faster rcnn  and is first made possible by  tornadomeet mx rcnn   which also has resnet 50 based detection    Start training by running  python train end2end py   A typical command would be  python train end2end py   This will train the network on VOC07 trainval    As usual control of training process can be found in argparse help    Start testing by running  python test py   has rpn   prefix model e2e   epoch 10   This will test the network on the VOC07 test    An experiment yields 69 65 mAP      Training and Testing Fast R CNN   Download Pascal VOC data and place them to  data  folder according to  Data Folder Structure     You might want to create a symbolic link to VOCdevkit folder by  ln  s  path to your VOCdevkit data VOCdevkit     Download precomputed selective search data and place them to  data  folder according to  Data Folder Structure     Download VGG16 pretrained model  use  mxnet tools caffe converter  to convert it    rename to  vgg16 symbol json  and  vgg16 0001 params  and place it in  model  folder     model  folder will be used to place model checkpoints along the training process    Start training by running  python  m rcnn tools train rcnn   proposal ss  to use the selective search proposal    Start testing by running  python  m rcnn tools test rcnn   proposal ss     An experiment yields 66 5 mAP  close to 66 9 as reported      Structure   This repository provides Faster R CNN as a package named  rcnn          rcnn core   core routines in Faster R CNN training and testing         rcnn dataset   dataset library  Base class is  rcnn dataset imdb IMDB          rcnn processing   data and label processing library         rcnn tools   training and testing wrapper         rcnn utils   utilities in training and testing  usually overloads mxnet functions     data  Refer to  Data Folder Structure  for dataset reference  Usually dataset contains  images  and  imglists      model  It is recommended to make a  model  symbolic link to hard disk to place your model      Information   Download link to trained model   Baidu Yun  http   pan baidu com s 1boRhGvH  ixiw  or Dropbox  https   www dropbox com s jrr83q0ai2ckltq final 0000 params tar gz dl 0   Download link to Pascal VOC and precomputed selective search proposals          Pascal VOCdevkit   http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar   http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar   http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar   selective search data  by Ross Girshick    Download link accessible at https   github com rbgirshick fast rcnn blob master data scripts fetch selective search data sh          Data Folder Structure  create a  data  folder if there is none           VOCdevkit      VOC   year  JPEG images and annotations       results  will be created by evaluation         VOC   year          main            comp4 det val aeroplane txt   selective search data   rpn data  will be created by rpn    cache  will be created by imdb            Disclaimer This repository used code from  MXNet  https   github com dmlc mxnet    Fast R CNN  https   github com rbgirshick fast rcnn    Faster R CNN  https   github com rbgirshick py faster rcnn    caffe  https   github com BVLC caffe   Training data are from  Pascal VOC  http   host robots ox ac uk pascal VOC     ImageNet  http   image net org    Model comes from  VGG16  http   www robots ox ac uk  vgg research very deep    Thanks to tornadomeet for end to end experiments and MXNet contributers for helpful discussions      References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In Advances in Neural Information Processing Systems  2015  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Mark Everingham  Luc Van Gool  Christopher KI Williams  John Winn  and Andrew Zisserman   The pascal visual object classes  voc  challenge   International journal of computer vision 88  no  2  2010   303 338  6  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  7  Karen Simonyan  and Andrew Zisserman   Very deep convolutional networks for large scale image recognition   arXiv preprint arXiv 1409 1556  2014   ","software":"md","book":"ugv-tracking","full_link":"https://github.com/ugv-tracking/mx-rcnn"},{"name":"NicoleWang/caffe_ssd","artist":"caff, learn, model, framework, vision","id":566,"playcount":2102,"description":"NicoleWang/caffe_ssd caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"NicoleWang","full_link":"https://github.com/NicoleWang/caffe_ssd"},{"name":"kenjihata/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":567,"playcount":2102,"description":"kenjihata/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kenjihata","full_link":"https://github.com/kenjihata/caffe-fast-rcnn"},{"name":"xcls1117/caffe-master","artist":"caff, learn, model, framework, vision","id":568,"playcount":2102,"description":"xcls1117/caffe-master caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xcls1117","full_link":"https://github.com/xcls1117/caffe-master"},{"name":"ijkguo/mx-rcnn","artist":"mxnet, ieee, confer, train, test","id":569,"playcount":5799,"description":"ijkguo/mx-rcnn mxnet, ieee, confer, train, test   Faster R CNN in MXNet    example detections  https   cloud githubusercontent com assets 13162287 22101032 92085dc0 de6c 11e6 9228 67e72606ddbc png       Set up environment   Require latest MXNet  Set environment variable by  export MXNET CUDNN AUTOTUNE DEFAULT 0     Install Python package  mxnet   cpu inference only  or  mxnet cu90   gpu training    cython  then  opencv python matplotlib pycocotools tqdm        Out of box inference models Download any of the following models to the current directory and run  python3 demo py   dataset  Dataset    network  Network    params  MODEL FILE    image  YOUR IMAGE   to get single image inference  For example  python3 demo py   dataset voc   network vgg16   params vgg16 voc0712 params   image myimage jpg   add    gpu 0  to use GPU optionally  Different network has different configuration  Different dataset has different object class names  You must pass them explicitly as command line arguments     Network   Dataset   Imageset   Reference   Result   Link                                                                              vgg16   voc   07 07   69 9   70 23    Dropbox  https   www dropbox com s gfxnf1qzzc0lzw2 vgg voc07 0010 params dl 0      vgg16   voc   07  12 07   73 2   75 97    Dropbox  https   www dropbox com s rvktx65s48cuyb9 vgg voc0712 0010 params dl 0      resnet101   voc   07  12 07   76 4   79 35    Dropbox  https   www dropbox com s ge2wl0tn47xezdf resnet voc0712 0010 params dl 0      vgg16   coco   train2017 val2017   21 2   22 8    Dropbox  https   www dropbox com s e0ivvrc4pku3vj7 vgg coco 0010 params dl 0      resnet101   coco   train2017 val2017   27 2   26 1    Dropbox  https   www dropbox com s bfuy2uo1q1nwqjr resnet coco 0010 params dl 0         Download data and label Make a directory  data  and follow  py faster rcnn  for data preparation instructions     Pascal VOC  http   host robots ox ac uk pascal VOC   should be in  data VOCdevkit  containing  VOC2007    VOC2012  and  annotations      MSCOCO  http   mscoco org dataset   should be in  data coco  containing  train2017    val2017  and  annotations instances train2017 json    annotations instances val2017 json        Download pretrained ImageNet models    VGG16  http   www robots ox ac uk  vgg research very deep   should be at  model vgg16 0000 params  from  MXNet model zoo  http   data dmlc ml models imagenet vgg       ResNet  https   github com tornadomeet ResNet  should be at  model resnet 101 0000 params  from  MXNet model zoo  http   data dmlc ml models imagenet resnet         Training and evaluation Use  python3 train py   dataset  Dataset    network  Network    pretrained  IMAGENET MODEL FILE    gpus  GPUS   to train  for example   python3 train py   dataset voc   network vgg16   pretrained model vgg16 0000 params   gpus 0 1   Use  python3 test py   dataset  Dataset    network  Network    params  MODEL FILE    gpu  GPU   to evaluate  for example   python3 test py   dataset voc   network vgg16   params model vgg16 0010 params   gpu 0        History   May 25  2016  We released Fast R CNN implementation    July 6  2016  We released Faster R CNN implementation    July 23  2016  We updated to MXNet module solver    Oct 10  2016  tornadomeet released approximate end to end training    Oct 30  2016  We updated to MXNet module inference    Jan 19  2017  We accelerated our pipeline and supported ResNet training    Jun 22  2018  We simplified code        Disclaimer This repository used code from  MXNet  https   github com dmlc mxnet    Fast R CNN  https   github com rbgirshick fast rcnn    Faster R CNN  https   github com rbgirshick py faster rcnn    caffe  https   github com BVLC caffe    tornadomeet mx rcnn  https   github com tornadomeet mx rcnn    MS COCO API  https   github com pdollar coco     Thanks to tornadomeet for end to end experiments and MXNet contributers for helpful discussions       References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In IEEE Transactions on Pattern Analysis and Machine Intelligence  2016  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Mark Everingham  Luc Van Gool  Christopher KI Williams  John Winn  and Andrew Zisserman   The pascal visual object classes  voc  challenge   International journal of computer vision 88  no  2  2010   303 338  6  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  7  Karen Simonyan  and Andrew Zisserman   Very deep convolutional networks for large scale image recognition   arXiv preprint arXiv 1409 1556  2014   8  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  9  Tsung Yi Lin  Michael Maire  Serge Belongie  James Hays  Pietro Perona  Deva Ramanan  Piotr Doll r  and C  Lawrence Zitnick   Microsoft COCO  Common Objects in Context  In European Conference on Computer Vision  pp  740 755  Springer International Publishing  2014  ","software":"md","book":"ijkguo","full_link":"https://github.com/ijkguo/mx-rcnn"},{"name":"cdoersch/python_top_blobs","artist":"caff, model, learn, bvlc, refer","id":570,"playcount":1924,"description":"cdoersch/python_top_blobs caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cdoersch","full_link":"https://github.com/cdoersch/python_top_blobs"},{"name":"rohitgirdhar-cmu-experimental/caffepp","artist":"caff, learn, model, framework, vision","id":571,"playcount":2102,"description":"rohitgirdhar-cmu-experimental/caffepp caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rohitgirdhar-cmu-experimental","full_link":"https://github.com/rohitgirdhar-cmu-experimental/caffepp"},{"name":"palmer0914/caffe","artist":"caff, learn, model, framework, vision","id":572,"playcount":2102,"description":"palmer0914/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"palmer0914","full_link":"https://github.com/palmer0914/caffe"},{"name":"TX2012LH/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":573,"playcount":2102,"description":"TX2012LH/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"TX2012LH","full_link":"https://github.com/TX2012LH/caffe-fast-rcnn"},{"name":"mathrho/lang-track","artist":"caff, learn, model, framework, vision","id":574,"playcount":2102,"description":"mathrho/lang-track caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mathrho","full_link":"https://github.com/mathrho/lang-track"},{"name":"SimuJenni/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":575,"playcount":2102,"description":"SimuJenni/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"SimuJenni","full_link":"https://github.com/SimuJenni/caffe-fast-rcnn"},{"name":"wjqwsp/Caffe_LSTM_Fpga","artist":"caff, model, learn, bvlc, refer","id":576,"playcount":1924,"description":"wjqwsp/Caffe_LSTM_Fpga caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wjqwsp","full_link":"https://github.com/wjqwsp/Caffe_LSTM_Fpga"},{"name":"tfwu/AOGDetector","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":577,"playcount":2662,"description":"tfwu/AOGDetector “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   AOGDetector    Implementation of the papers          Xi Song  Tianfu Wu  Yunde Jia and Song Chun Zhu   Discriminatively Trained And Or Tree Model for Object Detection    In CVPR2013                  Bo Li  Wenze Hu  Tianfu Wu and Song Chun Zhu   Modeling Occlusion by Discriminative AND OR Structures   In ICCV2013                 Bo Li  Tianfu Wu and Song Chun Zhu   Integrating Context and Occlusion for Car Detection by Hierarchical And Or Model   In ECCV2014         Tianfu Wu  Bo Li and Song Chun Zhu   Learning And Or Models to Represent Context and Occlusion for Car Detection and Viewpoint Estimation    TPAMI  2015  arXiv 1501 07359   Copyright  c  2014 Center for Vision  Cognition  Learning and Autonomy at UCLA  http   vcla stat ucla edu                     Written by Matt Tianfu Wu  primary contact   tfwu stat ucla edu             Xi Song                           xsong lhi gmail com   object detection module                                   Bo Li                             boli lhi gmail com    occlusion module                             Code Release Log      10 14 2014  Release detection code   full code will be released in future                          MODULE 1  object detection       VOC Configuration   All the configuration can be specified in voc config xml in   PATH TO RGM Source Code  config  folder       VOC Testing   Use Terminal and cd to the  PATH TO Build  bin where the executable  Entry  is built       Run    Entry vocEval PATH To voc config xml       e g    Entry vocEval  home tfwu Code RGM config voc config xml      DetectionInASingleImage   Use Terminal and cd to the PATH TO Build bin where the executable  Entry  is built       Run    Entry detect PATH To voc config xml       e g    Entry detect  home tfwu Code RGM config voc config xml      BatchDetectionInDirectory   Use Terminal and cd to the PATH TO Build bin where the executable  Entry  is built       Run    Entry detectBatch PATH To voc config xml        e g    Entry detectBatch  home tfwu Code RGM config voc config xml        ConvertVOCRel5Model   Use Terminal and cd to the  PATH TO Build  bin where the executable  Entry  is built       Run    Entry cvtVOCRel5Model PATH To VOCRel5 Model Mat File       e g    Entry cvtVOCRel5Model  home tfwu Code RGM externalModels VOC2007 bicycle final mat       The converted model will be saved  e g    home tfwu Code RGM data bicycle final mat bin  which can be used to test detection       Note  Before using this to convert a matlab model trained using VOC Release 5 by Dr  Ross Girshick           please use PATH TO RGM Source Code matlab convertVOCR5 m to add a  DFS  field to the model structure  ","software":"md","book":"tfwu","full_link":"https://github.com/tfwu/AOGDetector"},{"name":"zhangxujinsh/caffe_train","artist":"caff, learn, model, framework, vision","id":578,"playcount":2623,"description":"zhangxujinsh/caffe_train caff, learn, model, framework, vision   Temporary Repo for training multi person pose estimator  The  full project repo  https   github com ZheC Multi Person Pose Estimation  includes matlab and C   testing code   Customized caffe layer for data augmentation   data transformer cpp  https   github com CMU Perceptual Computing Lab caffe train blob master src caffe data transformer cpp   We will remove the unnecssary experiments in the code  and merge it with the caffe testing version  https   github com CMU Perceptual Computing Lab caffe rtpose  later      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhangxujinsh","full_link":"https://github.com/zhangxujinsh/caffe_train"},{"name":"HelenaCSU/Object-detection","artist":"caff, model, learn, communiti, berkeley","id":579,"playcount":2487,"description":"HelenaCSU/Object-detection caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"HelenaCSU","full_link":"https://github.com/HelenaCSU/Object-detection"},{"name":"closerbibi/anchor","artist":"train, rcnn, set, faster, model","id":580,"playcount":2316,"description":"closerbibi/anchor train, rcnn, set, faster, model   Faster RCNN with PyTorch This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py    ","software":"md","book":"closerbibi","full_link":"https://github.com/closerbibi/anchor"},{"name":"bit1002lst/rank_loss_caffe1","artist":"caff, model, learn, communiti, berkeley","id":581,"playcount":2487,"description":"bit1002lst/rank_loss_caffe1 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bit1002lst","full_link":"https://github.com/bit1002lst/rank_loss_caffe1"},{"name":"tracedev/CFTLD","artist":"tracker, year, machin, code, titl","id":582,"playcount":2956,"description":"tracedev/CFTLD tracker, year, machin, code, titl   CFTLD This is a fork of  CFTLD  https   github com klahaag CFtld   which was a fork of  OpenTLD  https   github com gnebehay OpenTLD    OpenTLD was originally proposed in  1  and implemented by Georg Nebehay in C    CFTLD was implemented by github user klahaag    From the author    This fork uses C   implementations of correlation filter based trackers as short term trackers  Both short term trackers are modified variants of the visual trackers proposed in  2 3   The short term trackers are extended with target loss detection capabilities as in  4  and use the C   implementation  5  of the FHOG features proposed in  6   The detection cascade is only used to suggest possible target locations to the short term trackers for redetection purposes  It cannot reinitialize the short term trackers  The short term trackers decide whether a suggested patch actually contains the target   KCF is the default short term tracker     Commercial Use  US  The code using linear correlation filters may be affected by a US patent  If you want to use this code commercially in the US please refer to http   www cs colostate edu  vision ocof toolset 2012 index php for possible patent claims     References If you reuse this code for a scientific publication  please cite the related publications  dependent on what parts of the code you reuse     1       article kalal2012TLD  title  Tracking Learning Detection   author  Kalal  Zdenek and Mikolajczyk  Krystian and Matas  Jiri   journal  Pattern Analysis and Machine Intelligence  IEEE Transactions on   year  2012         2       article henriques2015tracking  title    High Speed Tracking with Kernelized Correlation Filters   author    Henriques  J  F  and Caseiro  R  and Martins  P  and Batista  J    journal    Pattern Analysis and Machine Intelligence  IEEE Transactions on   year    2015        3       inproceedings danelljan2014dsst  title  Accurate Scale Estimation for Robust Visual Tracking   author  Danelljan  Martin and H   a ger  Gustav and Khan  Fahad Shahbaz and Felsberg  Michael   booktitle  Proceedings of the British Machine Vision Conference BMVC   year  2014         4       inproceedings bolme2010mosse  author  Bolme  David S  and Beveridge  J  Ross and Draper  Bruce A  and Yui Man Lui   title  Visual Object Tracking using Adaptive Correlation Filters   booktitle  Conference on Computer Vision and Pattern Recognition  CVPR    year  2010         5       misc PMT  author    Piotr Doll  ar   title     P iotr s  C omputer  V ision  M atlab  T oolbox   PMT     howpublished     url http   vision ucsd edu  pdollar toolbox doc index html          6       article lsvm pami  title    Object Detection with Discriminatively Trained Part Based Models   author    Felzenszwalb  P  F  and Girshick  R  B  and McAllester  D  and Ramanan  D    journal    IEEE Transactions on Pattern Analysis and Machine Intelligence   year    2010   volume    32   number    9   pages    1627  1645       ","software":"md","book":"tracedev","full_link":"https://github.com/tracedev/CFTLD"},{"name":"TheRevanchist/rcnn_for_relab","artist":"train, rcnn, set, faster, model","id":583,"playcount":2580,"description":"TheRevanchist/rcnn_for_relab train, rcnn, set, faster, model   Faster RCNN with PyTorch This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 0  Install the requirements  you can use pip or  Anaconda  https   www continuum io downloads                 conda install pip pyyaml sympy h5py cython numpy scipy     conda install  c menpo opencv3     pip install easydict           1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py      License  MIT license  MIT  ","software":"md","book":"TheRevanchist","full_link":"https://github.com/TheRevanchist/rcnn_for_relab"},{"name":"cc-hpc-itwm/CaffeGPI","artist":"caff, learn, model, framework, vision","id":584,"playcount":2346,"description":"cc-hpc-itwm/CaffeGPI caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing     CaffeGPI Extension  This fork is dedicated to extend Caffe efficiently to distributed memory machines  The GPI 2 communication library is used for inter node data transfers  Check additional installation instructions in INSTALL CaffeGPI md      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cc-hpc-itwm","full_link":"https://github.com/cc-hpc-itwm/CaffeGPI"},{"name":"kumardeepakr3/fast-rcnn","artist":"model, imag, train, caff, download","id":585,"playcount":5768,"description":"kumardeepakr3/fast-rcnn model, imag, train, caff, download    CS676A  Computer Vision and Image Processing  Project  Pedestrian Detection using R CNN Instructor  Prof  Vinay P  Namboodiri TA  Samrath Patidar      Members      1  Deepak Kumar  12228      2  Mohit Singh Solanki  12419       PAPERS FOLLOWED     1  Geoffrey E  Hinton Alex Krizhevsky  Ilya Sutskever  Imagenet classification with deep convolutional neural networks  NIPS  2012      2  Ross Girshick  Fast r cnn  In International Conference on Computer Vision  ICCV   2015      3  Ross Girshick  Jeff Donahue  Trevor Darrell  and Jitendra Malik  Rich feature hierarchies for accurate object detection and semantic segmentation  In Computer Vision and Pattern Recognition  2014      4  Gevers2 J R R  Uijlings  van de Sande and A W M  Smeulders2  Selective search for object recognition  ICCV  2011      5  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun  Faster R CNN  Towards real time object detection with region proposal networks  In Advances in Neural Information Processing Systems  NIPS   2015       PLATFORM SPECS  EC2 Linux Instance on Amazon Web Service      1  OS   Ubuntu 14 04     2  GPU   1x NVIDIA GRID  Kepler G104    8 x hardware hyperthreads from Intel Xeon E5 2670     3  Memory   15GB     4  HardDisk   90GB SSD     Refer to AWS documentation on creation of EC2 linux instance and setup         INSTALLATION STEPS     1  Login to your AWS instance     2  Install OpenCV as described in this blog  http   www pyimagesearch com 2015 06 22 install opencv 3 0 and python 2 7 on ubuntu   Ignore the step 8  We don t want to install virtualenv  Also ignore all commands that have virtualenv usage in them      3  Install CAFFE as described in this blog  https   github com BVLC caffe wiki Install Caffe on EC2 from scratch  Ubuntu  CUDA 7  cuDNN      Note            Don t forget to do  make pycaffe  at the end           Edit the Makefile config and change  WITH PYTHON LAYER    1      4  Download the changed fast rcnn files from the my github     git clone   recursive  https   github com kumardeepakr3 fast rcnn        5  Download INRIA dataset      6  Install vnc4server  Matlab installation needs Display      7  Install Matlab on Linux Instance   We used Matlab 2012  You know how to do it  p          TRAINING      1  For training we use the images under the train pos  directory      2  Organise the train data as follows      3   home ubuntu INRIA         data          Annotations             txt  Annotation Files           Images             png  Image Files           ImageSets           train txt     4  The train txt contains all the names without extensions  of images files that will be used for training          For Eg   crop 000011  crop 000603  crop 000606  crop 000607  crop 000608      5  Construct IMDB    cd  FRCNN ROOT lib datasets    Edit the file inria py and set self  classes  Do nothing if using git cloned from my repo     Create your own annotation function like  load inria annotation in inria py   Do nothing if using git cloned from my repo     Add  import inria  to the files  Do nothing if using git cloned from my repo     Edit factory py and set inria devkit path to point to the  home ubuntu INRIA directory       6  Run Selective Search    cd  FRCNN ROOT selective search    Edit selective search m and add image db    home ubuntu INRIA   Do nothing if using git cloned from my repo     Change the last line to  selective search rcnn image filenames   train mat       Run this matlab code    This generates train mat  Takes around 15min for this     Place it in  home ubuntu INRIA      7  Modify Prototxt    Edit train prototxt in  FRCNN ROOT models VGG CNN M 1024     Set num classes to C  In INRIA data C 2  i e  Pedestrian and Background     Set num output in the cls score layer to C    Set num output in the bbox pred layer to 4   C      8  Run the followin g in  FRCNN ROOT     tools train net py   gpu 0   solver models VGG CNN M 1024 solver prototxt         weights data imagenet models VGG CNN M 1024 v2 caffemodel   imdb inria train      9  This creates the trained model in  FRCNN ROOT output models folder        TESTING     1  Delete the contents in the INRIA folder created during training      2  Create New set of directories in the following way          home ubuntu INRIA        data         Annotations            txt  Annotation Files          Images            png  Image Files          ImageSets          test txt        results         test  Empty Directory         VOCcode     3  The test txt contains all the names without extensions  of images files that will be used for training      For example   crop 000001  crop 000002  crop 000003  crop 000004  crop 000005     4  Copy the files from  FRCNN ROOT help INRIA VOCcode to the  home ubuntu INRIA VOCcode folder      5  Run Selective Search again   Rename the output to test mat      6  Place the test mat file in  home ubuntu INRIA folder     7  Modify Prototxt    Edit test prototxt in  FRCNN ROOT models VGG CNN M 1024     Set num output in the cls score layer to C  In INRIA data C 2  i e  Pedestrian and Background     Set num output in the bbox pred layer to 4   C     8  Run in  FRCNN ROOT  directory     tools test net py   gpu 0   def models VGG CNN M 1024 test prototxt         net output default train vgg cnn m 1024 fast rcnn iter 40000 caffemodel   imdb inria test         VIEW YOUR RESULTS     1  Look for the file in INRIA results test directory  This file has info about the bounding box in each image along with the probability with which it detects it as person     2  Edit the file cvPlotBox py     Set fileName variable to the above file    Set imagePath to  home ubuntu INRIA data Images     Set OutPath to the folder where you want to extract your resultant images with box around detected persons     ","software":"md","book":"kumardeepakr3","full_link":"https://github.com/kumardeepakr3/fast-rcnn"},{"name":"a730470317/my_caffe","artist":"caff, model, learn, communiti, berkeley","id":586,"playcount":2482,"description":"a730470317/my_caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"a730470317","full_link":"https://github.com/a730470317/my_caffe"},{"name":"axbaretto/caffe","artist":"caff, model, learn, communiti, berkeley","id":587,"playcount":2487,"description":"axbaretto/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"axbaretto","full_link":"https://github.com/axbaretto/caffe"},{"name":"tonyw/nvcaffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":588,"playcount":2501,"description":"tonyw/nvcaffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Integration with   cuDNN  https   developer nvidia com cudnn  v7        Automatic selection of the best cuDNN convolution algorithm        Integration with v2 2 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser and transformer   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            Useful notes  Libturbojpeg library is used since 0 16 5  It has a packaging bug  Please execute the following  required for Makefile  optional for CMake       sudo apt get install libturbojpeg libturbojpeg dev sudo ln  s  usr lib x86 64 linux gnu libturbojpeg so 0 1 0  usr lib x86 64 linux gnu libturbojpeg so    ","software":"md","book":"tonyw","full_link":"https://github.com/tonyw/nvcaffe"},{"name":"festrs/Plantinfo","artist":"caff, model, arxiv, year, fast","id":589,"playcount":2535,"description":"festrs/Plantinfo caff, model, arxiv, year, fast    Plantinfo      Build Status  https   travis ci org festrs Plantinfo svg branch master   https   travis ci org festrs Plantinfo      Codacy Badge  https   api codacy com project badge Grade 6a7747bff134456cbbc83723fdfdd586   https   www codacy com app festrs Plantinfo utm source github com amp utm medium referral amp utm content festrs Plantinfo amp utm campaign Badge Grade     codebeat badge  https   codebeat co badges f4239007 937f 44b7 942f 4e5eaf8c8619   https   codebeat co projects github com festrs plantinfo   This project was created as a final paper for the graduation program  of system information at  PUCRS  http   www pucrs br    the goal is to improve the plants classification process and reduce the time at same time  Because of some limitations like  the lack amount images classified of plants and the great quantity of plants  I kept my focus in a specific group of plants  the poisonous or toxic plants     Body  This work consists of using deep learning methods for image recognition of plants  The  Caffe  http   caffe berkeleyvision org  framework was used to generate the prediction model  A  website  http   plantinfo herokuapp com   complents this mobile aplication bringing more information about the range of plants and auxiliar caracteristics  Also we used the new Deep Learning system from NVIDEA called  DIGITS  https   developer nvidia com digits  whos turned the process a lot easier   For more information about Deep Learning methods  here  http   cs231n github io convolutional networks  add  there is a great article from Stanford University about it     Installation  We used cocoapods for managing the dependencies  remember to use   pod install   before compiling     Autor  Felipe Pereira   festrs  festrs github io     Contributors     Rafael Braun  https   www facebook com mbraun raphael      License and Citation    PlantInfo   is available under the MIT license  See the LICENSE file for more info   Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014       ","software":"md","book":"festrs","full_link":"https://github.com/festrs/Plantinfo"},{"name":"jjykh/caffe","artist":"caff, model, learn, communiti, berkeley","id":590,"playcount":2487,"description":"jjykh/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jjykh","full_link":"https://github.com/jjykh/caffe"},{"name":"ypwhs/caffe-ios-sample","artist":"caff, nsstring, exampl, model, classifi","id":591,"playcount":3115,"description":"ypwhs/caffe-ios-sample caff, nsstring, exampl, model, classifi Caffe iOS sample                   This is an example XCode project using iOS version of Caffe built by  aleph7  https   github com aleph7 caffe    It also includes a class  Classifier  which is the  cpp classification  imported from Caffe C   example  It classifies example image as following screenshot     sc  https   cloud githubusercontent com assets 1332805 10410612 d0450f08 6f81 11e5 8dc5 2dd870639b4b png      Dependencies    opencv2 framework   Xcode 6  can t build with Xcode 7      Get started  Clone it         git clone   recursive git github com noradaiko caffe ios sample git          Prepare model files  You need your  caffemodel    deploy prototxt    mean binaryproto  and  labels txt  into  model   directory  This sample already includes files for testing except for  caffemodel    You can download BVLC CaffeNet Model from   http   dl caffe berkeleyvision org bvlc reference caffenet caffemodel  http   dl caffe berkeleyvision org bvlc reference caffenet caffemodel    Of course  you can use your own network model if you have      How to classify     objective c NSString  model file    NSBundle mainBundle pathForResource   deploy  ofType   prototxt  inDirectory   model    NSString  label file    NSBundle mainBundle pathForResource   labels  ofType   txt  inDirectory   model    NSString  mean file    NSBundle mainBundle pathForResource   mean  ofType   binaryproto  inDirectory   model    NSString  trained file    NSBundle mainBundle pathForResource   bvlc reference caffenet  ofType   caffemodel  inDirectory   model    string model file str   std  string  model file UTF8String    string label file str   std  string  label file UTF8String    string trained file str   std  string  trained file UTF8String    string mean file str   std  string  mean file UTF8String     UIImage  example    UIImage imageNamed   image 0002 jpg     cv  Mat src img  UIImageToMat example  src img    Classifier classifier   Classifier model file str  trained file str  mean file str  label file str   std  vector Prediction  result   classifier Classify src img        Output into console      objective c for  std  vector Prediction   iterator it   result begin    it    result end      it      NSString  label    NSString stringWithUTF8String it  first c str       NSNumber  probability    NSNumber numberWithFloat it  second     NSLog   label      prob       label  probability             License and Citation      This example   BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE       Caffe  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"ypwhs","full_link":"https://github.com/ypwhs/caffe-ios-sample"},{"name":"imisra/caffe-icnm","artist":"caff, model, learn, bvlc, refer","id":592,"playcount":1924,"description":"imisra/caffe-icnm caff, model, learn, bvlc, refer   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"imisra","full_link":"https://github.com/imisra/caffe-icnm"},{"name":"digimatronics/caffe","artist":"caff, learn, model, framework, vision","id":593,"playcount":2102,"description":"digimatronics/caffe caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"digimatronics","full_link":"https://github.com/digimatronics/caffe"},{"name":"yihui-he/caffe-pro","artist":"caff, model, learn, communiti, berkeley","id":594,"playcount":2800,"description":"yihui-he/caffe-pro caff, model, learn, communiti, berkeley     modification from Caffe   ImageData layer         Supporting resize image shorter side to 256 then crop to 224x224          various interpolation methods  bicubic  bilinear etc     Spatial Convolution  which was used in Xception   Filter layer  Given a input blob  select a subset of channels as output blob    Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yihui-he","full_link":"https://github.com/yihui-he/caffe-pro"},{"name":"JGud007/CaffeToFPGA","artist":"caff, model, learn, communiti, berkeley","id":595,"playcount":2487,"description":"JGud007/CaffeToFPGA caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"JGud007","full_link":"https://github.com/JGud007/CaffeToFPGA"},{"name":"yundabrowski/deeppyramid","artist":"featur, deeppyramid, caff, network, convolut","id":596,"playcount":2761,"description":"yundabrowski/deeppyramid featur, deeppyramid, caff, network, convolut    DeepPyramid  DeepPyramid is a simple toolkit for building feature pyramids from deep convolutional networks  The DeepPyramid data structure is nearly identical to the HOG feature pyramid created by the featpyramid m function in the  voc dpm  https   github com rbgirshick voc dpm  code       References  This code was used in our  tech report  http   arxiv org pdf 1409 5403v2 pdf  about the relationship between deformable part models and convolutional networks        article girshick14dpdpm          author       Ross Girshick and Forrest Iandola and Trevor Darrell and Jitendra Malik           title        Deformable Part Models are Convolutional Neural Networks           journal      CoRR           year         2014           volume       abs 1409 5403           url          http   arxiv org abs 1409 5403           year         2014              Installation  0    Prerequisites      0  MATLAB  tested with 2014a on 64 bit Linux    0  Caffe s  prerequisites  http   caffe berkeleyvision org installation html prequequisites  0    Install Caffe    this is the most complicated part    0  Follow the  Caffe installation instructions  http   caffe berkeleyvision org installation html    0  Let s call the place where you installed caffe   CAFFE ROOT   you can run  export CAFFE ROOT   pwd      0    Important    Make sure to compile the Caffe MATLAB wrapper  which is not built by default   make matcaffe    0    Important    Make sure to run  cd  CAFFE ROOT data ilsvrc12      get ilsvrc aux sh  to download the ImageNet image mean   0  DeepPyramid has been tested with master and dev at the time of this writing 0    Get DeepPyramid     0   git clone https   github com rbgirshick DeepPyramid git    0  If you haven t installed R CNN  you ll need to download its  models  https   dl dropboxusercontent com s og7ghmiken2olzh r cnn release1 data tgz dl 0    1  Copy R CNN s non finetuned ImageNet network   rcnnpath  data caffe nets ilsvrc 2012 train iter 310k  to   deeppyramidpath  data caffe nets ilsvrc 2012 train iter 310k   or just create a symlink        Usage  1  Run matlab from inside the DeepPyramid code directory 2  Add the  matcaffe  mex function to your path   addpath  path to caffe matlab caffe   3  Run the demo  demo deep pyramid       Uses  DeepPyramid can be used for implementing DPMs on deep convolutional network features  rather than HOG features  It can also be used whenever you need a dense multiscale pyramid of image features       Caveats  The implementation is designed to be simple and as a result is very inefficient  There are a variety of ways to speed it up  and they will be done in the future  For now  it takes about 0 5 to 0 6 seconds to compute a feature pyramid on an NVIDIA Titan GPU  which is acceptable  ","software":"md","book":"yundabrowski","full_link":"https://github.com/yundabrowski/deeppyramid"},{"name":"wuyx/ParseNet-Looking-Wider-to-See-Better","artist":"caff, model, learn, communiti, berkeley","id":597,"playcount":2482,"description":"wuyx/ParseNet-Looking-Wider-to-See-Better caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wuyx","full_link":"https://github.com/wuyx/ParseNet-Looking-Wider-to-See-Better"},{"name":"Hao-Tju/GLP4NN_Caffe","artist":"caff, learn, model, framework, vision","id":598,"playcount":2637,"description":"Hao-Tju/GLP4NN_Caffe caff, learn, model, framework, vision   GLP4NN Caffe  This is an implementation of the GLP4NN parallelization framework on the basis of Caffe  which is a popular deep  learning framework  Original source code of the Caffe framework can be found in  Caffe  https   github com BVLC caffe    Other libraries required by this implementation  GLPK implementation and the CUPTI library  The implementation with cuDNN library has not been implemented  We ll try to provide a more generic implementation of this framework based on other distributed frameworks in the near future     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Hao-Tju","full_link":"https://github.com/Hao-Tju/GLP4NN_Caffe"},{"name":"MichaelHunson/caffe_triplet_multiple_inputs","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":599,"playcount":3081,"description":"MichaelHunson/caffe_triplet_multiple_inputs “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Caffe Framework with various triplet loss neural network     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   This is my caffe framework which is initially designed for triplet loss neural network  It contains various useful implementations  including   1  create LEVELDB LMDB for triplet input  anchor postive negative  Code in    tools convert triplet db dataset cpp     2  create LEVELDB LMDB for multiple postive and negative input  Code in    tools convert multiple triplet db dataset cpp     3  loss layer with multiple postive and negative input  Code in    src caffe layers naive triplet multiple loss layer cpp         Create LMDB LEVELDB file for triple input  To speed up the overall neural network training  it s better to convert input triple images into LMDB LEVELDB  I provide the relevant code in  tools convert triplet db dataset cpp   in which each lines consists of anchor positive and negative respectively  An example list is shown below  not that all images should be shown with absolute pathes  separated by SPACE or TAB       bash anchor1 png      pos1 png      neg1 png anchor2 png      pos2 png      neg2 png             Create LMDB LEVELDB file for multiple postives or negatives input  I extend the current triple input restraint to allow multiple postives and negatives input  That is  an anchor image corresponds to multiple postive and negative input  The relevant code is  tools convert multiple triplet db dataset cpp   in which each line accordingly consists of anchor image  multiple postive and multiple negatie images  with two extra numbers indicating the the beginning of positive images and negatives images  An example is shown below       bash anchor1 png      pos1 png      pos2 png      pos3 png     neg1 png      neg2 png      neg3 png      neg4 png      1      4            The loss layer of multiple positive and negative inputs   I organize all the positive and negative inputs as one blob with the channel number equals to the total number of anchor positive and negative inputs  In the loss layer  I split the anchor positive and negative inputs and process them separately  So the loss layer prototxt should be specified with the length of anchor  positive and negative respectively       bash layer        name   triplet loss       type   NaiveTripletMultipleLoss       bottom   ip2norm       top   loss       top   accuracy       multiple triplet loss param       margin  1      anchor len  1      pos len  3      neg len  4      batch size  30      sim type   DotProductSimilarity                If you find this useful  please cite Caffe paper        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"MichaelHunson","full_link":"https://github.com/MichaelHunson/caffe_triplet_multiple_inputs"},{"name":"n3rdd/Object-Detection-YOLOv2","artist":"yolo, detect, onli, ali, joseph","id":600,"playcount":2544,"description":"n3rdd/Object-Detection-YOLOv2 yolo, detect, onli, ali, joseph   Object Detection with YOLOv2   Final project   by Group 2  Localization  in HDU CS   Innovation   Practice Course    2018 Spring       Inspiration This repo is based on  Car detection PA  https   github com n3rdd Car detection PA   containing a tutorial for   YOLOv2    which is a programming assignment in  Convolutional Neural Networks  https   www coursera org learn convolutional neural networks   by Andrew Ng       Requirements    Keras  https   github com fchollet keras     Tensorflow  https   www tensorflow org    For Keras backend      OpenCV  https   pypi org project opencv python      h5py  http   www h5py org    For Keras model serialization      Python 3  https   www python org       Installation  Use  pip  to install the required packages in your command line  Visit the official sites above for more details     bash pip install numpy h5py pip install tensorflow   CPU only pip install keras pip install opencv python         Get Started    Download  https   pan baidu com s 1sos5oov7V3O0uwOjoUvbuQ   Password  8kim  an existing pretrained Keras YOLO model stored in   yolo h5    These weights come from the official YOLO website  and were converted using a function written in  YAD2K  https   github com allanzelener YAD2K   and put it into  model data   folder    Put your test image video in  images   or  videos      Set your image video file and shape in  yolo v2 py      python if   name         main                 code               Set the original image video shape     image shape    960   544      height  width             Detect a video     video file    traffic mp4      predict video sess  video file    output in out         Uncomment the code below to detect an image       out scores  out boxes  out classes   predict image sess   person jpg         Run the model in your command line     bash python yolo v2 py       The prediction info will be printed into  output txt     The   notebook   version will be uploaded very soon       More Details    todo     TODOs   Unify the interface in the video detection part    Train the model    Try YOLOv3             Reference   Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi    You Only Look Once  Unified  Real Time Object Detection  https   arxiv org abs 1506 02640   2015    Joseph Redmon  Ali Farhadi    YOLO9000  Better  Faster  Stronger  https   arxiv org abs 1612 08242   2016    Allan Zelener    YAD2K  Yet Another Darknet 2 Keras  https   github com allanzelener YAD2K    The official YOLO website  https   pjreddie com darknet yolo     ","software":"md","book":"n3rdd","full_link":"https://github.com/n3rdd/Object-Detection-YOLOv2"},{"name":"D-X-Y/Dual-Network-WSOD","artist":"caff, model, arxiv, year, fast","id":601,"playcount":2849,"description":"D-X-Y/Dual-Network-WSOD caff, model, arxiv, year, fast    A Dual Network Progressive Approach to Weakly Supervised Object Detection  https   d x y github io pdf a dual network pdf   By Xuanyi Dong  Deyu Meng  Fan Ma  Yi Yang  This paper is accepted by  ACM Multimedia 2017  https   dl acm org citation cfm id 3123455        Introduction     Dual Network    https   d x y github io pdf a dual network pdf  is a weakly supervised object detection framework leveraging deep CNN models   This project is modified on the Matlab code of  R FCN  https   github com daijifeng001 R FCN  and Fast R CNN       License  Dual Network is released under the MIT License  refer to the LICENSE file for details        Resources   Preparation  0  ImageNet pretrained networks   Google Drive  https   drive google com open id 1xjFL ZeVzXkY584ZsEnr9O6O3P1Ypjwd   Please save the models into the corresponding sub directory of  models pre trained models   0  The initial pseudo labels for PASCAL VOC 2007 by  ContextLocNet  https   github com vadimkantorov contextlocnet     Google Drive  https   drive google com open id 1wK64uRk6f0DTwUICs3dMy zZzJEwvZje   Please save and extract it into  data   0  The pre computed region proposals   Google Drive  https   drive google com open id 1a0JF0ReqHRbbpkViO L33GJUIMSf8wV9   Please save and extract it into  data   0  Download the PASCAL VOC 2007 data into  datasets   following the README in  datasets   0  Compile  Caffe  located in  external caffe   0  Run  dual build m  to complie the nms mex functions  0  Run  startup m  to add necessary paths        Training   Testing    TODO  re organize the experiment codes        Citing Dual Network  If you find Dual Network useful in your research  please consider citing        inproceedings dong2017dual          title  A Dual Network Progressive Approach to Weakly Supervised Object Detection           author  Dong  Xuanyi and Meng  Deyu and Ma  Fan and Yang  Yi           booktitle  Proceedings of the 2017 ACM on Multimedia Conference           pages  279  287           year  2017           organization  ACM             inproceedings kantorov2016          title    ContextLocNet  Context aware Deep Network Models for Weakly Supervised Localization           author    Kantorov  V   Oquab  M   Cho M  and Laptev  I            booktitle    Proc  European Conference on Computer Vision  ECCV   2016           year    2016             article dai16rfcn          Author    Jifeng Dai  Yi Li  Kaiming He  Jian Sun           Title     R FCN   Object Detection via Region based Fully Convolutional Networks           Journal    arXiv preprint arXiv 1605 06409           Year    2016             inproceedings girshick2015fast          title  Fast R CNN           author  Girshick  Ross           booktitle  Proceedings of the IEEE international conference on computer vision           pages  1440  1448           year  2015        ","software":"md","book":"D-X-Y","full_link":"https://github.com/D-X-Y/Dual-Network-WSOD"},{"name":"moli232777144/caffe","artist":"caff, model, learn, communiti, berkeley","id":602,"playcount":2487,"description":"moli232777144/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"moli232777144","full_link":"https://github.com/moli232777144/caffe"},{"name":"bacTlink/caffe_illu","artist":"caff, model, learn, communiti, berkeley","id":603,"playcount":2649,"description":"bacTlink/caffe_illu caff, model, learn, communiti, berkeley   Illu raw data After compiling the project  run        build tools illu gen rawdata       build tools illu to lmdb  The default path is     data3 lzh illu         Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bacTlink","full_link":"https://github.com/bacTlink/caffe_illu"},{"name":"lg12170226/caffe-ssd","artist":"caff, model, learn, communiti, berkeley","id":604,"playcount":2482,"description":"lg12170226/caffe-ssd caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lg12170226","full_link":"https://github.com/lg12170226/caffe-ssd"},{"name":"jizhuoran/SVD_Compression","artist":"caff, model, learn, communiti, berkeley","id":605,"playcount":2487,"description":"jizhuoran/SVD_Compression caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jizhuoran","full_link":"https://github.com/jizhuoran/SVD_Compression"},{"name":"aiodo/ssd","artist":"caff, model, learn, communiti, berkeley","id":606,"playcount":2482,"description":"aiodo/ssd caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"aiodo","full_link":"https://github.com/aiodo/ssd"},{"name":"qilei123/caffe-mlkp","artist":"caff, model, learn, communiti, berkeley","id":607,"playcount":2487,"description":"qilei123/caffe-mlkp caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"qilei123","full_link":"https://github.com/qilei123/caffe-mlkp"},{"name":"Sandbox3aster/caffe-charles","artist":"caff, learn, model, framework, vision","id":608,"playcount":2394,"description":"Sandbox3aster/caffe-charles caff, learn, model, framework, vision    Hightlights of caffe mt     1  More ways of performing Batch Normalization compared with the  official Caffe  https   github com BVLC caffe     2  Local Convolution    3  Dynamic Convolution      For details please see in  Wiki  https   github com knsong caffe mt wiki                       Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Sandbox3aster","full_link":"https://github.com/Sandbox3aster/caffe-charles"},{"name":"ZhiwenShao/MCNet-Extension","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":609,"playcount":2719,"description":"ZhiwenShao/MCNet-Extension “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> This code is based on Caffe  1   It is the C   implementation of our method MCNet  It is worth mentioning that this implementation is an extended version of MCNet  2    It is a Microsoft Visual Studio 2013 solution  MCNet sln     You need to change the include path  library path  and additional dependencies of OpenCV according to your own installation path and version of OpenCV in  C C      General    Additional Include Directories    Linker    General    Additional Library Directories   and  Linker    Input    Additional Dependencies  of  Project    Properties    Configuration Properties  respectively    Prerequisites   1  OpenCV  any version is applicable  2  Microsoft Visual Studio 2013 or a later version    Usuage   MCNet img listfile facebbox file res file  Input     img listfile   is a file that contains the path of images      facebbox file   is a file that contains corresponding face bounding boxes   Output     res file  is a file that contains the predicted facial landmark locations    Format   Format of the img listfile  Each line is the path of a face image   Format of the facebbox file  Each line contains left  right  top and bottom of the face bounding box corresponding to the image in the img listfile   Format of the outputFile  Each line contains x coordinate and y coordinate of predicted 68 facial landmarks  x1 y1 x2 y2         Example   MCNet IBUG path txt IBUG face bbox txt IBUG land txt  You need to put the ibug  3  images into the folder  x64 Release image ibug     In the folder  x64 Release   you can run the file  run MCNet bat    You can also run the code in the Microsoft Visual Studio 2013  We have added the command arguments to  Project    Properties    Configuration Properties    Debugging    Command Arguments    If you find our code useful in your research work  please cite our paper  2    Should you have any questions  just contact with us through email shaozhiwen sjtu edu cn    References    1  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross B Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding    in ACM International Conference on Multimedia  ACM  2014  pp  675 678    2  Zhiwen Shao  Hengliang Zhu  Yangyang  Hao  Min  Wang  and Lizhuang Ma   Learning a multi center convolutional network for unconstrained face alignment   in IEEE International Conference on Multimedia and Expo  IEEE  2017  pp  109 114    3  Christos Sagonas  Georgios Tzimiropoulos  Stefanos Zafeiriou  and Maja Pantic   300 faces in the wild challenge  The first facial landmark localization challenge   in IEEE International Conference on Computer VisionWorkshops  IEEE  2013  pp  397 403  ","software":"md","book":"ZhiwenShao","full_link":"https://github.com/ZhiwenShao/MCNet-Extension"},{"name":"BiaoLiu2017/caffe-siamese","artist":"caff, model, learn, communiti, berkeley","id":610,"playcount":2487,"description":"BiaoLiu2017/caffe-siamese caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"BiaoLiu2017","full_link":"https://github.com/BiaoLiu2017/caffe-siamese"},{"name":"skokec/DAU-ConvNet-caffe","artist":"caff, model, learn, communiti, berkeley","id":611,"playcount":2487,"description":"skokec/DAU-ConvNet-caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"skokec","full_link":"https://github.com/skokec/DAU-ConvNet-caffe"},{"name":"rickyHong/caffe-ssd-repl","artist":"caff, model, learn, communiti, berkeley","id":612,"playcount":2482,"description":"rickyHong/caffe-ssd-repl caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/caffe-ssd-repl"},{"name":"dlgyy/caffe_2","artist":"caff, model, learn, communiti, berkeley","id":613,"playcount":2487,"description":"dlgyy/caffe_2 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dlgyy","full_link":"https://github.com/dlgyy/caffe_2"},{"name":"hust-wuwechao/caffe-origin","artist":"caff, model, learn, communiti, berkeley","id":614,"playcount":2487,"description":"hust-wuwechao/caffe-origin caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hust-wuwechao","full_link":"https://github.com/hust-wuwechao/caffe-origin"},{"name":"amruth-s/caffe-megabatch-welford","artist":"caff, model, learn, communiti, berkeley","id":615,"playcount":2487,"description":"amruth-s/caffe-megabatch-welford caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"amruth-s","full_link":"https://github.com/amruth-s/caffe-megabatch-welford"},{"name":"robvanderleek/caffe-ssh","artist":"caff, model, learn, communiti, berkeley","id":616,"playcount":2487,"description":"robvanderleek/caffe-ssh caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"robvanderleek","full_link":"https://github.com/robvanderleek/caffe-ssh"},{"name":"conansherry/faster_rcnn_caffe","artist":"caff, model, learn, communiti, berkeley","id":617,"playcount":2487,"description":"conansherry/faster_rcnn_caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"conansherry","full_link":"https://github.com/conansherry/faster_rcnn_caffe"},{"name":"q-gao/caffe-mssd","artist":"caff, model, learn, communiti, berkeley","id":618,"playcount":2482,"description":"q-gao/caffe-mssd caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"q-gao","full_link":"https://github.com/q-gao/caffe-mssd"},{"name":"zhanglaplace/Caffe-ZF","artist":"caff, model, learn, communiti, berkeley","id":619,"playcount":2587,"description":"zhanglaplace/Caffe-ZF caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          GPU   use NCCL    git clone https   github com NVIDIA nccl git    cd nccl    sudo make install  j ","software":"md","book":"zhanglaplace","full_link":"https://github.com/zhanglaplace/Caffe-ZF"},{"name":"zhangnju/sparse_net","artist":"caff, model, learn, communiti, berkeley","id":620,"playcount":2487,"description":"zhangnju/sparse_net caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhangnju","full_link":"https://github.com/zhangnju/sparse_net"},{"name":"paulomarcos/caffe-cupstate","artist":"caff, model, learn, communiti, berkeley","id":621,"playcount":2487,"description":"paulomarcos/caffe-cupstate caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"paulomarcos","full_link":"https://github.com/paulomarcos/caffe-cupstate"},{"name":"jimchenhub/new-caffe-segnet","artist":"caff, learn, model, deep, layer","id":622,"playcount":2332,"description":"jimchenhub/new-caffe-segnet caff, learn, model, deep, layer   New Caffe SegNet To use some new features  I implement the  SegNet  in current version of  Caffe    Because  Caffe  has already have  Batch Normalization Layer   I just implement  Upsample Layer  and  Dense Image Data Layer       Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jimchenhub","full_link":"https://github.com/jimchenhub/new-caffe-segnet"},{"name":"yonghenglh6/minicaffe","artist":"caff, model, learn, communiti, berkeley","id":623,"playcount":2487,"description":"yonghenglh6/minicaffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"yonghenglh6","full_link":"https://github.com/yonghenglh6/minicaffe"},{"name":"xieguotian/SSD","artist":"caff, model, learn, communiti, berkeley","id":624,"playcount":2482,"description":"xieguotian/SSD caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xieguotian","full_link":"https://github.com/xieguotian/SSD"},{"name":"baochens/Caffe-Deep_CORAL","artist":"caff, learn, model, framework, vision","id":625,"playcount":2434,"description":"baochens/Caffe-Deep_CORAL caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation of Caffe  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            Citation of Deep CORAL  Please cite Deep CORAL in your publications if it helps your research        inproceedings dcoral          title  Deep CORAL  Correlation Alignment for Deep Domain Adaptation           author  Baochen Sun and Kate Saenko           booktitle  ECCV 2016 Workshops           year  2016             ","software":"md","book":"baochens","full_link":"https://github.com/baochens/Caffe-Deep_CORAL"},{"name":"EunhyeokPark/caffe-FQ","artist":"caff, model, learn, communiti, berkeley","id":626,"playcount":2482,"description":"EunhyeokPark/caffe-FQ caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"EunhyeokPark","full_link":"https://github.com/EunhyeokPark/caffe-FQ"},{"name":"kevinlee-movidius/caffe","artist":"caff, model, learn, communiti, berkeley","id":627,"playcount":2480,"description":"kevinlee-movidius/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014      ","software":"md","book":"kevinlee-movidius","full_link":"https://github.com/kevinlee-movidius/caffe"},{"name":"closerbibi/Amodal-detection-pytorch","artist":"train, rcnn, set, faster, model","id":628,"playcount":2316,"description":"closerbibi/Amodal-detection-pytorch train, rcnn, set, faster, model   Faster RCNN with PyTorch This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py    ","software":"md","book":"closerbibi","full_link":"https://github.com/closerbibi/Amodal-detection-pytorch"},{"name":"mathieuaubry/seeing3Dchairs","artist":"model, imag, train, caff, download","id":629,"playcount":2894,"description":"mathieuaubry/seeing3Dchairs model, imag, train, caff, download  Seeing 3D chairs  http   www di ens fr willow research seeing3Dchairs  source code              Here you will find a Matlab implementation of the algorithm described in the following paper      Mathieu Aubry  Daniel Maturana  Alexei A  Efros  Bryan C  Russell  and Josef Sivic     Seeing 3D chairs  exemplar part based 2D 3D alignment using a large dataset of CAD models     CVPR  2014      PDF  http   www di ens fr willow research seeing3Dchairs texts Aubry14 pdf     BibTeX  http   www di ens fr willow research seeing3Dchairs texts Aubry14 html     Project page  http   www di ens fr willow research seeing3Dchairs   Note that this implementation has minor differences with the one used to generate the results shown in the paper   For any questions or feedback regarding the source code please contact  Mathieu Aubry  mailto mathieu aubry polytechnique org          DOWNLOADING THE CODE   You can download a  zip file of the source code  https   github com mathieuaubry seeing3Dchairs archive master zip  directly     Alternatively  you can clone it from GitHub as follows       sh   git clone https   github com mathieuaubry seeing3Dchairs git          DOWNLOADING THE DATA    You will need to download the  rendered views of the chair CAD models  http   www di ens fr willow research seeing3Dchairs data rendered chairs tar    HOG whitening parameters  http   www di ens fr willow research seeing3Dchairs data whitening params mat   and  negative training examples  http   www di ens fr willow research seeing3Dchairs data negative hogs mat    You may also download our pre computed  discriminative elements  http   www di ens fr willow research seeing3Dchairs data DEs tar  to run the detection script directly        RUNNING THE CODE   1  Start by compiling the code   At the Matlab command prompt run          sh       compile          2   Optional   demoGetAllDEs m  https   github com mathieuaubry seeing3Dchairs blob master demoGetAllDEs m  is a script that computes the discriminative elements from a set of rendered views  It must be run before doing detection   Alternatively  you can download our pre computed  discriminative elements  http   www di ens fr willow research seeing3Dchairs data DEs tar    3   demoDetection m  https   github com mathieuaubry seeing3Dchairs blob master demoDetection m  is a script that uses the discriminative elements to detect chairs in a test image  It generates an HTML file visualizing the results after non maximum suppression   Both scripts can be used directly for a small number of 3D models  but should be parallelized to use the full set in reasonable time  The three functions to parallelize are indicated in the comments of the scripts       ACKNOWLEDGMENTS   The functions features cc and bboverlap m have been adapted from Ross Girshick s and Pedro Felzenswalb s implementation available at https   github com rbgirshick voc dpm ","software":"md","book":"mathieuaubry","full_link":"https://github.com/mathieuaubry/seeing3Dchairs"},{"name":"Tidesun/caffe","artist":"caff, model, learn, communiti, berkeley","id":630,"playcount":2487,"description":"Tidesun/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Tidesun","full_link":"https://github.com/Tidesun/caffe"},{"name":"v-chixma/caffe","artist":"caff, model, learn, communiti, berkeley","id":631,"playcount":2487,"description":"v-chixma/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"v-chixma","full_link":"https://github.com/v-chixma/caffe"},{"name":"huanhsu/ped_reid","artist":"shell, code, gpu, python, build","id":632,"playcount":2770,"description":"huanhsu/ped_reid shell, code, gpu, python, build   Person Search Project  This repository hosts the code for our paper  End to End Deep Learning for Person Search  https   arxiv org abs 1604 01850   The code is modified from the py faster rcnn written by Ross Girshick      Requirements  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   Cython    python opencv    easydict    1 6     PyYAML  3  MATLAB is required for processing the raw data      Installation  1  Build the Cython modules        Shell     cd lib     make          2  Build Caffe and pycaffe        Shell     cd caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe             Experiments  1  Request the dataset from sli  at  ee cuhk edu hk  academic only   2  Convert the raw dataset into formatted database        Shell     scripts make db sh  path to the downloaded dataset zip          3  Pretraining        Shell     data scripts fetch imagenet models sh     experiments scripts pretrain sh             Or you may directly download a   pretrained model   from  here  https   drive google com file d 0B67 d0rLRTQYQTJJSTNOX3pEVlE view usp sharing  to  output psdb pretrain     4  Training and evaluation        Shell     experiments scripts train sh 0             Or you may directly download a   trained model   from  here  https   drive google com file d 0B67 d0rLRTQYeDlXMlc2OGUzeG8 view usp sharing  to  output psdb train    and test the performance with        Shell     python2 tools test net py   gpu 0           gallery def models psdb VGG16 test gallery prototxt           probe def models psdb VGG16 test probe prototxt           net output psdb train VGG16 iter 100000 caffemodel           cfg experiments cfgs train yml           imdb psdb test             The result should be around        Shell     mAP  55 79      top 1  62 17              Citation       article xiaoli2016end        title  End to End Deep Learning for Person Search         author  Xiao  Tong and Li  Shuang and Wang  Bochao and Lin  Liang and Wang  Xiaogang         journal  arXiv 1604 01850         year  2016       ","software":"md","book":"huanhsu","full_link":"https://github.com/huanhsu/ped_reid"},{"name":"shengwenLeong/DeepBinaryCode","artist":"caff, model, learn, communiti, berkeley","id":633,"playcount":2896,"description":"shengwenLeong/DeepBinaryCode caff, model, learn, communiti, berkeley   This project from  kevinlin311tw Caffe DeepBinaryCode  https   github com kevinlin311tw Caffe DeepBinaryCode blob master prepare sh    the prior project does not support resnet and this project copy from caffe source and modify it according to  kevinlin311tw Caffe DeepBinaryCode  https   github com kevinlin311tw Caffe DeepBinaryCode blob master prepare sh    we can run this code to support resnet hash     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"shengwenLeong","full_link":"https://github.com/shengwenLeong/DeepBinaryCode"},{"name":"rickyHong/caffeSSDv1.0","artist":"caff, model, learn, communiti, berkeley","id":634,"playcount":2482,"description":"rickyHong/caffeSSDv1.0 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/caffeSSDv1.0"},{"name":"gcyy/test","artist":"caff, model, learn, communiti, berkeley","id":635,"playcount":2576,"description":"gcyy/test caff, model, learn, communiti, berkeley         HEAD   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                  camera test              449dbb701a47b8ae5cd25305bd64f2f1241621aa ","software":"md","book":"gcyy","full_link":"https://github.com/gcyy/test"},{"name":"stoneyang-caffes/caffe_mobilenets","artist":"caff, model, learn, communiti, berkeley","id":636,"playcount":2487,"description":"stoneyang-caffes/caffe_mobilenets caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"stoneyang-caffes","full_link":"https://github.com/stoneyang-caffes/caffe_mobilenets"},{"name":"ruihou/caffe-3d","artist":"caff, model, learn, communiti, berkeley","id":637,"playcount":2487,"description":"ruihou/caffe-3d caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ruihou","full_link":"https://github.com/ruihou/caffe-3d"},{"name":"closerbibi/faster-rcnn_hha","artist":"train, rcnn, faster, shell, network","id":638,"playcount":8873,"description":"closerbibi/faster-rcnn_hha train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name         faster rcnn hha ","software":"md","book":"closerbibi","full_link":"https://github.com/closerbibi/faster-rcnn_hha"},{"name":"XifengGuo/IDEC-toy","artist":"dec, code, python, mnist, cluster","id":639,"playcount":3171,"description":"XifengGuo/IDEC-toy dec, code, python, mnist, cluster   Improved Deep Embedded Clustering  IDEC   Keras implementation for our IJCAI 17 paper     Xifeng Guo  Long Gao  Xinwang Liu  Jianping Yin    Improved Deep Embedded Clustering with Local Structure Preservation  https   xifengguo github io papers IJCAI17 IDEC pdf   IJCAI 2017   and re implementation  not exactly for pre training part  for paper     Junyuan Xie  Ross Girshick  and Ali Farhadi  Unsupervised deep embedding for clustering analysis  ICML 2016   This code is used for quick start with DEC and IDEC algorithms   The results are not same with that reported in our paper  Use  IDEC code  https   github com XifengGuo IDEC  to exactly re implement the experiments          Differences with IDEC implementation used in paper   The initialization step in this code trains the autoencoder in an end to end manner  while in paper it trains denoising stacked autoencoders    Recommend update interval 20 for reutersidf10k in IDEC   Optimizer SGD lr 0 01  momentum 0 99  for usps or reutersidf10k  while in paper Optimizer SGD lr 0 1  momentum 0 99    Results are worse than that reported in paper  For exact reimplementation  use  IDEC code  https   github com XifengGuo IDEC        Table 1  Results of methods implemented by this code and  IDEC code  https   github com XifengGuo IDEC   measured by Accuracy              Methods           MNIST       USPS       REUTERSIDF10K    pendigits                                                                               AE KMeans      82 9          69 0       54 2              68 6     DEC            85 2          75 0       55 0              68 8     IDEC           87 3          76 3       56 3              69 8     AE KMeans paper   81 8       69 3       70 5              None     DEC paper      86 6          74 1       73 7              None     IDEC paper     88 1          76 1       75 6              None      Usage The code is compatible with Python 2 7 and Python 3 6  1  Install  Keras v2 0  https   github com fchollet keras   scikit learn and git     sudo pip install keras scikit learn      sudo apt get install git  2  Clone the code to local      git clone https   github com XifengGuo IDEC toy git IDEC toy  3  Prepare datasets               cd IDEC toy data usps            bash   download usps sh            cd    pendigits            bash   download pendigits sh            cd    reuters           bash   get data sh            cd            4  Run experiment on MNIST      python IDEC py mnist  or  python DEC py mnist     The pretrained autoencoder weights are saved to  ae weights h5  and the IDEC  or DEC  model is saved to  results idec IDEC model final h5   or  results dec DEC model final h5    Then we can run IDEC algorithm or DEC with the trained autoencoder weights      python IDEC py mnist   ae weights ae weights h5     or     python DEC py mnist   ae weights ae weights h5   5  Run experiment on USPS      python IDEC py usps      python DEC py usps   5  Run experiment on pendigits      python IDEC py pendigits      python DEC py pendigits   6  Run experiment on REUTERSIDF10K      python IDEC py reutersidf10k   n clusters 4      python DEC py reutersidf10k   n clusters 4  ","software":"md","book":"XifengGuo","full_link":"https://github.com/XifengGuo/IDEC-toy"},{"name":"mantouo10/Debug_Caffe","artist":"caff, model, learn, communiti, berkeley","id":640,"playcount":3100,"description":"mantouo10/Debug_Caffe caff, model, learn, communiti, berkeley          caffe        caffe                Makefile config example Makefile config     CPU only  1   opencv   3  python        cpu       opencv3 Python                      1 make all 2 make test 3  make runtest      data              example                  Clion        edit configurations      caffe bin    working directory   caffe        program arguments   train    solver  example cifar10 cifar10 quick solver proto txt    proto txt    GPU CPU  CPU                                    caffe                              caffe proto      Blob layer net solver                                                  Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mantouo10","full_link":"https://github.com/mantouo10/Debug_Caffe"},{"name":"Computational-Camera/Kaggle-CVPR-2018-WAD-Video-Segmentation-Challenge-Solution","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":641,"playcount":2843,"description":"Computational-Camera/Kaggle-CVPR-2018-WAD-Video-Segmentation-Challenge-Solution “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   CVPR 2018 WAD Video Segmentation Challenge Solution     Overview The goal of this  Kaggle Challenge  https   www kaggle com c cvpr 2018 autonomous driving  is to accurately segment objects such as car and pedestrian at instance level from the video sequences recorded by the autonomous driving car  Our solution is based on Mask R CNN  We use both  Apolloscape  http   apolloscape auto   and  Cityscape  https   www cityscapes dataset com   datasets and only focus on a particular field of view in the image at the highest possible resolution  Our solution reaches the 2nd palce in the challenge  Private Socre 0 30219       Statistical Analysis The image resolution of Apolloscape is 3384 by 2710  However  our interesting objects are not uniformly distributed over the image  Actually  as revealed in the 2D histogram below  the distribution is densely concentrated in a narrow stripe of the whole field of view  For example  between y   1560 to y   2280  99 7  of our interesting objects are localized in this region of interest  ROI   This is our key observation    div align  center      img src    pic ex png  width  800px        p  Left  our perdiction result example  Right  2D histogram of annotations    p    div      Implemenation The core algorithm in our solution is Mask R CNN  There are a few open source implementations on the shelf  We use  Detectron  https   github com facebookresearch detectron   the object detection library developed by the Mask R CNN original authors Kaiming He  Piotr Dollar  Ross Girshick from Facebook AI Research team  As we learned from the previous  Kaggle image segmentation competition  https   www kaggle com c carvana image masking challenge   to achieve better performance  higher image resolution for training and inference is always preferred  However  due to the GPU memory size constraint and our statistical analysis in the previous section  we crop and resize the image to 3384 by 720  With a Nvidia P100 graphical card  training a 9 class Mask R CNN FPN model with ResNet X101 backbone network requires around 1560 MB GPU memory when the batch size is 1  However  to have a reliable solution  a full field of view prediction at a lower resolution should be considered to recognize those objects that are not in our ROI coverage  In practice  we find it does not improve the performance  Another interesting finding is the threshold for the object detection  Through experiment  0 25 is the optimal threshold to obtain the highest leader board score  We use the pretrained model from COCO dataset provided by the  Detectron Model Zoo  https   github com facebookresearch Detectron blob master MODEL ZOO md   More detailed information can be found from our project report  We also provide our   model  https   www dropbox com s afwlpwfc9tw6nru gold pkl dl 0  used for the competition  ","software":"md","book":"Computational-Camera","full_link":"https://github.com/Computational-Camera/Kaggle-CVPR-2018-WAD-Video-Segmentation-Challenge-Solution"},{"name":"kevinlin311tw/caffe-multilabel","artist":"caff, learn, model, deep, layer","id":642,"playcount":3097,"description":"kevinlin311tw/caffe-multilabel caff, learn, model, deep, layer   Caffe multilabel  Slight modification of the latest caffe  forked in Feb 2017   and extend the ImageData layer to multi label inputs      Quick example You could specify your network prototxt as       name   multi class alexnet      layer         name   data        type   ImageData        top   data        top   label        include         phase  TRAIN              transform param         mirror  true       crop size  227       mean file         data ilsvrc12 imagenet mean binaryproto             image data param         source   file list txt        batch size  10       new height  256       new width  256       label size  4   specify the number of labels               Then  the contend of  file list txt  are       imgs1 jpg 1 1  1  1     imgs2 jpg 1 1  1  1     imgs3 jpg 1 1  1  1     imgs4 jpg 1 1  1 0     imgs5 jpg 1 0 0  1   You could also find a toy example at   examples multi label train   Note that you can indicate the label as  don t care  by setting label to  0        Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kevinlin311tw","full_link":"https://github.com/kevinlin311tw/caffe-multilabel"},{"name":"jizhuoran/K-Means_Clustering_Compression","artist":"caff, model, learn, communiti, berkeley","id":643,"playcount":2487,"description":"jizhuoran/K-Means_Clustering_Compression caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jizhuoran","full_link":"https://github.com/jizhuoran/K-Means_Clustering_Compression"},{"name":"ShengYg/caffe-fast-rcnn","artist":"caff, model, learn, communiti, berkeley","id":644,"playcount":2487,"description":"ShengYg/caffe-fast-rcnn caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ShengYg","full_link":"https://github.com/ShengYg/caffe-fast-rcnn"},{"name":"hust-wuwechao/caffe-myproject","artist":"caff, model, learn, communiti, berkeley","id":645,"playcount":2487,"description":"hust-wuwechao/caffe-myproject caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hust-wuwechao","full_link":"https://github.com/hust-wuwechao/caffe-myproject"},{"name":"WeijingShi/pycaffe-fast-rcnn-tx2","artist":"caff, model, learn, communiti, berkeley","id":646,"playcount":2487,"description":"WeijingShi/pycaffe-fast-rcnn-tx2 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"WeijingShi","full_link":"https://github.com/WeijingShi/pycaffe-fast-rcnn-tx2"},{"name":"D-X-Y/caffe-faster-rcnn","artist":"caff, model, learn, communiti, berkeley","id":647,"playcount":2487,"description":"D-X-Y/caffe-faster-rcnn caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"D-X-Y","full_link":"https://github.com/D-X-Y/caffe-faster-rcnn"},{"name":"YangShuoys/Faster-RCNN-TF","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":648,"playcount":1,"description":"YangShuoys/Faster-RCNN-TF “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> NA","software":"md","book":"YangShuoys","full_link":"https://github.com/YangShuoys/Faster-RCNN-TF"},{"name":"hust-wuwechao/caffe_GPU_myproject","artist":"caff, model, learn, communiti, berkeley","id":649,"playcount":2487,"description":"hust-wuwechao/caffe_GPU_myproject caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hust-wuwechao","full_link":"https://github.com/hust-wuwechao/caffe_GPU_myproject"},{"name":"lcytzk/caffe_sparse","artist":"caff, model, learn, communiti, berkeley","id":650,"playcount":2487,"description":"lcytzk/caffe_sparse caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lcytzk","full_link":"https://github.com/lcytzk/caffe_sparse"},{"name":"closerbibi/faster-rcnn-pytorch","artist":"train, rcnn, set, faster, model","id":651,"playcount":2316,"description":"closerbibi/faster-rcnn-pytorch train, rcnn, set, faster, model   Faster RCNN with PyTorch This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py    ","software":"md","book":"closerbibi","full_link":"https://github.com/closerbibi/faster-rcnn-pytorch"},{"name":"kyu-sz/WPAL-network","artist":"shell, convolut, pedestrian, databas, network","id":652,"playcount":2631,"description":"kyu-sz/WPAL-network shell, convolut, pedestrian, databas, network   Weakly supervised Pedestrian Attribute Localization Network     This repository is no longer maintained  Please refer  the latest version  https   github com YangZhou1994 WPAL network          For the RAP dataset  please contact Dangwei Li  dangwei li nlpr ia ac cn       By Ken Yu  under guidance of Dr  Zhang Zhang and Prof  Kaiqi Huang   Weakly supervised Pedestrian Attribute Localization Network  WPAL network  is a Convolutional Neural Network  CNN  structure designed for recognizing attributes from objects as well as localizing them  Currently it is developed to recognize attributes from pedestrians only  using the Richly Annotated Pedestrian  RAP  database or PETA database      Installation  1  Clone this repository         Shell       Make sure to clone with   recursive     git clone   recursive https   github com kyu sz Weakly supervised Pedestrian Attribute Localization Network git          2  Build Caffe and pycaffe   This project use python layers for input  etc  When building Caffe  set the WITH PYTHON LAYER option to true          Shell     WITH PYTHON LAYER 1 make all pycaffe  j 8          3  Download the RAP database      To get the Richly Annotated Pedestrian  RAP  database  please visit rap idealtest org to learn about how to download a copy of it       It should have two zip files                RAP RAP annotation zip      RAP RAP dataset zip          4  Unzip them both to the directory          Shell     cd  RAP     unzip RAP annotation zip     unzip RAP dataset zip          5  Create symlinks for the RAP database         Shell     cd  WPAL NET ROOT data dataset      ln  s  RAP RAP             Usage  To train the model  first fetch a pretrained VGG CNN S model by       Shell   data scripts fetch pretrained vgg cnn s model sh      Then run experiment script for training      Shell   experiments examples VGG CNN S train vgg s rap 0 sh      Experiment script for testing is also available      Shell   experiments examples VGG CNN S test vgg s rap sh         Acknowledgements  The project layout and some codes are derived from Mr  Ross Girshick s  py faster rcnn  https   github com rbgirshick py faster rcnn    We use VGG CNN S as pretrained model  Information can be found on  Mr  K  Simonyan s Gist  https   gist github com ksimonyan fd8800eeb36e276cd6f9 file readme md   It is from the BMVC 2014 paper  Return of the Devil in the Details  Delving Deep into Convolutional Nets         Return of the Devil in the Details  Delving Deep into Convolutional Nets K  Chatfield  K  Simonyan  A  Vedaldi  A  Zisserman British Machine Vision Conference  2014  arXiv ref  cs1405 3531      ","software":"md","book":"kyu-sz","full_link":"https://github.com/kyu-sz/WPAL-network"},{"name":"tetrafolium/caffe","artist":"caff, model, learn, communiti, berkeley","id":653,"playcount":2487,"description":"tetrafolium/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tetrafolium","full_link":"https://github.com/tetrafolium/caffe"},{"name":"keepgivemefive/caffe_nnpack_winograd","artist":"caff, model, learn, communiti, berkeley","id":654,"playcount":2487,"description":"keepgivemefive/caffe_nnpack_winograd caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"keepgivemefive","full_link":"https://github.com/keepgivemefive/caffe_nnpack_winograd"},{"name":"twmht/caffe-pva-faster-rcnn","artist":"caff, model, learn, communiti, berkeley","id":655,"playcount":2452,"description":"twmht/caffe-pva-faster-rcnn caff, model, learn, communiti, berkeley    Caffe for PVANET by Kye Hyeon Kim  Yeongjae Cheon  Sanghoon Hong  Byungseok Roh  Minje Park  Intel Imaging and Camera Technology       Introduction  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"twmht","full_link":"https://github.com/twmht/caffe-pva-faster-rcnn"},{"name":"akbacak/Hash","artist":"caff, model, learn, communiti, berkeley","id":656,"playcount":2507,"description":"akbacak/Hash caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          Hashing   Hashing ","software":"md","book":"akbacak","full_link":"https://github.com/akbacak/Hash"},{"name":"Nortinwell/SSD","artist":"caff, model, learn, communiti, berkeley","id":657,"playcount":2482,"description":"Nortinwell/SSD caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Nortinwell","full_link":"https://github.com/Nortinwell/SSD"},{"name":"starimpact/ristretto_caffe","artist":"caff, model, learn, communiti, berkeley","id":658,"playcount":2553,"description":"starimpact/ristretto_caffe caff, model, learn, communiti, berkeley   Caffe      This ristretto caffe repository is maintained by ming zhang      Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"starimpact","full_link":"https://github.com/starimpact/ristretto_caffe"},{"name":"SJHNJU/caffe2018summer","artist":"caff, model, learn, communiti, berkeley","id":659,"playcount":2487,"description":"SJHNJU/caffe2018summer caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"SJHNJU","full_link":"https://github.com/SJHNJU/caffe2018summer"},{"name":"jjzhang166/caffe2","artist":"caff, model, learn, communiti, berkeley","id":660,"playcount":2482,"description":"jjzhang166/caffe2 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jjzhang166","full_link":"https://github.com/jjzhang166/caffe2"},{"name":"zchrissirhcz/caffe-fast-rcnn","artist":"caff, learn, model, framework, vision","id":661,"playcount":2404,"description":"zchrissirhcz/caffe-fast-rcnn caff, learn, model, framework, vision   Caffe     Disclaimer  This repo forks from https   github com rbgirshick caffe fast rcnn  and supports Ubuntu16 04  CUDA8 and CuDNN6  which is suitable for current mainstream software version   Note  I change python layers   param str   to  param str   Change your prototxt s python layer code if necessary      Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zchrissirhcz","full_link":"https://github.com/zchrissirhcz/caffe-fast-rcnn"},{"name":"hawklucky/hawk_latest_caffe","artist":"caff, learn, model, framework, vision","id":662,"playcount":3012,"description":"hawklucky/hawk_latest_caffe caff, learn, model, framework, vision   Fork of BVLC Caffe  This is a fork for own use  thanks for the fantasy work by Caffe group    I  Import the Spatial Transformer Networks by referencing  Kaichun Mo s STN Implementation  https   github com daerduoCarey SpatialTransformerLayer  and  matthieudelaro s STN Combination Work  https   github com matthieudelaro caffeBVLCplus  and  christopher5106 s Wonderful Combination Work  https   github com christopher5106 last caffe with stn      Modify caffe proto add st param st loss param loc loss param power file param  add file member in filler message        Modify filler hpp add FileFiller class        Add include hpp file st layer hpp st loss layer hpp loc loss layer hpp power file layer hpp        Add src cpp cu file st layer cpp  cu st loss layer cpp  cu loc loss layer cpp  cu power file layer cpp  cu        Add test file add test st layer hard cpp        Add examples mnist cub bird         Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hawklucky","full_link":"https://github.com/hawklucky/hawk_latest_caffe"},{"name":"HongyangGao/caffe_3d","artist":"caff, learn, model, deep, layer","id":663,"playcount":2534,"description":"HongyangGao/caffe_3d caff, learn, model, deep, layer   Caffe for 3D image segmentation This version of caffe was modified for 3D image Segmenation     DataPatch layer allows to load hd5 valume from which it randomly crop 3d Patch data and corresponding 3d label to feed to networks    Support 3D pooling   Class weights are autmatically balanced in softmaxloss layer for imbalanced classes    Perform either entire 3D volume prediction or slice by slice prediction in testing phase      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"HongyangGao","full_link":"https://github.com/HongyangGao/caffe_3d"},{"name":"DaFuCoding/MTCNN_Caffe","artist":"caff, learn, model, framework, vision","id":664,"playcount":2738,"description":"DaFuCoding/MTCNN_Caffe caff, learn, model, framework, vision   MTCNN Caffe     Introduce  This original project is  MTCNN  https   github com kpzhang93 MTCNN face detection alignment   I transform this project from Matlab API to Caffe C    API      Run    Install caffe    compile example MTSrc MTMain cpp    MTMain bin  model dir   image Path    e g     build examples MTSrc MTMain bin   home dafu workspace MTCNN Caffe examples MTmodel    home dafu workspace MTCNN Caffe examples MTSrc test2 jpg       Modify  I add a MemoryData input layer in prototxt file R net and O net  so that to set dynamically batch size  This modify can add speed and  take full advantage of GPU resources             Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014           ","software":"md","book":"DaFuCoding","full_link":"https://github.com/DaFuCoding/MTCNN_Caffe"},{"name":"dinhtuyen/DeepPyramid","artist":"featur, deeppyramid, caff, network, convolut","id":665,"playcount":2761,"description":"dinhtuyen/DeepPyramid featur, deeppyramid, caff, network, convolut    DeepPyramid  DeepPyramid is a simple toolkit for building feature pyramids from deep convolutional networks  The DeepPyramid data structure is nearly identical to the HOG feature pyramid created by the featpyramid m function in the  voc dpm  https   github com rbgirshick voc dpm  code       References  This code was used in our  tech report  http   arxiv org pdf 1409 5403v2 pdf  about the relationship between deformable part models and convolutional networks        article girshick14dpdpm          author       Ross Girshick and Forrest Iandola and Trevor Darrell and Jitendra Malik           title        Deformable Part Models are Convolutional Neural Networks           journal      CoRR           year         2014           volume       abs 1409 5403           url          http   arxiv org abs 1409 5403           year         2014              Installation  0    Prerequisites      0  MATLAB  tested with 2014a on 64 bit Linux    0  Caffe s  prerequisites  http   caffe berkeleyvision org installation html prequequisites  0    Install Caffe    this is the most complicated part    0  Follow the  Caffe installation instructions  http   caffe berkeleyvision org installation html    0  Let s call the place where you installed caffe   CAFFE ROOT   you can run  export CAFFE ROOT   pwd      0    Important    Make sure to compile the Caffe MATLAB wrapper  which is not built by default   make matcaffe    0    Important    Make sure to run  cd  CAFFE ROOT data ilsvrc12      get ilsvrc aux sh  to download the ImageNet image mean   0  DeepPyramid has been tested with master and dev at the time of this writing 0    Get DeepPyramid     0   git clone https   github com rbgirshick DeepPyramid git    0  If you haven t installed R CNN  you ll need to download its  models  https   dl dropboxusercontent com s og7ghmiken2olzh r cnn release1 data tgz dl 0    1  Copy R CNN s non finetuned ImageNet network   rcnnpath  data caffe nets ilsvrc 2012 train iter 310k  to   deeppyramidpath  data caffe nets ilsvrc 2012 train iter 310k   or just create a symlink        Usage  1  Run matlab from inside the DeepPyramid code directory 2  Add the  matcaffe  mex function to your path   addpath  path to caffe matlab caffe   3  Run the demo  demo deep pyramid       Uses  DeepPyramid can be used for implementing DPMs on deep convolutional network features  rather than HOG features  It can also be used whenever you need a dense multiscale pyramid of image features       Caveats  The implementation is designed to be simple and as a result is very inefficient  There are a variety of ways to speed it up  and they will be done in the future  For now  it takes about 0 5 to 0 6 seconds to compute a feature pyramid on an NVIDIA Titan GPU  which is acceptable  ","software":"md","book":"dinhtuyen","full_link":"https://github.com/dinhtuyen/DeepPyramid"},{"name":"NileshMagan/CaffeMNIST","artist":"caff, model, learn, communiti, berkeley","id":666,"playcount":2487,"description":"NileshMagan/CaffeMNIST caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"NileshMagan","full_link":"https://github.com/NileshMagan/CaffeMNIST"},{"name":"Gooooooogle/caffe","artist":"caff, model, learn, communiti, berkeley","id":667,"playcount":2482,"description":"Gooooooogle/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Gooooooogle","full_link":"https://github.com/Gooooooogle/caffe"},{"name":"BBuf/Caffe-EasyOpenPose","artist":"caff, model, learn, communiti, berkeley","id":668,"playcount":2487,"description":"BBuf/Caffe-EasyOpenPose caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"BBuf","full_link":"https://github.com/BBuf/Caffe-EasyOpenPose"},{"name":"shenyunhang/caffe-wsl","artist":"caff, model, learn, communiti, berkeley","id":669,"playcount":2482,"description":"shenyunhang/caffe-wsl caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"shenyunhang","full_link":"https://github.com/shenyunhang/caffe-wsl"},{"name":"xinghaochen/caffe-pose","artist":"caff, model, learn, communiti, berkeley","id":670,"playcount":2888,"description":"xinghaochen/caffe-pose caff, model, learn, communiti, berkeley    Caffe Pose  Modified Caffe that supports hand pose estimation      Changelog    Merged ROIPoolingLayer from rbgirshick s  caffe fast rcnn  https   github com rbgirshick caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83    Merged SmoothL1LossLayer from rbgirshick s  caffe fast rcnn  https   github com rbgirshick caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83              Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xinghaochen","full_link":"https://github.com/xinghaochen/caffe-pose"},{"name":"knsong/caffe-mt","artist":"caff, learn, model, framework, vision","id":671,"playcount":2396,"description":"knsong/caffe-mt caff, learn, model, framework, vision     Hightlights of caffe mt     1  More ways of performing Batch Normalization compared with the  official Caffe  https   github com BVLC caffe     2  Local Convolution    3  Dynamic Convolution       For details please see in  Wiki  https   github com knsong caffe mt wiki                       Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"knsong","full_link":"https://github.com/knsong/caffe-mt"},{"name":"LBXJTU/Caffe-Multi","artist":"caff, model, learn, communiti, berkeley","id":672,"playcount":2487,"description":"LBXJTU/Caffe-Multi caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"LBXJTU","full_link":"https://github.com/LBXJTU/Caffe-Multi"},{"name":"KRprincess/caffe_local_channel_and_CAM","artist":"caff, model, learn, communiti, berkeley","id":673,"playcount":2487,"description":"KRprincess/caffe_local_channel_and_CAM caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"KRprincess","full_link":"https://github.com/KRprincess/caffe_local_channel_and_CAM"},{"name":"malikarjun/caffe-master","artist":"caff, model, learn, communiti, berkeley","id":674,"playcount":2487,"description":"malikarjun/caffe-master caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"malikarjun","full_link":"https://github.com/malikarjun/caffe-master"},{"name":"malinna/caffe-ml","artist":"caff, learn, model, deep, layer","id":675,"playcount":2804,"description":"malinna/caffe-ml caff, learn, model, deep, layer   Changes to the original  The base Caffe version for this modification is from March 12th  2017 and can be found here   https   github com BVLC caffe tree e687a71fac81718d40d4e0e98d29eab34f784b5b  https   github com BVLC caffe tree e687a71fac81718d40d4e0e98d29eab34f784b5b         Multiple labels in image data layer  The image data layer in current Caffe supports only one integer label to be defined in the text file for a single image       0001 jpg 0     0002 jpg 1     0003 jpg 2  With the modifications done in this version  you can define multiple floating point numbers  as in the example below       0001 jpg 0 345 1 364  4 124     0002 jpg 6 321 5 246 6 235     0003 jpg 4 135  5 356 1 345    Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"malinna","full_link":"https://github.com/malinna/caffe-ml"},{"name":"wjzzzyx/caffe","artist":"caff, model, learn, communiti, berkeley","id":676,"playcount":2482,"description":"wjzzzyx/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wjzzzyx","full_link":"https://github.com/wjzzzyx/caffe"},{"name":"Kazunari-agu/Mask_RCNN","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":677,"playcount":3484,"description":"Kazunari-agu/Mask_RCNN “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Chainer  Mask  R CNN    Chainer implementation of Mask R CNN   the multi task network for object detection  object classification  and instance segmentation   https   arxiv org abs 1703 06870      a href  README JP md       README  a      DeNA Tech Blog JP   https   engineer dena jp 2017 12 chainercvmask r cnn html         Examples  img src  imgs demo gif  width  400px    img     Requirements    Chainer  https   github com pfnet chainer     Chainercv  https   github com chainer chainercv     Cupy  https   github com cupy cupy      operable if your environment can run chainer   v3 with cuda and cudnn       verified as operable  chainer  3 1 0  chainercv  0 7 0  cupy  1 0 3        pip install chainer      pip install chainercv   pip install cupy          Python 3 0       NumPy      Matplotlib      OpenCV         TODOs       Precision Evaluator       Feature Pyramid Network       Pose Estimation     Prerequisite   Download  ResNet 50 model caffemodel  from the  OneDrive download  of  ResNet pretrained models  https   github com KaimingHe deep residual networks models   for model initialization and place it in    chainer dataset pfnet chainer models     COCO 2017 dataset   the COCO dataset can be downloaded and unzipped by      bash getData sh        Generate the list file by         python utils makecocolist py     Setup the COCO API         git clone https   github com cocodataset cocoapi git cd cocoapi PythonAPI  make python setup py install cd                 Train      python train py      arguments and the default conditions are defined as follows         dataset   choices   coco2017    default  coco2017        extractor   choices   resnet50   resnet101    default  resnet50   help  extractor network     gpu     g   type int  default 0       lr     l   type float  default 1e 4       batchsize     b   type int  default 8       out     o   default  result    help  output directory        seed     s   type int  default 0       roialign   action  store true   default True  help  True  ROIAlign  False  ROIpooling     step size     ss   type int  default 400000      lr step     ls   type int  default 480000        lr initialchange     li   type int  default 800         pretrained     p   type str  default  imagenet        snapshot   type int  default 4000       resume   type str       iteration     i   type int  default 800000       roi size     r   type int  default 7  help  ROI size for mask head input     gamma   type float  default 1  help  mask loss balancing factor          note that we use a subdivision based updater to enable training with large batch size       Demo Segment the objects in the input image by executing         python demo py   image  input image    modelfile result snapshot model npz          Citation Please cite the original paper in your publications if it helps your research            article DBLP journals corr HeGDG17        author       Kaiming He and                   Georgia Gkioxari and                   Piotr Doll    a  r and                   Ross B  Girshick         title        Mask  R CNN          journal      CoRR         volume       abs 1703 06870         year         2017         url          http   arxiv org abs 1703 06870         archivePrefix    arXiv         eprint       1703 06870         timestamp    Wed  07 Jun 2017 14 42 32  0200         biburl       http   dblp org rec bib journals corr HeGDG17         bibsource    dblp computer science bibliography  http   dblp org        ","software":"md","book":"Kazunari-agu","full_link":"https://github.com/Kazunari-agu/Mask_RCNN"},{"name":"purushothamgowthu/caffe","artist":"caff, model, learn, communiti, berkeley","id":678,"playcount":2487,"description":"purushothamgowthu/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"purushothamgowthu","full_link":"https://github.com/purushothamgowthu/caffe"},{"name":"JanySunny/caffe-project","artist":"caff, model, learn, communiti, berkeley","id":679,"playcount":2487,"description":"JanySunny/caffe-project caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"JanySunny","full_link":"https://github.com/JanySunny/caffe-project"},{"name":"fireae/caffe_latte","artist":"caff, model, learn, communiti, berkeley","id":680,"playcount":2487,"description":"fireae/caffe_latte caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"fireae","full_link":"https://github.com/fireae/caffe_latte"},{"name":"PiffNP/caffe_quantization","artist":"caff, model, learn, communiti, berkeley","id":681,"playcount":2487,"description":"PiffNP/caffe_quantization caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"PiffNP","full_link":"https://github.com/PiffNP/caffe_quantization"},{"name":"BT123/caffe-test","artist":"caff, model, learn, communiti, berkeley","id":682,"playcount":2532,"description":"BT123/caffe-test caff, model, learn, communiti, berkeley   Caffe       Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe      License  https   img shields io badge license BSD blue svg   LICENSE     Caffe is a deep learning framework made with expression  speed  and modularity in mind   It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors     Check out the  project site  http   caffe berkeleyvision org  for all the details like       DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p      Tutorial Documentation  http   caffe berkeleyvision org tutorial       BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo      Installation instructions  http   caffe berkeleyvision org installation html     and step by step examples        Custom distributions        Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi       OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices      Windows Caffe  https   github com BVLC caffe tree windows        Community       Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge     Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models   Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues      Happy brewing        License and Citation    Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE    The BAIR BVLC reference models are released for unrestricted use     Please cite Caffe in your publications if it helps your research          article jia2014caffe         Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor          Journal    arXiv preprint arXiv 1408 5093          Title    Caffe  Convolutional Architecture for Fast Feature Embedding          Year    2014          ","software":"md","book":"BT123","full_link":"https://github.com/BT123/caffe-test"},{"name":"cltseng2000/caffe_clone","artist":"caff, model, learn, communiti, berkeley","id":683,"playcount":2487,"description":"cltseng2000/caffe_clone caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"cltseng2000","full_link":"https://github.com/cltseng2000/caffe_clone"},{"name":"gineshidalgo99/openpose_caffe_train","artist":"caff, model, learn, communiti, berkeley","id":684,"playcount":2486,"description":"gineshidalgo99/openpose_caffe_train caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions     Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"gineshidalgo99","full_link":"https://github.com/gineshidalgo99/openpose_caffe_train"},{"name":"district10/caffe-rc3","artist":"caff, learn, model, framework, vision","id":685,"playcount":2659,"description":"district10/caffe-rc3 caff, learn, model, framework, vision   Caffe     Vim Setup      set path    usr include   dev caffe rc3   git    set isfname    set isfname             c w gf  net tab     c w f  up down   h ctrl w f      find Makefile     bash cat python requirements txt   xargs  L 1 sudo pip install   upgrade      For each training iteration  lr is the learning rate of that iteration  and loss is the training function  For the output of the testing phase  score 0 is the accuracy  and score 1 is the testing loss function    The final model  stored as a binary protobuf file  is stored at  lenet iter 10000           Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"district10","full_link":"https://github.com/district10/caffe-rc3"},{"name":"xsr-ai/py3caffe","artist":"caff, model, learn, communiti, berkeley","id":686,"playcount":2487,"description":"xsr-ai/py3caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xsr-ai","full_link":"https://github.com/xsr-ai/py3caffe"},{"name":"jiajunhua/caffe474833","artist":"caff, model, learn, communiti, berkeley","id":687,"playcount":2487,"description":"jiajunhua/caffe474833 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jiajunhua","full_link":"https://github.com/jiajunhua/caffe474833"},{"name":"suyogduttjain/pixelobjectness","artist":"imag, model, object, arxiv, caff","id":688,"playcount":2407,"description":"suyogduttjain/pixelobjectness imag, model, object, arxiv, caff   Pixel Objectness  The following repository contains pretrained model for pixel objectness   Please visit our  project page  http   vision cs utexas edu projects pixelobjectness   for the paper and visual results   If you use this in your research  please cite the following paper      sh  article pixelobjectness    Author    Jain  Suyog and Xiong  Bo and Grauman  Kristen     Journal    arXiv preprint arXiv 1701 05349     Title    Pixel Objectness     Year    2017         These models are freely available for research and academic purposes  However it s patent pending  so please contact us for any commercial use      Using the pretrained models   This model is trained using Deeplab v1 caffe library  Please cite  1  and  2  if you use the code     Setup  Download and install Deeplab v1 from  here  https   bitbucket org deeplab deeplab public      Refer to demo py for step by step instruction on how to run the code     Store the images that you want to process in the images folder     Update the caffe binary path and image extension variable in demo py    Running demo py will produce three files 1  image list txt   contains list of of input images  2  output list txt  contains names to be used to store the output of pixel objectness 3  test protoxt  prototxt file required for loading the pretrained model     Please resize your images so that the maximum side is   513  otherwise update the crop size value in test template prototxt  Bigger crop sizes require larger gpu memory       Visualizing the results   After execution demo py will store pixel objectness results as matlab files   Please refer to show results m to see how to visualize and extract foreground masks      Please cite these too if you use the code    1  Caffe      sh  article jia2014caffe  Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor   Journal    arXiv preprint arXiv 1408 5093   Title    Caffe  Convolutional Architecture for Fast Feature Embedding   Year    2014          2  Deeplab v1      sh  inproceedings chen14semantic  title  Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs   author  Liang Chieh Chen and George Papandreou and Iasonas Kokkinos and Kevin Murphy and Alan L Yuille   booktitle  ICLR   url  http   arxiv org abs 1412 7062   year  2015        ","software":"md","book":"suyogduttjain","full_link":"https://github.com/suyogduttjain/pixelobjectness"},{"name":"paynexianr/caffe","artist":"caff, model, learn, communiti, berkeley","id":689,"playcount":2487,"description":"paynexianr/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"paynexianr","full_link":"https://github.com/paynexianr/caffe"},{"name":"sonack/my_caffe","artist":"caff, model, learn, communiti, berkeley","id":690,"playcount":2487,"description":"sonack/my_caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"sonack","full_link":"https://github.com/sonack/my_caffe"},{"name":"jiajunhua/caffe","artist":"caff, model, learn, communiti, berkeley","id":691,"playcount":2487,"description":"jiajunhua/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jiajunhua","full_link":"https://github.com/jiajunhua/caffe"},{"name":"laycoding/caffe_focal_loss","artist":"caff, model, learn, communiti, berkeley","id":692,"playcount":2487,"description":"laycoding/caffe_focal_loss caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"laycoding","full_link":"https://github.com/laycoding/caffe_focal_loss"},{"name":"ZLDL/caffe","artist":"caff, model, learn, communiti, berkeley","id":693,"playcount":2487,"description":"ZLDL/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ZLDL","full_link":"https://github.com/ZLDL/caffe"},{"name":"bin1316/caffe","artist":"caff, model, learn, communiti, berkeley","id":694,"playcount":2482,"description":"bin1316/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bin1316","full_link":"https://github.com/bin1316/caffe"},{"name":"hshustc/lll-caffe","artist":"caff, model, learn, communiti, berkeley","id":695,"playcount":2487,"description":"hshustc/lll-caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hshustc","full_link":"https://github.com/hshustc/lll-caffe"},{"name":"niulinux/machine_learning","artist":"caff, model, learn, communiti, berkeley","id":696,"playcount":2487,"description":"niulinux/machine_learning caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"niulinux","full_link":"https://github.com/niulinux/machine_learning"},{"name":"myl2821/caffe-prune","artist":"caff, model, learn, communiti, berkeley","id":697,"playcount":2487,"description":"myl2821/caffe-prune caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"myl2821","full_link":"https://github.com/myl2821/caffe-prune"},{"name":"craftzdog/caffe-ios-sample","artist":"caff, nsstring, exampl, model, classifi","id":698,"playcount":3115,"description":"craftzdog/caffe-ios-sample caff, nsstring, exampl, model, classifi Caffe iOS sample                   This is an example XCode project using iOS version of Caffe built by  aleph7  https   github com aleph7 caffe    It also includes a class  Classifier  which is the  cpp classification  imported from Caffe C   example  It classifies example image as following screenshot     sc  https   cloud githubusercontent com assets 1332805 10410612 d0450f08 6f81 11e5 8dc5 2dd870639b4b png      Dependencies    opencv2 framework   Xcode 6  can t build with Xcode 7      Get started  Clone it         git clone   recursive git github com noradaiko caffe ios sample git          Prepare model files  You need your  caffemodel    deploy prototxt    mean binaryproto  and  labels txt  into  model   directory  This sample already includes files for testing except for  caffemodel    You can download BVLC CaffeNet Model from   http   dl caffe berkeleyvision org bvlc reference caffenet caffemodel  http   dl caffe berkeleyvision org bvlc reference caffenet caffemodel    Of course  you can use your own network model if you have      How to classify     objective c NSString  model file    NSBundle mainBundle pathForResource   deploy  ofType   prototxt  inDirectory   model    NSString  label file    NSBundle mainBundle pathForResource   labels  ofType   txt  inDirectory   model    NSString  mean file    NSBundle mainBundle pathForResource   mean  ofType   binaryproto  inDirectory   model    NSString  trained file    NSBundle mainBundle pathForResource   bvlc reference caffenet  ofType   caffemodel  inDirectory   model    string model file str   std  string  model file UTF8String    string label file str   std  string  label file UTF8String    string trained file str   std  string  trained file UTF8String    string mean file str   std  string  mean file UTF8String     UIImage  example    UIImage imageNamed   image 0002 jpg     cv  Mat src img  UIImageToMat example  src img    Classifier classifier   Classifier model file str  trained file str  mean file str  label file str   std  vector Prediction  result   classifier Classify src img        Output into console      objective c for  std  vector Prediction   iterator it   result begin    it    result end      it      NSString  label    NSString stringWithUTF8String it  first c str       NSNumber  probability    NSNumber numberWithFloat it  second     NSLog   label      prob       label  probability             License and Citation      This example   BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE       Caffe  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"craftzdog","full_link":"https://github.com/craftzdog/caffe-ios-sample"},{"name":"lcybuzz/Personal-Deep-Learning-Paper-Record","artist":"paper, year, network, page, descriptionbr","id":699,"playcount":3561,"description":"lcybuzz/Personal-Deep-Learning-Paper-Record paper, year, network, page, descriptionbr   Personal Deep Learning Paper Record   Under Construction   Table of Contents    Network   network     Classification   classification    Rank   Human Segmentation  Br           Br          Br       ResNeXt        Deformable ConvNets       DenseNet     Br         Br       Network       RAM      Paper    Recurrent models of visual attention  Br     Year    NIPS 2014  Br     Authors     Volodymyr Mnih  https   www cs toronto edu  vmnih     Nicolas Heess  http   homepages inf ed ac uk s0677090     Alex Graves  https   www cs toronto edu  graves     Koray Kavukcuoglu  http   koray kavukcuoglu org   Br      Pages     Br    https   github com kevinzakka recurrent visual attention  Unofficial   Br    https   github com jlindsey15 RAM  Unofficial   Br    https   github com zhongwen RAM   Unofficial   Br      Description    Br         ResNeXt         Paper    Aggregated Residual Transformations for Deep Neural Networks  Br     Year    arXiv 1611  Br     Authors     Saining Xie  http   vcl ucsd edu  sxie     Ross Girshick  http   www rossgirshick info     Piotr Doll r  https   pdollar github io     Zhuowen Tu  http   pages ucsd edu  ztu     Kaiming He  http   kaiminghe com    Br      Pages    https   github com facebookresearch ResNeXt  Br      Description    Br  1  ResNet                           blog                    Deformable ConvNets         Paper    Deformable Convolutional Networks  Br     Year    ICCV 2017 Oral Br     Authors     Jifeng Dai  http   www jifengdai org     Haozhi Qi  http   haozhi io     Yuwen Xiong  http   www cs toronto edu  yuwen     Yi Li  https   liyi14 github io     Guodong Zhang  http   www cs toronto edu  gdzhang     Han Hu  https   sites google com site hanhushomepage     Yichen Wei  https   www microsoft com en us research people yichenw    Br      Pages    https   github com msracver Deformable ConvNets  Br      Description    Br  1    CNN                                      deformable convolution deformable ROI pooling 2                     feature map         offsets              3                          DenseNet         Paper    Densely Connected Convolutional Networkss  Br     Year    CVPR 2017 Best Paper Br     Authors     Gao Huang  http   www cs cornell edu  gaohuang     Zhuang Liu  https   liuzhuang13 github io     Laurens van der Maaten  https   lvdmaaten github io     Kilian Q  Weinberger  http   www cs cornell edu  kilian    Br     Pages    https   github com liuzhuang13 DenseNet  Br     Description    Br  1                                       feature map           Br  2           dense block   transition layer       dense block   feature           feature  concat    feature map      1 1 conv    transition layer         block        Br  3                                caffe    concat     concat feature                 L  feature    L L 1  2 feature                        Br            Residual Attention Network       Paper    Residual Attention Network  Br     Year    CVPR 2017 Spotlight  Br     Authors    Fei Wang   Mengqing Jiang  https   github com Jmq14   Chen Qian   Shuo Yang  http   shuoyang1213 me    Chen Li  Honggang Zhang   Xiaogang Wang  http   www ee cuhk edu hk  xgwang     Xiaoou Tang  https   www ie cuhk edu hk people xotang shtml   Br      Pages    https   github com fwang91 residual attention network  Br      Description    Br           SENet      Paper    Squeeze and Excitation Networks  Br     Year    CVPR 2018  Br     Authors     Jie Hu  Li Shen  Gang Sun Br     Pages    https   github com hujie frank SENet  Br     Description     Br  ","software":"md","book":"lcybuzz","full_link":"https://github.com/lcybuzz/Personal-Deep-Learning-Paper-Record"},{"name":"chungjin/caffe-R-FCN","artist":"caff, learn, model, deep, layer","id":700,"playcount":2570,"description":"chungjin/caffe-R-FCN caff, learn, model, deep, layer This branch of Caffe extends  BVLC led Caffe  https   github com BVLC caffe  by adding other functionalities such as managed code wrapper   Faster RCNN  https   papers nips cc paper 5638 faster r cnn towards real time object detection with region proposal networks pdf    R FCN  https   arxiv org pdf 1605 06409v2 pdf   etc  And it has been modified to be complied by c  4 4 and glibc 2 12            License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Linux Setup      Pre Build Steps Copy  Makefile config example  to  Makefile config       CUDA Download  CUDA Toolkit 7 5   from nVidia website  https   developer nvidia com cuda toolkit   The code doesn t support the CPU ONLY        cuDNN For cuDNN acceleration using NVIDIA s proprietary cuDNN software  uncomment the    USE CUDNN    1    switch in Makefile config  cuDNN is sometimes but not always faster than Caffe s GPU acceleration   Download  cuDNN v3  or  cuDNN v4   from nVidia website  https   developer nvidia com cudnn   And unpack downloaded zip to  CUDA PATH  It typically would be  usr local cuda include and  usr local cuda lib64       Build  Simply type     make  j8    make pycaffe          License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"chungjin","full_link":"https://github.com/chungjin/caffe-R-FCN"},{"name":"lcytzk/caffe_ps","artist":"caff, model, learn, communiti, berkeley","id":701,"playcount":2487,"description":"lcytzk/caffe_ps caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lcytzk","full_link":"https://github.com/lcytzk/caffe_ps"},{"name":"Hammania689/caffe_cpu_docker","artist":"caff, model, learn, communiti, berkeley","id":702,"playcount":2487,"description":"Hammania689/caffe_cpu_docker caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Hammania689","full_link":"https://github.com/Hammania689/caffe_cpu_docker"},{"name":"rym9005023/caffe-pro","artist":"caff, learn, model, deep, layer","id":703,"playcount":2633,"description":"rym9005023/caffe-pro caff, learn, model, deep, layer   caffe pro Memory efficient Caffe on Linux     Feature  1  Runtime GPU memory usage Optimization  by merging Yuanjun Xiong s caffe https   github com yjxiong caffe wiki Memory Optimization   2  Modified ROI Pooling layer following Mask RCNN  ROIAlign  and memory efficient Upsampling Add layer used in FPN for object detection   3  Fully compatible with official caffe with NCCL multi GPU support and Python interface  compatible with NCCL based multi GPU training  such as  https   github com bharatsingh430 py R FCN multiGPU     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"rym9005023","full_link":"https://github.com/rym9005023/caffe-pro"},{"name":"hudingchang/caffe","artist":"caff, model, learn, communiti, berkeley","id":704,"playcount":2482,"description":"hudingchang/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hudingchang","full_link":"https://github.com/hudingchang/caffe"},{"name":"skrish13/PyTorch-mask-x-rcnn","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":705,"playcount":2277,"description":"skrish13/PyTorch-mask-x-rcnn “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   PyTorch mask x rcnn PyTorch implementation of the Mask X RCNN network proposed in the  Learning to Segment Everything  paper by Facebook AI Research      Introduction  The paper is about Instance Segmentation given a huge dataset with only bounding box and a small dataset with both bbox and segmentation ground truths  It follows the semi supervised learning paradigm  The base architecture is same as that of Mask RCNN       Model Architecture    The pipeline is as shown in the Figure  For little more explanation checkout this  blog post  https   skrish13 github io articles 2018 03 fair cv saga   last section     Backproping both losses will induce a discrepancy in the weights of  w seg  as for common classes between COCO and VG there are two losses  bbox and mask  while for rest classes its only one  bbox   There s a fix for this     Fix  When back propping the mask  compute the gradient of predicted mask weights   w seg   wrt   weight transfer function   parameters   theta  but not bounding box weight  w  det  c           eqn  CodeCogsEqn gif  where  tau  is the transfer function     Mask X RCNN  learning2seg png      Implementation Details    The model is based on the Mask RCNN implementation from  here  https   github com soeaver Pytorch Mask RCNN   Thanks to him and original  Keras version  https   github com matterport Mask RCNN  on which its based on  Integrate it with the pipeline from the repo to train the network    Modules added       transfer function  in  fpn classifier graph       cls     box     cls box  choices for the detection weights in  fpn classifier graph       class agnostic   baseline  and  transfer   above diagram  modes for the Mask branch as explained in the paper      Optional  MLP fusion   class agnostic MLP  as explained in Section 3 4 of the paper       stop grad  for backpropping mask loss  keeping  w det  out of gradient calculation        Results    I m planning to run it on VOC COCO soon  Will update once it s done    Note   The official Detectron  Caffe2  models and code are up  here  https   github com ronghanghu seg every thing      References      Hu  Ronghang  Piotr Doll r  Kaiming He  Trevor Darrell and Ross B  Girshick   Learning to Segment Every Thing    CoRR abs 1711 10370  2017   n  pag       ","software":"md","book":"skrish13","full_link":"https://github.com/skrish13/PyTorch-mask-x-rcnn"},{"name":"craftzdog/caffe-ios-sample","artist":"caff, nsstring, exampl, model, classifi","id":706,"playcount":3115,"description":"craftzdog/caffe-ios-sample caff, nsstring, exampl, model, classifi Caffe iOS sample                   This is an example XCode project using iOS version of Caffe built by  aleph7  https   github com aleph7 caffe    It also includes a class  Classifier  which is the  cpp classification  imported from Caffe C   example  It classifies example image as following screenshot     sc  https   cloud githubusercontent com assets 1332805 10410612 d0450f08 6f81 11e5 8dc5 2dd870639b4b png      Dependencies    opencv2 framework   Xcode 6  can t build with Xcode 7      Get started  Clone it         git clone   recursive git github com noradaiko caffe ios sample git          Prepare model files  You need your  caffemodel    deploy prototxt    mean binaryproto  and  labels txt  into  model   directory  This sample already includes files for testing except for  caffemodel    You can download BVLC CaffeNet Model from   http   dl caffe berkeleyvision org bvlc reference caffenet caffemodel  http   dl caffe berkeleyvision org bvlc reference caffenet caffemodel    Of course  you can use your own network model if you have      How to classify     objective c NSString  model file    NSBundle mainBundle pathForResource   deploy  ofType   prototxt  inDirectory   model    NSString  label file    NSBundle mainBundle pathForResource   labels  ofType   txt  inDirectory   model    NSString  mean file    NSBundle mainBundle pathForResource   mean  ofType   binaryproto  inDirectory   model    NSString  trained file    NSBundle mainBundle pathForResource   bvlc reference caffenet  ofType   caffemodel  inDirectory   model    string model file str   std  string  model file UTF8String    string label file str   std  string  label file UTF8String    string trained file str   std  string  trained file UTF8String    string mean file str   std  string  mean file UTF8String     UIImage  example    UIImage imageNamed   image 0002 jpg     cv  Mat src img  UIImageToMat example  src img    Classifier classifier   Classifier model file str  trained file str  mean file str  label file str   std  vector Prediction  result   classifier Classify src img        Output into console      objective c for  std  vector Prediction   iterator it   result begin    it    result end      it      NSString  label    NSString stringWithUTF8String it  first c str       NSNumber  probability    NSNumber numberWithFloat it  second     NSLog   label      prob       label  probability             License and Citation      This example   BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE       Caffe  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"craftzdog","full_link":"https://github.com/craftzdog/caffe-ios-sample"},{"name":"lcybuzz/Personal-Deep-Learning-Paper-Record","artist":"paper, year, network, page, descriptionbr","id":707,"playcount":3561,"description":"lcybuzz/Personal-Deep-Learning-Paper-Record paper, year, network, page, descriptionbr   Personal Deep Learning Paper Record   Under Construction   Table of Contents    Network   network     Classification   classification    Rank   Human Segmentation  Br           Br          Br       ResNeXt        Deformable ConvNets       DenseNet     Br         Br       Network       RAM      Paper    Recurrent models of visual attention  Br     Year    NIPS 2014  Br     Authors     Volodymyr Mnih  https   www cs toronto edu  vmnih     Nicolas Heess  http   homepages inf ed ac uk s0677090     Alex Graves  https   www cs toronto edu  graves     Koray Kavukcuoglu  http   koray kavukcuoglu org   Br      Pages     Br    https   github com kevinzakka recurrent visual attention  Unofficial   Br    https   github com jlindsey15 RAM  Unofficial   Br    https   github com zhongwen RAM   Unofficial   Br      Description    Br         ResNeXt         Paper    Aggregated Residual Transformations for Deep Neural Networks  Br     Year    arXiv 1611  Br     Authors     Saining Xie  http   vcl ucsd edu  sxie     Ross Girshick  http   www rossgirshick info     Piotr Doll r  https   pdollar github io     Zhuowen Tu  http   pages ucsd edu  ztu     Kaiming He  http   kaiminghe com    Br      Pages    https   github com facebookresearch ResNeXt  Br      Description    Br  1  ResNet                           blog                    Deformable ConvNets         Paper    Deformable Convolutional Networks  Br     Year    ICCV 2017 Oral Br     Authors     Jifeng Dai  http   www jifengdai org     Haozhi Qi  http   haozhi io     Yuwen Xiong  http   www cs toronto edu  yuwen     Yi Li  https   liyi14 github io     Guodong Zhang  http   www cs toronto edu  gdzhang     Han Hu  https   sites google com site hanhushomepage     Yichen Wei  https   www microsoft com en us research people yichenw    Br      Pages    https   github com msracver Deformable ConvNets  Br      Description    Br  1    CNN                                      deformable convolution deformable ROI pooling 2                     feature map         offsets              3                          DenseNet         Paper    Densely Connected Convolutional Networkss  Br     Year    CVPR 2017 Best Paper Br     Authors     Gao Huang  http   www cs cornell edu  gaohuang     Zhuang Liu  https   liuzhuang13 github io     Laurens van der Maaten  https   lvdmaaten github io     Kilian Q  Weinberger  http   www cs cornell edu  kilian    Br     Pages    https   github com liuzhuang13 DenseNet  Br     Description    Br  1                                       feature map           Br  2           dense block   transition layer       dense block   feature           feature  concat    feature map      1 1 conv    transition layer         block        Br  3                                caffe    concat     concat feature                 L  feature    L L 1  2 feature                        Br            Residual Attention Network       Paper    Residual Attention Network  Br     Year    CVPR 2017 Spotlight  Br     Authors    Fei Wang   Mengqing Jiang  https   github com Jmq14   Chen Qian   Shuo Yang  http   shuoyang1213 me    Chen Li  Honggang Zhang   Xiaogang Wang  http   www ee cuhk edu hk  xgwang     Xiaoou Tang  https   www ie cuhk edu hk people xotang shtml   Br      Pages    https   github com fwang91 residual attention network  Br      Description    Br           SENet      Paper    Squeeze and Excitation Networks  Br     Year    CVPR 2018  Br     Authors     Jie Hu  Li Shen  Gang Sun Br     Pages    https   github com hujie frank SENet  Br     Description     Br  ","software":"md","book":"lcybuzz","full_link":"https://github.com/lcybuzz/Personal-Deep-Learning-Paper-Record"},{"name":"debidatta/pixelobjectness-bilinear","artist":"imag, model, object, arxiv, caff","id":708,"playcount":2994,"description":"debidatta/pixelobjectness-bilinear imag, model, object, arxiv, caff   Pixel Objectness with Bilinear Filtering  This code is mostly adapted from  Pixel Objectness  https   github com suyogduttjain pixelobjectness   and  Fast Bilateral Solver  https   github com poolio bilateral solver   This uses Bilateral filtering as quick post processing step to clean the object masks produced by the Pixel Objectness Code  For example     example  https   raw githubusercontent com debidatta pixelobjectness bilinear master result png     Pixel Objectness The following repository contains pretrained model for pixel objectness   Please visit our  project page  http   vision cs utexas edu projects pixelobjectness   for the paper and visual results   If you use this in your research  please cite the following paper      sh  article pixelobjectness    Author    Jain  Suyog and Xiong  Bo and Grauman  Kristen     Journal    arXiv preprint arXiv 1701 05349     Title    Pixel Objectness     Year    2017         These models are freely available for research and academic purposes  However it s patent pending  so please contact us for any commercial use      Using the pretrained models   Download pretrained model from  here  https   github com suyogduttjain pixelobjectness blob master pixel objectness caffemodel   This model is trained using Deeplab v1 caffe library  Please cite  1  and  2  if you use the code     Setup  Download and install Deeplab v1 from  here  https   bitbucket org deeplab deeplab public      Refer to demo py for step by step instruction on how to run the code     Store the images that you want to process in the images folder     Update the caffe binary path and image extension variable in demo py    Running demo py will produce three files 1  image list txt   contains list of of input images  2  output list txt  contains names to be used to store the output of pixel objectness 3  test protoxt  prototxt file required for loading the pretrained model     Please resize your images so that the maximum side is   513  otherwise update the crop size value in test template prototxt  Bigger crop sizes require larger gpu memory       Visualizing the results   After execution demo py will store pixel objectness results as matlab files   Please refer to show results m to see how to visualize and extract foreground masks      Please cite these too if you use the code    1  Caffe      sh  article jia2014caffe  Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor   Journal    arXiv preprint arXiv 1408 5093   Title    Caffe  Convolutional Architecture for Fast Feature Embedding   Year    2014          2  Deeplab v1      sh  inproceedings chen14semantic  title  Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs   author  Liang Chieh Chen and George Papandreou and Iasonas Kokkinos and Kevin Murphy and Alan L Yuille   booktitle  ICLR   url  http   arxiv org abs 1412 7062   year  2015        ","software":"md","book":"debidatta","full_link":"https://github.com/debidatta/pixelobjectness-bilinear"},{"name":"ChenYingpeng/caffe","artist":"caff, model, learn, communiti, berkeley","id":709,"playcount":2482,"description":"ChenYingpeng/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ChenYingpeng","full_link":"https://github.com/ChenYingpeng/caffe"},{"name":"QiaoLiuHit/WPAL-network","artist":"shell, convolut, pedestrian, databas, network","id":710,"playcount":2419,"description":"QiaoLiuHit/WPAL-network shell, convolut, pedestrian, databas, network   Weakly supervised Pedestrian Attribute Localization Network  By Ken Yu  under guidance of Dr  Zhang Zhang and Prof  Kaiqi Huang   Weakly supervised Pedestrian Attribute Localization Network  WPAL network  is a Convolutional Neural Network  CNN  structure designed for recognizing attributes from objects as well as localizing them  Currently it is developed to recognize attributes from pedestrians only  using the Richly Annotated Pedestrian  RAP  database or PETA database      Installation  1  Clone this repository         Shell       Make sure to clone with   recursive     git clone   recursive https   github com kyu sz Weakly supervised Pedestrian Attribute Localization Network git          2  Build Caffe and pycaffe   This project use python layers for input  etc  When building Caffe  set the WITH PYTHON LAYER option to true          Shell     WITH PYTHON LAYER 1 make all pycaffe  j 8          3  Download the RAP database      To get the Richly Annotated Pedestrian  RAP  database  please visit rap idealtest org to learn about how to download a copy of it       It should have two zip files                RAP RAP annotation zip      RAP RAP dataset zip          4  Unzip them both to the directory          Shell     cd  RAP     unzip RAP annotation zip     unzip RAP dataset zip          5  Create symlinks for the RAP database         Shell     cd  WPAL NET ROOT data dataset      ln  s  RAP RAP             Usage  To train the model  first fetch a pretrained VGG CNN S model by       Shell   data scripts fetch pretrained vgg cnn s model sh      Then run experiment script for training      Shell   experiments example VGG CNN S train vgg s rap 0 sh      Experiment script for testing is also available      Shell   experiments examples VGG CNN S test vgg s rap sh         Acknowledgements  The project layout and some codes are derived from Mr  Ross Girshick s  py faster rcnn  https   github com rbgirshick py faster rcnn    We use VGG CNN S as pretrained model  Information can be found on  Mr  K  Simonyan s Gist  https   gist github com ksimonyan fd8800eeb36e276cd6f9 file readme md   It is from the BMVC 2014 paper  Return of the Devil in the Details  Delving Deep into Convolutional Nets         Return of the Devil in the Details  Delving Deep into Convolutional Nets K  Chatfield  K  Simonyan  A  Vedaldi  A  Zisserman British Machine Vision Conference  2014  arXiv ref  cs1405 3531      ","software":"md","book":"QiaoLiuHit","full_link":"https://github.com/QiaoLiuHit/WPAL-network"},{"name":"hust-wuwechao/caffe-baseline","artist":"caff, model, learn, communiti, berkeley","id":711,"playcount":2487,"description":"hust-wuwechao/caffe-baseline caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hust-wuwechao","full_link":"https://github.com/hust-wuwechao/caffe-baseline"},{"name":"bin1316/caffe","artist":"caff, model, learn, communiti, berkeley","id":712,"playcount":2482,"description":"bin1316/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"bin1316","full_link":"https://github.com/bin1316/caffe"},{"name":"hshustc/lll-caffe","artist":"caff, model, learn, communiti, berkeley","id":713,"playcount":2487,"description":"hshustc/lll-caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hshustc","full_link":"https://github.com/hshustc/lll-caffe"},{"name":"daodaofr/caffe-re-id","artist":"caff, model, learn, bvlc, refer","id":714,"playcount":2902,"description":"daodaofr/caffe-re-id caff, model, learn, bvlc, refer   caffe re id  This is the code for paper   Person Re Identification via Recurrent Feature Aggregation  https   drive google com file d 0ByS8YXR7ycXHU1ZwSXNPWUNtNFU view   Yichao Yan  Bingbing Ni  Zhichao Song  chao Ma  Yan Yan  xiaokang Yang  In ECCV 2016   Tested on Ubuntu 14 04  Compile by the command line   make all  make pycaffe  See examples re id for the examples in our paper   Please cite our paper in your publications if it helps your research         inproceedings DBLP conf eccv YanNSMYY16        author    Yichao Yan and Bingbing Ni and                Zhichao Song and                Chao Ma and                Yan Yan and                Xiaokang Yang         title        Person Re identification via Recurrent Feature Aggregation         booktitle    Computer Vision    ECCV  2016   14th European Conference  Amsterdam                 The Netherlands  October 11 14  2016  Proceedings  Part  VI          pages        701  716         year         2016           Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"daodaofr","full_link":"https://github.com/daodaofr/caffe-re-id"},{"name":"future521u/caffe","artist":"caff, model, learn, communiti, berkeley","id":715,"playcount":2487,"description":"future521u/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"future521u","full_link":"https://github.com/future521u/caffe"},{"name":"brandonjabr/caffe-mcb","artist":"caff, learn, model, framework, vision","id":716,"playcount":2507,"description":"brandonjabr/caffe-mcb caff, learn, model, framework, vision   Note  This branch contains Yang Gao s Compact Bilinear layers   dedicated repo  https   github com gy20073 compact bilinear pooling    paper  https   arxiv org abs 1511 06062   released under the  BDD license  https   github com gy20073 compact bilinear pooling blob master LICENSE   and Ronghang Hu s Soft Attention layers   paper  https   arxiv org abs 1511 03745   released under BSD 2 clause          Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"brandonjabr","full_link":"https://github.com/brandonjabr/caffe-mcb"},{"name":"mahyarnajibi/caffe-ssh","artist":"caff, model, learn, communiti, berkeley","id":717,"playcount":2487,"description":"mahyarnajibi/caffe-ssh caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mahyarnajibi","full_link":"https://github.com/mahyarnajibi/caffe-ssh"},{"name":"zhang-zhaorui/caffe-ps","artist":"caff, model, learn, communiti, berkeley","id":718,"playcount":2487,"description":"zhang-zhaorui/caffe-ps caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhang-zhaorui","full_link":"https://github.com/zhang-zhaorui/caffe-ps"},{"name":"KaiJin1995/VGG-ActionRecognition","artist":"caff, model, learn, bvlc, refer","id":719,"playcount":2993,"description":"KaiJin1995/VGG-ActionRecognition caff, model, learn, bvlc, refer              yjxiong                     yjxiong                          caffe      yjxiong https   github com yjxiong caffe       caffe               openmpi                       caffe                                                4 GTX1080Ti                  yjxiong                      models action recognition       prototxt     flow solver      New                       New       solver            resize 340 256 scale ratios    0 66                                     New         action python            temporal net    demoTemporal py     spatial net    demoSpatial py     temporal spatial    demoTemporalSpatial py           VideoSpatialPredictionTest py  VideoTemporalPredictionTest py                    Test      examples action recognition dataset file examples    txt            github  denseflow    rgb  optical flow      txt             txt                             txt                                            new                      caffe           https   github com yjxiong caffe                                     caffe       mpirun  np 4   install bin caffe train   solver  Your Solver File    weights   Pretrained caffemodel                openmpi              csdn   http   blog csdn net small ARM article details 78283205        Citation     You are encouraged to also cite one of the following papers if you find this repo helpful       article MultiGPUCaffe2015    author       Limin Wang and                Yuanjun Xiong and                Zhe Wang and                Yu Qiao     title        Towards Good Practices for Very Deep Two Stream ConvNets     journal      CoRR     volume       abs 1507 02159     year         2015     url          http   arxiv org abs 1507 02159            Following is the original README of Caffe        Caffe     Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the project site for all the details like      DIY Deep Learning for Vision with Caffe     Tutorial Documentation     BVLC reference models and the community model zoo     Installation instructions  and step by step examples   Join the chat at https   gitter im BVLC caffe  Please join the caffe users group or gitter chat to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on Issues   Happy brewing       License and Citation    Caffe is released under the BSD 2 Clause license  The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research      article jia2014caffe    Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor     Journal    arXiv preprint arXiv 1408 5093     Title    Caffe  Convolutional Architecture for Fast Feature Embedding     Year    2014    ","software":"md","book":"KaiJin1995","full_link":"https://github.com/KaiJin1995/VGG-ActionRecognition"},{"name":"whitenightwu/caffe-quant-QNN","artist":"caff, model, learn, communiti, berkeley","id":720,"playcount":2487,"description":"whitenightwu/caffe-quant-QNN caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"whitenightwu","full_link":"https://github.com/whitenightwu/caffe-quant-QNN"},{"name":"ghlim/caffe-gh","artist":"caff, model, learn, communiti, berkeley","id":721,"playcount":2487,"description":"ghlim/caffe-gh caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ghlim","full_link":"https://github.com/ghlim/caffe-gh"},{"name":"Georgakopoulos-Sp/Adlr","artist":"caff, learn, model, deep, layer","id":722,"playcount":3192,"description":"Georgakopoulos-Sp/Adlr caff, learn, model, deep, layer   Adaptive Learning Rate Algorithm  AdLR   This is an adaptive learning rate algorithm for Convolutional Neural Networks training  presented on 18th International Conference on Engineering Applications of Neural Networks 2017  EANN 2017   The algorithm s code has take some modifications in comparison with the prototype one  making it more stable  The gamma 1  gamma 2 and gamma 3 parameters values are fixed according to the paper  The algorithm is implemented with the help of the Caffe framework   Please cite AdLR in your publications if it helps your research        Inbook Georgakopoulos2017          author  Georgakopoulos  S  V          and Plagianakos  V  P            title  A Novel Adaptive Learning Rate Algorithm for Convolutional Neural Network Training           bookTitle  Engineering Applications of Neural Networks  18th International Conference  EANN 2017  Athens  Greece  August 25  27  2017  Proceedings           year  2017           publisher  Springer International Publishing           address  Cham           pages  327  336          As well as the following      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing       License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Georgakopoulos-Sp","full_link":"https://github.com/Georgakopoulos-Sp/Adlr"},{"name":"nnop/caffe","artist":"caff, model, learn, communiti, berkeley","id":723,"playcount":2487,"description":"nnop/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"nnop","full_link":"https://github.com/nnop/caffe"},{"name":"medivhgu/caffe_20170919","artist":"caff, model, learn, communiti, berkeley","id":724,"playcount":2973,"description":"medivhgu/caffe_20170919 caff, model, learn, communiti, berkeley     A Common Feature Extraction Method with Diverse Mean Input  added on Nov 9  2017        tools features extract binary cpp      Bilinear Pooling and Compact Bilinear Pooling  added on Sep 29  2017   Add the bilinear pooling and compact bilinear pooling caffe implementation from  this  https   github com gy20073 compact bilinear pooling tree master caffe 20160312        A Common Feature Extraction Method  added on Sep 28  2017         tools features extract binary trimean cpp      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"medivhgu","full_link":"https://github.com/medivhgu/caffe_20170919"},{"name":"xmyqsh/caffe-fast-rcnn-dropped","artist":"caff, learn, model, framework, vision","id":725,"playcount":2939,"description":"xmyqsh/caffe-fast-rcnn-dropped caff, learn, model, framework, vision  This Repo is forked from  caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83  https   github com rbgirshick caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83  which is a  caffe fast rcnn  https   github com rbgirshick caffe fast rcnn  upgrade version that  upcompatible  with caffe at commit 33f2445   There is not a certain  branch  for this version  So I  ReGit  the project of this certain version  caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83  https   github com rbgirshick caffe fast rcnn tree  0dcd397b29507b8314e252e850518c5695efbb83  here for supporting  xmyqsh py faster rcnn  https   github com xmyqsh py faster rcnn  which is forked from  py faster rcnn  https   github com rbgirshick py faster rcnn  and is  upcompatible  with caffe master for supporting the latest cuDNN 5 1 5         Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xmyqsh","full_link":"https://github.com/xmyqsh/caffe-fast-rcnn-dropped"},{"name":"chuong/caffe-convlstm","artist":"caff, learn, model, framework, vision","id":726,"playcount":2259,"description":"chuong/caffe-convlstm caff, learn, model, framework, vision   Note  This Caffe has been modified to add Convolutional LSTM layer using codes from   ConvLSTM for Caffe  https   github com agethen ConvLSTM for Caffe      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"chuong","full_link":"https://github.com/chuong/caffe-convlstm"},{"name":"VladislavTyurin/caffe","artist":"caff, model, learn, communiti, berkeley","id":727,"playcount":2487,"description":"VladislavTyurin/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"VladislavTyurin","full_link":"https://github.com/VladislavTyurin/caffe"},{"name":"zhuyawen/caffe","artist":"caff, model, learn, communiti, berkeley","id":728,"playcount":2487,"description":"zhuyawen/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhuyawen","full_link":"https://github.com/zhuyawen/caffe"},{"name":"zhrebicek/caffe-evaluation-with-selective-search","artist":"caff, model, arxiv, year, fast","id":729,"playcount":2775,"description":"zhrebicek/caffe-evaluation-with-selective-search caff, model, arxiv, year, fast Caffe evaluation with selective search                                         Image classification with simple object detection running as a Flask web server    Note that you should use this only on pictures with maximal size around 1024 x 1024  It can take really long time for bigger pictures       Requirements  First thing you should do is to run this script         prepare sh   get all  this script will prepare proper folder structure and it will clone BVLC Caffe repo and both AlpacaDB   belltailjp selective search algorithms  Then it will download pretrained reference mode and auxiliary files with help of script included in BVLC Caffe   Next thing you should do is compiling the Python Caffe interface  How to do that is described here  http   caffe berkeleyvision org installation html but it can differ a little between versions of OS   The server requires Python2 with couple of dependencies  You can install them manually one by one or run this command       pip2 install  r   web app dependencies txt  If allready have caffe with compiled Python interface make sure that   path to caffe python   is on your  PYTHONPATH        Reference data  You should find reference models at    caffe models  and auxiliary data at    caffe data ilsvrc12   if you run preparation script  If you did not  you can do it by yourself by running two scripts that are included in caffe         scripts download model binary py models bvlc reference caffenet       data ilsvrc12 get ilsvrc aux sh  Or you can use your own pretrained models      Running the server  Running  python2 examples web demo app py  will bring up the server  accessible at  http   127 0 0 1 5000   You can enable debug mode of the web server  or switch to a different port         python examples web demo app py  h     Usage  app py  options       Options         h    help            show this help message and exit        d    debug           enable debug mode        p PORT    port PORT  which port to serve content on   Usage of web interface should be self descriptive  If not you can contact me and I will try to include some usage     License  This implementation is publicly available under the Apache License  Version 2 0  See LICENSE txt for more details     References  This work is based on BVLC Caffe web demo example  which was just for simple evaluation of caffe models not selective search     1    a name  jia2014caffe    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor  Caffe  Convolutional Architecture for Fast Feature Embedding  https   github com BVLC caffe   br     2   https   github com belltailjp selective search py br     3   https   github com AlpacaDB selectivesearch ","software":"md","book":"zhrebicek","full_link":"https://github.com/zhrebicek/caffe-evaluation-with-selective-search"},{"name":"SeongjinPark/RDFNet","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":730,"playcount":2652,"description":"SeongjinPark/RDFNet “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   RDFNet RGB D Multi level Residual Feature Fusion for Indoor Semantic Segmentation This is the implementation of the models and test code for the  RDFNet RGB D Multi level Residual Feature Fusion for Indoor Semantic Segmentation   ICCV2017     File description    caffe master  caffe used in our experiments   test py  demo code     Each of NYU 50   NYU 101   NYU 152 directory includes RDF model and its prototxt corresponding to different number of resnet layers    You may need to change the  nyud dir  parameter in the prototxt     data  test data     nyud layers py  input python layer   gupta utils HHA  HHA generation utils by Gupta et al   2     Usage   Install Opencv    Compile pycaffe  modify the  Makefile config  in caffe master for your environment    Download the model files    Run test py      Change  caffe root      Set the  scale  and  model  to test      To achieve the same accuracy reported in our paper  you need to implement multi scale  0 6 1 2  ensemble as described in the paper       Environment Our experiments were mainly performed on Ubuntu 14 04 with CUDA7 0   CUDNNv4   Titan X  maxwell    Opencv2 7      Note   Similarly to RefineNet      Our implementation uses bicubic resize function to resize feature map      We remove white boundaries of the images in NYUDv2    Any comment for improvement is welcome as the code is not fully optimized  but please note that further maintenance will be infrequently performed    OOM may occur for RDF 152 with the image scale larger than 1 0 on different environtment  e g   Titan Xp  CUDA 8 0  CUDNN v6     Citation   We would like to thank Guosheng Lin  3  for invaluable help    1   InProceedings Park 2017 ICCV  author    Park  Seong Jin and Hong  Ki Sang and Lee  Seungyong   title    RDFNet  RGB D Multi Level Residual Feature Fusion for Indoor Semantic Segmentation   booktitle    The IEEE International Conference on Computer Vision  ICCV    month    Oct   year    2017      2   incollection guptaECCV14    author    Saurabh Gupta and Ross Girshick and Pablo Arbelaez and Jitendra Malik     title    Learning Rich Features from  RGB D  Images for Object Detection and Segmentation     booktitle   ECCV    year    2014       3   inproceedings lin2017refinenet    title  Refinenet  Multi path refinement networks for high resolution semantic segmentation     author  Lin  Guosheng and Milan  Anton and Shen  Chunhua and Reid  Ian     booktitle  IEEE Conference on Computer Vision and Pattern Recognition  CVPR      year  2017       License For academic usage  the code is released under the permissive BSD license  For any commercial purpose  please contact the authors  ","software":"md","book":"SeongjinPark","full_link":"https://github.com/SeongjinPark/RDFNet"},{"name":"eric-erki/Caffe-","artist":"caff, model, learn, communiti, berkeley","id":731,"playcount":2487,"description":"eric-erki/Caffe- caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"eric-erki","full_link":"https://github.com/eric-erki/Caffe-"},{"name":"matthieudelaro/caffe","artist":"caff, learn, model, deep, layer","id":732,"playcount":2770,"description":"matthieudelaro/caffe caff, learn, model, deep, layer   Old version of Caffe Use https   github com matthieudelaro caffeBVLCplus instead  which has been updated from Caffe master in April 2016     Fork of Caffe    This is a fork used for image reconstruction      0  Locally Connected Layers  downgraded from pull request https   github com BVLC caffe pull 3068   0  Unpool Layers  Deconvolution Layer   forked from https   github com HyeonwooNoh caffe  based on original version of Caffe from January 2  2015   which supports following architectures      0  Deconvolution Network    Learning Deconvolution Network for Semantic Segmentation   Hyeonwoo Noh  Seunghoon Hong  Bohyung Han  http   arxiv org abs 1505 04366      0  Decoupled Network    Decoupled Deep Neural Network for Semi supervised Semantic Segmentation   Seunghoon Hong  Hyeonwoo Noh  Bohyung Han  http   arxiv org abs 1506 04924      Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"matthieudelaro","full_link":"https://github.com/matthieudelaro/caffe"},{"name":"ShuoYang129/caffe_ys","artist":"caff, model, learn, communiti, berkeley","id":733,"playcount":2487,"description":"ShuoYang129/caffe_ys caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ShuoYang129","full_link":"https://github.com/ShuoYang129/caffe_ys"},{"name":"jmarwane/caffe_mod","artist":"caff, model, learn, communiti, berkeley","id":734,"playcount":2487,"description":"jmarwane/caffe_mod caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jmarwane","full_link":"https://github.com/jmarwane/caffe_mod"},{"name":"rbgirshick/DeepPyramid","artist":"featur, deeppyramid, caff, network, convolut","id":735,"playcount":2761,"description":"rbgirshick/DeepPyramid featur, deeppyramid, caff, network, convolut    DeepPyramid  DeepPyramid is a simple toolkit for building feature pyramids from deep convolutional networks  The DeepPyramid data structure is nearly identical to the HOG feature pyramid created by the featpyramid m function in the  voc dpm  https   github com rbgirshick voc dpm  code       References  This code was used in our  tech report  http   arxiv org pdf 1409 5403v2 pdf  about the relationship between deformable part models and convolutional networks        article girshick14dpdpm          author       Ross Girshick and Forrest Iandola and Trevor Darrell and Jitendra Malik           title        Deformable Part Models are Convolutional Neural Networks           journal      CoRR           year         2014           volume       abs 1409 5403           url          http   arxiv org abs 1409 5403           year         2014              Installation  0    Prerequisites      0  MATLAB  tested with 2014a on 64 bit Linux    0  Caffe s  prerequisites  http   caffe berkeleyvision org installation html prequequisites  0    Install Caffe    this is the most complicated part    0  Follow the  Caffe installation instructions  http   caffe berkeleyvision org installation html    0  Let s call the place where you installed caffe   CAFFE ROOT   you can run  export CAFFE ROOT   pwd      0    Important    Make sure to compile the Caffe MATLAB wrapper  which is not built by default   make matcaffe    0    Important    Make sure to run  cd  CAFFE ROOT data ilsvrc12      get ilsvrc aux sh  to download the ImageNet image mean   0  DeepPyramid has been tested with master and dev at the time of this writing 0    Get DeepPyramid     0   git clone https   github com rbgirshick DeepPyramid git    0  If you haven t installed R CNN  you ll need to download its  models  https   dl dropboxusercontent com s og7ghmiken2olzh r cnn release1 data tgz dl 0    1  Copy R CNN s non finetuned ImageNet network   rcnnpath  data caffe nets ilsvrc 2012 train iter 310k  to   deeppyramidpath  data caffe nets ilsvrc 2012 train iter 310k   or just create a symlink        Usage  1  Run matlab from inside the DeepPyramid code directory 2  Add the  matcaffe  mex function to your path   addpath  path to caffe matlab caffe   3  Run the demo  demo deep pyramid       Uses  DeepPyramid can be used for implementing DPMs on deep convolutional network features  rather than HOG features  It can also be used whenever you need a dense multiscale pyramid of image features       Caveats  The implementation is designed to be simple and as a result is very inefficient  There are a variety of ways to speed it up  and they will be done in the future  For now  it takes about 0 5 to 0 6 seconds to compute a feature pyramid on an NVIDIA Titan GPU  which is acceptable  ","software":"md","book":"rbgirshick","full_link":"https://github.com/rbgirshick/DeepPyramid"},{"name":"weien8899/caffe","artist":"caff, model, learn, communiti, berkeley","id":736,"playcount":2487,"description":"weien8899/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"weien8899","full_link":"https://github.com/weien8899/caffe"},{"name":"landcold7/caffe","artist":"caff, model, learn, communiti, berkeley","id":737,"playcount":2487,"description":"landcold7/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"landcold7","full_link":"https://github.com/landcold7/caffe"},{"name":"SuckeedTing/resnet152","artist":"caff, model, learn, communiti, berkeley","id":738,"playcount":2487,"description":"SuckeedTing/resnet152 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"SuckeedTing","full_link":"https://github.com/SuckeedTing/resnet152"},{"name":"lokhande-vishnu/JointGazeNet","artist":"caff, model, learn, communiti, berkeley","id":739,"playcount":2487,"description":"lokhande-vishnu/JointGazeNet caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"lokhande-vishnu","full_link":"https://github.com/lokhande-vishnu/JointGazeNet"},{"name":"zhangnju/GSL","artist":"caff, model, learn, communiti, berkeley","id":740,"playcount":2487,"description":"zhangnju/GSL caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhangnju","full_link":"https://github.com/zhangnju/GSL"},{"name":"kaiyang0804/SSD_Caffe","artist":"caff, model, learn, communiti, berkeley","id":741,"playcount":2482,"description":"kaiyang0804/SSD_Caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kaiyang0804","full_link":"https://github.com/kaiyang0804/SSD_Caffe"},{"name":"X-candy/xcandy-caffe","artist":"caff, model, learn, communiti, berkeley","id":742,"playcount":2487,"description":"X-candy/xcandy-caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"X-candy","full_link":"https://github.com/X-candy/xcandy-caffe"},{"name":"hasush/caffe","artist":"caff, model, learn, communiti, berkeley","id":743,"playcount":2487,"description":"hasush/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hasush","full_link":"https://github.com/hasush/caffe"},{"name":"FengyangZhang/caffe_roomnet","artist":"caff, learn, model, framework, vision","id":744,"playcount":2660,"description":"FengyangZhang/caffe_roomnet caff, learn, model, framework, vision   Caffe Roomnet  A CNN based neural network for layout estimation from a monocular vision image  Although there s still things to be done about it  you can train the model by the following command now             build tools caffe train  solver models roomnet roomnet solver prototxt      You may have to play with the parameters a little bit  but in my case the current one is doing well      Roomnet paper  Find the original paper here   Chen Yu Lee et  al   RoomNet  End to End Room Layout Estimation  arXiv 1703 06241  https   arxiv org abs 1703 06241      Caffe    Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"FengyangZhang","full_link":"https://github.com/FengyangZhang/caffe_roomnet"},{"name":"Sylvia23/Image_Processing","artist":"rcnn, train, detect, network, faster","id":745,"playcount":2684,"description":"Sylvia23/Image_Processing rcnn, train, detect, network, faster   Image Processing Computer Vision  First of all you should know the basic syntax of Python  To start with computer vision you need to have a basic knowledge about Deep Learning  neural neworks  CNN   RCNN   fast RCNN   faster RCNN   Here are some resourses    Deep learning  CNN  Startup     1  https   www youtube com watch v vq2nnJ4g6N0 t 1546s   RCNN  fast RCNN  faster RCNN  Startup     1  https   www youtube com watch v u6aEYuemt0M t 238s     2  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks by Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun  Step1   Lets start with OpenCV for the neural networks   For this install OpenCV in Ubuntu   Refer to this documentation for installation   http   docs opencv org trunk d7 d9f tutorial linux install html    The repository contains an example of a neural network made with OpenCV called  RedEyeOpenCV  which    converts the img into gray scale     splits and merge the image into BGR components     puts boxes one eyes  puts text on the image     save the given image in a different format eg png   Run it by typing  python RedEyes py  on terminal     The repository also contains a GUI made with opencv called  trackbar py  that makes colours   Run it by typing  python trackbar py  on terminal    Step2   Make a neural network that detect faces and eyes in images using opencv and haarcascades     Find a folder named  Eyes and face Detection    Run it by typing  python face py  and  python eye and face detection py  respectively on terminal    Step3   Start making GUI for neural networks   For this  use OpenCV along with  Tkinter  which is a standard package in Python   Insure OpenCV is installed on Linux     Repository contains  Tkinter  named folder which contains files that demonstrates some features of tkinter     camera py  opens a videoa and contains a button through which you can capture any moment of the video and save     askfile py  contains GUI for file browse     btton py  is a GUI for button and pops a window on click   Run the files by typing  python camera py    python askfile py  and  python btton py  respectively    Step4   Make a network to detect faces in videos or webcam on live stream      Face Detection in a video along with GUI is made and the faces are cropped and saved in a folder    Use OpenCV to read and perform various operations    Do  Object Detection  using Haar feature based cascade classifiers  Repository contains the cascade folder for eye and face detection    For GUI of the neural network  use Tkinter and OpenCV     Repository contains Video Face Detection folder   Run the files by typing  python gui py  on terminal                 ","software":"md","book":"Sylvia23","full_link":"https://github.com/Sylvia23/Image_Processing"},{"name":"kongyulian99/caffe","artist":"caff, model, learn, communiti, berkeley","id":746,"playcount":2487,"description":"kongyulian99/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kongyulian99","full_link":"https://github.com/kongyulian99/caffe"},{"name":"hust-wuwechao/caffe_with_NCCL","artist":"caff, model, learn, communiti, berkeley","id":747,"playcount":2487,"description":"hust-wuwechao/caffe_with_NCCL caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hust-wuwechao","full_link":"https://github.com/hust-wuwechao/caffe_with_NCCL"},{"name":"wldeephi/-Single-Shot-Detector-SSD-","artist":"caff, model, learn, communiti, berkeley","id":748,"playcount":2482,"description":"wldeephi/-Single-Shot-Detector-SSD- caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wldeephi","full_link":"https://github.com/wldeephi/-Single-Shot-Detector-SSD-"},{"name":"zihaowangcmu/Caffe","artist":"caff, model, learn, communiti, berkeley","id":749,"playcount":2487,"description":"zihaowangcmu/Caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zihaowangcmu","full_link":"https://github.com/zihaowangcmu/Caffe"},{"name":"tanxjtu/graduation_ACT_caffe","artist":"caff, model, learn, communiti, berkeley","id":750,"playcount":2482,"description":"tanxjtu/graduation_ACT_caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tanxjtu","full_link":"https://github.com/tanxjtu/graduation_ACT_caffe"},{"name":"rickyHong/fast-rcnn-example","artist":"rcnn, fast, shell, matlab, voc","id":751,"playcount":11182,"description":"rickyHong/fast-rcnn-example rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/fast-rcnn-example"},{"name":"HanSJTU/caffe_alexnet_My","artist":"caff, model, learn, communiti, berkeley","id":752,"playcount":2482,"description":"HanSJTU/caffe_alexnet_My caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"HanSJTU","full_link":"https://github.com/HanSJTU/caffe_alexnet_My"},{"name":"chenyvehtung/image-caption-cpp","artist":"deep, learn, network, convolut, imag","id":753,"playcount":2935,"description":"chenyvehtung/image-caption-cpp deep, learn, network, convolut, imag   Image Caption   Automatically generating describing information for images is a fundamental problem for artificial intelligence connected with computer vision and natural language processing  The research is with great practical significance  for instance  to help visually impaired people to have a better understanding of the content of the images on web    This project is the implementation of a  data driven approach  used to automatically generate English captions for given images  The core algorithm of this project is mainly implemented by C    while the image features are extracted by Caffe and the sentence vectors are extracted by Word2Vec     samples  pics 1 jpg       Algorithm Details  This project implements a data driven query expansion approach  And it can be roughly desribed by the following three steps     It begins with   nearest neighbor algorithm    which is to find a set of nearest images in the training set that contains images as well as related captions      Sentence vectors   are extracted from the captions of the nearest images by employing Word2Vec  and then averaged to generate a sentence vector for the input image    The generated vector is later used to   rerank   the captions of the K nearest neighbors and finally the nearest caption is   borrowed   as the generated caption for the given image   The main process is illustrated as follow     algorithm  pics 2 jpg       Auxiliary Module  This project also provide two auxiliary modules  which should be useful for some other similar image caption projects  They are both self contained and can be used independently       BLEU    It is an algorithm for evaluating the quality of text which has been machine translated from one natural language to another  Check out the subfolder  bleu   for more details      Webpage Autogenerator    It is a tool that can be used to generate a beautiful webpage based on the given images  captions and BLEU scores  Check out the subfolder  result   for more details       Results      Quantized Data    data result  pics 3 jpg       Presentation Webpage    UI result  pics 4 jpg       How to Run   Run the following commands     sh bash setup sh     download some required files bash run sh       compile the project   demo            auto generate captions  run BLEU test and generate presentation webpage       After it all finishes  the final result should be presented in  result index html       References  1  V  Ordonez  G  Kulkarni  and T  Berg  Im2text  Describing images using 1 million captioned photographs  In NIPS  2011  1  2  3  2  Devlin Jacob  Gupta Saurabh  Girshick Ross  Mitchell Margaret  and Zitnick C Lawrence  Exploring nearest neighbor approaches for image captioning  arXiv preprint arXiv 1505 04467  2015b  3  Mao Junhua  Xu Wei  Yang Yi  Wang Jiang  and Yuille Alan  Deep captioning with multimodal recurrent neural networks  m RNN   arXiv 1412 6632  cs CV   2014  12      ","software":"md","book":"chenyvehtung","full_link":"https://github.com/chenyvehtung/image-caption-cpp"},{"name":"XifengGuo/IDEC","artist":"dec, code, python, mnist, cluster","id":754,"playcount":2439,"description":"XifengGuo/IDEC dec, code, python, mnist, cluster   Improved Deep Embedded Clustering  IDEC   Keras implementation for our IJCAI 17 paper     Xifeng Guo  Long Gao  Xinwang Liu  Jianping Yin    Improved Deep Embedded Clustering with Local Structure Preservation  https   xifengguo github io papers IJCAI17 IDEC pdf   IJCAI 2017   and re implementation for paper     Junyuan Xie  Ross Girshick  and Ali Farhadi  Unsupervised deep embedding for clustering analysis  ICML 2016   This code requires pretrained autoencoder weights provided   Use  IDEC toy code  https   github com XifengGuo IDEC toy  for a quick start          Usage 1  Install  Keras v2 0  https   github com fchollet keras   scikit learn and git     sudo pip install keras scikit learn      sudo apt get install git  2  Clone the code to local      git clone https   github com XifengGuo IDEC git IDEC  3  Prepare datasets               cd IDEC data usps            bash   download usps sh            cd    reuters           bash   get data sh            cd        4  Get pre trained autoencoder s weights     Follow instructions at https   github com piiswrong dec to pre train the autoencoder  Then save the trained weights to a keras model  e g  mnist ae weights h5  and put it in folder  ae weights     If you do not want to install Caffe package  you can download the pretrained weights from    https   github com XifengGuo data and models     Then put  h5 file in ae weights in local folder  ae weights       Or you can just use  IDEC toy code  https   github com XifengGuo IDEC toy  for a quick start  but the results may be not promising   5  Run experiment on MNIST      python IDEC py mnist   ae weights ae weights mnist ae weights h5      or     python DEC py mnist   ae weights ae weights mnist ae weights h5     The IDEC  or DEC  model is saved to  results idec IDEC model final h5   or  results dec DEC model final h5     6  Run experiment on USPS      python IDEC py usps   ae weights ae weights usps ae weights   update interval 30      python DEC py usps   ae weights ae weights usps ae weights   update interval 30   6  Run experiment on REUTERSIDF10K      python IDEC py reutersidf10k   ae weights ae weights reutersidf10k ae weights   n clusters 4   update interval 3      python DEC py reutersidf10k   ae weights ae weights reutersidf10k ae weights   n clusters 4   update interval 20       Models The DEC model            dec model png  DEC model    The IDEC model            idec model png  IDEC model  ","software":"md","book":"XifengGuo","full_link":"https://github.com/XifengGuo/IDEC"},{"name":"LancelotZhao/Caffe","artist":"caff, model, learn, communiti, berkeley","id":755,"playcount":2487,"description":"LancelotZhao/Caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"LancelotZhao","full_link":"https://github.com/LancelotZhao/Caffe"},{"name":"kevin-ssy/ImageClassificationSummary","artist":"arxiv, network, preprint, detect, object","id":756,"playcount":3362,"description":"kevin-ssy/ImageClassificationSummary arxiv, network, preprint, detect, object   ImageClassificationSummary A summary for state of the art image classifying methods on CIFAR 10  CIFAR 100 and ImageNet 1K      CIFAR    Method                  Depth   Params   CIFAR 10   CIFAR 100                                                                       Deeply Supervised Net  1                     7 97       34 57         Highway Network  2                           7 72       32 39         FractalNet            3     21      38 6M    5 22       23 30         FractalNet  Dropout   3     21      38 6M    4 60       23 73         ResNet 110   4              110     1 7M     6 43                     ResNet 1202  4              1202    19 4M    7 93                     preact ResNet 164    5      164     1 7M     5 46       24 33         preact ResNet 1001   5      1001    10 7M    4 92       22 71         WRN 28 10            6      28      36 5M    4 00       19 25         WRN 28 10  dropout   6      28      36 5M    3 89       18 85         AttentionNet 92   7         92      1 9M     4 99       21 71         AttentionNet 236  7         236     5 1M     4 14       21 16         AttentionNet 452  7         452     8 6M     3 90       20 45         ResNeXt 29  8 64d   8       29      34 4M    3 65       17 77         ResNeXt 29  16 64d  8       29      68 1M    3 58       17 31         DenseNet BC  k   12   9     100     0 8M     4 51       22 27         DenseNet BC  k   24   9     250     15 3M    3 62       17 60         DenseNet BC  k   40   9     190     25 6M    3 46       17 18         PyramidNet  alpha 200  10   272     26 0M    3 31       16 35           Reference   1  Lee  Chen Yu  Saining Xie  Patrick Gallagher  Zhengyou Zhang  and Zhuowen Tu   Deeply supervised nets   In Artificial Intelligence and Statistics  pp  562 570  2015    2  Srivastava  Rupesh Kumar  Klaus Greff  and J rgen Schmidhuber   Highway networks   arXiv preprint arXiv 1505 00387  2015     3  Larsson  Gustav  Michael Maire  and Gregory Shakhnarovich   Fractalnet  Ultra deep neural networks without residuals   arXiv preprint arXiv 1605 07648  2016     4  He  Kaiming  Xiangyu Zhang  Shaoqing Ren  and Jian Sun   Deep residual learning for image recognition   In Proceedings of the IEEE conference on computer vision and pattern recognition  pp  770 778  2016    5  He  Kaiming  Xiangyu Zhang  Shaoqing Ren  and Jian Sun   Identity mappings in deep residual networks   In European Conference on Computer Vision  pp  630 645  Springer  Cham  2016    6  Zagoruyko  Sergey  and Nikos Komodakis   Wide residual networks   arXiv preprint arXiv 1605 07146  2016     7  Wang  Fei  Mengqing Jiang  Chen Qian  Shuo Yang  Cheng Li  Honggang Zhang  Xiaogang Wang  and Xiaoou Tang   Residual attention network for image classification   arXiv preprint arXiv 1704 06904  2017     8  Xie  Saining  Ross Girshick  Piotr Doll r  Zhuowen Tu  and Kaiming He   Aggregated residual transformations for deep neural networks   In Computer Vision and Pattern Recognition  CVPR   2017 IEEE Conference on  pp  5987 5995  IEEE  2017    9  Huang  Gao  Zhuang Liu  Kilian Q  Weinberger  and Laurens van der Maaten   Densely connected convolutional networks   In Computer Vision and Pattern Recognition  CVPR   2017 IEEE Conference on  2017    10  Han  Dongyoon  Jiwhan Kim  and Junmo Kim   Deep pyramidal residual networks   arXiv preprint arXiv 1610 02915  2016   ","software":"md","book":"kevin-ssy","full_link":"https://github.com/kevin-ssy/ImageClassificationSummary"},{"name":"ailihong/caffe-pruned","artist":"caff, learn, model, framework, vision","id":757,"playcount":2451,"description":"ailihong/caffe-pruned caff, learn, model, framework, vision         HEAD           caffe pruned         dd3268fc047834117d0800f8ff9ef9120e2716be   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          HEAD                           CSDN  https   blog csdn net zhouyusong bupt article details 51728910 commentsedit     python3    docker u16 04 x86 64 cv3 4 py3 caffessd v2                    alexnet                        dd3268fc047834117d0800f8ff9ef9120e2716be ","software":"md","book":"ailihong","full_link":"https://github.com/ailihong/caffe-pruned"},{"name":"hujun100/cccccccc","artist":"caff, model, learn, communiti, berkeley","id":758,"playcount":2482,"description":"hujun100/cccccccc caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hujun100","full_link":"https://github.com/hujun100/cccccccc"},{"name":"rokm/cnn-feature-extractor","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":759,"playcount":3121,"description":"rokm/cnn-feature-extractor “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   CNN Feature Extractor    A Matlab class implementing CNN Feature Extractor based on Caffe  as originally presented by Ross Girschick et al   1   and adapted for various computer vision tasks  2    The code is inspired by the original R CNN implementation  3   but is limited to only the feature extractor part  Thus  it offers a flexible CNN feature extraction pipeline that can be used to extract responses from desired network s layer  e g   FC7 for regular feature extraction  soft max for final predictions  etc    Responses can be obtained either from whole image or one or more specified regions of interest  e g   bounding boxes from region proposals    While superseded by faster and improved approaches  Fast R CNN  Faster R CNN  etc    having a minimal flexible CNN feature extraction pipeline may still prove useful  especially in application of CNN features in various specialized application domains      Installation    The project depends on Caffe  for the sake of self containment  the appropriate version is bundled as a git submodule  Due to Caffe dependency  only linux is officially supported right now   The Caffe should be compiled and installed via CMake  the project expects to find it installed in external caffe bin folder  For convenience  it includes a build script that compiles and deploys Caffe  The script was written and used on Fedora linux  so it may or may not work on other distributions   if you have problems  try to manually execute its steps   Note that because MatCaffe bindings are dynamically linked against libcaffe so  the latter needs to be in LD LIBRARY PATH before Matlab is started     Dependencies Make sure that Caffe dependencies are installed  the list of packages for Fedora is     Shell sudo dnf install cmake gcc c   boost devel glog devel gflags devel       protobuf devel hdf5 devel lmdb devel leveldb devel snappy devel       openblas devel python devel python2 numpy sudo dnf install  cuda devel cudnn devel     and for Ubuntu     Shell sudo apt get install cmake build essential libboost all dev libgflags dev       libgoogle glog dev libprotobuf dev protobuf compiler libhdf5 dev       liblmdb dev libleveldb dev libsnappy dev libopenblas dev python dev       python numpy sudo apt get install nvidia cuda toolkit        Build commands    Shell   Checkout the source git clone https   github com rokm cnn feature extractor git cd cnn feature extractor git submodule update   init   recursive    Build and deploy dependencies export MATLABDIR  usr local MATLAB R2016b   build all sh    Start Matlab export LD LIBRARY PATH  LD LIBRARY PATH  path to project external caffe bin lib64   MATLABDIR  bin matlab         References    1  Girshick  Ross  et al   Rich feature hierarchies for accurate object detection and semantic segmentation   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2014  2  Sharif Razavian  Ali  et al   CNN features off the shelf  an astounding baseline for recognition   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition Workshops  2014  3  https   github com rbgirshick rcnn ","software":"md","book":"rokm","full_link":"https://github.com/rokm/cnn-feature-extractor"},{"name":"zcabcde/Caffe","artist":"caff, model, learn, communiti, berkeley","id":760,"playcount":2487,"description":"zcabcde/Caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zcabcde","full_link":"https://github.com/zcabcde/Caffe"},{"name":"aleksbha/caffe-rcnn-cuda8-cudnn6","artist":"caff, model, learn, communiti, berkeley","id":761,"playcount":2487,"description":"aleksbha/caffe-rcnn-cuda8-cudnn6 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"aleksbha","full_link":"https://github.com/aleksbha/caffe-rcnn-cuda8-cudnn6"},{"name":"sodeypunk/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":762,"playcount":8855,"description":"sodeypunk/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"sodeypunk","full_link":"https://github.com/sodeypunk/py-faster-rcnn"},{"name":"lucmichalski/svc_kube_vision_fastrcnn_cpu","artist":"train, rcnn, faster, shell, network","id":763,"playcount":8419,"description":"lucmichalski/svc_kube_vision_fastrcnn_cpu train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details  ","software":"md","book":"lucmichalski","full_link":"https://github.com/lucmichalski/svc_kube_vision_fastrcnn_cpu"},{"name":"antran89/my-very-deep-caffe","artist":"caff, learn, model, deep, layer","id":764,"playcount":3035,"description":"antran89/my-very-deep-caffe caff, learn, model, deep, layer   Fork of Caffe   This is a fork used for video action recognition  mainly two stream CNN networks     Some un official layers developed or merged into this repo    FlowData layer  use a FlowData Reader to read flow data from LDMB database    Modified DataTransformer methods  which can read images from resized images  rescale back and then do transformations    3D convolution pooling layers  Sofware works well with 3D CNN network   We choose to keep our  my very deep caffe  to be aligned with the original of Caffe s fork commit 5a201dd960840c319cefd9fa9e2a40d2c76ddd73   We would like to preserve the strength of BLVC Caffe software which is a deep learning framework made with expression  speed  and modularity  in mind  Our software also inherits training mechanism from multiple GPUs from BLVC Caffe   The examples to use the software available at  two stream FCAN repository  https   github com antran89 two stream fcan      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"antran89","full_link":"https://github.com/antran89/my-very-deep-caffe"},{"name":"ejbarrow/Caffe-Rotation_filters","artist":"caff, learn, model, framework, vision","id":765,"playcount":2532,"description":"ejbarrow/Caffe-Rotation_filters caff, learn, model, framework, vision   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014           This Version of Caffe is used by Erik Barrow for a PhD Dissertation on Solving Invariance issues associated with object recognition in computer vision using deep learning  The added features such as circular convolutional filters for CNN s and  rotational filters for Convolutional Networks and may be used for research purposes     Please cite me in your publications if it helps your research        article                  ","software":"md","book":"ejbarrow","full_link":"https://github.com/ejbarrow/Caffe-Rotation_filters"},{"name":"IrvingShu/MyCaffe","artist":"caff, model, learn, communiti, berkeley","id":766,"playcount":2482,"description":"IrvingShu/MyCaffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"IrvingShu","full_link":"https://github.com/IrvingShu/MyCaffe"},{"name":"KylinChang/caffe-lstm-tracker","artist":"caff, learn, model, framework, vision","id":767,"playcount":2322,"description":"KylinChang/caffe-lstm-tracker caff, learn, model, framework, vision   Caffe for LSTM Tracker  This is a caffe with lstm layer from  here  https   github com junhyukoh caffe lstm  and with ROIPooling layer and SmoothL1loss layer from  here  https   github com rbgirshick caffe fast rcnn     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"KylinChang","full_link":"https://github.com/KylinChang/caffe-lstm-tracker"},{"name":"hshustc/large-scale-caffe","artist":"caff, model, learn, communiti, berkeley","id":768,"playcount":2487,"description":"hshustc/large-scale-caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"hshustc","full_link":"https://github.com/hshustc/large-scale-caffe"},{"name":"Devin879176/Caffe-Devin","artist":"caff, model, learn, communiti, berkeley","id":769,"playcount":2487,"description":"Devin879176/Caffe-Devin caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Devin879176","full_link":"https://github.com/Devin879176/Caffe-Devin"},{"name":"riverlijunjie/caffe-1","artist":"caff, model, learn, communiti, berkeley","id":770,"playcount":2487,"description":"riverlijunjie/caffe-1 caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"riverlijunjie","full_link":"https://github.com/riverlijunjie/caffe-1"},{"name":"geoffrey0822/caffe_dev","artist":"caff, model, learn, communiti, berkeley","id":771,"playcount":2865,"description":"geoffrey0822/caffe_dev caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            Added Layers  1  Morph Layer 2  Correlation Layer 3  ExpDecayLoss Layer     Addition License and Citation  This repository is created by Geoffrey Poon for inventing new layers  The core Caffe framework may be imcompitable with the latest version of Caffe  please use it carefully   Please cite our layers if it helps your research    Contact Me   mailto  geoffrey poon ieee org  ","software":"md","book":"geoffrey0822","full_link":"https://github.com/geoffrey0822/caffe_dev"},{"name":"Nyceane/caffe","artist":"caff, model, learn, communiti, berkeley","id":772,"playcount":2487,"description":"Nyceane/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Nyceane","full_link":"https://github.com/Nyceane/caffe"},{"name":"dishen12/caffe","artist":"caff, model, learn, communiti, berkeley","id":773,"playcount":2487,"description":"dishen12/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dishen12","full_link":"https://github.com/dishen12/caffe"},{"name":"ted7726/general-pooling","artist":"pool, learn, oper, caff, max","id":774,"playcount":3228,"description":"ted7726/general-pooling pool, learn, oper, caff, max  img align  left  src  http   pages ucsd edu  chl260 fig gpool jpg  width  300         Generalizing Pooling Functions in Convolutional Neural Networks  Mixed  Gated  and Tree  We seek to improve deep neural networks by generalizing the pooling operations that play a central role in current architectures  We pursue a careful exploration of approaches to allow pooling to learn and to adapt to complex and variable patterns  The two primary directions lie in  1  learning a pooling function via combining of max and average pooling  and  2  learning a pooling function in the form of a tree structured fusion of pooling filters that are themselves learned  In our experiments every generalized pooling operation we explore improves performance when used in place of average or max pooling  We experimentally demonstrate that the proposed pooling operations provide a boost in invariance properties relative to conventional pooling and set the state of the art on several widely adopted benchmark datasets  For detailed algorithm and experiment results please see our AISTATS 2016  paper  http   arxiv org abs 1509 08985         Demo   A quick demo of running the proposed pooling functions can be found at  models generaling pooling AlexNet example    In this example  we adopt AlexNet model and simply replace the first max pooling with the proposed tree pooling  2 leaf nodes and 1 internal node  and replace the second and third max pooling with gated max average pooling  1 gating mask each   After setting up the training and testing files  you can run the script  train caffenet sh  to start the training  Please also see  train val prototxt  file for the usage of the pooling layers and see  general pooling log  for the training process        Transplant  If you have different Caffe version than this repo and would like to try out the proposed pooling functions  you can go to  src caffe layers   and transplant the following code to your repo using the instructions on this Caffe  Wiki  https   github com BVLC caffe wiki Development  page to setup these layers    treepool max ave cpp  gated max average pooling    treepool max ave cu   treepool kernel 1layer cpp  2 level tree pooling    treepool kernel 1layer cu    treepool kernel 2layer cpp  3 level tree pooling     treepool kernel 2layer cu    Please cite the following paper if it helps your research        inproceedings lee2016generalizing        author    Lee  Chen Yu and Gallagher  Patrick and Tu  Zhuowen         booktitle    International Conference on Artificial Intelligence and Statistics  AISTATS          title    Generalizing Pooling Functions in Convolutional Neural Networks  Mixed  Gated  and Tree         year    2016              Acknowledgment   This code is based on Caffe with new implemented pooling layers        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year     2014          If you have any issues using the code please email me at chl260 ucsd edu ","software":"md","book":"ted7726","full_link":"https://github.com/ted7726/general-pooling"},{"name":"wjcskqygj2015/caffe","artist":"caff, model, learn, communiti, berkeley","id":775,"playcount":2487,"description":"wjcskqygj2015/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wjcskqygj2015","full_link":"https://github.com/wjcskqygj2015/caffe"},{"name":"tgisaturday/image-text-recognition","artist":"deep, learn, network, convolut, imag","id":776,"playcount":2629,"description":"tgisaturday/image-text-recognition deep, learn, network, convolut, imag   image text recognition  Region based Convolutional Neural Networks for Text Detection in Images  Written by   Taehoon Kim  jamesk1228 gmail com  Sogang University  Seoul  Republic of Korea  Objective  Detect digits from black   white images   Prerequsites  python3  tensorflow  scikit image  numpy  opencv python  Recommand using anaconda   How to   1  Clone this git repository  2  For pre trained MNIST Handwritten digit Convolutional Neural Network model      go to https   drive google com open id 0B7TzarHysU5fNXlwMF9Cb0RTV1U 3  Unzip pre trained model and place it under root git repository  4  Place your custom image in  images   5  To run the code in Jupyter Notebook  use main ipynb instead of main py  6  You can find out raw value and coordinates of labels in patent image from  labels image name label txt   Corresponding Paper  Taehoon Kim and Jihoon Yang  2017   Region based Convolutional Neural Networks for Text Label Detection in Patent Images                      pp  2010 2012   References   https   github com FraPochetti ImageTextRecognition  https   github com oliviersoares mnist  Cohen  G   Afshar  S   Tapson  J     van Schaik  A   2017   EMNIST  an extension of MNIST to handwritten letters  Retrieved from http   arxiv org abs 1702 05373  link is external   Christoph Riedl  Richard Zanibbi  Marti A  Hearst  Siyu Zhu  Michael Menietti  Jason Crusan  Ivan Metelsky  Karim R  Lakhani  Detecting figures and part labels in patents  competition based development of graphics recognition algorithms International Journal on Document Analysis and Recognition  IJDAR   Volume 19  Issue 2  pp  155 172  2016  Ross Girshick  Jeff Donahue  Trevor Darrell  Region Based Convolutional Networks for Accurate Object Detection and Segmentation  IEEE Transactions on Pattern Analysis and Machine Intelligence  Volume  38  Issue 1  pp  142 158  2015  Max Jaderberg  Karen Simonyan  Andrea Vedaldi  Andrew Zisserman  Reading Text in the Wild with Convolutional Neural Networks  International Journal of Computer Vision  Volume 116  Issue 1  pp  1 20  2016  Christian Szegedy  Wei Liu  Yangqing Jia  Pierre Sermanet  Scott Reed  Dragomir Anguelov  Dumitru Erhan  Vincent Vanhoucke  Andrew Rabinovich  Going Deeper with Convolutions  The IEEE Conference on Computer Vision and Pattern Recognition  CVPR   pp  1 9  2015  Xiang Zhang  Junbo Zhao  Yann LeCun  Character level Convolutional Networks for Text Classification  Advances in Neural Information Processing Systems 28  NIPS 2015   Nobuyuki Otsu   A threshold selection method from gray level histograms   IEEE Trans  Sys   Man   Cyber  9  1   pp  62 66  1979   ","software":"md","book":"tgisaturday","full_link":"https://github.com/tgisaturday/image-text-recognition"},{"name":"yuLiu24/CFN","artist":"caff, model, arxiv, year, fast","id":777,"playcount":2239,"description":"yuLiu24/CFN caff, model, arxiv, year, fast   Convolutional Fusion Networks  This is the code used in our paper  On the Exploration of Convolutional Fusion Networks for Visual Recognition  at  the 23rd International Conference on MultiMedia Modeling  MMM 2017   If you would like to refer to this work  please cite the corresponding paper       inproceedings Yu2017 CFN   author    Yu Liu and Yanming Guo and Michael S  Lew    booktitle    International Conference on MultiMedia Modeling  MMM     title    On the Exploration of Convolutional Fusion Networks for Visual Recognition    year    2017         You can easily use this code or enjoy our demo server      Training CIFAR    Data preprocessing  please follow the procedure in NIN and DSN    The training prototxt files are in   examples cifar   The plain CNN has 7 convolutional layers and one fully connected layer  The CFN counterpart adds two side branches and one fusion module based on a locally connected layer    The models get 8 27  and 30 68  error rates on CIAFR 10 and CIFAR 100      Training ImageNet   The training prototxt files are in   examples imagenet   The plain CNN has 10 convolutional layers and one fully connected layer  The CFN counterpart adds three side branches and one fusion module based on a locally connected layer    The model gets 41 96  top 1 error rate and 19 09  top 5 error rate on ImageNet 2012 validation set    Batch Norm   use global stats  is false at the training stage  but is true at the test stage       b Live Demo   b   http   goliath liacs nl      http   goliath liacs nl    This demo runs the CFN 11 model trained on ImageNet     Given one image  the system will recognize it and return its coarse categories  prob 1  and fine categories  prob 1       Acknowledgment   This code is based on Caffe  Thanks to the contributors of Caffe          article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014          If you encounter any issue when using our code  please let me know  Thank you      ","software":"md","book":"yuLiu24","full_link":"https://github.com/yuLiu24/CFN"},{"name":"HermannHesse/faster_rcnn_cplusplus","artist":"shell, make, aptget, build, object","id":778,"playcount":5511,"description":"HermannHesse/faster_rcnn_cplusplus shell, make, aptget, build, object   Faster R CNN C   Inference  The above code is an interface inference in c   against a  Faster R CNN  https   github com rbgirshick py faster rcnn  trained network   From the code developed by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research  for the project  py faster rcnn  https   github com rbgirshick py faster rcnn   some modules and files from the  py faster rcnn lib  and  py faster rcnn data scripts   folders are used directly       RPN module     py faster rcnn lib rpn     Needed to deploy the  region proposal network        NMS module     py faster rcnn lib nms     Needed to apply  non maximum suppression  step       Fast rcnn module     py faster rcnn lib fast rcnn     Contains auxiliary functions        py faster rcnn lib Makefile  and  py faster rcnn lib setup py     To compile NMS CUDA and Cython libraries        py faster rcnn data scripts fetch faster rcnn models sh     To download pre computed Faster R CNN detectors   This code is added as a submodule to the present project for convenience  It also uses their branch of the framework Caffe   caffe fast rcnn  https   github com rbgirshick caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83      FASTER RCNN  C   class has adapated  copy modify correct  some fuctions from the project  FasterRCNN Encapsulation Cplusplus  https   github com YihangLou FasterRCNN Encapsulation Cplusplus   Thanks so much to his SourceCode       Steps to use the code  First of all  clone this project with      recursive    flag     Shell git clone   recursive https   github com HermannHesse faster rcnn cplusplus git           Requeriments inherited from py faster rcnn  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html          Note    Caffe  must  be built with support for Python layers         make       In your Makefile config  make sure to have this line uncommented     WITH PYTHON LAYER    1       Unrelatedly  it s also recommended that you use CUDNN     USE CUDNN    1               You can download Ross Girshick  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference     2  Python packages you might not have   cython    python opencv    easydict   3  Build Caffe and pycaffe        Shell     cd  ROOT DIR py faster rcnn caffe fast rcnn        Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              4  Build the Cython modules        Shell     cd  ROOT DIR py faster rcnn lib      make          5  Download pre computed Faster R CNN detectors        Shell     cd  ROOT DIR py faster rcnn        data scripts fetch faster rcnn models sh                   Own requeriments  1  Set   ROOT DIR py faster rcnn caffe fast rcnn python   and   ROOT DIR py faster rcnn lib   into the enviroment variable  PYTHONPATH         Shell     export PYTHONPATH  ROOT DIR py faster rcnn caffe fast rcnn python   ROOT DIR py faster rcnn lib    PYTHONPATH           2  Compile the project with CMake        Shell     mkdir  ROOT DIR build      cd  ROOT DIR build      cmake        make     mv faster rcnn cplusplus             3  Run the demo        Shell     cd  ROOT DIR       faster rcnn cplusplus                  Popular issues       Issue 1     Shell  Unknown layer type  Python      Caffe has been probably compiled without PYTHON LAYER support  Uncomment the following line     make WITH PYTHON LAYER    1     in   ROOT DIR py faster rcnn caffe fast rcnn Makefile config  file and recompile it     Shell cd  ROOT DIR py faster rcnn caffe fast rcnn  make clean make  j8    make pycaffe           Issue 2     Shell fatal error  caffe proto caffe pb h  No such file or directory  include  caffe proto caffe pb h                                      compilation terminated       caffe pb h  is a header file generated by Google Protocol Buffer and it is missing for some reason  Let s create it     Shell cd  ROOT DIR py faster rcnn caffe fast rcnn  protoc src caffe proto caffe proto   cpp out   mkdir include caffe proto mv src caffe proto caffe pb h include caffe proto     Reference full discussion from  here  https   github com NVIDIA DIGITS issues 105         Issue 3  When the net is loading Caffe can t find rpn python layer     Shell ImportError  No module named rpn proposal layer     Add  lib   directory to  PYTHONPATH      Shell export PYTHONPATH  ROOT DIR py faster rcnn lib    PYTHONPATH             Issue 4  Python can t find gpu nms library     Shell from nms gpu nms import gpu nms ImportError  No module named gpu nms     Must compile libraries  gpu nms so  and  cpu nms so done by running the fourth step     Shell cd  ROOT DIR py faster rcnn lib  make           Issue 5     Shell  usr bin ld  cannot find  lopencv dep cudart  collect2  error  ld returned 1 exit status     There is a problem with the  CMakeCache txt  and the enviroment variable  CUDA USE STATIC CUDA RUNTIME   To solve this issue  set it  OFF  in  CMakeList txt       Shell   Add the following line to CMakeList txt and recompile set CUDA USE STATIC CUDA RUNTIME  OFF       or generate CMake files with     Shell cd  ROOT DIR build  cmake     D CUDA USE STATIC CUDA RUNTIME OFF     Reference full discussion from  here  https   github com opencv opencv issues 6542   ","software":"md","book":"HermannHesse","full_link":"https://github.com/HermannHesse/faster_rcnn_cplusplus"},{"name":"prlz77/ResNeXt.pytorch","artist":"resnext, cifar, imagenet, model, pretrain","id":779,"playcount":2662,"description":"prlz77/ResNeXt.pytorch resnext, cifar, imagenet, model, pretrain   ResNeXt pytorch Reproduces ResNet V3  Aggregated Residual Transformations for Deep Neural Networks  with pytorch      x  Trains on Cifar10 and Cifar100    x  Upload Cifar Training Curves    x  Upload Cifar Trained Models    x  Pytorch 4 0       Train Imagenet     Download    bash git clone https   github com prlz77 resnext pytorch cd resnext pytorch git checkout R4 0   R3 0 for backwards compatibility          Usage To train on Cifar 10 using 2 gpu      bash python train py   DATASETS cifar python cifar10  s   snapshots   log   logs   ngpu 2   learning rate 0 05  b 128     It should reach   3 65   on Cifar 10  and   17 77   on Cifar 100    After train phase  you can check saved model     Thanks to   AppleHolic  https   github com AppleHolic  we have now a test script     To test on Cifar 10 using 2 gpu     bash python test py   DATASETS cifar python cifar10   ngpu 2   load   snapshots model pytorch   test bs 128           Configurations From  the original paper  https   arxiv org pdf 1611 05431 pdf      cardinality    base width    parameters    Error cifar10       error cifar100    default                                                                                                       8             64           34 4M           3 65               17 77            x             16            64           68 1M           3 58               17 31                      Update      widen factor   has been disentangled from   base width   because it was confusing  Now widen factor is set to consant 4  and   base width   is the same as in the original paper      Trained models and curves  Link  https   mega nz  F wbJXDS6b YN3hCDi1tT3SdNFrLPm7mA  to trained models corresponding to the following curves     Update    several commits have been pushed after training the models in Mega  so it is recommended to revert to   e10c37d8cf7a958048bc0f58cd86c3e8ac4e707d      CIFAR 10  https   github com prlz77 ResNeXt pytorch blob master cifar10 cifar 10 jpg    CIFAR 100  https   github com prlz77 ResNeXt pytorch blob master cifar100 cifar 100 jpg      Other frameworks    torch   facebookresearch   https   github com facebookresearch ResNeXt    Original  Cifar and Imagenet    caffe   terrychenism   https   github com terrychenism ResNeXt   Imagenet    MXNet   dmlc   https   github com dmlc mxnet tree master example image classification imagenet 1k   Imagenet     Cite      article xie2016aggregated    title  Aggregated residual transformations for deep neural networks     author  Xie  Saining and Girshick  Ross and Doll   a r  Piotr and Tu  Zhuowen and He  Kaiming     journal  arXiv preprint arXiv 1611 05431     year  2016        ","software":"md","book":"prlz77","full_link":"https://github.com/prlz77/ResNeXt.pytorch"},{"name":"zhongyx12/Faster-RCNN-Refinement","artist":"train, rcnn, set, faster, model","id":780,"playcount":2345,"description":"zhongyx12/Faster-RCNN-Refinement train, rcnn, set, faster, model   Faster RCNN with PyTorch This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py      License  MIT license  MIT  ","software":"md","book":"zhongyx12","full_link":"https://github.com/zhongyx12/Faster-RCNN-Refinement"},{"name":"rickyHong/py-fater-rcnn-ms","artist":"train, rcnn, faster, shell, network","id":781,"playcount":8855,"description":"rickyHong/py-fater-rcnn-ms train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/py-fater-rcnn-ms"},{"name":"rainsoulsrx/caffe_srx","artist":"caff, model, learn, communiti, berkeley","id":782,"playcount":2453,"description":"rainsoulsrx/caffe_srx caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions     Intel optimized branch  https   github com BVLC caffe tree intel  for CPU  in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rainsoulsrx","full_link":"https://github.com/rainsoulsrx/caffe_srx"},{"name":"xw-hu/Reading-List","artist":"arxiv, network, preprint, detect, object","id":783,"playcount":25258,"description":"xw-hu/Reading-List arxiv, network, preprint, detect, object   Reading List Reading list on deep learning            Basic Network and Techniques     AlexNet     MLA Krizhevsky  Alex  Ilya Sutskever  and Geoffrey E  Hinton   Imagenet classification with deep convolutional neural networks   Advances in neural information processing systems  2012   star  star  star  star  star      Dropout    Srivastava  Nitish  et al   Dropout  a simple way to prevent neural networks from overfitting   Journal of Machine Learning Research 15 1  2014   1929 1958   star  star  star  star      VGG    Simonyan  Karen  and Andrew Zisserman   Very deep convolutional networks for large scale image recognition   arXiv preprint arXiv 1409 1556  2014    star  star  star  star  star      GoogLeNet    Szegedy  Christian  et al   Going deeper with convolutions   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015   star  star  star  star  star      Batch Normalization    Ioffe  Sergey  and Christian Szegedy   Batch normalization  Accelerating deep network training by reducing internal covariate shift   arXiv preprint arXiv 1502 03167  2015    Inception v2   star  star  star  star  star      PReLU   msra Initilization    He  Kaiming  et al   Delving deep into rectifiers  Surpassing human level performance on imagenet classification   Proceedings of the IEEE international conference on computer vision  2015   star  star  star  star  star      InceptionV3    Szegedy  Christian  et al   Rethinking the inception architecture for computer vision   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star      ResNet    He  Kaiming  et al   Deep residual learning for image recognition   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star  star      Identity ResNet    He  Kaiming  et al   Identity mappings in deep residual networks   European Conference on Computer Vision  Springer International Publishing  2016   star  star  star  star  star      CReLU    Shang  Wenling  et al   Understanding and improving convolutional neural networks via concatenated rectified linear units   Proceedings of the International Conference on Machine Learning  ICML   2016    star  star  star      InceptionV4   Inception ResNet    Szegedy  Christian  et al   Inception v4  inception resnet and the impact of residual connections on learning   arXiv preprint arXiv 1602 07261  2016    star  star  star  star      ResNeXt    Xie  Saining  et al   Aggregated residual transformations for deep neural networks   arXiv preprint arXiv 1611 05431  2016    star  star  star  star      Batch Renormalization    Ioffe  Sergey   Batch Renormalization  Towards Reducing Minibatch Dependence in Batch Normalized Models   arXiv preprint arXiv 1702 03275  2017    star  star  star  star      Xception    Chollet  Fran ois   Xception  Deep Learning with Depthwise Separable Convolutions   arXiv preprint arXiv 1610 02357  2016    star  star  star      MobileNets    Howard  Andrew G   et al   Mobilenets  Efficient convolutional neural networks for mobile vision applications   arXiv preprint arXiv 1704 04861  2017     star  star  star      DenseNet    Huang  Gao  et al   Densely connected convolutional networks   arXiv preprint arXiv 1608 06993  2016    star  star  star  star  star      PolyNet    Zhang  Xingcheng  et al   Polynet  A pursuit of structural diversity in very deep networks   arXiv preprint arXiv 1611 05725  2016    Slides  http   image net org challenges talks 2016 polynet talk pdf   star  star  star  star      IRNN    Le  Quoc V   Navdeep Jaitly  and Geoffrey E  Hinton   A simple way to initialize recurrent networks of rectified linear units   arXiv preprint arXiv 1504 00941  2015    star  star  star      ReNet    Visin  Francesco  et al   ReNet  A recurrent neural network based alternative to convolutional networks   arXiv preprint arXiv 1505 00393  2015    star  star  star  star      Non local Neural Network   Wang  Xiaolong  Ross Girshick  Abhinav Gupta  and Kaiming He   Non local Neural Networks   arXiv preprint arXiv 1711 07971  2017    star  star  star  star        Object Detection      Overfeat    Sermanet  Pierre  et al   Overfeat  Integrated recognition  localization and detection using convolutional networks   arXiv preprint arXiv 1312 6229  2013    star  star  star  star      RCNN    Girshick  Ross  et al   Rich feature hierarchies for accurate object detection and semantic segmentation   Proceedings of the IEEE conference on computer vision and pattern recognition  2014   star  star  star  star  star      SPP    He  Kaiming  et al   Spatial pyramid pooling in deep convolutional networks for visual recognition   European Conference on Computer Vision  Springer International Publishing  2014   star  star  star  star  star      Fast RCNN    Girshick  Ross   Fast r cnn   Proceedings of the IEEE International Conference on Computer Vision  2015   star  star  star  star  star      Faster RCNN    Ren  Shaoqing  et al   Faster r cnn  Towards real time object detection with region proposal networks   Advances in neural information processing systems  2015   star  star  star  star  star      R CNN minus R    Lenc  Karel  and Andrea Vedaldi   R cnn minus r   arXiv preprint arXiv 1506 06981  2015    star      End to end people detection in crowded scenes    Stewart  Russell  Mykhaylo Andriluka  and Andrew Y  Ng   End to end people detection in crowded scenes   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star      YOLO    Redmon  Joseph  et al   You only look once  Unified  real time object detection   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star  star      ION    Bell  Sean  et al   Inside outside net  Detecting objects in context with skip pooling and recurrent neural networks   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star      MultiPath    Zagoruyko  Sergey  et al   A multipath network for object detection   arXiv preprint arXiv 1604 02135  2016    star  star  star      SSD    Liu  Wei  et al   SSD  Single shot multibox detector   European Conference on Computer Vision  Springer International Publishing  2016   star  star  star  star  star      OHEM    Shrivastava  Abhinav  Abhinav Gupta  and Ross Girshick   Training region based object detectors with online hard example mining   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star  star      HyperNet    Kong  Tao  et al   HyperNet  towards accurate region proposal generation and joint object detection   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star      SDP    Yang  Fan  Wongun Choi  and Yuanqing Lin   Exploit all the layers  Fast and accurate cnn object detector with scale dependent pooling and cascaded rejection classifiers   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star      SubCNN    Xiang  Yu  et al   Subcategory aware convolutional neural networks for object proposals and detection   Applications of Computer Vision  WACV   2017 IEEE Winter Conference on  IEEE  2017   star  star  star      MSCNN    Cai  Zhaowei  et al   A unified multi scale deep convolutional neural network for fast object detection   European Conference on Computer Vision  Springer International Publishing  2016   star  star  star  star      RFCN    Li  Yi  Kaiming He  and Jian Sun   R fcn  Object detection via region based fully convolutional networks   Advances in Neural Information Processing Systems  2016   star  star  star  star  star      Shallow Network    Ashraf  Khalid  et al   Shallow networks for high accuracy road object detection   arXiv preprint arXiv 1606 01561  2016    star  star      Is Faster R CNN Doing Well for Pedestrian Detection    Zhang  Liliang  et al   Is Faster R CNN Doing Well for Pedestrian Detection    European Conference on Computer Vision  Springer International Publishing  2016   star  star      GCNN    Najibi  Mahyar  Mohammad Rastegari  and Larry S  Davis   G cnn  an iterative grid based object detector   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star      LocNet    Gidaris  Spyros  and Nikos Komodakis   Locnet  Improving localization accuracy for object detection   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star      PVANet    Kim  Kye Hyeon  et al   PVANET  Deep but Lightweight Neural Networks for Real time Object Detection   arXiv preprint arXiv 1608 08021  2016    star  star  star  star      FPN    Lin  Tsung Yi  et al   Feature Pyramid Networks for Object Detection   arXiv preprint arXiv 1612 03144  2016    star  star  star  star  star      TDM    Shrivastava  Abhinav  et al   Beyond Skip Connections  Top Down Modulation for Object Detection   arXiv preprint arXiv 1612 06851  2016    star  star  star  star      YOLO9000    Redmon  Joseph  and Ali Farhadi   YOLO9000  Better  Faster  Stronger   arXiv preprint arXiv 1612 08242  2016    star  star  star  star      Speed accuracy trade offs for modern convolutional object detectors    Huang  Jonathan  et al   Speed accuracy trade offs for modern convolutional object detectors   arXiv preprint arXiv 1611 10012  2016    star  star      GDB Net    Zeng  Xingyu  et al   Crafting GBD Net for Object Detection   arXiv preprint arXiv 1610 02579  2016    Slides  http   image net org challenges talks 2016 GBD Net pdf   star  star  star  star      WRInception    Lee  Youngwan  et al   Wide Residual Inception Networks for Real time Object Detection   arXiv preprint arXiv 1702 01243  2017    star      DSSD    Fu  Cheng Yang  et al   DSSD  Deconvolutional Single Shot Detector   arXiv preprint arXiv 1701 06659  2017    star  star  star  star      A Fast RCNN  Hard positive generation     Wang  Xiaolong  Abhinav Shrivastava  and Abhinav Gupta   A fast rcnn  Hard positive generation via adversary for object detection   arXiv preprint arXiv 1704 03414  2017    star  star  star   code  https   github com xiaolonw adversarial frcnn      RRC    Ren  Jimmy  et al   Accurate Single Stage Detector Using Recurrent Rolling Convolution   arXiv preprint arXiv 1704 05776  2017    star  star  star      Deformable ConvNets    Dai  Jifeng  et al   Deformable Convolutional Networks   arXiv preprint arXiv 1703 06211  2017    star  star  star  star      RSSD    Jeong  Jisoo  Hyojin Park  and Nojun Kwak   Enhancement of SSD by concatenating feature maps for object detection   arXiv preprint arXiv 1705 09587  2017    star  star      Perceptual GAN    Li  Jianan  et al   Perceptual Generative Adversarial Networks for Small Object Detection   arXiv preprint arXiv 1706 05274  2017    star  star  star      RetinaNet  Focal Loss     Tsung Yi Lin  Priya Goyal  Ross B  Girshick  Kaiming He  and Piotr Doll r   Focal Loss for Dense Object Detection   In ICCV  2017   star  star  star  star  star      YOLOv3    Redmon  Joseph  and Ali Farhadi   YOLOv3  An Incremental Improvement   arXiv preprint arXiv 1804 02767  2018    star  star  star       Semantic Segmentation      FCN    Long  Jonathan  Evan Shelhamer  and Trevor Darrell   Fully convolutional networks for semantic segmentation   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015   star  star  star  star  star      Deconvolution Network for Segmentation    Noh  Hyeonwoo  Seunghoon Hong  and Bohyung Han   Learning deconvolution network for semantic segmentation   Proceedings of the IEEE International Conference on Computer Vision  2015   star  star  star      U Net    Ronneberger  Olaf  Philipp Fischer  and Thomas Brox   U net  Convolutional networks for biomedical image segmentation   International Conference on Medical image computing and computer assisted intervention  Springer  Cham  2015   star  star  star  star  star      CRF as RNN    Zheng  Shuai  et al   Conditional random fields as recurrent neural networks   In ICCV  2015   star  star  star  star      MNC    Dai  Jifeng  Kaiming He  and Jian Sun   Instance aware semantic segmentation via multi task network cascades   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star  star      InstanceFCN    Dai  Jifeng  et al   Instance sensitive fully convolutional networks   arXiv preprint arXiv 1603 08678  2016    star  star  star  star      FCIS    Li  Yi  et al   Fully convolutional instance aware semantic segmentation   arXiv preprint arXiv 1611 07709  2016    star  star  star  star  star      PSPNet    Zhao  Hengshuang  et al   Pyramid scene parsing network   arXiv preprint arXiv 1612 01105  2016    star  star  star      Deeplab v1v2    Chen  Liang Chieh  et al   Deeplab  Semantic image segmentation with deep convolutional nets  atrous convolution  and fully connected crfs   IEEE transactions on pattern analysis and machine intelligence 40 4  2018   834 848   star  star  star  star  star      Deeplab v3    Chen  Liang Chieh  et al   Rethinking atrous convolution for semantic image segmentation   arXiv preprint arXiv 1706 05587  2017    star  star  star      Deeplab v3     Chen  Liang Chieh  et al   Encoder decoder with atrous separable convolution for semantic image segmentation   arXiv preprint arXiv 1802 02611  2018    star  star  star      Mask R CNN    He  Kaiming  Georgia Gkioxari  Piotr Doll r  and Ross Girshick   Mask r cnn   In ICCV  2017   star  star  star  star  star      Learning to Segment Every Thing  Mask X R CNN     Hu  Ronghang  Piotr Doll r  Kaiming He  Trevor Darrell  and Ross Girshick   Learning to Segment Every Thing   arXiv preprint arXiv 1711 10370  2017    star  star  star  star  star      PANet    Liu  Shu  et al   Path aggregation network for instance segmentation   arXiv preprint arXiv 1803 01534  2018    star  star  star  star      Panoptic Segmentation    Kirillov  A   He  K   Girshick  R   Rother  C     Doll r  P   2018   Panoptic Segmentation  arXiv preprint arXiv 1801 00868   star  star  star  star       Weakly Supervised      Weakly Supervised Object Localization with Multi fold Multiple Instance Learning    Cinbis  Ramazan Gokberk  Jakob Verbeek  and Cordelia Schmid   Weakly supervised object localization with multi fold multiple instance learning   IEEE transactions on pattern analysis and machine intelligence 39 1  2017   189 203   star  star  star      Weakly Supervised Deep Detection Networks    Bilen  Hakan  and Andrea Vedaldi   Weakly supervised deep detection networks   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star      Weakly  and Semi Supervised Learning    Papandreou  George  et al   Weakly and semi supervised learning of a deep convolutional network for semantic image segmentation   Proceedings of the IEEE International Conference on Computer Vision  2015   star  star  star  star      Image level to pixel level labeling    Pinheiro  Pedro O   and Ronan Collobert   From image level to pixel level labeling with convolutional networks   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2015      Weakly Supervised Localization using Deep Feature Maps    Bency  Archith J   et al   Weakly supervised localization using deep feature maps   arXiv preprint arXiv 1603 00489  2016       WELDON    Durand  Thibaut  Nicolas Thome  and Matthieu Cord   Weldon  Weakly supervised learning of deep convolutional neural networks   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016      WILDCAT    Durand  Thibaut  et al   WILDCAT  Weakly Supervised Learning of Deep ConvNets for Image Classification  Pointwise Localization and Segmentation   The IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017      SGDL    Lai  Baisheng  and Xiaojin Gong   Saliency guided dictionary learning for weakly supervised image parsing   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016      Unsupervised     Learning Features by Watching Objects Move    Pathak  Deepak  et al   Learning Features by Watching Objects Move   arXiv preprint arXiv 1612 06370  2016    star  star  star  star  star      SimGAN    Shrivastava  Ashish  et al   Learning from simulated and unsupervised images through adversarial training   arXiv preprint arXiv 1612 07828  2016    star  star  star      OPN    Lee  Hsin Ying  et al   Unsupervised Representation Learning by Sorting Sequences   arXiv preprint arXiv 1708 01246  2017    star  star  star      Transitive Invariance for Self supervised Visual Representation Learning    Wang  Xiaolong  et al   Transitive Invariance for Self supervised Visual Representation Learning  Proceedings of the IEEE International Conference on Computer Vision  2017   star  star  star   code  http   www cs cmu edu  xiaolonw publication html      Omni Supervised Learning    Radosavovic  I   Doll r  P   Girshick  R   Gkioxari  G     He  K  Data Distillation  Towards Omni Supervised Learning  In CVPR  2018   star  star  star  star  star      Saliency     DHSNet    Liu  Nian  and Junwei Han   Dhsnet  Deep hierarchical saliency network for salient object detection   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star      RFCN    Wang  Linzhao  et al   Saliency detection with recurrent fully convolutional networks   European Conference on Computer Vision  Springer International Publishing  2016   star  star  star  star      RACDNN    Kuen  Jason  Zhenhua Wang  and Gang Wang   Recurrent attentional networks for saliency detection   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2016   star  star  star  star      NLDF    Luo  Zhiming  et al   Non Local Deep Features for Salient Object Detection   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2017   star  star  star      DSS    Hou  Qibin  et al   Deeply supervised salient object detection with short connections   arXiv preprint arXiv 1611 04849  2016    star  star  star  star      MSRNet    Li  Guanbin  et al   Instance Level Salient Object Segmentation   arXiv preprint arXiv 1704 03604  2017    star  star  star  star      Amulet    Zhang  Pingping  et al   Amulet  Aggregating Multi level Convolutional Features for Salient Object Detection   arXiv preprint arXiv 1708 02001  2017    star  star  star  star      UCF    Zhang  Pingping  et al   Learning Uncertain Convolutional Features for Accurate Saliency Detection   arXiv preprint arXiv 1708 02031  2017    star  star  star  star      SRM    Wang  Tiantian  et al   A Stagewise Refinement Model for Detecting Salient Objects in Images   In ICCV  2017   star  star  star  star      S4Net    Fan  Ruochen  et al     S  4  Net  Single Stage Salient Instance Segmentation   arXiv preprint arXiv 1711 07618  2017    star  star  star  star  star      Deep Edge Aware Saliency Detection    Zhang  Jing  Yuchao Dai  Fatih Porikli  and Mingyi He   Deep Edge Aware Saliency Detection   arXiv preprint arXiv 1708 04366  2017    star  star  star      Bi Directional Message Passing Model    Zhang  Lu  et al   A Bi Directional Message Passing Model for Salient Object Detection   In CVPR  2018   star  star  star      PiCANet    Liu  Nian  Junwei Han  and Ming Hsuan Yang   PiCANet  Learning Pixel wise Contextual Attention for Saliency Detection   In CVPR  2018   star  star  star  star  star      Detect Globally  Refine Locally  A Novel Approach to Saliency Detection    Wang  Tiantian  et al   Detect Globally  Refine Locally  A Novel Approach to Saliency Detection   In CVPR  2018   star  star  star      PAGRN    Zhang  Xiaoning  et al   Progressive Attention Guided Recurrent Network for Salient Object Detection   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2018   star  star  star      Reverse Attention for Salient Object Detection    Chen  Shuhan  et al   Reverse Attention for Salient Object Detection   In ECCV  2018   star  star      Attention     SRN    Zhu  Feng  et al   Learning Spatial Regularization with Image level Supervisions for Multi label Image Classification   arXiv preprint arXiv 1702 05891  2017    star  star  star  star      Zoom in Net    Wang  Zhe  et al   Zoom in Net  Deep Mining Lesions for Diabetic Retinopathy Detection   arXiv preprint arXiv 1706 04372  2017    star  star  star  star      Multi context attention    Chu  Xiao  et al   Multi context attention for human pose estimation   arXiv preprint arXiv 1702 07432  2017    star  star  star      Shadow Detection Removal     DeshadowNet    Qu  Liangqiong  et al   DeshadowNet  A Multi context Embedding Deep Network for Shadow Removal   Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  2017   star  star  star      scGAN    Nguyen  Vu  et al   Shadow Detection with Conditional Generative Adversarial Networks   In ICCV  2017   star  star      Patched CNN    Hosseinzadeh  Sepideh  Moein Shakeri  and Hong Zhang   Fast Shadow Detection from a Single Image Using a Patched Convolutional Neural Network   arXiv preprint arXiv 1709 09283  2017    star      ST CGAN    Wang  Jifeng  et al   Stacked Conditional Generative Adversarial Networks for Jointly Learning Shadow Detection and Shadow Removal   arXiv preprint arXiv 1712 02478  2017    star  star   ISTD dataset      Image Restoration     DRRN    Tai  Ying  Jian Yang  and Xiaoming Liu   Image super resolution via deep recursive residual network   The IEEE Conference on Computer Vision and Pattern Recognition  CVPR   2017   star  star  star  star      DID MDN    Zhang  He  and Vishal M  Patel   Density aware Single Image De raining using a Multi stream Dense Network   arXiv preprint arXiv 1802 07412  2018    star  star      IDN    Hui  Zheng  Xiumei Wang  and Xinbo Gao   Fast and Accurate Single Image Super Resolution via Information Distillation Network   In CVPR  2018   star  star  star      SFT GAN    Wang  X   Yu  K   Dong  C     Loy  C  C   2018   Recovering realistic texture in image super resolution by deep spatial feature transform  In CVPR  2018   star  star  star      Deep Multi scale Convolutional Neural Network for Dynamic Scene Deblurring   Nah  Seungjun  Tae Hyun Kim  and Kyoung Mu Lee   Deep multi scale convolutional neural network for dynamic scene deblurring   In CVPR  2017   star  star  star      Enhanced Deep Residual Networks for Single Image Super Resolution    Lim  Bee  et al   Enhanced deep residual networks for single image super resolution   The CVPR workshops  2017   star      AGAN for Raindrop Removal    Qian  Rui  et al   Attentive Generative Adversarial Network for Raindrop Removal from A Single Image   In CVPR  2018   star  star  star  star  star       Image Synthesis     Let there be Color     Iizuka  Satoshi  Edgar Simo Serra  and Hiroshi Ishikawa   Let there be color   joint end to end learning of global and local image priors for automatic image colorization with simultaneous classification   ACM Transactions on Graphics  TOG  35 4  2016   110   star  star  star  star  star      Colorful Image Colorization    Zhang  Richard  Phillip Isola  and Alexei A  Efros   Colorful image colorization   European Conference on Computer Vision  Springer  Cham  2016   star  star  star  star      Neural Style    Gatys  Leon A   Alexander S  Ecker  and Matthias Bethge   A neural algorithm of artistic style   arXiv preprint arXiv 1508 06576  2015    star  star  star  star  star      Texture Synthesis    Gatys  Leon  Alexander S  Ecker  and Matthias Bethge   Texture synthesis using convolutional neural networks   Advances in Neural Information Processing Systems  2015   star  star  star  star      Semantic Annotation Artwork    Champandard  Alex J   Semantic style transfer and turning two bit doodles into fine artworks   arXiv preprint arXiv 1603 01768  2016    star  star  star      MRC CNN Image Synthesis    Li  Chuan  and Michael Wand   Combining markov random fields and convolutional neural networks for image synthesis   In CVPR  2016   star  star  star  star      More Experiments on Neural Style    Novak  Roman  and Yaroslav Nikulin   Improving the neural algorithm of artistic style   arXiv preprint arXiv 1605 04603  2016    star  star      Deep Photo Style Transfer    Luan  Fujun  et al   Deep photo style transfer   In CVPR  2017   star  star  star  star  star      Traditional Method     Rolling Guidance Filter    Zhang  Q   Shen  X   Xu  L     Jia  J  Rolling guidance filter  In ECCV  2018   star  star  star  star  star      Talk     G RMI    Google   Object Detection   slides  http   image net org challenges talks 2016 GRMI COCO slidedeck pdf      2017 CVPR Tutorial     video and slides  http   deeplearning csail mit edu       1st ImageNet and COCO Visual Recognition Challenges Joint Workshop    2015   link  http   image net org challenges ilsvrc mscoco2015       2nd ImageNet and COCO Visual Recognition Challenges Joint Workshop    2016   link  http   image net org challenges ilsvrc coco2016    ","software":"md","book":"xw-hu","full_link":"https://github.com/xw-hu/Reading-List"},{"name":"nakosung/caffe","artist":"caff, learn, model, deep, layer","id":784,"playcount":2466,"description":"nakosung/caffe caff, learn, model, deep, layer   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2013 and CUDA 7 5  Once the requirements are satisfied  run these commands     git clone git github com MSRDL caffe git cd caffe git clone git github com MSRDL wincaffe 3rdparty git 3rdparty      Download  cuDNN v3   from nVidia website  https   developer nvidia com cudnn   Then run    scripts installCuDNN ps1  downloadedZipFile  in PowerShell where   downloadedZipFile  is the path to your downloaded cuDNN file  Example     scripts installCuDNN ps1   Downloads cudnn 7 0 win x64 v3 0 prod zip   Now  you should be able to build  caffe sln       Development      Common issues when pulling new commits from BVLC s branch   Remove  src caffe proto caffe pb h  file before compiling so that new the new file can be regenerated    If linking fails  it s likely that there are new  cpp  files that need to be added to the  caffelib  project      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"nakosung","full_link":"https://github.com/nakosung/caffe"},{"name":"neo164/ML","artist":"caff, learn, model, framework, vision","id":785,"playcount":2641,"description":"neo164/ML caff, learn, model, framework, vision   Caffe Rpi This is a fork for Caffe that runs on Raspberry Pi  To run a demo that classifies images continuously  do the following    On one terminal  type    sh cont  classifiy  squeezenet sh   On another terminal  type    python python cont  record py  and the classification would work in realtime  D   Make sure you have opencv in your python dependency as well has compiled the project  I have made some patches so the compilation should just work  if I missed any setup steps here or if you run into any issue  please let me know     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"neo164","full_link":"https://github.com/neo164/ML"},{"name":"NEWPLAN/nvcaffe","artist":"caff, multigpu, bvlc, convolut, nvidia","id":786,"playcount":2644,"description":"NEWPLAN/nvcaffe caff, multigpu, bvlc, convolut, nvidia   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors     NVCaffe  NVIDIA Caffe   NVIDIA Corporation  copy 2017  http   nvidia com   is an NVIDIA maintained fork of BVLC Caffe tuned for NVIDIA GPUs  particularly in multi GPU configurations  Here are the major features      16 bit  half  floating point train and inference support        Mixed precision support    It allows to store and or compute data in either  64  32 or 16 bit formats  Precision can be defined for every layer  forward and  backward passes might be different too   or it can be set for the whole Net      Layer wise Adaptive Rate Control  LARC  and adaptive global gradient scaler   for better  accuracy  especially in 16 bit training      Integration with   cuDNN  https   developer nvidia com cudnn  v7        Automatic selection of the best cuDNN convolution algorithm        Integration with v2 2 of  NCCL library  https   github com NVIDIA nccl     for improved multi GPU scaling      Optimized GPU memory management   for data and parameters storage  I O buffers  and workspace for convolutional layers      Parallel data parser  transformer and image reader   for improved I O performance      Parallel back propagation and gradient reduction   on multi GPU systems      Fast solvers implementation with fused CUDA kernels for weights and history update        Multi GPU test phase   for even memory load across multiple GPUs      Backward compatibility with BVLC Caffe and NVCaffe 0 15 and higher        Extended set of optimized models    including 16 bit floating point examples        License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            Useful notes  Libturbojpeg library is used since 0 16 5  It has a packaging bug  Please execute the following  required for Makefile  optional for CMake       sudo apt get install libturbojpeg sudo ln  s  usr lib x86 64 linux gnu libturbojpeg so 0 1 0  usr lib x86 64 linux gnu libturbojpeg so    ","software":"md","book":"NEWPLAN","full_link":"https://github.com/NEWPLAN/nvcaffe"},{"name":"mitmul/chainer-faster-rcnn","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":787,"playcount":3667,"description":"mitmul/chainer-faster-rcnn “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Faster R CNN      This repo has been deprecated   Here  https   github com pfnet chainercv  is the complete codes for training Faster RCNN on your data and using the pre trained Faster RCNN model for new data   ChainerCV  https   github com pfnet chainercv     This is an experimental implementation of Faster R CNN in Chainer based on Ross Girshick s work   py faster rcnn codes  https   github com rbgirshick py faster rcnn       Requirement  Using anaconda is strongly recommended     Python 2 7 6   3 4 3   3 5 1        Chainer  https   github com pfnet chainer  1 22 0      NumPy 1 9  1 10  1 11     Cython 0 25      OpenCV 2 9   3 1       Installation of dependencies      pip install numpy pip install cython pip install chainer pip install chainercv   for python3 conda install  c https   conda binstar org menpo opencv3   for python2 conda install opencv          For Windows users  There s a known problem in cpu nms pyx  But a workaround has been posted  here  https   github com mitmul chainer faster rcnn issues 1   and see also  the issue posted to the original py faster rcnn  https   github com rbgirshick py faster rcnn issues 36        Setup      1   Build extensions      python setup py build ext  i         Inference      1   Download pre trained model      if      d data    then mkdir data  fi curl https   dl dropboxusercontent com u 2498135 faster rcnn VGG16 faster rcnn final model dl 1  o data VGG16 faster rcnn final model        NOTE    The model definition in  faster rcnn py  has been changed  so if you already have the older pre trained model file  please download it again to replace the older one with the new one       2   Use forward py      curl  O http   vision cs utexas edu voc VOC2007 test JPEGImages 004545 jpg python forward py   img fn 004545 jpg   gpu 0         gpu 0  turns on GPU  When you turn off GPU  use    gpu  1  or remove    gpu  option       https   raw githubusercontent com wiki mitmul chainer faster rcnn images result png        Layers  Summarization of Faster R CNN layers used during inference        RPN  The region proposal layer  RPN  is consisted of  AnchorTargetLayer  and  ProposalLayer   RPN takes feature maps from trunk network like VGG 16  and performs 3x3 convolution to it  Then  it applies two independent 1x1 convolutions to the output of the first 3x3 convolution  Resulting outputs are  rpn cls score  and  rpn bbox pred      The shape of  rpn cls score  is   N  2   n anchors  14  14   because each pixel on the feature map has  n anchors  bboxes and each bbox should have 2 values that mean object background    The shape of  rpn bbox pred  is   N  4   n anchors  14  14   because each pixel on the feature map has  n anchors  bboxes  and each bbox is represented with 4 values that mean left top  x  and  y    width  and  height       Training      1   Make sure  chainercv  has been installed   ChainerCV  https   github com pfnet chainercv  is a utility library enables Chainer to treat various datasets easily  It also provides some transformation utility for data augmentation  and includes some standard algorithms for some comptuer vision tasks  Check the repo to know details  Here I use   VOCDetectionDataset   http   chainercv readthedocs io en latest reference datasets html vocdetectiondataset  of ChainerCV  Anyway  before starting training of FasterRCNN  please install ChainerCV via pip       pip install chainercv          2   Start training      python train rpn py         Faster R CNN Architecture    Note that it is a visualization of the workflow DURING INFERENCE        https   raw githubusercontent com wiki mitmul chainer faster rcnn images Faster 20R CNN png  ","software":"md","book":"mitmul","full_link":"https://github.com/mitmul/chainer-faster-rcnn"},{"name":"douhaoexia/caffe_anaconda","artist":"caff, model, learn, communiti, berkeley","id":788,"playcount":2539,"description":"douhaoexia/caffe_anaconda caff, model, learn, communiti, berkeley   Changed by Dou Hao  Below is the original README    Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"douhaoexia","full_link":"https://github.com/douhaoexia/caffe_anaconda"},{"name":"BVLC/caffe","artist":"caff, model, learn, communiti, berkeley","id":789,"playcount":2487,"description":"BVLC/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"BVLC","full_link":"https://github.com/BVLC/caffe"},{"name":"tony-ch/caffe_ade20k","artist":"caff, model, learn, communiti, berkeley","id":790,"playcount":2625,"description":"tony-ch/caffe_ade20k caff, model, learn, communiti, berkeley   Caffe ADE20K  Caffe    ADE20K              VGG ResNet                    Makefile     Caffe                        examples ade20k        Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"tony-ch","full_link":"https://github.com/tony-ch/caffe_ade20k"},{"name":"LiJianfei06/caffe-master-ljf","artist":"caff, model, learn, communiti, berkeley","id":791,"playcount":2581,"description":"LiJianfei06/caffe-master-ljf caff, model, learn, communiti, berkeley   Caffe   add ConvolutionDepthwise  ShuffleChannel  add some annotation for code of Chinese language      Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"LiJianfei06","full_link":"https://github.com/LiJianfei06/caffe-master-ljf"},{"name":"aqeelanwar/Cars_detection","artist":"train, rcnn, faster, shell, network","id":792,"playcount":8865,"description":"aqeelanwar/Cars_detection train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"aqeelanwar","full_link":"https://github.com/aqeelanwar/Cars_detection"},{"name":"tangzhenyu/ObjectDetection-Recognition_DL","artist":"object, detect, propos, cvpr, eccv","id":793,"playcount":19384,"description":"tangzhenyu/ObjectDetection-Recognition_DL object, detect, propos, cvpr, eccv   ObjectDetection Recognition object detection  object recognition  deep learning     Table of Contents    Papers   papers       Typical   Typical       2D   2D       3D   3d       Autonomous Driving   autonomous driving       Videos   Videos       Evaluation   Evaluation       Assembly with others   assembly with others       Datasets   datasets       Papers       Typical     FastR CNN  https   c1 staticflickr com 1 715 32316133964 046a1c0f14 c jpg    R FCN   Code   https   github com daijifeng001 r fcn   PyCode   https   github com Orpine py R FCN      Jifeng Dai  Yi Li  Kaiming He  Jian Sun   R FCN  Object Detection via Region based Fully Convolutional Networks  https   arxiv org pdf 1605 06409 pdf   NIPS  2016    SSD   Code   https   github com weiliu89 caffe tree ssd      Wei Liu  Dragomir Anguelov  Dumitru Erhan  Christian Szegedy  Scott Reed  Cheng Yang Fu  Alexander C  Berg   SSD  Single Shot MultiBox Detector  https   arxiv org pdf 1512 02325v2 pdf   ECCV  2016    YOLO   Code   http   pjreddie com darknet yolo       Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   You Only Look Once  Unified  Real Time Object Detection  http   pjreddie com media files papers yolo pdf   ECCV  2016    Faster R CNN   Code   https   github com ShaoqingRen faster rcnn    PyCode    https   github com rbgirshick py faster rcnn      Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  https   arxiv org pdf 1506 01497 pdf   NIPS  2015    Fast R CNN   Code   https   github com rbgirshick fast rcnn      Ross Girshick   Fast R CNN  https   arxiv org pdf 1504 08083 pdf   ICCV  2015    SPP   Code   https   github com ShaoqingRen SPP net      Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  https   arxiv org pdf 1406 4729 pdf   ECCV  2014    R CNN   Code   https   github com rbgirshick rcnn      Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik   Rich feature hierarchies for accurate object detection and semantic segmentation  https   arxiv org pdf 1311 2524 pdf   CVPR  2014        2D     Objectness  https   c1 staticflickr com 1 675 33118568516 bd088e181f b jpg    Objectness   Project   http   groups inf ed ac uk calvin objectness       Bogdan Alexe  Thomas Deselaers  and Vittorio Ferrari   What is an object   http   groups inf ed ac uk calvin Publications alexe cvpr10 pdf   CVPR  2010      Bogdan Alexe  Thomas Deselaers  and Vittorio Ferrari   Measuring the Objectness of Image Windows  https   www vision ee ethz ch publications papers techreports eth biwi 00882 pdf   TPAMI  2012    Rahtu   Project   http   www cse oulu fi CMV Downloads ObjectDetection       Esa Rahtu  Juho Kannala  and Matthew Blaschko   Learning a Category Independent Object Detection Cascade  http   www ee oulu fi  jkannala publications iccv2011 pdf   ICCV  2011    Cascaded Ranking SVMs   Code   https   sites google com a brookes ac uk zimingzhang code      Ziming Zhang  Jonathan Warrell  and Philip H  S  Torr   Proposal generation for object detection using cascaded ranking SVMs  https   www robots ox ac uk  tvg publications 2011 ziming cvpr11 pdf   CVPR  2011    Salient     Jie Feng  Yichen Wei  Litian Tao  Chao Zhang  and Jian Sun   Salient Object Detection by Composition  http   ieeexplore ieee org stamp stamp jsp arnumber 6126348   ICCV  2011    RandomizedSeeds     Michael Van den Bergh  Gemma Roig  Xavier Boix  Santiago Manen  Luc Van Gool   Online Video SEEDS for Temporal Window Objectness  http   varcity eu paper iccv2013 vandenbergh videoseeds pdf   ICCV  2013    BING   Project   http   mmcheng net bing       Ming Ming Cheng  Ziming Zhang  Wen Yan Lin  and Philip Torr   BING  Binarized Normed Gradients for Objectness Estimation at 300fps  http   mmcheng net mftp Papers ObjectnessBING pdf   CVPR  2014    CrackingBING     Qiyang Zhao  Zhibin Liu  Baolin Yin   Cracking BING and Beyond  http   www bmva org bmvc 2014 files paper030 pdf   BMVC  2014    BING       Ziming Zhang  Yun Liu  Tolga Bolukbasi  Ming Ming Cheng  and Venkatesh Saligrama   BING    A Fast High Quality Object Proposal Generator at 100fps  https   arxiv org pdf 1511 04511v1 pdf   arXiv 1511 04511      Ziming Zhang  Xi Chen  Yanjun Zhu  Zhiguo Cao  Venkatesh Saligrama  and Philip H S  Torr   Sequential Optimization for Efficient High Quality Object Proposal Generation  https   arxiv org pdf 1511 04511 pdf   arXiv 1511 04511v2    EdgeBoxes   Project   https   www microsoft com en us research publication edge boxes locating object proposals from edges     Code   https   github com pdollar edges      Piotr Doll r and C  Lawrence Zitnick   Edge Boxes  Locating Object Proposals from Edges  https   www microsoft com en us research wp content uploads 2014 09 ZitnickDollarECCV14edgeBoxes pdf   ECCV  2014    ContourBox       Cewu Lu   Shu Liu  Jiaya Jia and Chi Keung Tang   Contour Box  Rejecting Object Proposals Without Explicit Closed Contours  http   www cv foundation org openaccess content iccv 2015 papers Lu Contour Box Rejecting ICCV 2015 paper pdf   ICCV  2015     CPMC   Project   http   home isr uc pt  joaoluis cpmc       Joao Carreira and Cristian Sminchisescu   Constrained Parametric Min Cuts for Automatic Object Segmentation  http   home isr uc pt  joaoluis papers cvpr2010 2 pdf   CVPR  2010      Joao Carreira and Cristian Sminchisescu   CPMC  Automatic Object Segmentation Using Constrained Parametric Min Cuts  http   home isr uc pt  joaoluis papers PAMI2012 pdf   TPAMI  2012    Endres   Project   http   vision cs illinois edu proposals       Ian Endres and Derek Hoiem   Category Independent Object Proposals  http   link springer com chapter 10 1007 978 3 642 15555 0 42   ECCV  2010      Ian Endres and Derek Hoiem   Category Independent Object Proposals With Diverse Ranking  http   dhoiem cs illinois edu publications pami2013 proposals endres pdf   TPAMI  2014    Selective Search   Project   http   koen me research selectivesearch       Koen E  A  van de Sande  Jasper R  R  Uijlings  Theo Gevers  and Arnold W  M  Smeulders   Segmentation As Selective Search for Object Recognition  http   koen me research pub vandesande iccv2011 pdf   ICCV  2011      Jasper R  R  Uijlings  Koen E  A  van de Sande  Theo Gevers  and Arnold W  M  Smeulders   Selective Search for Object Recognition  http   koen me research pub uijlings ijcv2013 draft pdf   IJCV  2013    ObjSal   Project   http   www iis sinica edu tw  liutyng Projects ObjSal       Kai Yueh Chang  Tyng Luh Liu  Hwann Tzong  and Chen Shang Hong Lai   Fusing Generic Objectness and Visual Saliency for Salient Object Detection  http   www iis sinica edu tw  liutyng Publication files iccv11 pdf   ICCV  2011    RandomizedPrim   Project   http   www vision ee ethz ch  smanenfr rp index html      Santiago Manen  Matthieu Guillaumin  and Luc Van Gool   Prime Object Proposals with Randomized Prim s Algorithm   http   www vision ee ethz ch  smanenfr rp ManenICCV2013 pdf   ICCV  2013    Rantalankila     Pekka Rantalankila  Juho Kannala  and Esa Rahtu   Generating Object Segmentation Proposals Using Global and Local Search   https   users aalto fi  kannalj1 publications cvpr2014a pdf   CVPR  2014    RIGOR   Project   http   cpl cc gatech edu projects RIGOR       Ahmad Humayun  Fuxin Li  and James M  Rehg   RIGOR  Reusing Inference in Graph Cuts for Generating Object Regions  http   cpl cc gatech edu projects RIGOR pubs humayun CVPR 2014 rigor pdf   CVPR  2014    GOP   Project   http   www philkr net 2014 10 01 eccv       Philipp Kr henb hl and Vladlen Koltun   Geodesic Object Proposals  http   www philkr net papers 2014 10 01 eccv 2014 10 01 eccv pdf   ECCV  2014    MCG   Project   https   www2 eecs berkeley edu Research Projects CS vision grouping mcg       Pablo Arbelaez   Jordi Pont Tuset   Jonathan T  Barron  Ferran Marques  Jitendra Malik   Multiscale Combinatorial Grouping  https   www2 eecs berkeley edu Research Projects CS vision grouping mcg resources MCG CVPR2014 pdf   CVPR  2014      Jordi Pont Tuset   Pablo Arbelaez   Jonathan T  Barron  Ferran Marques  Jitendra Malik   Multiscale Combinatorial Grouping for Image Segmentation and Object Proposal Generation  https   www2 eecs berkeley edu Research Projects CS vision grouping mcg resources MCG arxiv2015 v3 pdf   TPAMI  2017     MultiBox   Project   https   github com google multibox      Dumitru Erhan  Christian Szegedy  Alexander Toshev  and Dragomir Anguelov   Scalable Object Detection using Deep Neural Networks  https   arxiv org pdf 1312 2249 pdf   CVPR  2014      Christian Szegedy  Scott Reed  Dumitru Erhan  and Dragomir Anguelov   Scalable  High Quality Object Detection  https   arxiv org pdf 1412 1441 pdf   arXiv 1412 1441    DeepMask   Code   https   github com facebookresearch deepmask      Pedro O  Pinheiro  Ronan Collobert and Piotr Doll r   Learning to Segment Object Candidates  https   arxiv org pdf 1506 06204 pdf   NIPS  2015    Mid level Cues     Tom Lee  Sanja Fidler  and Sven Dickinson   Learning to Combine Mid level Cues for Object Proposal Generation  http   www cv foundation org openaccess content iccv 2015 papers Lee Learning to Combine ICCV 2015 paper pdf   ICCV  2015    LPO   Project   http   vladlen info publications learning to propose objects       Philipp Kr henb hl and Vladlen Koltun   Learning to Propose Objects  http   vladlen info papers lpo pdf   CVPR  2015    RPN   Project   https   github com ShaoqingRen faster rcnn      Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  https   arxiv org pdf 1506 01497 pdf   NIPS  2015    DeepProposal   Code   https   github com aghodrati deepproposal      Amir Ghodrati  Ali Diba  Marco Pedersoli  Tinne Tuytelaars  and Luc Van Gool   DeepProposal  Hunting Objects by Cascading Deep Convolutional Layers  https   arxiv org pdf 1510 04445 pdf   ICCV  2015    3DOP   Project   http   www cs toronto edu objprop3d       Xiaozhi Chen  Kaustav Kundu  Yukun Zhu  Andrew Berneshawi  Huimin Ma  Sanja Fidler  and Raquel Urtasun   3D Object Proposals for Accurate Object Class Detection  http   www cs toronto edu objprop3d 3dopNIPS15 pdf   NIPS  2015    Mono3D   Project   http   3dimage ee tsinghua edu cn cxz mono3d      Xiaozhi Chen  Kaustav Kundu  Ziyu Zhang  Huimin Ma  Sanja Fidler  and Raquel Urtasun   Monocular 3D Object Detection for Autonomous Driving  http   3dimage ee tsinghua edu cn files publications CVPR16 XiaozhiChen pdf   CVPR  2016    HyperNet     Tao Kong  Anbang Yao  Yurong Chen  and Fuchun Sun   HyperNet  Towards Accurate Region Proposal Generation and Joint Object Detection  http   www cv foundation org openaccess content cvpr 2016 papers Kong HyperNet Towards Accurate CVPR 2016 paper pdf   CVPR  2016    CRAFT   Project   https   github com byangderek CRAFT      Bin Yang  Junjie Yan  Zhen Lei  and Stan Z  Li   CRAFT Objects From Images  https   arxiv org pdf 1604 03239 pdf   CVPR  2016    AttractioNet   Project   https   github com gidariss AttractioNet      Spyros Gidaris and Nikos Komodakis   Attend Refine Repeat  Active Box Proposal Generation via In Out Localization  https   arxiv org pdf 1606 04446 pdf   BMVC  2016    SPOP net     Zequn Jie  Xiaodan Liang  Jiashi Feng  Wen Feng Lu  Eng Hock Francis Tay  and Shuicheng Yan   Scale Aware Pixelwise Object Proposal Networks  https   arxiv org pdf 1601 04798 pdf   TIP  2016    FCN     Zequn Jie  Wen Feng Lu  Siavash Sakhavi  Yunchao Wei  Eng Hock Francis Tay  and Shuicheng Yan   Object Proposal Generation with Fully Convolutional Networks  http   ieeexplore ieee org stamp stamp jsp arnumber 7484700   TCSVT  2016    InstanceFCN     Jifeng Dai  Kaiming He  Yi Li  Shaoqing Ren  and Jian Sun   Instance Sensitive Fully Convolutional Networks  https   arxiv org pdf 1603 08678 pdf   ECCV  2016    MV3D   Project   http   3dimage ee tsinghua edu cn cxz      Xiaozhi Chen  Huimin Ma  Ji Wan  Bo Li  and Tian Xia   Multi View 3D Object Detection Network for Autonomous Driving  https   arxiv org pdf 1611 07759 pdf   arxiv 1611 07759  2016    ShapeSharing   Project   http   vision cs utexas edu projects shapesharing       Jaechul Kim and Kristen Grauman   Shape Sharing for Object Segmentation  http   www cs utexas edu  grauman papers shape sharing ECCV2012 pdf   ECCV  2012    OOP   Project   http   www shengfenghe com oriented object proposals html      Shengfeng He and Rynson W H  Lau   Oriented Object Proposals  http   www shengfenghe com uploads 1 5 1 3 15132160 oop iccv15 pdf   ICCV  2015    Object Discovery   Project   http   www di ens fr willow research objectdiscovery       Minsu Cho  Suha Kwak  Cordelia Schmid  and Jean Ponce   Unsupervised Object Discovery and Localization in the Wild  Part based Matching with Bottom up Region Proposals  http   www di ens fr willow pdfscurrent cho2015 pdf   CVPR  2015    Adobe Boxes   Code   https   github com fzw310 AdobeBoxes v1 0  tree master AdobeBoxes v1 0       Authors   Adobe Boxes  Locating Object Proposals Using Object Adobes  http   ieeexplore ieee org stamp stamp jsp arnumber 7488218   TIP  2016    MTSE   Project   http   3dimage ee tsinghua edu cn cxz mtse      Xiaozhi Chen  Huimin Ma  Xiang Wang  Zhichen Zhao   Improving Object Proposals with Multi Thresholding Straddling Expansion  http   3dimage ee tsinghua edu cn files publications CVPR15 XiaozhiChen pdf   CVPR  2015      Xiaozhi Chen  Huimin Ma  Chenzhuo Zhu  Xiang Wang  Zhichen Zhao   Boundary aware box refinement for object proposal generation  http   3dimage ee tsinghua edu cn download filename files publications NC17 XiaozhiChen pdf   Neurocomputing  2017    DeepBox   Project   https   github com weichengkuo DeepBox      Weicheng Kuo  Bharath Hariharan  and Jitendra Malik   DeepBox  Learning Objectness with Convolutional Networks  https   arxiv org pdf 1505 02146 pdf   ICCV  2015    SharpMask   Code   https   github com facebookresearch deepmask      Pedro O  Pinheiro  Tsung Yi Lin  Ronan Collobert  and Piotr Doll r   Learning to Refine Object Segments  https   arxiv org pdf 1603 08695 pdf   ECCV  2016        3D   MCG D   Project   https   github com s gupta rcnn depth      Saurabh Gupta  Ross Girshick  Pablo Arbel ez and Jitendra Malik   Learning Rich Features from RGB D Images for Object Detection and Segmentation  https   people eecs berkeley edu  sgupta pdf rcnn depth pdf   ECCV  2014    StereoObj   Dataset   http   www cs cityu edu hk  rynson papers demos StereoObj Dataset rar      Shao Huang  Weiqiang Wang  Shengfeng He  and Rynson W H  Lau   Stereo Object Proposals   http   www cs cityu edu hk  rynson papers tip17 pdf   TIP  2017    Elastic Edge Boxes     Jing Liu  Tongwei Ren  Yuantian Wang  Sheng Hua Zhong  Jia Bei  Shengchao Chen   Object proposal on RGB D images via elastic edge boxes  http   www sciencedirect com science article pii S0925231216314266   Neurocomputing  2017    3Dproposals   Project   http   lear inrialpes fr  oneata 3Dproposals       Dan Oneata  Jerome Revaud  Jakob Verbeek  Cordelia Schmid   Spatio temporal Object Detection Proposals  https   hal inria fr file index docid 1021902 filename proof pdf   ECCV  2014          Autonomous Driving   DeepStereoOP     Cuong C  Pham and Jae Wook Jeon   Robust Object Proposals Re ranking for Object Detection in Autonomous Driving Using Convolutional Neural Networks  http   www sciencedirect com science article pii S0923596517300231   SPIC  2017        Videos   STMOP   Project   https   www cs cmu edu  katef videolearn html      Katerina Fragkiadaki  Pablo Arbelaez  Panna Felsen  and Jitendra Malik   Learning to Segment Moving Objects in Videos  https   www cs cmu edu  katef papers CVPR2015 LearnVideoSegment pdf   CVPR  2015        Evaluation   Hosang  https   c1 staticflickr com 1 721 33003654282 6b18185807 b jpg    Hosang benchmark    Project   http   www mpi inf mpg de departments computer vision and multimodal computing research object recognition and scene understanding how good are detection proposals really     Code   https   github com hosang detection proposals      Jan Hosang  Rodrigo Benenson  and Bernt Schiele   How good are detection proposals  really   https   arxiv org pdf 1406 6962 pdf   BMVC  2014      Jan Hosang  Rodrigo Benenson  Piotr Doll r  and Bernt Schiele   What makes for effective detection proposals   https   arxiv org pdf 1502 05082 pdf   TPAMI  2016    Jordi Pont Tuset and Luc Van Gool   Boosting Object Proposals  From Pascal to COCO   http   www vision ee ethz ch  biwiproposals boosting coco data PontTusetVanGool Boosting ICCV2015 pdf   ICCV  2015    Project   http   www vision ee ethz ch  biwiproposals boosting coco index html    Neelima Chavali  Harsh Agrawal  Aroma Mahendru  and Dhruv Batra   Object Proposal Evaluation Protocol is  Gameable    https   arxiv org pdf 1505 05836 pdf   CVPR  2016    Project   https   filebox ece vt edu  aroma web object proposals html        Assembly with others   Low level  https   c2 staticflickr com 4 3801 33163256395 fdfed8e710 c jpg    Felzenszwalb s segmentation   Project   http   cs brown edu  pff segment       Pedro F  Felzenszwalb and Daniel P  Huttenlocher   Efficient Graph Based Image Segmentation  http   cs brown edu  pff papers seg ijcv pdf   IJCV  2004    SLIC Superpixels   Project   http   ivrl epfl ch research superpixels      Radhakrishna Achanta  Appu Shaji  Kevin Smith  Aurelien Lucchi  Pascal Fua  and Sabine S sstrunk   SLIC Superpixels Compared to State of the art Superpixel Methods  https   infoscience epfl ch record 177415 files Superpixel PAMI2011 2 pdf   TPAMI  2012    Structured Edge Detection   Code   https   github com pdollar edges      Piotr Doll r and C  Lawrence Zitnick   Structured Forests for Fast Edge Detection   https   www microsoft com en us research wp content uploads 2013 12 DollarICCV13edges pdf   ICCV  2013       Datasets     COCO  https   c2 staticflickr com 4 3690 33003654372 bea4d16186 b jpg    PASCAL   Project   http   host robots ox ac uk pascal VOC       Mark Everingham  Luc Van Gool  Christopher K  I  Williams  John Winn  and Andrew Zisserman   The PASCAL Visual Object Classes  VOC  Challenge  http   host robots ox ac uk pascal VOC pubs everingham10 pdf   IJCV  2010    MS COCO   Project   http   mscoco org       Tsung Yi Lin  Michael Maire  Serge Belongie  Lubomir Bourdev  Ross Girshick  James Hays  Pietro Perona  Deva Ramanan  C  Lawrence Zitnick  and Piotr Doll r   Microsoft COCO  Common Objects in Context  https   arxiv org pdf 1405 0312 pdf   ECCV  2014    ImageNet   Project   http   www image net org       Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li and Li Fei Fei   ImageNet  A Large Scale Hierarchical Image Database  http   www image net org papers imagenet cvpr09 pdf   CVPR  2009    NYU Depth Dataset   Project   http   cs nyu edu  silberman datasets nyu depth v2 html      Nathan Silberman  Pushmeet Kohli  Derek Hoiem  and Rob Fergus   Indoor Segmentation and Support Inference from RGBD Images  http   cs nyu edu  silberman papers indoor seg support pdf   ECCV  2012    KITTI   Project   http   www cvlibs net datasets kitti index php      Andreas Geiger and Philip Lenz and Raquel Urtasun   Are we ready for Autonomous Driving  The KITTI Vision Benchmark Suite  http   www cvlibs net publications Geiger2012CVPR pdf   CVPR  2012    ","software":"md","book":"tangzhenyu","full_link":"https://github.com/tangzhenyu/ObjectDetection-Recognition_DL"},{"name":"herobd/fast-rcnn","artist":"rcnn, fast, shell, matlab, voc","id":794,"playcount":10880,"description":"herobd/fast-rcnn rcnn, fast, shell, matlab, voc    Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"herobd","full_link":"https://github.com/herobd/fast-rcnn"},{"name":"svebk/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":795,"playcount":8419,"description":"svebk/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details  ","software":"md","book":"svebk","full_link":"https://github.com/svebk/py-faster-rcnn"},{"name":"palmer0914/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":796,"playcount":8855,"description":"palmer0914/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"palmer0914","full_link":"https://github.com/palmer0914/py-faster-rcnn"},{"name":"KaiqiZhang/caffe-admm","artist":"caff, model, learn, communiti, berkeley","id":797,"playcount":3939,"description":"KaiqiZhang/caffe-admm caff, model, learn, communiti, berkeley   Installation  Same as the original version of Caffe   See http   caffe berkeleyvision org installation html for the latest installation instructions      How to train  Two steps are required to prune a neural network  Suppose we have a pretrained model  bvlc alexnet caffemodel    Step 1  admm  suppress target weights        build tools caffe train   solver models bvlc alexnet solver admm prototxt   weights  path to bvlc alexnet caffemodel      Step 2  retrain  set target weights to 0 and retrain        build tools caffe train   solver models bvlc alexnet solver retrain prototxt   weights models bvlc alexnet caffe alexnet train admm iter 2400000 caffemodel     Suppose  caffe alexnet train admm iter 2400000 caffemodel  is the trained caffemodel from step 1      Explanation of parameters     solver prototxt      lr policy     admm  for admm step  your prefered policy for retrain step     gamma    drop the learning rate by a factor of this value     stepvalue    drop the learning rate by gamma when meet this stepvalue in each admm iteration     admm iter    Caffe training iterations for each admm iteration     max iter    Total training iterations  total admm iterations   max iter   admm iter      pruning phase     admm  for admm step and  retrain  for retrain step      model prototxt      prune ratio    the percent of weight parameters to prune for each layer     rho    the rho parameter for admm pruning  detailed in our paper     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"KaiqiZhang","full_link":"https://github.com/KaiqiZhang/caffe-admm"},{"name":"ANTsX/ANTsRNet","artist":"deep, learn, network, convolut, imag","id":798,"playcount":4201,"description":"ANTsX/ANTsRNet deep, learn, network, convolut, imag    Build Status  https   travis ci org ANTsX ANTsRNet png branch master   https   travis ci org ANTsX ANTsRNet     ANTsRNet  A collection of well known deep learning architectures ported to the R language and tools for basic medical image processing   Examples available at  ANTsRNetExamples  https   github com ntustison ANTsRNetExamples       Publications    Nicholas J  Tustison  Brian B  Avants  Zixuan Lin  Xue Feng  Nicholas Cullen  Jaime F  Mata  Lucia Flors  James C  Gee  Talissa A  Altes  John P  Mugler III  and Kun Qing   Convolutional Neural Networks with Template Based Data Augmentation for Functional Lung Image Quantification   Academic Radiology    Accepted  https   github com ntustison DeepVentNet      Available architectures      Image segmentation    U Net  2 D  or V Net  3 D  with a  multi label Dice loss function  https   github com ntustison ANTsRNet blob master Models createUnetModel R L1 L91         O  Ronneberger  P  Fischer  and T  Brox   U Net  Convolutional Networks for Biomedical Image Segmentation   https   arxiv org abs 1505 04597         Fausto Milletari  Nassir Navab  Seyed Ahmad Ahmadi  V Net  Fully Convolutional Neural Networks for Volumetric Medical Image Segmentation   https   arxiv org pdf 1606 04797 pdf       Image classification    AlexNet  2 D  3 D         A  Krizhevsky  and I  Sutskever  and G  Hinton  ImageNet Classification with Deep Convolutional Neural Networks   http   papers nips cc paper 4824 imagenet classification with deep convolutional neural networks pdf    Vgg16 Vgg19  2 D  3 D         K  Simonyan and A  Zisserman  Very Deep Convolutional Networks for Large Scale Image Recognition   https   arxiv org abs 1409 1556    ResNet ResNeXt  2 D  3 D         Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun   Deep Residual Learning for Image Recognition   https   arxiv org abs 1512 03385         Saining Xie and Ross Girshick and Piotr Doll r and Zhuowen Tu and Kaiming He   Aggregated Residual Transformations for Deep Neural Networks   https   arxiv org abs 1611 05431    GoogLeNet  Inception v3   2 D         C  Szegedy  W  Liu  Y  Jia  P  Sermanet  S  Reed  D  Anguelov  D  Erhan  V  Vanhoucke  and A  Rabinovich  Going Deeper with Convolutions   https   arxiv org abs 1512 00567    DenseNet  2 D  3 D         G  Huang  Z  Liu  K  Weinberger  and L  van der Maaten  Densely Connected Convolutional Networks Networks   https   arxiv org abs 1608 06993       Object detection    Single Shot MultiBox Detector  SSD   2 D  3 D         W  Liu  D  Anguelov  D  Erhan  C  Szegedy  S  Reed  C Y  Fu  and A  Berg   SSD  Single Shot MultiBox Detector   https   arxiv org abs 1512 02325        SSD7  small 7 layer architecture       SSD300 SSD512  porting of original architectures      Image super resolution    Super resolution convolutional neural network  SRCNN   2 D  3 D         Chao Dong  Chen Change Loy  Kaiming He  and Xiaoou Tang   Image Super Resolution Using Deep Convolutional Networks   https   arxiv org abs 1501 00092    Expanded super resolution  ESRCNN   2 D  3 D         Chao Dong  Chen Change Loy  Kaiming He  and Xiaoou Tang   Image Super Resolution Using Deep Convolutional Networks   https   arxiv org abs 1501 00092    Denoising auto encoder super resolution  DSRCNN   2 D  3 D    Deep denoise super resolution  DDSRCNN   2 D  3 D    ResNet super resolution  SRResNet   2 D  3 D         Christian Ledig  Lucas Theis  Ferenc Huszar  Jose Caballero  Andrew Cunningham  Alejandro Acosta  Andrew Aitken  Alykhan Tejani  Johannes Totz  Zehan Wang  and Wenzhe Shi   Photo Realistic Single Image Super Resolution Using a Generative Adversarial Network   https   arxiv org abs 1609 04802     Python implementations  https   github com titu1994 Image Super Resolution                                                 Installation    R package dependencies       tensorflow       keras       Rcpp       yaml       config       reticulate       processx   ANTsRNet Installation        Option 1                           R          devtools  install github   ANTsX ANTsRNet                     Option 2                        git clone https   github com ANTsX ANTsRNet git          R CMD INSTALL ANTsRNet                ","software":"md","book":"ANTsX","full_link":"https://github.com/ANTsX/ANTsRNet"},{"name":"weiliu89/detectionAnalysis","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":799,"playcount":4507,"description":"weiliu89/detectionAnalysis “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> Derek Hoiem July 30  2012  updated July 31  2014   This project contains the source code and annotations for analyzing object detectors with the PASCAL VOC 2007 dataset   The annotations were created by Yodsawalai Chodpathumwan in Spring 2010 and Fall 2011 as an undergraduate RA   The associated published paper is   D  Hoiem  Y  Chodpathumwan  and Q  Dai    Diagnosing Error in Object Detectors   ECCV 2012                   How to Run                    CASE I  PASCAL VOC 2007  felzenszwalb or vedaldi detectors 1  In detectionAnalysisScript  set all flags on top to 1  true         note  DO SHOW SURPRISING MISSES is optional  2  Set the imdir path to a valid directory of VOC images 3  Run detectionAnalysisScript in Matlab  CASE II  PASCAL VOC 2007  your own detectors 1  Create a text file of detector outfits with rows of     file id conf x1 y1 x2 y2  standard format  see readDetections m      Put this file in a subdirectory within detections  2  Add a corresponding entry to setDetectorInfo m and update detector variable in     detectionAnalysisScript  3  Perform all steps of CASE I   CASE III  later versions of VOC Annotations are not currently available for detailed analysis of true detections  1  Modify setDatasetParameters m      a  Set the imdir  VOCsourcepath  and VOCset to correspond to the dataset    b  Set objnames extra        change objnames extra in DISPLAY TP to        objnames selected  2  Run as in CASE I or II  Case IV  other datasets If detections are bounding boxes and evaluation criteria is similar  use  voc compatible  as detector type and update setDatasetParameters m   Otherwise  more modification may be required  see details in Code Explanation txt     CREATING A REPORT 1  The tex file for a report will be created for you in results detname tex    2  Automatically remove whitespace from the figures using an Adobe Acrobat     batch process or this script for pdfcrop from Ross Girshick           bin sh       find    name    pdf   print0   xargs  P6  0  I file pdfcrop file file 3  Use a latex compiler on detectionAnalysisAutoReportTemplate to make the pdf                   Description of Folders                    annotations   Contains annotations for objects  excluding  difficult  objects  as defined by VOC annotations    The file Labels txt helps to explain the format    Each file also contains whether the object was detected by the Felzenszwalb or the Vedaldi detector and the corresponding confidence  but this need not be used   src   Contains code for reading the annotations and storing them in the PASCAL VOC record structure   Also contains code for computing normalized average  precision and making comparisons between different subsets of the data   results   For each detector  contains tables of normalized AP for various subsets of  data and comparison plots   detections   For each detector  contains a list of all detections above some threshold for each object                   Description of Script Functions                    detectionAnalysisScript  the main script for analysis   TP ANALYSIS  correlates detections with ground truth  assigns attributes                such as occlusion and aspect to each object  and computes                performance measures for various subsets of objects   FP ANALYSIS  computes fraction of top false positives due to localization                error  confusion with similar objects  etc   also computes                the AP impact of false positives   TP DISPLAY   creates plots showing performance of detector for different                subsets of objects  a summary plot  a text summary of                 characteristics of missed objects  and images of objects                that are less confidently detected than expected    FP DISPLAY   displays statistics of the frequency and impact of false                 positives  including creation of a table in a text file   DO TEX       creates tex files for compiling a report  Other useful functions   displayTopFP  displays most confident false positives   displayRankedPositives  shows detection confidences of a subset of objects                             from most to least confident                   Further Help                   Contact dhoiem illinois edu if there is a problem with the annotations or code  If instructions are unclear or incomplete  please try to figure it out first and send me a corrected version of the instructions   If you can t figure it out  email me  and I will help as time allows        ","software":"md","book":"weiliu89","full_link":"https://github.com/weiliu89/detectionAnalysis"},{"name":"albertchristianto/caffe_train_NEW","artist":"caff, learn, model, deep, layer","id":800,"playcount":3467,"description":"albertchristianto/caffe_train_NEW caff, learn, model, deep, layer   caffe train NEW Caffe Framework for training CMU Human Pose with data augmentation layer This caffe is made on 02 06 2018  based on this 2 version of caffe     caffe train  https   github com CMU Perceptual Computing Lab caffe train  from   ZheC  https   github com ZheC     caffe augmentation  https   github com twtygqyy caffe augmentation  from   twtygqyy  https   github com twtygqyy   I modify  cpm data transformer cpp  https   github com albertchristianto caffe train NEW blob master src caffe cpm data transformer cpp  data augmentation layer   so it can change the contrast  brightness  color shift  and smooth filtering on training image data     How to Use This is the example to specify your layer      layer     name   data    type   CPMData    top   data    top   label    data param       source    YOUR PATH TO LMDB FILE       batch size  10     backend  LMDB       cpm transform param       stride  8     max rotate degree  40     visualize  false     crop size x  368     crop size y  368     scale prob  1     scale min  0 5     scale max  1 1     target dist  0 6     center perterb max  40     do clahe  false     num parts  56     np in lmdb  17     contrast brightness adjustment  true     smooth filtering  true     min contrast  0 8     max contrast  1 2     max smooth  6     max color shift  20     apply probability  0 5                 Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"albertchristianto","full_link":"https://github.com/albertchristianto/caffe_train_NEW"},{"name":"sridhar912/tsr-py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":801,"playcount":8932,"description":"sridhar912/tsr-py-faster-rcnn train, rcnn, faster, shell, network     Traffic Sign Detection and Classification This module is an extension of  Faster RCNN  https   github com rbgirshick py faster rcnn  to detect and classify  German Traffic Signs  http   benchmark ini rub de    The following animation shows the output of this module     OUTPUT  output gif   For installation  I modified the original Faster RCNN  README md  https   github com rbgirshick py faster rcnn blob master README md  file to adapt changes for run this module  Please check below for license and citation information       Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html          Note    Caffe  must  be built with support for Python layers          make       In your Makefile config  make sure to have this line uncommented     WITH PYTHON LAYER    1       Unrelatedly  it s also recommended that you use CUDNN     USE CUDNN    1              You can see the sample  Makefile config  caffe fast rcnn Makefile config  avialable with this repository  It uses conda with GPU support  You need to modify this file to suit your hardware configuration  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository        Shell       Make sure to clone with   recursive     git clone   recursive https   github com sridhar912 tsr py faster rcnn git          2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre trained detector from this  link  https   drive google com open id 0B0CHhxRP jmIRlVKR250d0pMNEE   This downloaded model need to be placed under the directory     Shell   FRCN ROOT data GTSDB TrainedModel          Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a ZF network trained for detection on GTSDB  Few sample images from  test dataset  http   benchmark ini rub de Dataset GTSDB TestIJCNN2013 zip  has been placed under folder    Shell cd  FRCN ROOT data demo     For the complete testing   test dataset  http   benchmark ini rub de Dataset GTSDB TestIJCNN2013 zip  has to be download and placed in the folder mentioned above      Beyond the demo  installation for training and testing models  Before starting  you need to download the traffic sign datasets from  German Traffic Signs Datasets  http   benchmark ini rub de  section gtsdb subsection dataset   In this implementation  the training and test datasets that were used for the competition    training data set  http   benchmark ini rub de Dataset GTSDB TrainIJCNN2013 zip   1 1 GB    test data set  http   benchmark ini rub de Dataset GTSDB TestIJCNN2013 zip   500 MB    is used   Here  the main goal is to enable Faster R CNN to detect and classify traffic sign  So  model performance evaluation in test dataset was not carried out  The downloaded test dataset was only used for visual testing  After the dataset is downloaded  prepare the following directory structure  The training zip file contains the following files   folders   images  00000 ppm  00001 ppm      00599 ppm    gt txt  Copy all the images into Images directory as shown below  Rename gt txt as train txt and keep both gt txt and train txt as shown below          Format Your Dataset At first  the dataset must be well organzied with the required format      GTSDB     Annotations         gt txt  Annotation files      Images           ppm  Image files      ImageSets         train txt            Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage This implementation is tested only for approximate joint training   To train and test a TSR Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set       DATASET    GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g      set EXP DIR seed rng1701 RNG SEED 1701   DATASET to be used for training     Example script to train ZF model     Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh 0 ZF gtsdb     Trained Fast R CNN networks are saved under      output  experiment directory   dataset name     Example  output faster rcnn end2end gtsdb train     Test outputs are saved under      output  experiment directory   dataset name   network snapshot name            Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015        ","software":"md","book":"sridhar912","full_link":"https://github.com/sridhar912/tsr-py-faster-rcnn"},{"name":"jiangzhengkai/Video-Detection","artist":"object, detect, propos, cvpr, eccv","id":802,"playcount":5080,"description":"jiangzhengkai/Video-Detection object, detect, propos, cvpr, eccv    Video Detection video detection papers based deep learning       Arxiv     Towards High Performance for Mobiles    Xizhou Zhu  Jifeng Dai  Xingchi Zhu  Yichen Wei  Lu Yuan     Towards High Performance Video Object Detection for Mobiles  Arxiv 2018        paper  https   arxiv org pdf 1804 05830 pdf          ECCV2018     Fully Motion Aware Network    Shiyao Wang  Yucong Zhou  Junjie Yan  Zhidong Deng     Fully Motion Aware Network for Video Object Detection   ECCV  2018        code  https   github com wangshy31 MANet for Video Object Detection git          SpatioTemporal Sampling Network    Gedas Bertasius  Lorenzo Torresani  ianbo Shi     Object Detection in Video with Spatiotemporal Sampling Networks   ECCV  2018        paper  https   arxiv org pdf 1803 05549 pdf          Aligned Spatial Temporal Memory    Fanyi Xiao  Yong Jae Lee     Video Object Detection with an Aligned Spatial Temporal Memory   ECCV 2018        paper  https   arxiv org abs 1712 06317        CVPR2018     Towards High Performance    Xizhou Zhu  Jifeng Dai  Lu Yuan  Yichen Wei     Towards High Performance Video Object Detection   CVPR  2018        paper  https   arxiv org abs 1711 11577       Scale Time Lattice    Kai Chen  Jiaqi Wang  Shuo Yang  Xingcheng Zhang  Yuanjun Xiong  Chen Chang Loy  Dahua Lin     Optimizing Video Object Detection vis a Scale Time Lattice   CVPR  2018        paper  http   mmlab ie cuhk edu hk projects ST Lattice ST Lattice pdf     project  http   mmlab ie cuhk edu hk projects ST Lattice        ICCV2017     FGFA    Xizhou Zhu  Yujie Wang  Jifeng Dai  Lu Yuan  Yichen Wei     Flow Guided Feature Aggregation for Video Object Detection   ICCV  2017        paper  https   arxiv org abs 1703 10025      code  https   github com msracver Flow Guided Feature Aggregation       D T    Christoph Feichtenhofer  Axel Pinz  Andrew Zisserman     Detect to Track and Track to Detect   ICCV  2017        paper  http   www robots ox ac uk  vgg publications 2017 Feichtenhofer17 feichtenhofer17 pdf      project  http   www robots ox ac uk  vgg research detect track        CVPR2017     DFF    Xizhou Zhu  Yuwen Xiong  Jifeng Dai  Lu Yuan  Yichen Wei     Deep Feature Flow for Video Recognition   CVPR  2017     paper  https   arxiv org abs 1611 07715     code  https   github com msracver Deep Feature Flow        Object Detection object detection papers based deep learning     Arxiv     DetNet    Zeming Li  Chao Peng  Gang Yu  Xiangyu Zhang  Yangdong Deng  Jian Sun     DetNet  A Backbone network for Object Detection     paper  https   arxiv org pdf 1804 06215 pdf       Light Head R CNN    Zeming Li  Chao Peng  Gang Yu  Xiangyu Zhang  Yangdong Deng  Jian Sun     Light Head R CNN  In Defense of Two Stage Object Detector    paper  https   arxiv org abs 1711 07264       YOLOv3    Joseph Redmon  Ali Farhadi     YOLOv3  An Incremental Improvement     paper  https   pjreddie com media files papers YOLOv3 pdf          ECCV2018     IOU Net    Borui Jiang  Ruixuan Luo  Jiayuan Mao  Tete Xiao  Yuning Jiang     Acquisition of Localization Confidence for Accurate Object Detection   ECCV 2018        paper  https   arxiv org pdf 1807 11590 pdf     code  https   github com vacancy PreciseRoIPooling          CVPR2018     SNIP    Bharat Singh  Larry S  Davis     An Analysis of Scale Invariance in Object Detection   SNIP     paper  https   arxiv org pdf 1711 08189 pdf     code  https   github com bharatsingh430 snip        Cascade RCNN    Zhaowei Cai  Nuno Vasconcelos      Cascade R CNN  Delving into High Quality Object Detectio     paper  https   arxiv org pdf 1712 00726 pdf     code  https   github com zhaoweicai cascade rcnn        Relation Networks    Han Hu  Jiayuan Gu  Zheng Zhang  Jifeng Dai  Yichen Wei      Relation Networks for Object Detection     paper  https   arxiv org pdf 1711 11575 pdf     code  https   github com msracver Relation Networks for Object Detection        ICCV2017      CVPR2017     YOLO9000    Joseph Redmon  Ali Farhadi     YOLO9000  Better  Faster  Stronger     paper  https   arxiv org abs 1612 08242     project  https   pjreddie com publications        NIPS2016     R FCN    Jifeng Dai  Yi Li  Kaiming He  Jian Sun     R FCN  Object Detection via Region based Fully Convolutional Networks     paper  https   arxiv org abs 1605 06409        CVPR2016     YOLO    Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi     You Only Look Once  Unified  Real Time Object Detection     paper  https   arxiv org abs 1506 02640     project  https   pjreddie com publications        ECCV2016     SSD    Wei Liu  Dragomir Anguelov  Dumitru Erhan  Christian Szegedy  Scott Reed  Cheng Yang Fu  Alexander C Berg     SSD  Single Shot MultiBox Detector     paper  https   arxiv org abs 1512 02325     code  https   github com weiliu89 caffe tree ssd        ICCV2015      CVPR2015     Faster R CNN    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun     Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks     paper  https   arxiv org abs 1506 01497     code  https   github com rbgirshick py faster rcnn     ","software":"md","book":"jiangzhengkai","full_link":"https://github.com/jiangzhengkai/Video-Detection"},{"name":"ANTsX/ANTsRNet","artist":"deep, learn, network, convolut, imag","id":803,"playcount":4201,"description":"ANTsX/ANTsRNet deep, learn, network, convolut, imag    Build Status  https   travis ci org ANTsX ANTsRNet png branch master   https   travis ci org ANTsX ANTsRNet     ANTsRNet  A collection of well known deep learning architectures ported to the R language and tools for basic medical image processing   Examples available at  ANTsRNetExamples  https   github com ntustison ANTsRNetExamples       Publications    Nicholas J  Tustison  Brian B  Avants  Zixuan Lin  Xue Feng  Nicholas Cullen  Jaime F  Mata  Lucia Flors  James C  Gee  Talissa A  Altes  John P  Mugler III  and Kun Qing   Convolutional Neural Networks with Template Based Data Augmentation for Functional Lung Image Quantification   Academic Radiology    Accepted  https   github com ntustison DeepVentNet      Available architectures      Image segmentation    U Net  2 D  or V Net  3 D  with a  multi label Dice loss function  https   github com ntustison ANTsRNet blob master Models createUnetModel R L1 L91         O  Ronneberger  P  Fischer  and T  Brox   U Net  Convolutional Networks for Biomedical Image Segmentation   https   arxiv org abs 1505 04597         Fausto Milletari  Nassir Navab  Seyed Ahmad Ahmadi  V Net  Fully Convolutional Neural Networks for Volumetric Medical Image Segmentation   https   arxiv org pdf 1606 04797 pdf       Image classification    AlexNet  2 D  3 D         A  Krizhevsky  and I  Sutskever  and G  Hinton  ImageNet Classification with Deep Convolutional Neural Networks   http   papers nips cc paper 4824 imagenet classification with deep convolutional neural networks pdf    Vgg16 Vgg19  2 D  3 D         K  Simonyan and A  Zisserman  Very Deep Convolutional Networks for Large Scale Image Recognition   https   arxiv org abs 1409 1556    ResNet ResNeXt  2 D  3 D         Kaiming He  Xiangyu Zhang  Shaoqing Ren  and Jian Sun   Deep Residual Learning for Image Recognition   https   arxiv org abs 1512 03385         Saining Xie and Ross Girshick and Piotr Doll r and Zhuowen Tu and Kaiming He   Aggregated Residual Transformations for Deep Neural Networks   https   arxiv org abs 1611 05431    GoogLeNet  Inception v3   2 D         C  Szegedy  W  Liu  Y  Jia  P  Sermanet  S  Reed  D  Anguelov  D  Erhan  V  Vanhoucke  and A  Rabinovich  Going Deeper with Convolutions   https   arxiv org abs 1512 00567    DenseNet  2 D  3 D         G  Huang  Z  Liu  K  Weinberger  and L  van der Maaten  Densely Connected Convolutional Networks Networks   https   arxiv org abs 1608 06993       Object detection    Single Shot MultiBox Detector  SSD   2 D  3 D         W  Liu  D  Anguelov  D  Erhan  C  Szegedy  S  Reed  C Y  Fu  and A  Berg   SSD  Single Shot MultiBox Detector   https   arxiv org abs 1512 02325        SSD7  small 7 layer architecture       SSD300 SSD512  porting of original architectures      Image super resolution    Super resolution convolutional neural network  SRCNN   2 D  3 D         Chao Dong  Chen Change Loy  Kaiming He  and Xiaoou Tang   Image Super Resolution Using Deep Convolutional Networks   https   arxiv org abs 1501 00092    Expanded super resolution  ESRCNN   2 D  3 D         Chao Dong  Chen Change Loy  Kaiming He  and Xiaoou Tang   Image Super Resolution Using Deep Convolutional Networks   https   arxiv org abs 1501 00092    Denoising auto encoder super resolution  DSRCNN   2 D  3 D    Deep denoise super resolution  DDSRCNN   2 D  3 D    ResNet super resolution  SRResNet   2 D  3 D         Christian Ledig  Lucas Theis  Ferenc Huszar  Jose Caballero  Andrew Cunningham  Alejandro Acosta  Andrew Aitken  Alykhan Tejani  Johannes Totz  Zehan Wang  and Wenzhe Shi   Photo Realistic Single Image Super Resolution Using a Generative Adversarial Network   https   arxiv org abs 1609 04802     Python implementations  https   github com titu1994 Image Super Resolution                                                 Installation    R package dependencies       tensorflow       keras       Rcpp       yaml       config       reticulate       processx   ANTsRNet Installation        Option 1                           R          devtools  install github   ANTsX ANTsRNet                     Option 2                        git clone https   github com ANTsX ANTsRNet git          R CMD INSTALL ANTsRNet                ","software":"md","book":"ANTsX","full_link":"https://github.com/ANTsX/ANTsRNet"},{"name":"lixinba/FasterRCNN","artist":"train, rcnn, faster, shell, network","id":804,"playcount":8855,"description":"lixinba/FasterRCNN train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"lixinba","full_link":"https://github.com/lixinba/FasterRCNN"},{"name":"palmer0914/faster_rcnn","artist":"time, train, rcnn, net, vgg","id":805,"playcount":9188,"description":"palmer0914/faster_rcnn time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Object Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1pKGBDyz        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 114 authkey  AERHoxZ iAx j34 ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1hsFKmeK    ","software":"md","book":"palmer0914","full_link":"https://github.com/palmer0914/faster_rcnn"},{"name":"xingkongliang/faster_rcnn_TC","artist":"time, train, rcnn, net, vgg","id":806,"playcount":9188,"description":"xingkongliang/faster_rcnn_TC time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Object Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1pKGBDyz        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 114 authkey  AERHoxZ iAx j34 ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1hsFKmeK    ","software":"md","book":"xingkongliang","full_link":"https://github.com/xingkongliang/faster_rcnn_TC"},{"name":"yoking-human/Papers-Please","artist":"deep, learn, network, convolut, imag","id":807,"playcount":5241,"description":"yoking-human/Papers-Please deep, learn, network, convolut, imag   Papers Please  Glory to DSM     Topics  papers       Modern CNNs    Alex Krizhevsky  et al   ImageNet Classification with Deep Convolutional Neural Networks   NIPS  2012   Christian Szegedy  et al   Going Deeper with Convolutions   CVPR  2015   Christian Szegedy  et al   Inception v4  Inception ResNet and the Impact of Residual Connections on Learning   ArXiv  2016   Kaiming He  et al   Deep Residual Learning for Image Recognition   CVPR  2016   Andreas Veit  et al   Residual Networks are Exponential Ensembles of Relatively Shallow Networks   ArXiv  2016   Sergey Zagoruyko and Nikos Komodakis  Wide Residual Networks   ArXiv  2016      Regularization    Nitish Srivastava  et al   Dropout  A Simple Way to Prevent Neural Networks from Overfitting   JMLR  2014   Sergey Ioffe and Christian Szegedy  Batch Normalization  Accelerating Deep Network Training by Reducing Internal Covariate Shift  ArXiv  2015      Algorithms behind AlphaGo    David Silver et al   Mastering the game of Go with deep neural networks and tree search   Nature  2016      Optimization Methods    Momentum  NAG  AdaGrad  AdaDelta  RMSprop  ADAM   Diederik Kingma and Jimmy Bam  ADAM  A Method For Stochastic Optimization   ICLR  2015      Restricted Boltzmann Machine    Geoffrey Hinton   A Practical Guide to Training Restricted Boltzmann Machines   2010   human level control through deep reinforcement learning      Semantic Segmentation    Jonathan Long et al   Fully Convolutional Networks for Semantic Segmentation   CVPR  2015   Liang Chieh Chen et al   Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs   CVPR  2015   Hyeonwoo Noh et al   Learning Deconvolution Network for Semantic Segmentation   ICCV  2015   Liang Chieh Chen et al   DeepLab  Semantic Image Segmentation with Deep Convolutional Nets  Atrous Convolution  and Fully Connected CRFs   ArXiv  2016      Weakly Supervised Localization    Maxime Oquab et al   Is object localization for free    Weakly supervised learning with convolutional neural networks   CVPR  2015   Bolei Zhou et al   Learning Deep Features for Discriminative Localization   CVPR  2016      Image detection methods    Ross Girshick et al   Rich feature hierarchies for accurate object detection and semantic segmentation   CVPR  2014   Kaiming He et al   Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition   CVPR  2015   Ross Girshick   Fast R CNN   ICCV  2015   Shaoqing Ren et al   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks   NIPS  2015   Joseph Redmon et al   You Only Look Once  Unified  Real Time Object Detection   CVPR  2016   Donggeun Yoo et al   AttentionNet  Aggregating Weak Directions for Accurate Object Detection   ICCV  2015   Wei Liu et al   SSD  Single Shot MultiBox Detector   ECCV  2016   Joseph Redmon  Ali Farhadi   YOLO9000  Better  Faster  Stronger   ArXiv  2017      Visual Q A    Hyeonwoo Noh et al   Image Question Answering using Convolutional Neural Network with Dynamic Parameter Prediction   CVPR  2015   Akira Fukui et al   Multimodal Compact Bilinear Pooling for VQA   CVPR  2016      Deep reinforcement learning    Volodymyr Mnih et al   Playing Atari with Deep Reinforcement Learning   NIPS  2013   Hado van Hasselt et al   Deep Reinforcement Learning with Double Q learning   AAAI  2016      Recurrent Neural Networks    Alex Graves   Generating Sequences With Recurrent Neural Networks   ArXiv  2013      Word embedding    Tomas Mikolov et al   Distributed Representations of Words and Phrases and their Compositionality   NIPS  2013      Image captioning    Oriol Vinyals et al   Show and Tell  A Neural Image Caption Generator   CVPR  2015   Kelvin Xu et al   Show  Attend and Tell  Neural Image Caption Generation with Visual Attention   ICML  2015   Justin Johnson et al   DenseCap  Fully Convolutional Localization Networks for Dense Captioning   CVPR  2016      Neural Styles    Leon A  Gatys et al   Texture Synthesis Using Convolutional Neural Networks   NIPS  2015   Aravindh Mahendran and Andrea Vedaldi   Understanding Deep Image Representations by Inverting Them   CVPR  2015   Leon A  Gatys et al   A Neural Algorithm of Artistic Style   ArXiv  2015      Generative adversarial networks    Ian J  Goodfellow et al   Generative Adversarial Networks   NIPS  2015   Alec Radford et al   Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks   ICLR  2016   Scott Reed et al   Generative Adversarial Text to Image Synthesis   ICML  2016   Donggeun Yoo et al   Pixel Level Domain Transfer   ECCV  2016   Phillip Isola et al   Image to Image Translation with Conditional Adversarial Networks   ArXiv  2016   Anh Nguyen et al   Plug   Play Generative Networks  Conditional Iterative Generation of Images in Latent Space   ArXiv  2016   Scott Reed et al   Learning What and Where to Draw   NIPS  2016     and implementations    Basic Python usage  numpy  matplotlib        Handling MNIST   Logistic regression   Multilayer Perceptron   Convolutional Neural Network   Denoising Autoencoders   Convolutional    Class Activation Map   Semantic Segmentation   Using Custom Dataset   Recurrent Neural Network   Char RNN   Word2Vec   Neural Style ","software":"md","book":"yoking-human","full_link":"https://github.com/yoking-human/Papers-Please"},{"name":"NCBI-Hackathons/CakeCell","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":808,"playcount":8694,"description":"NCBI-Hackathons/CakeCell “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   CakeCell  div     img src  images logos final DNA JPG   width  200px     div  Segmenting cells  and other objects   in microscopy images via neural networks     b  Hackathon team  Jay Newby  Lead   Ben Walker  Sys Admin   Mike Pablo  Writer    Sherry Chao  Ian Seim   b      The idea Identifying objects of interest in microscopy data is a critical task  but it is time consuming and subject to variability over time and between researchers  We d like to automatically segment microscopy images  i  generically  i       Why CakeCell  One of our earliest attempts at segmenting microscopy images  i  without training on microscopy images with labeled cells   i  produced some cell like segmentations  a couple of cells were labeled as clocks   and some hilariously bad segmentations  much of the field of view was labeled as a  cake  images results jpg ver first cake example labeled jpg         Design and testing Our two test image sets are of filaments and stem cells    div align  center      img src  images filaments jpg   width  400px    n     img src  images stemcells jpg   width  400px     div   To perform generic segmentation  we re using  a href  https   github com facebookresearch Detectron  Detectron  a   Facebook AI Research s  software system that implements state of the art object detection algorithms   including Mask R CNN  An early form of this approach  DeepMask  was able to segment even objects that were not originally in the training data set  Fig  2 in  Learning to Segment Object Candidates  https   arxiv org abs 1506 06204    In the same spirit  we want to see whether Detectron can segment biological objects without any microscopy training data    div align  center    img src  images bicycles jpg   width  800px     div      Dependencies  Detectron  https   github com facebookresearch Detectron  is a software system for object detection  As described on their  installation page  https   github com facebookresearch Detectron blob master INSTALL md      Requires a NVIDIA GPU  Linux  Python2      Requires Caffe2  various standard Python packages  and the COCO API      Workflow diagram  div align  center      img src  workflow diagram1 png  width  400px     div      Workflow method Currently  we are simply submitting individual images to Detectron  without pre processing steps  Once we move beyond analyzing images one at a time  we ll want to keep our images below a certain size       Currently    1  Submit images to Detectron and look at the segmentation mask       In the future    1  For any images with an oversized dimension  crop into a set of overlapping chunks  2  Submit images to Detectron and extract generate segmentation masks 3  For any images composed of overlapping chunks  reassemble them        Combine segments if at least one pixel in the segment mask is shared between chunks      Installation  A brief installation process is as follows  For more help    read more  centos install md    On a CentOS 7 with an NVIDIA GPU    1  Install latest NVIDIA driver  2  Install CUDA 9 1 on the system  3  Install Docker CE  17 12 1   4  Install NVIDIA Docker 2  5  Clone the Detectron repo  6  Build the Docker file in the Detectron folder    bash cd docker docker build  t detectron       7  Run tests    bash mkdir docker mount nvidia docker run   rm  it  v   PWD  docker mount  mnt detectron python2 tools infer simple py     cfg  configs 12 2017 baselines e2e mask rcnn R 101 FPN 2x yaml       output dir  mnt detectron visualizations       image ext jpg       wts https   s3 us west 2 amazonaws com detectron 35861858 12 2017 baselines e2e mask rcnn R 101 FPN 2x yaml 02 32 51 SgT4y1cO output train coco 2014 train coco 2014 valminusminival generalized rcnn model final pkl   demo         This will put the demo output in the docker mount folder      Use cases We foresee our approach being useful for image data where      manual segmentation is needed but problematic  time  difficulty        and   there are not enough examples to train a classifier directly on the dataset  Our focus is currently on serving the biological microscopy community  but segmenting objects within images without specifically training on those objects has even broader applications      Input format So far we have tested  jpg files  Other image formats TBD      Output Person and dog are  labels  within the COCO dataset used to train Detectron  As expected it easily infers the correct segmentation and labels   div align  center      img src  images guydog2 jpg   width  400px      img src  images results jpg ver guydog2 labeled jpg   width  400px     div   Tardigrades are no problem   div align  center      img src  images Tardigrade false colour jpg   width  400px      img src  images results jpg ver Tardigrade false colour labeled jpg   width  400px       object    div   These stem cells are difficult      div align  center      img src  images cells1 1 png   width  400px      img src  images results jpg ver cells1 1 labeled jpg   width  400px     div   We thought  maybe we can make the cells look like fruit  After changing the lookup table for the image  we did much better    div align  center      img src  images cells1 1 orange jpg   width  400px      img src  images results jpg ver cells1 1 orange labeled jpg   width  400px     div   Detectron does really well at segmenting individual  real  oranges    div align  center      img src  images oranges fruit only jpg   width  400px      img src  images results jpg ver oranges fruit only labeled jpg   width  400px     div   So we thought  what if we make our cells look even  i  more   i  like oranges  We tried out one of the image transformations available in  Prisma  https   prismalabs ai about html  to produce the image on the left  then segmented it with Detectron      div align  center      img src  images cells1 1 orange Carribean jpg   width  400px      img src  images results jpg ver cells1 1 orange Carribean labeled jpg   width  400px     div   For our filament images  no segmentation is predicted for the raw image  left   but after applying an image transformation in Prisma   middle   we can get segments again  right     div align  center      img src  images filament original jpg   width  267px      img src  images filament rod jpg   width  267px      img src  images results jpg ver filament rod labeled jpg   width  267px     div      Validation Currently  we re learning what seems to work and what doesn t just by looking at the Detectron s analysis of our test images  Defining validation metrics will be important moving forward  e g  annotated microscopy image sets       Future 1  Exploring internal features of Detectron  rather than the final segmentation output  as alternatives for segmenting objects generically  2   Tricking  Detectron into segmenting our objects by choosing appropriate color lookup tables  3  Building a training dataset in the COCO format containing cells  filaments  particles  etc from microscopy images      FAQ Q  I m having trouble installing   A  Our experience in getting Detectron running is documented  here  centos install md   and much more detail is available at via  Detectron itself  https   github com facebookresearch Detectron blob master INSTALL md    Q  Shouldn t you actually train your system to recognize cells instead   A  We re definitely excited about taking this approach  but our initial idea was to see whether Detectron would be able to identify cells without additional training  in the same way  DeepMask  https   arxiv org pdf 1506 06204 pdf  could identify monkeys without prior training  Although direct segmentation of grayscale images was entirely unsuccessful  we ve gotten promising results by trying to  trick  Detectron into recognizing specific structures by pseudocoloring images  i e  using a LUT       References    Detectron  https   github com facebookresearch detectron   Ross Girshick  Ilija Radosavovic  Georgia Gkioxari  Piotr Doll r and Kaiming He  2018     Learning to Segment Object Candidates  https   arxiv org abs 1506 06204   Pedro O  Pinheiro  Ronan Collobert  and Piotr Doll r  arXiv  2015     Mask R CNN  https   arxiv org pdf 1703 06870 pdf   Kaiming He  Georgia Gkioxari  Piotr Doll r  Ross Girshick  arVix  2018      People    Jay Newby  http   newby web unc edu    UNC  Chapel Hill  NC  jaynewby email unc edu    Ben Walker  https   github com bwalker1   UNC  Chapel Hill  NC  walkeb6 live unc edu    Mike Pablo  http   github com mikepab   UNC  Chapel Hill  NC  mikepab live unc edu    Sherry Chao  http   github com shark8078   UNC  Chapel Hill  NC  hchao email unc edu    Ian Seim  https   github com iseim   UNC  Chapel Hill  NC  iseim live unc edu ","software":"md","book":"NCBI-Hackathons","full_link":"https://github.com/NCBI-Hackathons/CakeCell"},{"name":"zimenglan-sysu-512/pt-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":809,"playcount":7187,"description":"zimenglan-sysu-512/pt-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      e g      experiments scripts faster rcnn alt opt sh 0 VGG16   set EXP DIR seed rng1701 RNG SEED 1701    alt opt  refers to the alternating optimization training algorithm described in the NIPS paper   ","software":"md","book":"zimenglan-sysu-512","full_link":"https://github.com/zimenglan-sysu-512/pt-faster-rcnn"},{"name":"weitaoatvison/faster-rcnn","artist":"train, rcnn, faster, shell, network","id":810,"playcount":8926,"description":"weitaoatvison/faster-rcnn train, rcnn, faster, shell, network This project forked from https   github com rbgirshick py faster rcnn      Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"weitaoatvison","full_link":"https://github.com/weitaoatvison/faster-rcnn"},{"name":"sjchoi86/dl_tutorials_10weeks","artist":"deep, learn, network, convolut, imag","id":811,"playcount":5276,"description":"sjchoi86/dl_tutorials_10weeks deep, learn, network, convolut, imag   Deep Learning Tutorial      45 Papers   TF implementations     Topics  papers      Modern CNNs   Alex Krizhevsky  et al   ImageNet Classification with Deep Convolutional Neural Networks   NIPS  2012   Christian Szegedy  et al   Going Deeper with Convolutions   CVPR  2015   Christian Szegedy  et al   Inception v4  Inception ResNet and the Impact of Residual Connections on Learning   ArXiv  2016   Kaiming He  et al   Deep Residual Learning for Image Recognition   CVPR  2016   Andreas Veit  et al   Residual Networks are Exponential Ensembles of Relatively Shallow Networks   ArXiv  2016   Sergey Zagoruyko and Nikos Komodakis  Wide Residual Networks   ArXiv  2016      Regularization   Nitish Srivastava  et al   Dropout  A Simple Way to Prevent Neural Networks from Overfitting   JMLR  2014   Sergey Ioffe and Christian Szegedy  Batch Normalization  Accelerating Deep Network Training by Reducing Internal Covariate Shift  ArXiv  2015      Algorithms behind AlphaGo   David Silver et al   Mastering the game of Go with deep neural networks and tree search   Nature  2016      Optimization Methods   Momentum  NAG  AdaGrad  AdaDelta  RMSprop  ADAM   Diederik Kingma and Jimmy Bam  ADAM  A Method For Stochastic Optimization   ICLR  2015      Restricted Boltzmann Machine   Geoffrey Hinton   A Practical Guide to Training Restricted Boltzmann Machines   2010      Semantic Segmentation   Jonathan Long et al   Fully Convolutional Networks for Semantic Segmentation   CVPR  2015   Liang Chieh Chen et al   Semantic Image Segmentation with Deep Convolutional Nets and Fully Connected CRFs   CVPR  2015   Hyeonwoo Noh et al   Learning Deconvolution Network for Semantic Segmentation   ICCV  2015   Liang Chieh Chen et al   DeepLab  Semantic Image Segmentation with Deep Convolutional Nets  Atrous Convolution  and Fully Connected CRFs   ArXiv  2016      Weakly Supervised Localization   Maxime Oquab et al   Is object localization for free    Weakly supervised learning with convolutional neural networks   CVPR  2015   Bolei Zhou et al   Learning Deep Features for Discriminative Localization   CVPR  2016      Image detection methods   Ross Girshick et al   Rich feature hierarchies for accurate object detection and semantic segmentation   CVPR  2014   Kaiming He et al   Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition   CVPR  2015   Ross Girshick   Fast R CNN   ICCV  2015   Shaoqing Ren et al   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks   NIPS  2015   Joseph Redmon et al   You Only Look Once  Unified  Real Time Object Detection   CVPR  2016   Donggeun Yoo et al   AttentionNet  Aggregating Weak Directions for Accurate Object Detection   ICCV  2015   Wei Liu et al   SSD  Single Shot MultiBox Detector   ECCV  2016   Joseph Redmon  Ali Farhadi   YOLO9000  Better  Faster  Stronger   ArXiv  2017      Visual Q A   Hyeonwoo Noh et al   Image Question Answering using Convolutional Neural Network with Dynamic Parameter Prediction   CVPR  2015   Akira Fukui et al   Multimodal Compact Bilinear Pooling for VQA   CVPR  2016      Deep reinforcement learning   Volodymyr Mnih et al   Playing Atari with Deep Reinforcement Learning   NIPS  2013   Hado van Hasselt et al   Deep Reinforcement Learning with Double Q learning   AAAI  2016      Recurrent Neural Networks   Alex Graves   Generating Sequences With Recurrent Neural Networks   ArXiv  2013      Word embedding   Tomas Mikolov et al   Distributed Representations of Words and Phrases and their Compositionality   NIPS  2013      Image captioning   Oriol Vinyals et al   Show and Tell  A Neural Image Caption Generator   CVPR  2015   Kelvin Xu et al   Show  Attend and Tell  Neural Image Caption Generation with Visual Attention   ICML  2015   Justin Johnson et al   DenseCap  Fully Convolutional Localization Networks for Dense Captioning   CVPR  2016      Neural Styles   Leon A  Gatys et al   Texture Synthesis Using Convolutional Neural Networks   NIPS  2015   Aravindh Mahendran and Andrea Vedaldi   Understanding Deep Image Representations by Inverting Them   CVPR  2015   Leon A  Gatys et al   A Neural Algorithm of Artistic Style   ArXiv  2015      Generative adversarial networks   Ian J  Goodfellow et al   Generative Adversarial Networks   NIPS  2015   Alec Radford et al   Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks   ICLR  2016   Scott Reed et al   Generative Adversarial Text to Image Synthesis   ICML  2016   Donggeun Yoo et al   Pixel Level Domain Transfer   ECCV  2016   Phillip Isola et al   Image to Image Translation with Conditional Adversarial Networks   ArXiv  2016   Anh Nguyen et al   Plug   Play Generative Networks  Conditional Iterative Generation of Images in Latent Space   ArXiv  2016   Scott Reed et al   Learning What and Where to Draw   NIPS  2016     and implementations  which can be found in  TF 101  https   github com sjchoi86 Tensorflow 101     Basic Python usage  numpy  matplotlib        Handling MNIST   Logistic regression   Multilayer Perceptron   Convolutional Neural Network    Denoising Autoencoders   Convolutional    Class Activation Map   Semantic Segmentation    Using Custom Dataset   Recurrent Neural Network   Char RNN   Word2Vec   Neural Style ","software":"md","book":"sjchoi86","full_link":"https://github.com/sjchoi86/dl_tutorials_10weeks"},{"name":"lcybuzz/Personal-Instance-Segmentation-Paper-Record","artist":"paper, year, network, page, descriptionbr","id":812,"playcount":15185,"description":"lcybuzz/Personal-Instance-Segmentation-Paper-Record paper, year, network, page, descriptionbr   Personal Instance Segmentation Paper Record   Under construction    Table of Contents    Deep Learning Methods   deep learning methods     Rank   Deep Learning Methods  Br           Br       Mask R CNN     Br          Br       MNC        InstanceFCN        Dynamically Instantiated Network        FCIS        PANet    Br         Br       MPA        DWT        BAIS        MaskLab        InstanceCut        SGN        PGN     Br     Deep Learning Methods        SDS      Paper     Simultaneous Detection and Segmentation  Br     Year    ECCV 2014  Br     Authors      Bharath Hariharan  http   home bharathh info     Pablo Arbelaez  https   biomedicalcomputervision uniandes edu co     Ross Girshick  http   www rossgirshick info     Jitendra Malik  https   people eecs berkeley edu  malik    Br      Pages    https   www2 eecs berkeley edu Research Projects CS vision shape sds    Br     Description     Br         Hypercolumns      Paper     Hypercolumns for Object Segmentation and Fine grained Localization  Br     Year    CVPR 2015 Oral Br     Authors      Bharath Hariharan  http   home bharathh info     Pablo Arbelaez  https   biomedicalcomputervision uniandes edu co     Ross Girshick  http   www rossgirshick info    Br      Pages    https   github com bharath272 sds   Br     Description     Br         CFM      Paper     Convolutional Feature Masking for Joint Object and Stuff Segmentation  Br     Year    CVPR 2015  Br     Authors      Jifeng Dai  http   www jifengdai org     Kaiming He  http   kaiminghe com     Jian Sun  http   www jiansun org     Br     Pages       Br     Description     Br            Monocular Object Instance Segmentation and Depth Ordering with CNNs       Paper     Monocular Object Instance Segmentation and Depth Ordering with CNNs  Br     Year    ICCV 2015  Br     Authors      Ziyu Zhang  https   ziyu zhang github io     Alexander Schwing  http   alexander schwing de     Sanja Fidler  http   www cs utoronto ca  fidler     Raquel Urtasun  http   www cs toronto edu  urtasun    Br     Pages       Br     Description     Br          DeepMask      Paper     Learning to segment object candidates  Br     Year    NIPS 2015  Br     Authors      Pedro O  Pinheiro  http   www pedro opinheiro com     Tsung Yi Lin  https   scholar google de citations user  BPdgV0AAAAJ hl en oi sra    Ronan Collobert  https   scholar google de citations user 32w7x1cAAAAJ hl en oi sra    Piotr Doll r  https   pdollar github io    Br     Pages       Br     Description     Br         MNC         Paper     Instance aware Semantic Segmentation via Multi task Network Cascades Br     Year    CVPR 2016 Oral Br     Authors      Jifeng Dai  http   www jifengdai org     Kaiming He  http   kaiminghe com     Jian Sun  http   www jiansun org     Br     Pages     https   github com daijifeng001 MNC  Br     Description     Br  1            differentiating instances  estimating masks  categorizing objects                 Br  2             instance      bounding box    RPN   Br  3    mask       bbox    mask  bbox  ROI Warp        2                   Br  4         bbox mask    instance                           bbox            bbox    mask        mask              Br  5     5                 stage 1  2  3           class bbox  proposal      mask          stage 2 3   Br          SharpMask      Paper     ILearning to Refine Object Segments  Br     Year    ECCV 2016 Spotlight  Br     Authors     Pedro O  Pinheiro  http   www pedro opinheiro com     Tsung Yi Lin  https   scholar google de citations user  BPdgV0AAAAJ hl en oi sra    Ronan Collobert  https   scholar google de citations user 32w7x1cAAAAJ hl en oi sra    Piotr Doll r  https   pdollar github io    Br      Pages      Br     Description     Br         InstanceFCN         Paper     Instace sensitive Fully Convolutional Networks  Br     Year    ECCV 2016  Br     Authors      Jifeng Dai  http   www jifengdai org     Kaiming He  http   kaiminghe com     Yi Li  https   liyi14 github io     Shaoqing Ren  http   shaoqingren com     Jian Sun  http   www jiansun org    Br      Pages      Br     Description     Br  1  DL  Instance segmentation     paper   FCN      instance sensitive InstanceFCN       pixel    instance relative position  assemble    output instance candidate  2    Instance sensitive score maps     FCN  each output pixel is a classifier of an object category     each output pixel is a classifier of relative positions of instances     Instance assembling module       sliding window   k x k        k 2 relative position                   score map  assemble  3          InstanceFCN  local coherence          high dimensional layer           inference              multi scale                         instance mask         instance     4             training inference                   MPA        Paper     Multi scale Patch Aggregation  MPA  for Simultaneous Detection and Segmentation  Br     Year    CVPR 2016 Oral  Br     Authors      Shu Liu  http   shuliu me     Xiaojuan Qi  http   kaiminghe com     Jianping Shi  http   shijianping me    Hong Zhang   Jiaya Jia  http   www cse cuhk edu hk leojia    Br      Pages      Br     Description     Br  1             patch instance segmentation      patch                      Br  2             VGG16    feature map        patch     ROI pooling       patch align                      label segmentation mask  patch                 Br  3    patch label mask         patch          aggregate      label patch mask   Br  4           patch              inference           path                  mask                             patch                                       Reversible Recursive Instance Level Object Segmentation       Paper     Reversible Recursive Instance Level Object Segmentation  Br     Year    CVPR 2016   Br     Authors     Xiaodan Liang  http   www cs cmu edu  xiaodan1     Yunchao Wei  https   weiyc github io     Xiaohui Shen  http   users eecs northwestern edu  xsh835     Zequn Jie  http   jiezequn me     Jiashi Feng  https   sites google com site jshfeng    Liang Lin   Shuicheng Yan  https   www ece nus edu sg stfpage eleyans    Br      Pages      Br     Description     Br        MultiPathNet      Paper     A MultiPath Network for Object Detection  Br     Year    BMVC 2016  Br     Authors      Sergey Zagoruyko  http   imagine enpc fr  zagoruys     Adam Lerer  http   www pedro opinheiro com     Tsung Yi Lin  https   vision cornell edu se3 people tsung yi lin     Pedro O  Pinheiro  http   www pedro opinheiro com    Br      Pages    https   github com facebookresearch multipathnet   Br     Description     Br          Dynamically Instantiated Network          Paper     Pixelwise Instance Segmentation with a Dynamically Instantiated Network  Br     Year    CVPR 2017  Br     Authors      Anurag Arnab  http   www robots ox ac uk  aarnab     Philip Torr  http   www robots ox ac uk  phst   Br     Pages    http   www robots ox ac uk  aarnab instances dynamic network html   Br     Description     Br  1        paper              segmentation detection    instance CRF  instance          CRFasRNN           Br  2  semantic segmentation   semantic CRF   Br  3  Instance CRF unary potential       box term  global term shape term    box term global term   detection segmentation       shape term        shape exemplar     Pairwise term  densely connected Gaussian potentials   Br  4  loss  cross entropy loss    groundtruth prediction        IoU      Br         FCIS         Paper      Fully Convolutional Instance aware Semantic Segmentation  Br     Year    CVPR 2017 Spotlight  Br     Authors      Yi Li  https   liyi14 github io      Haozhi Qi  https   xjqi github io     Jifeng Dai  http   www jifengdai org    Xiangyang Ji   Yichen Wei  https   www microsoft com en us research people yichenw     Br     Pages    https   github com msracver FCIS   Br     Description     Br  1    InstanceFCN position sensitive score map        end to end                Br  2  backbone resnet 101  conv4        RPN    ROI       2K 2 C 1      score map       ROI    K K       assemble      ROI inside  ROI outside  score map    inside outside score map           pixel       1                  2                    max softmax    ROI    segmentation mask   Br  3          encode K K               1           instance       2  ROI              3         ROI     subnetwork              Br          DWT        Paper     Deep Watershed Transformation for Instance Segmentation  Br     Year    CVPR 2017   Br     Authors     Min Bai  http   www cs toronto edu  mbai     Raquel Urtasun  http   www cs toronto edu  urtasun    Br     Pages     https   github com min2209 dwt  Br     Description     Br  1          instance segmentation  Direction Network Watershed Transform Network     2  Direction Network   pixel                3  Watershed Transform Network                 16 Bin      Bin 0          4               over segmentation   5         confidence score            6    Bin          loss                BAIS        Paper     Boundary aware Instance Segmentation Br     Year    CVPR 2017  Br     Authors     Zeeshan Hayder  https   scholar google com au citations user K2INPyYAAAAJ hl Br  en    Xuming He  https   xmhe bitbucket io     Mathieu Salzmann  http   ttic uchicago edu  salzmann    Br     Pages     https   vitalab github io deep learning 2017 08 22 boundary aware html Br     Description    Br  1             instance segmentation        bounding box                 bounding box    object mask  OMN   object                       2  OMN                        K boundary aware object mask    decode    object mask  3    MNC    multi stage             object mask   bounding box  refine  4                 object mask bounding box feature                  Instancecut        Paper     Instancecut  From edges to instances with multicut  Br     Year    CVPR 2017  Br     Authors    Alexander Kirillov  Evgeny Levinkov   Bjoern Andres  http   www andres sc    Bogdan Savchynskyy   Carsten Rother  https   hci iwr uni heidelberg de vislearn    Br     Pages     Br     Description    Br  1            instanc agnostic segmentation edge detection instance segmentation        Br  2              FCN               sharp edge            image partition block  segmentation edge     instance             superpixel             Br  3                     instance        soa                                                   cityscape                                      Br         Mask R CNN          Paper     Mask R CNN  Br     Year    ICCV 2017  Br     Authors     Kaiming He  http   kaiminghe com     Georgia Gkioxari  https   gkioxari github io     Piotr Doll r  https   pdollar github io     Ross Girshick  http   www rossgirshick info    Br     Pages     Br  https   github com facebookresearch Detectron  Br  https   github com matterport Mask RCNN  Br     Description    Br  1   Faster R CNN      Mask Head           mask   Br  2         ResNeXt FPN    ROI      C2 C5   level  feature  Mask Cls Head      Br  3  Mask Head          mask     Cls Head                                       instance segmentation                 Br  4  ROI Align  ROI pooling               feature                 feature          mask        Br  5  Mask R CNN    Deterctron             Br          SGN        Paper     SGN  Sequential grouping networks for instance segmentation  Br     Year    ICCV 2017  Br     Authors     Shu Liu  http   shuliu me     Jiaya Jia  http   www cse cuhk edu hk  leojia     Sanja Fidler  https   www cs utoronto ca  fidler     Raquel Urtasun  http   www cs toronto edu  urtasun    Br     Pages     Br     Description    Br  1                            instance        breakpoint                                Br  2     breakpoints    breakpoints                                                 Br          BlitzNet      Paper     BlitzNet  A Real Time Deep Network for Scene Understanding  Br     Year    ICCV 2017  Br     Authors      Nikita Dvornik  http   lear inrialpes fr people mdvornik     Konstantin Shmelkov  http   lear inrialpes fr people kshmelko     Julien Mairal  http   lear inrialpes fr people mairal     Cordelia Schmid  http   lear inrialpes fr people schmid  Br     Pages    http   thoth inrialpes fr research blitznet  Br     Description    Br          PANet         Paper     Path Aggregation Network for Instance Segmentation  Br     Year    CVPR 2018 Spotlight  Br     Authors     Shu Liu  http   shuliu me    Lu Qi  Haifang Qin   Jianping Shi  http   shijianping me     Jiaya Jia  http   www cse cuhk edu hk  leojia    Br     Pages     Br     Description    Br  1  Mask R CNN     COCO 2017 Instance    paper                           Br  2   FPN     Bottom up Path Augmentation                    Br  3  Adaptive Feature Pooling       level                 MAX SUM      box   fc1 fc2         mask          Br  4  mask                   fuse                           Br          MaskLab        Paper     MaskLab  Instance Segmentation by Refining Object Detection with Semantic and Direction Features   Br     Year    CVPR 2018  Br     Authors     Liang Chieh Chen  http   liangchiehchen com     Alexander Hermans  https   www vision rwth aachen de person 10     George Papandreou  http   ttic uchicago edu  gpapan     Florian Schroff  http   www florian schroff de     Peng Wang  https   scholar google de citations user 7lLdhrIAAAAJ hl en oi ao   Hartwig Adam  Br     Pages     Br     Description    Br  1  Liang Chieh Chen xxLab       detection based segmentation based   instance       DeepLab           Br  2    box detection  semantic segmentation logits direction prediction logits     box detection       bounding box      semantic segmentation           label map  direction prediction      pixel      instance        Br  3          bbox       semantic direction feature   crop        direction  assemble     instanceFCN         semantic direction feature map concat            Br  4    Hypercolumn  atrous  deform conv               mask r cnn 20180721    Br          PGN        Paper     MaskLab  Instance Segmentation by Refining Object Detection with Semantic and Direction Features   Br     Year    CVPR 2018  Br     Authors     Ke Gong  https   github com Engineering Course    Xiaodan Liang  http   www cs cmu edu afs cs user xiaodan1 www     Yicheng Li  https   github com yicheng li    Yimin Chen  https   scholar google com citations user rpLGwAQAAAAJ hl en    Ming Yang  https   github com ufoym    Liang Lin  http   www linliang net   Br     Pages    https   github com Engineering Course CIHP PGN Br     Description    Br  1          instance segmentation   paper                                      Br  2    backbone    segmentation branch  edge detection branch refinement branch     backbone resnet101       block concat       feature      branch   segmentation branch edge detection branch           pyramid pooling              deep supervision        block feature    ASPP                       concat    refinement branch                 Br  3  instance partition                  edge      instance segments               BFS      instance pixel      grouping                       Br  4     CHIP                        Br  ","software":"md","book":"lcybuzz","full_link":"https://github.com/lcybuzz/Personal-Instance-Segmentation-Paper-Record"},{"name":"dariogarcia/caffe4Tiramisu","artist":"caff, learn, model, deep, layer","id":813,"playcount":3658,"description":"dariogarcia/caffe4Tiramisu caff, learn, model, deep, layer   Caffe4Tiramisu  This projects extends Caffe for the Tiramisu project  Mostly it modifies the feature extraction code for easier interaction  changing the output to an image vector file      GoogLeNet models  The GoogLeNet models needed to run feature extraction are added in this repository  This is done for the sake of simplicity  even though its not recommended due to their size  50MB   Instructions on how to get them can be found on the original caffe site      Before running  After download  two parameters need to be modified in the prototxt file  e g     gits caffe4Tiramisu models bvlc googlenet feat extract prototxt     the location of the mean file shold be set to your local imagenet mean binaryproto  e g    your local path caffe4Tiramisu data ilsvrc12    the file list txt  by default set to  tmp file list txt  This two column file of the form  image path jpg 0  defines the image  SINGULAR  to process  Its a required temporal file      Calling feature extraction  example   your local path caffe4Tiramisu build tools extract featuresTiramisu  your local path caffe4Tiramisu models bvlc googlenet bvlc googlenet caffemodel  your local path caffe4Tiramisu models bvlc googlenet feat extract prototxt inception 4e output  tmp tst outFileName outputType     the target directory   tmp tst in the example  must exist    the layers to extract  inception 4e output  can be multiple  separated by commas   only one image is process per call   output is stored in  tmp tst outFileName   output type is either 1  char file  or 2  binary file     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"dariogarcia","full_link":"https://github.com/dariogarcia/caffe4Tiramisu"},{"name":"zhong110020/caffe","artist":"caff, model, learn, communiti, berkeley","id":814,"playcount":2487,"description":"zhong110020/caffe caff, model, learn, communiti, berkeley   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zhong110020","full_link":"https://github.com/zhong110020/caffe"},{"name":"abner2015/Faster-rcnn-tensorflow","artist":"shell, train, model, rcnn, demo","id":815,"playcount":3780,"description":"abner2015/Faster-rcnn-tensorflow shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"abner2015","full_link":"https://github.com/abner2015/Faster-rcnn-tensorflow"},{"name":"vohoaiviet/person_search","artist":"shell, code, gpu, python, build","id":816,"playcount":3717,"description":"vohoaiviet/person_search shell, code, gpu, python, build   Person Search Project  This repository hosts the code for our paper  Joint Detection and Identification Feature Learning for Person Search  https   arxiv org abs 1604 01850   The code is modified from the py faster rcnn written by Ross Girshick       Installation  1  Clone this repo   recursively         Shell   git clone   recursive https   github com ShuangLI59 person search git        2  Build Caffe with python layers and interface    We modified caffe based on  Yuanjun s fork  https   github com yjxiong caffe tree mem   which supports multi gpu and memory optimization     Apart from the official installation  prerequisites  http   caffe berkeleyvision org installation html   we have several other dependencies        cudnn v5 1  https   developer nvidia com cudnn      1 7 4    openmpi  https   www open mpi org     2 0 0     boost    1 55  A tip for Ubuntu 14 04   sudo apt get autoremove libboost1 54   then  sudo apt get install libboost1 55 all dev      Then compile and install the caffe with      Shell   cd caffe   mkdir build    cd build   cmake     DUSE MPI ON  DCUDNN INCLUDE  path to cudnn include  DCUDNN LIBRARY  path to cudnn lib64 libcudnn so   make  j8    make install   cd                Please refer to  this page  https   github com yjxiong caffe tree mem usage  for detailed installation instructions and troubleshooting   3  Build the Cython modules    Install some Python packages you might not have   Cython    python opencv    easydict    1 6     PyYAML    protobuf    mpi4py   Then      Shell   cd lib    make    cd              Experiments  1  Request the dataset from sli  at  ee cuhk edu hk or xiaotong  at  ee cuhk edu hk  academic only   Then       Shell   experiments scripts prepare data sh  path to the downloaded dataset zip        2  Download an  ImageNet pretrained  https   drive google com open id 0B67 d0rLRTQYUHFjU0pPSExhS1U  ResNet 50 model to  data imagenet models    3  Training with GPU 0       Shell   experiments scripts train sh 0   set EXP DIR resnet50          It will finish in around 18 hours  or you may directly download a    trained model    https   drive google com open id 0B67 d0rLRTQYbVFENlVjdXRSWVE  to  output psdb train resnet50    4  Evaluation      By default we use 8 GPUs for faster evaluation  Please adjust the  experiments scripts eval test sh  with your hardware settings  For example  to use only one GPU  remove the  mpirun  n 8  in L14 and change L16 to    gpu 0           Shell     experiments scripts eval test sh resnet50 50000 resnet50              The result should be around         Shell     search ranking        mAP   75 47        top  1   78 62        top  5   90 24        top 10   92 38           5  Visualization      The evaluation will also produce a json file  output psdb test resnet50 resnet50 iter 50000 results json  for visualization  Just copy it to  vis   and run  python2  m SimpleHTTPServer   Then open a browser and go to  http   localhost 8000 vis  http   localhost 8000 vis          Visualization Webpage  vis jpg  Visualization Webpage       Citation       article xiaoli2017joint        title  Joint Detection and Identification Feature Learning for Person Search         author  Xiao  Tong and Li  Shuang and Wang  Bochao and Lin  Liang and Wang  Xiaogang         journal  arXiv 1604 01850         year  2017            Repo History  The first version of our paper was published in 2016  We have made substantial improvements since then and published a new version of paper in 2017  The original code was moved to branch  v1  and the new code has been merged to  master   If you have checked out our code before  please be careful on this and we recommend clone recursively into a new repo instead  ","software":"md","book":"vohoaiviet","full_link":"https://github.com/vohoaiviet/person_search"},{"name":"juhuyan/Faster_rcnn_TF","artist":"shell, train, model, rcnn, demo","id":817,"playcount":3780,"description":"juhuyan/Faster_rcnn_TF shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"juhuyan","full_link":"https://github.com/juhuyan/Faster_rcnn_TF"},{"name":"OjasKale/Object-Tracking-System-for-self-driving-cars","artist":"shell, make, aptget, build, object","id":818,"playcount":3193,"description":"OjasKale/Object-Tracking-System-for-self-driving-cars shell, make, aptget, build, object   Object and lane detection for self driving cars   Object and lane detection for videos and or images using  py faster rcnn  https   github com rbgirshick py faster rcnn  and OpenCV    Object detection is based on the research conducted by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research  described in  this  https   arxiv org pdf 1506 01497 pdf  paper       Sample output image  https   cloud githubusercontent com assets 14006620 25769619 788d872a 31d3 11e7 88a3 e32a1431308d png       Installation      Install pre requisites    Install the following packages if not already installed       Shell   sudo apt get update   sudo updatedb   sudo apt get install libgflags dev libgoogle glog dev liblmdb dev python pip cmake cython python opencv   sudo apt get install python setuptools libgfortran3 build essential gfortran python all dev libatlas base dev   sudo apt get install libprotobuf dev libleveldb dev libsnappy dev libopencv dev libhdf5 serial dev protobuf compiler   sudo pip install numpy            Install CUDA  You can refer  this  http   www r tutor com gpu computing cuda installation cuda7 5 ubuntu  to install CUDA for your system  Or  you can follow steps given below      Note  Depending upon platform and CUDA version  below names and deb package will defer        Shell   sudo apt get install nvidia cuda toolkit   sudo apt get install   no install recommends libboost all dev   wget https   developer nvidia com compute cuda 8 0 Prod2 local installers     sudo dpkg  i cuda repo ubuntu1404 8 0 local ga2 8 0 61 1 amd64 deb   sudo apt get install cuda           Add following lines in    bashrc       Shell   export CUDA HOME  usr local cuda 8 0    export LD LIBRARY PATH   CUDA HOME  lib64    PATH   CUDA HOME  bin   PATH     export PATH              Source the bashrc file      source    bashrc        Build modules  1  Clone this repository      Shell   git clone https   github com onkarganjewar cmpe295 masters project          2  Build cython modules      Shell   cd faster rcnn resnet lib    make        3  Update Makefile config  Sample Makefile config can be found  here  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0        Shell   cd    caffe fast rcnn    cp Makefile config example Makefile config     In your Makefile config  uncomment following lines  WITH PYTHON LAYER    1  USE CUDNN    1        4  Build Caffe and Pycaffe       Shell   cd faster rcnn resnet caffe fast rcnn   mkdir build   cd build    cmake      make all   make install   make pycaffe             Demo 1  Store the input files at       Shell   cd faster rcnn resnet data input         2  Run the demo       Shell   cd faster rcnn resnet tools                Shell     When input is ONLY image files  run this command   python demo py      When input is ONLY video files  run this command   python demo py   vdo        3  Retrieve the output files stored at       Shell   cd faster rcnn resnet data output            Output video  Click on the thumbnail below to play the sample output video on YouTube         Object and lane detection  https   img youtube com vi tiC2fCnUZZM hqdefault jpg   https   www youtube com watch v tiC2fCnUZZM  ","software":"md","book":"OjasKale","full_link":"https://github.com/OjasKale/Object-Tracking-System-for-self-driving-cars"},{"name":"caomw/fast-rcnn_flow","artist":"rcnn, fast, shell, matlab, voc","id":819,"playcount":10897,"description":"caomw/fast-rcnn_flow rcnn, fast, shell, matlab, voc    Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val   fast rcnn flow ","software":"md","book":"caomw","full_link":"https://github.com/caomw/fast-rcnn_flow"},{"name":"tmfdk333/fast-rcnn_deepcheck","artist":"rcnn, fast, shell, matlab, voc","id":820,"playcount":11182,"description":"tmfdk333/fast-rcnn_deepcheck rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"tmfdk333","full_link":"https://github.com/tmfdk333/fast-rcnn_deepcheck"},{"name":"shallowyuan/cosegmentor","artist":"train, rcnn, faster, shell, network","id":821,"playcount":8855,"description":"shallowyuan/cosegmentor train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"shallowyuan","full_link":"https://github.com/shallowyuan/cosegmentor"},{"name":"XHPlus/detection","artist":"train, rcnn, faster, shell, network","id":822,"playcount":8855,"description":"XHPlus/detection train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"XHPlus","full_link":"https://github.com/XHPlus/detection"},{"name":"onkarganjewar/cmpe295-masters-project","artist":"shell, make, aptget, build, object","id":823,"playcount":3193,"description":"onkarganjewar/cmpe295-masters-project shell, make, aptget, build, object   Object and lane detection for self driving cars   Object and lane detection for videos and or images using  py faster rcnn  https   github com rbgirshick py faster rcnn  and OpenCV    Object detection is based on the research conducted by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research  described in  this  https   arxiv org pdf 1506 01497 pdf  paper       Sample output image  https   cloud githubusercontent com assets 14006620 25769619 788d872a 31d3 11e7 88a3 e32a1431308d png       Installation      Install pre requisites    Install the following packages if not already installed       Shell   sudo apt get update   sudo updatedb   sudo apt get install libgflags dev libgoogle glog dev liblmdb dev python pip cmake cython python opencv   sudo apt get install python setuptools libgfortran3 build essential gfortran python all dev libatlas base dev   sudo apt get install libprotobuf dev libleveldb dev libsnappy dev libopencv dev libhdf5 serial dev protobuf compiler   sudo pip install numpy            Install CUDA  You can refer  this  http   www r tutor com gpu computing cuda installation cuda7 5 ubuntu  to install CUDA for your system  Or  you can follow steps given below      Note  Depending upon platform and CUDA version  below names and deb package will defer        Shell   sudo apt get install nvidia cuda toolkit   sudo apt get install   no install recommends libboost all dev   wget https   developer nvidia com compute cuda 8 0 Prod2 local installers     sudo dpkg  i cuda repo ubuntu1404 8 0 local ga2 8 0 61 1 amd64 deb   sudo apt get install cuda           Add following lines in    bashrc       Shell   export CUDA HOME  usr local cuda 8 0    export LD LIBRARY PATH   CUDA HOME  lib64    PATH   CUDA HOME  bin   PATH     export PATH              Source the bashrc file      source    bashrc        Build modules  1  Clone this repository      Shell   git clone https   github com onkarganjewar cmpe295 masters project          2  Build cython modules      Shell   cd faster rcnn resnet lib    make        3  Update Makefile config  Sample Makefile config can be found  here  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0        Shell   cd    caffe fast rcnn    cp Makefile config example Makefile config     In your Makefile config  uncomment following lines  WITH PYTHON LAYER    1  USE CUDNN    1        4  Build Caffe and Pycaffe       Shell   cd faster rcnn resnet caffe fast rcnn   mkdir build   cd build    cmake      make all   make install   make pycaffe             Demo 1  Store the input files at       Shell   cd faster rcnn resnet data input         2  Run the demo       Shell   cd faster rcnn resnet tools                Shell     When input is ONLY image files  run this command   python demo py      When input is ONLY video files  run this command   python demo py   vdo        3  Retrieve the output files stored at       Shell   cd faster rcnn resnet data output            Output video  Click on the thumbnail below to play the sample output video on YouTube         Object and lane detection  https   img youtube com vi tiC2fCnUZZM hqdefault jpg   https   www youtube com watch v tiC2fCnUZZM  ","software":"md","book":"onkarganjewar","full_link":"https://github.com/onkarganjewar/cmpe295-masters-project"},{"name":"zjmshao/caffe","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":824,"playcount":4066,"description":"zjmshao/caffe set, build, windowscommonsettingsprop, caff, cuda   Caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2015  CUDA 8 0  third party libraries   Baidu Yun  http   pan baidu com s 1hsN2hHq  or  Google Drive  https   drive google com open id 0B0OhXbSTAU1HSjM5MUdfZ2RPdFk   Please extract the archive into    windows thirdparty    Then  add the folder    windows thirdparty bins  to the environment variable  PATH        Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well       CUDA Download  CUDA Toolkit 8 0   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN     UseNCCL  to  false        cuDNN Download  cuDNN v5   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to add the    matlab  folder to Matlab search path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"zjmshao","full_link":"https://github.com/zjmshao/caffe"},{"name":"diy2learn/Mask-RCNN","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":825,"playcount":3813,"description":"diy2learn/Mask-RCNN “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   Mask RCNN A collection of notes  code snips for Mask RCNN Ado       Outline    Basics related concepts   basic concepts     A brief history   history     x x x x x x x x x x x     Basics concepts a name  basic concepts        Pytorch   We will you Pytorch for implementation of our Mask RCNN  thus if you are newbie  the following tutorials might be helpfull for you to start      This tutor discribes very well how to make a FCN network in Pytorch and apply for MNIST  link  http   adventuresinmachinelearning com pytorch tutorial deep learning          This  https   becominghuman ai almost any image classification problem using pytorch i am in love with pytorch 26c7aa979ec4  is tutor to fine tune with nearly all models in pytorch   This  https   medium com  14prakash understanding and implementing architectures of resnet and resnext for state of the art image cf51669e1624  explained resnet and resnext  Finally   here  https   github com Prakashvanapalli pytorch classifiers blob master tars resnext py  is Github for all emplimented codes       Selective search  a name  selective search    Grouping pixels into regions based on the similarity  The metric for similarity can be color texture  size  shape etc    e g HOG   The grouping is done hiearchically  from pixles to small regions  then mering small regions to larger regions  This was explained very well in this  slide    asses docs selective search stanford vision pdf       Bounding box regressor  a name  bbox reg   Using NN or SVM with the input is the extracted feature to regress the bounding box BB  around ROI to make the more precise  localize more precise around object    This  https   leonardoaraujosantos gitbooks io artificial inteligence content object localization and detection html  blog explained very well what is BBox regressor and how to do the regression    e g  Bounding box in a R CNN    asses images BBox reg png   picture credit  Bastian Leibe Ross Girshick       ROI pooling and ROI align in fast RCNN  ROIs with different sizes were projected to the feature map  last ConvNet layer   To garantee that the input size for the next FC layer will be the same for all of the ROIs  with different sizes   a ROI pooling was use  Briefly  it will devide the feature map  of size w x h  into a grid of fixed size  W x H   so for each image  a max pooling operation with kernel size   w W  x  h H   if stripe   1  will be applied  This was explained well  here  https   blog deepsense ai region of interest pooling explained   This operation make mis alignment due to the rounding of w W or h H  A direct mapping without rounding was used in ROI align  For example  if we have a ROI with size  5 7  and we will use a grid in ROI pooling of  2 2   We will devide this ROI into 4 sub ROIs with size   2 3   2 4   3 3   3 4   Then  max pooling value in each sub ROI  Now for ROI align  we will not need to devide  and round  the ROI into this different size sub ROI  We will interpolate value at 2 5 and 3 5  thus each sub ROI will be the same size  and thus the final bounding box will not be mis aligned        A brief history a name  history      Snap comparision    asses images rcnns comaprision png       R CNN   R CNN    asses images RCNN png    Work flow      Detect ROI using  selective search   selective search      Extract features for each ROI using a CNN  can be pre trained model e g VGG  ResNet         Classify using SVM    Tighten correct the bounding box  ROI  using a Box regressor           References   https   ardianumam wordpress com 2017 12 16 understanding how mask rcnn works for semactic segmentation    https   www youtube com watch v cSO1nUj495Y t 90s    Very good explaination  and beautiful blo   https   lilianweng github io lil log 2017 12 31 object recognition for dummies part 3 html r cnn  ","software":"md","book":"diy2learn","full_link":"https://github.com/diy2learn/Mask-RCNN"},{"name":"haoqiangda/3Faster-rcnn","artist":"shell, train, model, rcnn, demo","id":826,"playcount":3780,"description":"haoqiangda/3Faster-rcnn shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"haoqiangda","full_link":"https://github.com/haoqiangda/3Faster-rcnn"},{"name":"longcw/faster_rcnn_pytorch","artist":"train, rcnn, set, faster, model","id":827,"playcount":3245,"description":"longcw/faster_rcnn_pytorch train, rcnn, set, faster, model   Faster RCNN with PyTorch   Note    I re implemented faster rcnn in this project when I started learning PyTorch  Then I use PyTorch in all of my projects  I still remember it costed one week for me to figure out how to build cuda code as a pytorch layer     But actually this is not a good implementation and I didn t achieve the same mIOU as the original caffe code      This project is no longer maintained  So I suggest      You can still read and study this code if you want to re implement faster rcnn by yourself    You can use the better PyTorch implementation by  ruotianluo  https   github com ruotianluo pytorch faster rcnn  if you want to train  faster rcnn with your own data   This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 0  Install the requirements  you can use pip or  Anaconda  https   www continuum io downloads                 conda install pip pyyaml sympy h5py cython numpy scipy     conda install  c menpo opencv3     pip install easydict           1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py      License  MIT license  MIT  ","software":"md","book":"longcw","full_link":"https://github.com/longcw/faster_rcnn_pytorch"},{"name":"vohoaiviet/ResNeXt","artist":"resnext, cifar, imagenet, model, pretrain","id":828,"playcount":7020,"description":"vohoaiviet/ResNeXt resnext, cifar, imagenet, model, pretrain   ResNeXt  Aggregated Residual Transformations for Deep Neural Networks  By  Saining Xie  http   vcl ucsd edu  sxie    Ross Girshick  http   www rossgirshick info     Piotr Doll r  https   pdollar github io     Zhuowen Tu  http   pages ucsd edu  ztu     Kaiming He  http   kaiminghe com   UC San Diego  Facebook AI Research      Table of Contents 0   Introduction   introduction  0   Citation   citation  0   Requirements and Dependencies   requirements and dependencies  0   Training   training  0   ImageNet Pretrained Models   imagenet pretrained models  0   Third party re implementations   third party re implementations        News   Congrats to the ILSVRC 2017 classification challenge winner  WMW  http   image net org challenges LSVRC 2017 results   ResNeXt is the foundation of their new SENet architecture  a   ResNeXt 152  64 x 4d    with the Squeeze and Excitation module     Check out Figure 6 in the new  Memory Efficient Implementation of DenseNets  https   arxiv org pdf 1707 06990 pdf  paper for a comparision between ResNeXts and DenseNets   sub   DenseNet cosine is DenseNet trained with cosine learning rate schedule     sub   p align  center    img src  http   vcl ucsd edu resnext resnextvsdensenet png  width  480     p        Introduction  This repository contains a  Torch  http   torch ch  implementation for the  ResNeXt  https   arxiv org abs 1611 05431  algorithm for image classification  The code is based on  fb resnet torch  https   github com facebook fb resnet torch     ResNeXt  https   arxiv org abs 1611 05431  is a simple  highly modularized network architecture for image classification  Our network is constructed by repeating a building block that aggregates a set of transformations with the same topology  Our simple design results in a homogeneous  multi branch architecture that has only a few hyper parameters to set  This strategy exposes a new dimension  which we call  cardinality   the size of the set of transformations   as an essential factor in addition to the dimensions of depth and width      teaser  http   vcl ucsd edu resnext teaser png        Figure  Training curves on ImageNet 1K   Left   ResNet ResNeXt 50 with the same complexity   4 1 billion FLOPs   25 million parameters    Right   ResNet ResNeXt 101 with the same complexity   7 8 billion FLOPs   44 million parameters              Citation If you use ResNeXt in your research  please cite the paper       article Xie2016    title  Aggregated Residual Transformations for Deep Neural Networks     author  Saining Xie and Ross Girshick and Piotr Doll r and Zhuowen Tu and Kaiming He     journal  arXiv preprint arXiv 1611 05431     year  2016             Requirements and Dependencies See the fb resnet torch  installation instructions  https   github com facebook fb resnet torch blob master INSTALL md  for a step by step guide    Install  Torch  http   torch ch docs getting started html  on a machine with CUDA GPU   Install  cuDNN v4 or v5  https   developer nvidia com cudnn  and the Torch  cuDNN bindings  https   github com soumith cudnn torch tree R4    Download the  ImageNet  http   image net org download images  dataset and  move validation images  https   github com facebook fb resnet torch blob master INSTALL md download the imagenet dataset  to labeled subfolders      Training  Please follow  fb resnet torch  https   github com facebook fb resnet torch  for the general usage of the code  including  how  https   github com facebook fb resnet torch tree master pretrained  to use pretrained ResNeXt models for your own task   There are two new hyperparameters need to be specified to determine the bottleneck template      baseWidth   and    cardinality        1x Complexity Configurations Reference Table    baseWidth   cardinality                                 64          1               40          2               24          4               14          8               4           32              To train ResNeXt 50  32x4d  on 8 GPUs for ImageNet     bash th main lua  dataset imagenet  bottleneckType resnext C  depth 50  baseWidth 4  cardinality 32  batchSize 256  nGPU 8  nThreads 8  shareGradInput true  data  imagenet folder       To reproduce CIFAR results  e g  ResNeXt 16x64d for cifar10  on 8 GPUs     bash th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 128  nGPU 8  nThreads 8  shareGradInput true     To get comparable results using 2 4 GPUs  you should change the batch size and the corresponding learning rate     bash th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 64  nGPU 4  LR 0 05  nThreads 8  shareGradInput true th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 32  nGPU 2  LR 0 025  nThreads 8  shareGradInput true     Note  CIFAR datasets will be automatically downloaded and processed for the first time  Note that in the arXiv paper CIFAR results are based on pre activated bottleneck blocks and a batch size of 256  We found that better CIFAR test acurracy can be achieved using original bottleneck blocks and a batch size of 128       ImageNet Pretrained Models ImageNet pretrained models are licensed under CC BY NC 4 0      CC BY NC 4 0  https   i creativecommons org l by nc 4 0 88x31 png   https   creativecommons org licenses by nc 4 0         Single crop  224x224  validation error rate   Network               GFLOPS   Top 1 Error    Download                                                                    ResNet 50  1x64d        4 1     23 9           Original ResNet 50  https   github com facebook fb resnet torch tree master pretrained            ResNeXt 50  32x4d       4 1     22 2           Download  191MB   https   s3 amazonaws com resnext imagenet models resnext 50 32x4d t7            ResNet 101  1x64d       7 8     22 0           Original ResNet 101  https   github com facebook fb resnet torch tree master pretrained           ResNeXt 101  32x4d      7 8     21 2           Download  338MB   https   s3 amazonaws com resnext imagenet models resnext 101 32x4d t7           ResNeXt 101  64x4d      15 6    20 4           Download  638MB   https   s3 amazonaws com resnext imagenet models resnext 101 64x4d t7               Third party re implementations  Besides our torch implementation  we recommend to see also the following third party re implementations and extensions   1  Training code in PyTorch  code  https   github com prlz77 ResNeXt pytorch  1  Converting ImageNet pretrained model to PyTorch model and source   code  https   github com clcarwin convert torch to pytorch  1  Training code in MXNet and pretrained ImageNet models  code  https   github com dmlc mxnet tree master example image classification imagenet 1k  1  Caffe prototxt  pretrained ImageNet models  with ResNeXt 152   curves  code  https   github com cypw ResNeXt 1  code  https   github com terrychenism ResNeXt  ","software":"md","book":"vohoaiviet","full_link":"https://github.com/vohoaiviet/ResNeXt"},{"name":"HolmesShuan/Dynamic-Network-Surgery-Caffe-Reimplementation","artist":"layer, type, prune, surgeri, network","id":829,"playcount":4377,"description":"HolmesShuan/Dynamic-Network-Surgery-Caffe-Reimplementation layer, type, prune, surgeri, network   Dynamic Network Surgery Caffe Reimplementation Caffe reimplementation of dynamic network surgery GPU only cuDNN unsupported yet   br  Official repo at  here  https   github com yiwenguo Dynamic Network Surgery    https   github com yiwenguo Dynamic Network Surgery  br     Main Differences    We  didn t  prune the bias term    We make the selection of hyper parameters more clear and intuitive    We re adjust the organization of the codes  br   You may  monitor the change of weights sparsity  of convolution layers and fully connected layers during training    We re write the original convolution layer and inner product layer instead of creating new classes  br  It will be easier to reuse the existing   prototxt  without modifying the layer types       How to use   The sames as the original Caffe framework  br        make all  j8   USE NCCL 1 make all  j8 for multi GPU support     build tools caffe train   weights  ModelPath Ur caffemodel   solver  SolverPath solver prototxt  gpu 0     build tools caffe test   weights  ModelPath Ur caffemodel   model  StructPath train val prototxt  gpu 0  iterations 100   Please notice     CPU Version is not supported yet  but you may find it quite easy to rewrite conv layer cpp and innerproduct layer cpp from  cu files      You may load pre trained caffemodel into this framework to fine tune  highly recommended  or re train from the begining  remember to set the  threshold  in  train val prototxt   which will be mentioned below        Usage Example   Pre trained Caffemodel  br   AlexNet with BN  https   github com HolmesShuan AlexNet BN Caffemodel on ImageNet   https   github com HolmesShuan AlexNet BN Caffemodel on ImageNet  br  Sparse  50   convolution layers should  outperform  the full precison baseline     Pruned Layer   br      layer     name   conv1    type   Convolution    bottom   data    top   conv1    param       lr mult  1     decay mult  1       param       lr mult  2     decay mult  0         weight mask param   param       lr mult  0     decay mult  0       convolution param       num output  96     kernel size  11     stride  4     pad  2     threshold  0 6    based on the 68 95 99 7 rule  defalut 0 6      weight filler         type   gaussian        std  0 01           bias filler         type   constant        value  0             weight mask filler      omissible          type   constant          value  1    This term has been reset to 1 in caffe proto                     Dense Layer       layer     name   fc6    type   InnerProduct    bottom   pool5    top   fc6    param       lr mult  1     decay mult  1       param       lr mult  2     decay mult  0       inner product param       num output  4096     sparsity term  false    Default is true     weight filler         type   gaussian        std  0 005           bias filler         type   constant        value  0 1                   solver prototxt       net   models bvlc alexnet train val prototxt  base lr  0 001 lr policy   multistep  gamma  0 1 stepvalue  84000 display  20 max iter  162000 momentum  0 9 weight decay  0 00005 snapshot  6000 snapshot prefix   models bvlc alexnet alexnet BN  solver mode  GPU surgery iter gamma  0 0001     default 1e 4  Probability do surgery     1 gamma iter   power  surgery iter power  1     default 1          Tips 1  The selection of threshold is pretty tricky  It may differ a lot between different layers  2  If you encounter the vanishing gradient problem  then adjust  gamma  and  power  in  solver prototxt    br  If multiple attempts failed  then you may reduce the  threshold  based on the 68 95 99 7 rule    Threshold   Sparsity                              0 674   50  0 994   68  1 281   80  1 644   90  1 959   95       Citation Basic idea comes from       inproceedings guo2016dynamic        title    Dynamic Network Surgery for Efficient DNNs     author    Guo  Yiwen and Yao  Anbang and Chen  Yurong     booktitle    Advances in neural information processing systems  NIPS      year    2016         And base on Caffe framework       article jia2014caffe    Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor     Journal    arXiv preprint arXiv 1408 5093     Title    Caffe  Convolutional Architecture for Fast Feature Embedding     Year    2014         ","software":"md","book":"HolmesShuan","full_link":"https://github.com/HolmesShuan/Dynamic-Network-Surgery-Caffe-Reimplementation"},{"name":"ankurgupta7/fast-rcnn-attributes","artist":"rcnn, fast, shell, matlab, voc","id":830,"playcount":11405,"description":"ankurgupta7/fast-rcnn-attributes rcnn, fast, shell, matlab, voc     This project is for mutl label classification and localization of human describable attributes of an object  Still a work in progress       Authors  Ankur Gupta  Correspoding Author  Dr Austin Reiter      Forked README     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"ankurgupta7","full_link":"https://github.com/ankurgupta7/fast-rcnn-attributes"},{"name":"dinhtuyen/fast-rcnn","artist":"rcnn, fast, shell, matlab, voc","id":831,"playcount":11262,"description":"dinhtuyen/fast-rcnn rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  https   dl dropboxusercontent com s q4i9v66xq9vhskl fast rcnn experiments tgz dl 0    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  https   dl dropboxusercontent com s rkj8ngkoebpltlt voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz dl 0         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  https   dl dropboxusercontent com s y8supay93f7dj0i voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz dl 0         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  https   dl dropboxusercontent com s yiqm42vtvvw60dg voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz dl 0         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  https   dl dropboxusercontent com s a3loiewc4f4tnaj voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz dl 0         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  https   dl dropboxusercontent com s 7pctvinam6j2nho voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz dl 0     Fast R CNN VGG16 model  https   dl dropboxusercontent com s 53im2gut2jin2qq voc12 submission tgz dl 0  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"dinhtuyen","full_link":"https://github.com/dinhtuyen/fast-rcnn"},{"name":"zzdxfei/fast-rcnn","artist":"rcnn, fast, shell, matlab, voc","id":832,"playcount":11451,"description":"zzdxfei/fast-rcnn rcnn, fast, shell, matlab, voc   fast rcnn has been deprecated  Please see  Detectron  https   github com facebookresearch Detectron   which includes an implementation of  Mask R CNN  https   arxiv org abs 1703 06870        This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  https   dl dropboxusercontent com s q4i9v66xq9vhskl fast rcnn experiments tgz dl 0    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  https   dl dropboxusercontent com s rkj8ngkoebpltlt voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz dl 0         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  https   dl dropboxusercontent com s y8supay93f7dj0i voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz dl 0         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  https   dl dropboxusercontent com s yiqm42vtvvw60dg voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz dl 0         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  https   dl dropboxusercontent com s a3loiewc4f4tnaj voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz dl 0         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  https   dl dropboxusercontent com s 7pctvinam6j2nho voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz dl 0     Fast R CNN VGG16 model  https   dl dropboxusercontent com s 53im2gut2jin2qq voc12 submission tgz dl 0  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"zzdxfei","full_link":"https://github.com/zzdxfei/fast-rcnn"},{"name":"expertIOT/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":833,"playcount":8865,"description":"expertIOT/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"expertIOT","full_link":"https://github.com/expertIOT/py-faster-rcnn"},{"name":"s-gupta/rcnn-depth","artist":"model, imag, train, caff, download","id":834,"playcount":8316,"description":"s-gupta/rcnn-depth model, imag, train, caff, download       For more recent work that is faster and more accurate  please refer to our latest paper on  Cross Modal Distillation for Supervision Transfer  http   arxiv org pdf 1507 00448 pdf   Code and pre trained models are available    detection  https   github com s gupta fast rcnn tree distillation    instance segmentation  https   github com s gupta fast rcnn tree sds distillation         Learning Rich Features from RGB D Images for Object Detection and Segmentation   pdf  http   www cs berkeley edu  sgupta pdf rcnn depth pdf       Saurabh Gupta  Ross Girshick  Pablo Arbel ez and Jitendra Malik   Presented at European Conference on Computer Vision  ECCV   2014   In this paper we study the problem of object detection for RGB D images using semantically rich image and depth features  We pro  pose a new geocentric embedding for depth images that encodes height above ground and angle with gravity for each pixel in addition to the horizontal disparity  We demonstrate that this geocentric embedding works better than using raw depth images for learning feature representations with convolutional neural networks  Our final object detection system achieves an average precision of 37 3   which is a 56  relative improvement over existing methods  We then focus on the task of instance seg  mentation where we label pixels belonging to object instances found by our detector  For this task  we propose a decision forest approach that classifies pixels in the detection window as foreground or background using a family of unary and binary tests that query shape and geocentric pose features  Finally  we use the output from our object detectors in an existing superpixel classification framework for semantic scene segmentation and achieve a 24  relative improvement over current state of the art for the object categories that we study  We believe advances such as those represented in this paper will facilitate the use of perception in fields like robotics         Citing      If you find this code useful in your research  please consider citing        incollection guptaECCV14        author    Saurabh Gupta and Ross Girshick and Pablo Arbelaez and Jitendra Malik         title    Learning Rich Features from  RGB D  Images for Object Detection and Segmentation         booktitle   ECCV        year    2014               License      This code  RCNN Depth  is released under the Simplified BSD License  refer to the LICENSE file for details   License files for individual packages are included within individual folders        Installation Instructions      0  Create directory  checkout eccv14 code  utils  rgbdutils  nyu hooks       shell   mkdir rcnn depth    cd rcnn depth   git clone https   github com s gupta rcnn depth git eccv14 code   git clone https   github com s gupta rgbdutils git eccv14 code rgbdutils   git clone https   github com s gupta utils git eccv14 code utils   git clone https   github com s gupta nyu hooks git eccv14 code nyu hooks        0  Checkout caffe code        shell   git clone https   github com BVLC caffe git eccv14 code caffe   cd eccv14 code caffe   git checkout e5cc609138a0bc4ce5177a67cf84952756d11b38   cd                   0  Get the data  color image  depth images  rawdepth images  splits  ground truth  tasks   and external model data  Caffe trained Imagenet model  structured forests BSDS model    Note  Some of these download links don t work with some versions of Google Chrome  please use wget or Firefox or Safari to download them         shell   wget http   www cs berkeley edu  sgupta eccv14 eccv14 data tgz   tar  xf eccv14 data tgz   wget http   www cs berkeley edu  sgupta eccv14 eccv14 external data tgz   tar  xf eccv14 external data tgz        0  Get precomputed models         shell   wget http   www cs berkeley edu  sgupta eccv14 eccv14 models tgz   tar  xf eccv14 models tgz         0   Optional  Get precomputed results       shell   wget ftp   ftp cs berkeley edu pub projects vision rcnn depth eccv14 eccv14 cachedir tgz   tar  xf eccv14 cachedir tgz   Also contains the models   cd                Building      0  Build caffe  Adjust paths for CUDA   MATLAB in Makefile config example and copy to Makefile config        shell   cd eccv14 code caffe   make  j 16   make  j 16 matcaffe   cd                0  Build imagestack  Adjust paths in eccv14 code rgbdutils imagestack Makefile        shell   cd eccv14 code rgbdutils imagestack    make all  j 16   cd                    0  Build toolboxes  MCG  RCNN  Start MATLAB in the folder eccv14 code       matlab   mcg build      rcnn build      toolboxCompile      structured edges build                Inference            Contour Detection  UCMs  Region Proposals and Detection on a new image            matlab      Should produce results on the image in demo data    demo            See run all m  demo m to figure out what units   data type     each image is in     E  ucm2  candidates  detection scores no nms  cls            run all color image  depth image  rawdepth image  camera matrix                     Training            Contour Detection       0  Run the following in MATLAB  will require you to adapt jobParallel to run on your cluster   machine         matlab   jobName    compute edge cues   script edges    jobName    train edge model   script edges    jobName    test edge model   script edges               UCMs and Region Proposals       0  Run the following in MATLAB       matlab   jobName    edges to ucms   script regions    jobName    benchmark multi ucm   script regions    jobName    pareto   script regions    jobName    cache mcg   script regions    jobName    rank training   script regions    jobName    region detect   script regions               Object detectors  finetuning  training       0  Run the following in MATLAB  At the end of this  you will get 2 finetuning commands that you need to use with caffe for finetuning        matlab   jobName    save color   script detection    jobName    save hha   script detection    jobName    write window file   script detection         0  Use the finetuning commands that print out to finetune the CNN  Use the following to extract features and train the RCNN model        matlab   jobName    hha cache features   script detection    jobName    color cache features   script detection    res   rcnn all  task detection    rgb hha    trainval    test                  Notes      0  Although  the run all function will produce outputs as produced by our system  if you are running the algorithm on a large set of images  it will be best to compute in batches using     scripts script regions m    and    scripts script detection m    0  The current release of the code does not produce any instance segmentation or semantic segmentation  We will try to release code for those parts as soon as possible  If you are particularly interested in these 2 parts please let me know  0  The current version of the code also does not include detectors finetuned on synthetic data  hence the performance is 1  worse than what we report in the paper  35 94  as oppsoed to 37 3    Also  we accidently included  cabinet  as a category in the finetuing  but never trained R CNN detectors for the same  This version of the code mimicks the settings that were used to generate the tables in the papers  0  For contour detection the provided model produces the solid blue line in Figure 3 in the paper  0  We can also provide pre computed results on the dataset  Please let me know if you want them        FAQs      0  If you run out of memory on your GPU while extracting CNN features for object detection  you can decrease the batch size  which is currently set to 256   You will need to edit this in the following files     nyud2 finetuning   imagenet   256 fc6 prototxt    and    rcnn   rcnn create model m           Acknowledgements      This work was sponsored by ONR SMARTS MURI N00014 09 1 1051  ONR MURI N00014 10 1 0933 and a Berkeley Fellowship  The GPUs used in this research were generously donated by the NVIDIA Corporation  We are also thankful to Bharath Hariharan  for all the useful discussions  We also thank Piotr Doll  ar for helping us with their contour detection code        Contact      If you find bugs   have questions  please let me know  Saurabh Gupta  sgupta  at  eecs  dot  berkeley  dot  edu  ","software":"md","book":"s-gupta","full_link":"https://github.com/s-gupta/rcnn-depth"},{"name":"xzgz/faster-rcnn","artist":"train, rcnn, faster, shell, network","id":835,"playcount":9117,"description":"xzgz/faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"xzgz","full_link":"https://github.com/xzgz/faster-rcnn"},{"name":"songzheng/faster-rcnn","artist":"time, train, rcnn, net, vgg","id":836,"playcount":9110,"description":"songzheng/faster-rcnn time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main resutls                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Ojbect Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17290 authkey  AGhH4z667tHYYEw ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17331 authkey  APJHX5JQCLUGHK0 ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17330 authkey  AFy6VjnKXzk9aAQ ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17328 authkey  ANKPe Rn1h4htNw ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17329 authkey  AMUuqF2wzQiRgww ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17255 authkey  AHOIeRzQKCYXD3U ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17256 authkey  AF7wGc1kbUTfI7o ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17319 authkey  APSc546R6TbCCl4 ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17323 authkey  AJOz vdYtdPwuKo ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9    ","software":"md","book":"songzheng","full_link":"https://github.com/songzheng/faster-rcnn"},{"name":"btp10/faster_rcnn_rock_detection","artist":"time, train, rcnn, net, vgg","id":837,"playcount":9206,"description":"btp10/faster_rcnn_rock_detection time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main resutls                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Ojbect Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17290 authkey  AGhH4z667tHYYEw ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17331 authkey  APJHX5JQCLUGHK0 ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17330 authkey  AFy6VjnKXzk9aAQ ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17328 authkey  ANKPe Rn1h4htNw ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17329 authkey  AMUuqF2wzQiRgww ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17255 authkey  AHOIeRzQKCYXD3U ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17256 authkey  AF7wGc1kbUTfI7o ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17319 authkey  APSc546R6TbCCl4 ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17323 authkey  AJOz vdYtdPwuKo ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9    ","software":"md","book":"btp10","full_link":"https://github.com/btp10/faster_rcnn_rock_detection"},{"name":"mrliujie/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":838,"playcount":9117,"description":"mrliujie/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"mrliujie","full_link":"https://github.com/mrliujie/py-faster-rcnn"},{"name":"lvchigo/faster_rcnn_train_python","artist":"train, rcnn, faster, shell, network","id":839,"playcount":7115,"description":"lvchigo/faster_rcnn_train_python train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper   ","software":"md","book":"lvchigo","full_link":"https://github.com/lvchigo/faster_rcnn_train_python"},{"name":"sydney0zq/FilterPruning-ResNeXt","artist":"resnext, cifar, imagenet, model, pretrain","id":840,"playcount":7020,"description":"sydney0zq/FilterPruning-ResNeXt resnext, cifar, imagenet, model, pretrain   ResNeXt  Aggregated Residual Transformations for Deep Neural Networks  By  Saining Xie  http   vcl ucsd edu  sxie    Ross Girshick  http   www rossgirshick info     Piotr Doll r  https   pdollar github io     Zhuowen Tu  http   pages ucsd edu  ztu     Kaiming He  http   kaiminghe com   UC San Diego  Facebook AI Research      Table of Contents 0   Introduction   introduction  0   Citation   citation  0   Requirements and Dependencies   requirements and dependencies  0   Training   training  0   ImageNet Pretrained Models   imagenet pretrained models  0   Third party re implementations   third party re implementations        News   Congrats to the ILSVRC 2017 classification challenge winner  WMW  http   image net org challenges LSVRC 2017 results   ResNeXt is the foundation of their new SENet architecture  a   ResNeXt 152  64 x 4d    with the Squeeze and Excitation module     Check out Figure 6 in the new  Memory Efficient Implementation of DenseNets  https   arxiv org pdf 1707 06990 pdf  paper for a comparision between ResNeXts and DenseNets   sub   DenseNet cosine is DenseNet trained with cosine learning rate schedule     sub   p align  center    img src  http   vcl ucsd edu resnext resnextvsdensenet png  width  480     p        Introduction  This repository contains a  Torch  http   torch ch  implementation for the  ResNeXt  https   arxiv org abs 1611 05431  algorithm for image classification  The code is based on  fb resnet torch  https   github com facebook fb resnet torch     ResNeXt  https   arxiv org abs 1611 05431  is a simple  highly modularized network architecture for image classification  Our network is constructed by repeating a building block that aggregates a set of transformations with the same topology  Our simple design results in a homogeneous  multi branch architecture that has only a few hyper parameters to set  This strategy exposes a new dimension  which we call  cardinality   the size of the set of transformations   as an essential factor in addition to the dimensions of depth and width      teaser  http   vcl ucsd edu resnext teaser png        Figure  Training curves on ImageNet 1K   Left   ResNet ResNeXt 50 with the same complexity   4 1 billion FLOPs   25 million parameters    Right   ResNet ResNeXt 101 with the same complexity   7 8 billion FLOPs   44 million parameters              Citation If you use ResNeXt in your research  please cite the paper       article Xie2016    title  Aggregated Residual Transformations for Deep Neural Networks     author  Saining Xie and Ross Girshick and Piotr Doll r and Zhuowen Tu and Kaiming He     journal  arXiv preprint arXiv 1611 05431     year  2016             Requirements and Dependencies See the fb resnet torch  installation instructions  https   github com facebook fb resnet torch blob master INSTALL md  for a step by step guide    Install  Torch  http   torch ch docs getting started html  on a machine with CUDA GPU   Install  cuDNN v4 or v5  https   developer nvidia com cudnn  and the Torch  cuDNN bindings  https   github com soumith cudnn torch tree R4    Download the  ImageNet  http   image net org download images  dataset and  move validation images  https   github com facebook fb resnet torch blob master INSTALL md download the imagenet dataset  to labeled subfolders      Training  Please follow  fb resnet torch  https   github com facebook fb resnet torch  for the general usage of the code  including  how  https   github com facebook fb resnet torch tree master pretrained  to use pretrained ResNeXt models for your own task   There are two new hyperparameters need to be specified to determine the bottleneck template      baseWidth   and    cardinality        1x Complexity Configurations Reference Table    baseWidth   cardinality                                 64          1               40          2               24          4               14          8               4           32              To train ResNeXt 50  32x4d  on 8 GPUs for ImageNet     bash th main lua  dataset imagenet  bottleneckType resnext C  depth 50  baseWidth 4  cardinality 32  batchSize 256  nGPU 8  nThreads 8  shareGradInput true  data  imagenet folder       To reproduce CIFAR results  e g  ResNeXt 16x64d for cifar10  on 8 GPUs     bash th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 128  nGPU 8  nThreads 8  shareGradInput true     To get comparable results using 2 4 GPUs  you should change the batch size and the corresponding learning rate     bash th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 64  nGPU 4  LR 0 05  nThreads 8  shareGradInput true th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 32  nGPU 2  LR 0 025  nThreads 8  shareGradInput true     Note  CIFAR datasets will be automatically downloaded and processed for the first time  Note that in the arXiv paper CIFAR results are based on pre activated bottleneck blocks and a batch size of 256  We found that better CIFAR test acurracy can be achieved using original bottleneck blocks and a batch size of 128       ImageNet Pretrained Models ImageNet pretrained models are licensed under CC BY NC 4 0      CC BY NC 4 0  https   i creativecommons org l by nc 4 0 88x31 png   https   creativecommons org licenses by nc 4 0         Single crop  224x224  validation error rate   Network               GFLOPS   Top 1 Error    Download                                                                    ResNet 50  1x64d        4 1     23 9           Original ResNet 50  https   github com facebook fb resnet torch tree master pretrained            ResNeXt 50  32x4d       4 1     22 2           Download  191MB   https   s3 amazonaws com resnext imagenet models resnext 50 32x4d t7            ResNet 101  1x64d       7 8     22 0           Original ResNet 101  https   github com facebook fb resnet torch tree master pretrained           ResNeXt 101  32x4d      7 8     21 2           Download  338MB   https   s3 amazonaws com resnext imagenet models resnext 101 32x4d t7           ResNeXt 101  64x4d      15 6    20 4           Download  638MB   https   s3 amazonaws com resnext imagenet models resnext 101 64x4d t7               Third party re implementations  Besides our torch implementation  we recommend to see also the following third party re implementations and extensions   1  Training code in PyTorch  code  https   github com prlz77 ResNeXt pytorch  1  Converting ImageNet pretrained model to PyTorch model and source   code  https   github com clcarwin convert torch to pytorch  1  Training code in MXNet and pretrained ImageNet models  code  https   github com dmlc mxnet tree master example image classification imagenet 1k  1  Caffe prototxt  pretrained ImageNet models  with ResNeXt 152   curves  code  https   github com cypw ResNeXt 1  code  https   github com terrychenism ResNeXt  ","software":"md","book":"sydney0zq","full_link":"https://github.com/sydney0zq/FilterPruning-ResNeXt"},{"name":"facebookresearch/clevr-dataset-gen","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":841,"playcount":4754,"description":"facebookresearch/clevr-dataset-gen “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   CLEVR Dataset Generation  This is the code used to generate the  CLEVR dataset  http   cs stanford edu people jcjohns clevr   as described in the paper      CLEVR  A Diagnostic Dataset for Compositional Language and Elementary Visual Reasoning  http   cs stanford edu people jcjohns clevr       br    a href  http   cs stanford edu people jcjohns   Justin Johnson  a     a href  http   home bharathh info   Bharath Hariharan  a     a href  https   lvdmaaten github io   Laurens van der Maaten  a     a href  http   vision stanford edu feifeili   Fei Fei Li  a     a href  http   larryzitnick org   Larry Zitnick  a     a href  http   www rossgirshick info   Ross Girshick  a    br   Presented at  CVPR 2017  http   cvpr2017 thecvf com    Code and pretrained models for the baselines used in the paper  can be found here  https   github com facebookresearch clevr iep    You can use this code to render synthetic images and compositional questions for those images  like this    div align  center      img src  images example1080 png  width  800px     div     Q    How many small spheres are there   br    A    2    Q     What number of cubes are small things or red metal objects   br    A     2    Q    Does the metal sphere have the same color as the metal cylinder   br    A    Yes    Q    Are there more small cylinders than metal things   br    A    No    Q     There is a cylinder that is on the right side of the large yellow object behind the blue ball  is there a shiny cube in front of it   br    A     Yes  If you find this code useful in your research then please cite       inproceedings johnson2017clevr    title  CLEVR  A Diagnostic Dataset for Compositional Language and Elementary Visual Reasoning     author  Johnson  Justin and Hariharan  Bharath and van der Maaten  Laurens           and Fei Fei  Li and Zitnick  C Lawrence and Girshick  Ross     booktitle  CVPR     year  2017         All code was developed and tested on OSX and Ubuntu 16 04      Step 1  Generating Images First we render synthetic images using  Blender  https   www blender org    outputting both rendered images as well as a JSON file containing ground truth scene information for each image   Blender ships with its own installation of Python which is used to execute scripts that interact with Blender  you ll need to add the  image generation  directory to Python path of Blender s bundled Python  The easiest way to do this is by adding a   pth  file to the  site packages  directory of Blender s Python  like this      bash echo  PWD image generation     BLENDER  VERSION python lib python3 5 site packages clevr pth      where   BLENDER  is the directory where Blender is installed and   VERSION  is your Blender version  for example on OSX you might run      bash echo  PWD image generation     Applications blender blender app Contents Resources 2 78 python lib python3 5 site packages clevr pth      You can then render some images like this      bash cd image generation blender   background   python render images py      num images 10      On OSX the  blender  binary is located inside the blender app directory  for convenience you may want to add the following alias to your     bash profile  file      bash alias blender   Applications blender blender app Contents MacOS blender       If you have an NVIDIA GPU with CUDA installed then you can use the GPU to accelerate rendering like this      bash blender   background   python render images py      num images 10   use gpu 1      After this command terminates you should have ten freshly rendered images stored in  output images  like these    div align  center      img src  images img1 png  width  260px      img src  images img2 png  width  260px      img src  images img3 png  width  260px      br     img src  images img4 png  width  260px      img src  images img5 png  width  260px      img src  images img6 png  width  260px     div   The file  output CLEVR scenes json  will contain ground truth scene information for all newly rendered images   You can find  more details about image rendering here  image generation README md       Step 2  Generating Questions Next we generate questions  functional programs  and answers for the rendered images generated in the previous step  This step takes as input the single JSON file containing all ground truth scene information  and outputs a JSON file  containing questions  answers  and functional programs for the questions in a single JSON file   You can generate questions like this      bash cd question generation python generate questions py      The file  output CLEVR questions json  will then contain questions for the generated images   You can  find more details about question generation here  question generation README md   ","software":"md","book":"facebookresearch","full_link":"https://github.com/facebookresearch/clevr-dataset-gen"},{"name":"pathak22/videoseg","artist":"shell, code, gpu, python, build","id":842,"playcount":3984,"description":"pathak22/videoseg shell, code, gpu, python, build    Video Segmentation and tracking  Code for unsupervised bottom up video motion segmentation  uNLC is a reimplementation of the NLC algorithm by Faktor and Irani  BMVC 2014  that removes the trained edge detector and makes numerous other modifications and simplifications  For additional details  see section 5 1 in the  a href  http   cs berkeley edu  pathak unsupervised video   paper  a   This repository also contains code for a very simple video tracker which we developed   This code was developed and is used in our  CVPR 2017 paper on Unsupervised Learning using unlabeled videos  http   cs berkeley edu  pathak unsupervised video    Github repository for our CVPR 17 paper is  here  https   github com pathak22 unsupervised video   If you find this work useful in your research  please cite        inproceedings pathakCVPR17learning          Author    Pathak  Deepak and Girshick  Ross and Doll   a r                    Piotr and Darrell  Trevor and Hariharan  Bharath           Title    Learning Features by Watching Objects Move           Booktitle    Computer Vision and Pattern Recognition   CVPR             Year    2017         hr       Video Segmentation   using low level vision based unsupervised methods  It is largely inspired from Non Local Consensus  Faktor and Irani  BMVC 2014  method  but removes all trained components  This segmentation method includes and make use of code for optical flow  motion saliency code  appearance saliency  superpixel and low level descriptors     Video Tracking   code includes deepmatch followed by epic flow  or farneback  and then doing homography followed by bipartite matching to obtain foreground tracks       Setup  1  Install optical flow      Shell   cd videoseg lib    git clone https   github com pathak22 pyflow git   cd pyflow    python setup py build ext  i   python demo py       viz option to visualize output        2  Install Dense CRF code      Shell   cd videoseg lib    git clone https   github com lucasb eyer pydensecrf git   cd pydensecrf    python setup py build ext  i   PYTHONPATH    PYTHONPATH python examples inference py examples im1 png examples anno1 png examples out new1 png     compare out new1 png and out1 png    they should be same        3  Install appearance saliency      Shell   cd videoseg lib    git clone https   github com ruanxiang mr saliency git        4  Install kernel temporal segmentation code      Shell     cd videoseg lib      wget http   pascal inrialpes fr data2 potapov med summaries kts ver1 1 tar gz     tar  zxvf kts ver1 1 tar gz    mv kts ver1 1 kts     rm  f kts ver1 1 tar gz      Edit kts cpd nonlin py to remove weave dependecy  Due to this change  we are shipping the library      Included in videoseg lib kts    However  it is not a required change if you already have weave installed      which is mostly present by default          5  Convert them to modules      Shell   cd videoseg lib    cp   init   py mr saliency    cp   init   py kts         6  Run temporal segmentation       Shell   time python vid2shots py  imdir  home dpathak local data trash my nlc imseq v21   out  home dpathak local data trash my nlc nlc out         7  Run NLC segmentation       Shell   cd videoseg src    time python nlc py  imdir  home dpathak local data trash my nlc imseq 3 tmp   out  home dpathak local data trash my nlc nlc out   maxsp 400  iters 100        8  Run Tracker       Shell   cd videoseg src    time python dm tracker py  fgap 2  seed 2905  vizTr  dmThresh 0  shotFrac 0 2  matchNbr 20  postTrackHomTh  1  preTrackHomTh 10        9  Run CRF sample       Shell   cd videoseg src    time python crf py  inIm    lib pydensecrf examples im1 png  inL    lib pydensecrf examples anno1 png  out    lib pydensecrf examples out new2 png        10  Run Full Pipeline       Shell   cd videoseg src    time python run full py  out  home dpathak local data AllSegInit  in  home dpathak fbcode experimental deeplearning dpathak videoseg datasets imdir Samples txt       ","software":"md","book":"pathak22","full_link":"https://github.com/pathak22/videoseg"},{"name":"binLearning/caffe-tea","artist":"caff, model, learn, communiti, berkeley","id":843,"playcount":3131,"description":"binLearning/caffe-tea caff, model, learn, communiti, berkeley   caffe tea Add new functions in  BVLC Caffe  https   github com BVLC caffe    br      New Addition   201   Center Loss  http   ydwen github io papers WenECCV16 pdf    source  https   github com ydwen caffe face   br    202   L2 Normalization  https   arxiv org abs 1703 09507   br    203   Large Margin Softmax Loss  https   arxiv org abs 1612 02295    source  https   github com wy1iu LargeMargin Softmax Loss    br    204   Focal Loss  https   arxiv org abs 1708 02002     only CPU     br       Contact Info If you have any problem on this project  please contact me by sending email to binlearning 163 com   br       Original README md of Caffe   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"binLearning","full_link":"https://github.com/binLearning/caffe-tea"},{"name":"ginobilinie/caffe3D","artist":"caff, learn, model, deep, layer","id":844,"playcount":3598,"description":"ginobilinie/caffe3D caff, learn, model, deep, layer   caffe3D  This copy of caffe3D is based on the offical caffe platform  but we have developped the following  not limited to  new functions to work on 3D environment   1  3D operations  conv deconv pooling      2  Pixel wise  voxel vise  Weighted Euclidean Loss  3  Pixel wise  voxel vise  Weighted Softmax Loss  4  Category wise Weighted Softmax Loss  5  Smooth L1 Loss  6  CRF as RNN  combine CRF into the FCN like segmnetaiton network and train end to end   7  Video Type Data Reader  8  Multilinear interpolation  official is bilinear  as medical image is usually 3D     nbsp  nbsp  nbsp  nbsp  nbsp      It will be very kind of you if you cite our paper  for which  we develop the caffe3D  when you feel this repository is helpful for you    Dong Nie  Li Wang  Ehsan Adeli  Cuijing Lao  Weili Lin  Dinggang Shen  3D Fully Convolutional Networks for Multi Modal Isointense Infant Brain Image Segmentation  IEEE Transactions on Cybernetics  2018    for details  you can refer to https   github com ginobilinie infantSeg   The comiplation have the same requirement with the official caffe  And we suggest to use the following environment   br   nbsp  nbsp  nbsp  nbsp  nbsp unbuntu 14 04  or 16 04   br   nbsp  nbsp  nbsp  nbsp  nbsp cuda 8 0  br   nbsp  nbsp  nbsp  nbsp  nbsp cudnn 5 1  br   nbsp  nbsp  nbsp  nbsp  nbsp After compilation  please refer to https   github com ginobilinie infantSeg for more example about how to use it    The following part is directly from the offical caffe readme      Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"ginobilinie","full_link":"https://github.com/ginobilinie/caffe3D"},{"name":"wozhouh/caffe-gdp","artist":"caff, model, learn, communiti, berkeley","id":845,"playcount":3858,"description":"wozhouh/caffe-gdp caff, model, learn, communiti, berkeley   Caffe GDP Caffe GDP is a branch of  Caffe  https   github com BVLC caffe   which adds a few lines of code in order to enable a global and dynamic filter pruning  GDP  on convolution layers of typical CNN architecture  as described in a newly accepted paper at IJCAI18   Accelerating Convolutional Networks via Global   Dynamic Filter Pruning  https   www ijcai org proceedings 2018 0336 pdf   The paper mentioned is based on TensorFlow originally    The following will firstly describe how GDP is implemented based on the original Caffe framework  then a guidance to perform GDP on a CNN  If you do not care about details  feel free to skip the first part      Inplementation  Note that when a CNN is training  the update of weights goes through thousands of iterations below            Forward     loss     Backward     diff     Regurization     ammended diff     Update    new weights          Firstly train the model from scratch with  is pruning  false  at  solver prototxt  to finish step 1 training and get a caffemodel  then turn on  is pruning  and set the necessary parameters for pruning  refer to  train lenet pruning prototxt  https   github com wozhouh caffe gdp blob master examples mnist lenet solver pruning prototxt   to start the step 2 global and dynamic channel pruning and get a  mask log  indicating which channel of convolution layers to prune     Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"wozhouh","full_link":"https://github.com/wozhouh/caffe-gdp"},{"name":"takahiro-777/Faster-RCNN_TF","artist":"shell, train, model, rcnn, demo","id":846,"playcount":4192,"description":"takahiro-777/Faster-RCNN_TF shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict      Shell   cd  FRCN ROOT   pip install  r requirements txt    If you got  RuntimeError  Python is not installed as a framework    maybe you can resolve this problem by changing matplotlibrc  ref  http   qiita com katryo items 918667f28301fdec89ba          Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive     git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell       cd  FRCN ROOT lib       make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0      Shell   cd  FRCN ROOT   mkdir model   cd model   wget https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt      To run the demo    Shell   cd  FRCN ROOT   python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell    wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar    wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar    wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell    tar xvf VOCtrainval 06 Nov 2007 tar    tar xvf VOCtest 06 Nov 2007 tar    tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell       cd  FRCN ROOT data       ln  s  VOCdevkit VOCdevkit2007          5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0          Shell       mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell    cd  FRCN ROOT      experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007    Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF  ","software":"md","book":"takahiro-777","full_link":"https://github.com/takahiro-777/Faster-RCNN_TF"},{"name":"ilovecv/general-pooling-1","artist":"pool, learn, oper, caff, max","id":847,"playcount":3453,"description":"ilovecv/general-pooling-1 pool, learn, oper, caff, max  img align  left  src  http   pages ucsd edu  chl260 fig gpool jpg  width  300         Generalizing Pooling Functions in Convolutional Neural Networks  Mixed  Gated  and Tree  We seek to improve deep neural networks by generalizing the pooling operations that play a central role in current architectures  We pursue a careful exploration of approaches to allow pooling to learn and to adapt to complex and variable patterns  The two primary directions lie in  1  learning a pooling function via combining of max and average pooling  and  2  learning a pooling function in the form of a tree structured fusion of pooling filters that are themselves learned  In our experiments every generalized pooling operation we explore improves performance when used in place of average or max pooling  We experimentally demonstrate that the proposed pooling operations provide a boost in invariance properties relative to conventional pooling and set the state of the art on several widely adopted benchmark datasets  For detailed algorithm and experiment results please see our AISTATS 2016  paper  http   arxiv org abs 1509 08985         Demo   A quick demo of running the proposed pooling functions can be found at  models generaling pooling AlexNet example    In this example  we adopt AlexNet model and simply replace the first max pooling with the proposed tree pooling  2 leaf nodes and 1 internal node  and replace the second and third max pooling with gated max average pooling  1 gating mask each   After setting up the training and testing files  you can run the script  train caffenet sh  to start the training  Please also see  train val prototxt  file for the usage of the pooling layers and see  general pooling log  for the training process        Transplant  If you have different Caffe version than this repo and would like to try out the proposed pooling functions  you can go to  src caffe layers   and transplant the following code to your repo using the instructions on this Caffe  Wiki  https   github com BVLC caffe wiki Development  page to setup these layers    treepool max ave cpp  gated max average pooling    treepool max ave cu   treepool kernel 1layer cpp  2 level tree pooling    treepool kernel 1layer cu    treepool kernel 2layer cpp  3 level tree pooling     treepool kernel 2layer cu   These files show a basic implementation of the proposed pooling layers  Further speed and memory optimization can be done using cuDNN library or some engineering  see the file  treepool max ave efficient c    for an example   Please cite the following paper if it helps your research        inproceedings lee2016generalizing        author    Lee  Chen Yu and Gallagher  Patrick and Tu  Zhuowen         booktitle    International Conference on Artificial Intelligence and Statistics  AISTATS          title    Generalizing Pooling Functions in Convolutional Neural Networks  Mixed  Gated  and Tree         year    2016              Acknowledgment   This code is based on Caffe with new implemented pooling layers        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year     2014          If you have any issues using the code please email me at chl260 ucsd edu ","software":"md","book":"ilovecv","full_link":"https://github.com/ilovecv/general-pooling-1"},{"name":"ConnorWen9398/Fruit_Detection","artist":"model, imag, train, caff, download","id":848,"playcount":3605,"description":"ConnorWen9398/Fruit_Detection model, imag, train, caff, download   Fruit Detection and Yield Estimation Based on Yolo v2    Introduction The objective is to identify individual apples in the images and estimate the total number of apples over the dataset by accumulating the counts  Detection newwork and source code are based on Yolo v2 model    Detailed report can be found in  Report    Detection Results can be found in  saved results  This project is supported by NYU Robotic Design Team      Weights File  Weights file available at  https   drive google com open id 1Tpl IscaV1Ybd6pc3vJQ38mDZVMszD o    Put the weights file in the root directory     Two series of weithts file is trainning is this project  yolo apple2     model for batch size 1 in trainning  yolo apple3     model for batch size 64 in trainning     yolo weights    Yolo v2 pre trained model     darknet19 448 conv 23    Pre built model for trainning     yolo apple2 10000 to 80000    Model saved in corresponding iternations for yolo apple2 series     yolo apple3 3000 to 3500    Model saved in corresponding iternations for yolo apple3 series     yolo apple2 final    Model saved in last iternations for yolo apple2 series     In testing  yolo apple2 70000  yolo apple2 final  yolo apple3 3300 are used        Dataset ACFR Orchard Fruit Dataset  released by Australian Centre for Field Robotics  The University of Sydney  http   data acfr usyd edu au ag treecrops 2016 multifruit   The corrsponding data used in this project is storage in  data apple              Development and Testing Environment  Ubuntu 16 04  Cuda 9 1  GTX 1080 Ti  i9 7900X     Instruction     Data Format Converting  python csv2txt ipynb     Training      darknet detector train cfg  data file  cfg  cfg file   model file      Example        darknet detector train cfg apple data cfg yolo apple2 cfg darknet19 448 conv 23        Detection Single Image      darknet detector test cfg  data file  cfg  cfg file   weights file  data  filename   thresh  threshold      Example        darknet detector test cfg coco data cfg yolo cfg yolo weights data test png  thresh 0 05     Results are saved in  predictions     Detection Multiple Image Change the path for the txt file containing image list for test in  examples detector c Line 662  Start by running       darknet detector test cfg  data file  cfg  cfg file   weights file   thresh  threshold      Example        darknet detector test cfg apple data cfg yolo apple2 cfg yolo apple2 final weights  thresh 0 05     Results are saved in  predictions     References  1  ACFR Orchard Fruit Dataset  the Australian Centre for Field Robotics  The University of Sydney  Australia  2016  http   data acfr usyd edu au ag treecrops 2016 multifruit    2  S  Bargoti and J  Underwood   Deep fruit detection in orchards   2017 IEEE International Conference on Robotics and Automation  ICRA   Singapore  2017  pp  3626 3633    3  Bargoti  S  and Underwood  J  P   2017   Image Segmentation for Fruit Detection and Yield Estimation in Apple Orchards  J  Field Robotics  34  1039 1060     4  McCool  C   Sa  I   Dayoub  F   Lehnert  C   Perez  T   Upcroft  B  Visual Detection of Occluded Crop  For automated harvesting  In Proceedings of the International Conference on Robotics and Automation  Stockholm  Sweden  16 21 May 2016    5  Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   You Only Look Once  Unified  Real Time Object Detection   the IEEE Conference on Computer Vision and Pattern Recognition  CVPR   Las Vegas  2016  pp  779 788       For more information and instruction about Yolo v2   https   pjreddie com darknet yolo   https   github com pjreddie darknet  ","software":"md","book":"ConnorWen9398","full_link":"https://github.com/ConnorWen9398/Fruit_Detection"},{"name":"kfxw/caffe-mydev","artist":"caff, model, learn, communiti, berkeley","id":849,"playcount":3291,"description":"kfxw/caffe-mydev caff, model, learn, communiti, berkeley    My Caffe development repo   KFXW  My own Caffe development branch with some tools     Multi Mean Field Iteration  transfer from  CRF RNN caffe  https   github com torrvision crfasrnn     Segmetation Accuracy Layer  micro averaged F1 score or Mean IoU Jaccard score  with plugin files acommedating to various datasets    hard awared statistical contextual loss for parsing  under construction    Blob Align  python layer  resize a feature map to the same size of another feature map    imgResize  python layer    salientArea  Pyhton layer  convert parsing labels to 0 1 binary map   bg or object    image seg data layer  transfer from  Deeplab v1 caffe  https   github com TheLegendAli DeepLab Context     dense crf layer  transfer from  Deeplab v1 caffe  https   github com TheLegendAli DeepLab Context      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kfxw","full_link":"https://github.com/kfxw/caffe-mydev"},{"name":"charan223/Faster_RCNN","artist":"shell, train, model, rcnn, demo","id":850,"playcount":3780,"description":"charan223/Faster_RCNN shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"charan223","full_link":"https://github.com/charan223/Faster_RCNN"},{"name":"a514514772/Deep-Learning-Papers","artist":"deep, learn, network, convolut, imag","id":851,"playcount":3459,"description":"a514514772/Deep-Learning-Papers deep, learn, network, convolut, imag   Deep Learning Papers  A document of papers I ve read and categorization of them     Contents    Generative Adversarial Nets  GANs    generative adversarial nets gans     Autoencoders   autoencoders       Adversarial Autoencoders and Its Extensions   adversarial autoencoders and its extensions       Variational Autoencoders and Its Extensions   variational autoencoders and its extensions     Theory   theory       Evidence Lower Bound  ELBO    evidence lower bound elbo      Generative Adversarial Nets  GANs    Generative Adversarial Nets   pdf   http   papers nips cc paper 5423 generative adversarial nets pdf      Goodfellow  Ian and Pouget Abadie  Jean and Mirza  Mehdi and Xu  Bing and Warde Farley  David and Ozair  Sherjil and Courville  Aaron and Bengio  Yoshua   NIPS 14    Conditional generative adversarial nets   pdf   https   arxiv org pdf 1411 1784 pdf      Mirza  Mehdi and Osindero  Simon   arXiv 1411    Energy Based Generative Adversarial Networks   pdf   https   arxiv org abs 1609 03126      Junbo Zhao  Michael Mathieu  Yann LeCun   arXiv 1609    InfoGAN  Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets   pdf   http   papers nips cc paper 6399 infogan interpretable representation learning by information maximizing generative adversarial nets pdf      Chen  Xi and Duan  Yan and Houthooft  Rein and Schulman  John and Sutskever  Ilya and Abbeel  Pieter   NIPS 16    Learning to Discover Cross Domain Relations with Generative Adversarial Networks   pdf   https   arxiv org pdf 1703 05192 pdf      Kim  Taeksoo and Cha  Moonsu and Kim  Hyunsoo and Lee  Jungkwon and Kim  Jiwon   arXiv 1703    Unpaired Image to Image Translation Using Cycle Consistent Adversarial Networks   pdf   https   arxiv org pdf 1703 10593 pdf      Zhu  Jun Yan and Park  Taesung and Isola  Phillip and Efros  Alexei A   arXiv 1703      Autoencoders      Adversarial Autoencoders and Its Extensions   Adversarial Autoencoders   pdf   https   arxiv org pdf 1511 05644 pdf      Makhzani  Alireza and Shlens  Jonathon and Jaitly  Navdeep and Goodfellow  Ian and Frey  Brendan   arXiv 1511       Variational Autoencoders and Its Extensions   Neural discrete representation learning   pdf   http   papers nips cc paper 7210 neural discrete representation learning pdf      van den Oord  Aaron and Vinyals  Oriol and others   NIPS 17    Autoencoding Beyond Pixels Using a Learned Similarity Metric   pdf   https   arxiv org pdf 1512 09300 pdf      Larsen  Anders Boesen Lindbo and S  o nderby  S  o ren Kaae and Larochelle  Hugo and Winther  Ole   arXiv 1512        Theory      Evidence Lower Bound  ELBO    Elbo Surgery  yet Another Way to Carve Up The Variational Evidence Lower Bound   pdf   http   approximateinference org accepted HoffmanJohnson2016 pdf      Hoffman  Matthew D and Johnson  Matthew J   NIPS Workshop 16        TO DO   Sliced Wasserstein Autoencoder  An Embarrassingly Simple Generative Model   Spectral Normalization for Generative Adversarial Networks   self attention GAN   Learn To Pay Attention   pdf   https   arxiv org abs 1804 02391      Saumya Jetley  Nicholas A  Lord  Namhoon Lee  Philip H S  Torr  ICLR 18   Non local Neural Networks   pdf   https   arxiv org abs 1711 07971      Xiaolong Wang  Ross Girshick  Abhinav Gupta  Kaiming He  arXiv 17   Structured Attention Networks   pdf   https   arxiv org abs 1702 00887      Yoon Kim  Carl Denton  Luong Hoang  Alexander M  Rush  ICLR 17 ","software":"md","book":"a514514772","full_link":"https://github.com/a514514772/Deep-Learning-Papers"},{"name":"DeepLearnPhysics/faster-rcnn","artist":"shell, train, model, rcnn, demo","id":852,"playcount":5212,"description":"DeepLearnPhysics/faster-rcnn shell, train, model, rcnn, demo   faster rcnn A Tensorflow implementation of faster RCNN detection framework toward 3D object detection  This repository is based on the original python Caffe implementation of faster RCNN by Ross Girshick available  here  https   github com rbgirshick py faster rcnn  and implementation to Tensorflow by Xinlei Chen available  here  https   github com endernewton tf faster rcnn   While much of the code follows Xinlei s implementation  the reason why we did not fork is because we plan to extend further to 3D  This involves much reorganization of code directory structures and departs from the goal of replicating py caffe implementation  Note changes made by Xinlei  summarized in their paper  An Implementation of Faster RCNN with Study for Region Sampling  https   arxiv org pdf 1702 02138 pdf   is inherited as is     Note    This implementation followed Xinlei s method step by step  and may still lack some functionalities and or performance  The current goal is to reproduce the results in Xinlei s paper  The network does get trained with vgg implementation  resnet not yet tried        Prerequisites     Tensorflow  currently tested with v1 3  If concerned  Xinlei s Tensorflow  fork  https   github com endernewton tensorflow  implements the original ROI pooling in py caffe      Python packages   cython    opencv python    easydict       Installation 1  Clone the repository      Shell   git clone https   github com DeepLearnPhysics faster rcnn git       2  Source configure script  you have to do this each time you login to a new shell        Shell   cd faster rcnn   source configure sh        3  Update your  arch in setup script to match your GPU      Shell     Change the GPU architecture   arch  if necessary   vim setup py            GPU model    Architecture                                           TitanX  Maxwell Pascal    sm 52       GTX 960M   sm 50       GTX 1080  Ti    sm 61       Grid K520  AWS g2 2xlarge    sm 30       Tesla K80  AWS p2 xlarge    sm 37        Note    You are welcome to contribute the settings on your end if you have made the code work properly on other GPUs   4  Build the Cython modules      Shell   make clean   make            Setup data for training  py faster rcnn has more detailed instructions  here  https   github com rbgirshick py faster rcnn beyond the demo installation for training and testing models   1  Download the training  validation  test data and VOCdevkit        Shell    wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar    wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar    wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar         2  Extract all of these tars into one directory named  VOCdevkit         Shell    tar xvf VOCtrainval 06 Nov 2007 tar    tar xvf VOCtest 06 Nov 2007 tar    tar xvf VOCdevkit 08 Jun 2007 tar         3  It should have this basic structure        Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset        Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  for coco data set see py faster rcnn instruction  here  https   github com rbgirshick py faster rcnn tree master data       Train your own model 1  Download pre trained models and weights  The current code support VGG16  Pre trained models are provided by slim  you can get the pre trained models  here  https   github com tensorflow models tree master research slim Pretrained  and set them in the   data   folder  For example for VGG16 model  you can set up like        Shell    cd data    wget  v http   download tensorflow org models vgg 16 2016 08 28 tar gz    tar  xzvf vgg 16 2016 08 28 tar gz    mv vgg 16 ckpt vgg16 ckpt    cd           2  Train  and test  evaluation       Shell   python example train coco py        3  Visualization with Tensorboard      Shell   tensorboard   logdir tensorboard log          By default  trained networks are saved under       output  NET       Tensorboard information for train and validation is saved under       tensorboard  NET            Citation For citation  please consider citing Xinlei s work       article chen17implementation          Author    Xinlei Chen and Abhinav Gupta           Title    An Implementation of Faster RCNN with Study for Region Sampling           Journal    arXiv preprint arXiv 1702 02138           Year    2017         as well as faster RCNN citation        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015         ","software":"md","book":"DeepLearnPhysics","full_link":"https://github.com/DeepLearnPhysics/faster-rcnn"},{"name":"jz462/Faster_RCNN_VRD_Single_Boxes","artist":"shell, train, model, rcnn, demo","id":853,"playcount":3780,"description":"jz462/Faster_RCNN_VRD_Single_Boxes shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"jz462","full_link":"https://github.com/jz462/Faster_RCNN_VRD_Single_Boxes"},{"name":"shubh-agrawal/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":854,"playcount":8855,"description":"shubh-agrawal/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"shubh-agrawal","full_link":"https://github.com/shubh-agrawal/py-faster-rcnn"},{"name":"yaopang/faster_RCNN","artist":"train, rcnn, faster, shell, network","id":855,"playcount":9113,"description":"yaopang/faster_RCNN train, rcnn, faster, shell, network This Repository is a fork of  py faster rcnn  https   github com rbgirshick py faster rcnn  in order to help achieving a binary classifier      The tutorial Readme can be found  here  https   github com deboc py faster rcnn blob master help Readme md            Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"yaopang","full_link":"https://github.com/yaopang/faster_RCNN"},{"name":"dJOKERdUMMY/Faster-RCNN","artist":"shell, train, model, rcnn, demo","id":856,"playcount":3780,"description":"dJOKERdUMMY/Faster-RCNN shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"dJOKERdUMMY","full_link":"https://github.com/dJOKERdUMMY/Faster-RCNN"},{"name":"caocuong0306/awesome-object-proposals","artist":"object, detect, propos, cvpr, eccv","id":857,"playcount":21062,"description":"caocuong0306/awesome-object-proposals object, detect, propos, cvpr, eccv   awesome object proposals    Awesome  https   cdn rawgit com sindresorhus awesome d7305f38d29fed78fa85652e3a63e154dd8e8829 media badge svg   https   github com sindresorhus awesome   A curated list of object proposals resources for object detection             Table of Contents    Introduction   introduction     Tutorials   tutorials     Papers   papers       Objectness Scoring   objectness scoring       Similarity Grouping   similarity grouping       Supervised Learning   supervised learning       Hybrid   Part based   hybrid  part based       RGB D   rgb d       Re ranking   Refinement   re ranking  refinement       Spatio Temporal   spatio temporal       Low Level Processing   low level processing       Evaluation   evaluation     Datasets   datasets     Object Detection   object detection       Introduction    A Seismic Shift in Object Detection   https   pdollar wordpress com 2013 12 10 a seismic shift in object detection   by Piotr Doll r     Generating Object Proposals   https   pdollar wordpress com 2013 12 22 generating object proposals   by Piotr Doll r       Tutorials    ICCV 2015 Tutorial on Tools for Efficient Object Detection   http   mp7 watson ibm com ICCV2015 ObjectDetectionICCV2015 html      Jan Hosang   Region Proposals  http   mp7 watson ibm com ICCV2015 slides iccv hosang pdf        Papers       Objectness Scoring     Objectness  https   c1 staticflickr com 1 675 33118568516 bd088e181f b jpg    Objectness   Project   http   groups inf ed ac uk calvin objectness       Bogdan Alexe  Thomas Deselaers  and Vittorio Ferrari   What is an object   http   groups inf ed ac uk calvin Publications alexe cvpr10 pdf   CVPR  2010      Bogdan Alexe  Thomas Deselaers  and Vittorio Ferrari   Measuring the Objectness of Image Windows  https   www vision ee ethz ch publications papers techreports eth biwi 00882 pdf   TPAMI  2012    Rahtu   Project   http   www cse oulu fi CMV Downloads ObjectDetection       Esa Rahtu  Juho Kannala  and Matthew Blaschko   Learning a Category Independent Object Detection Cascade  http   www ee oulu fi  jkannala publications iccv2011 pdf   ICCV  2011    Cascaded Ranking SVMs   Code   https   sites google com a brookes ac uk zimingzhang code      Ziming Zhang  Jonathan Warrell  and Philip H  S  Torr   Proposal generation for object detection using cascaded ranking SVMs  https   www robots ox ac uk  tvg publications 2011 ziming cvpr11 pdf   CVPR  2011    Salient     Jie Feng  Yichen Wei  Litian Tao  Chao Zhang  and Jian Sun   Salient Object Detection by Composition  http   ieeexplore ieee org stamp stamp jsp arnumber 6126348   ICCV  2011    RandomizedSeeds     Michael Van den Bergh  Gemma Roig  Xavier Boix  Santiago Manen  Luc Van Gool   Online Video SEEDS for Temporal Window Objectness  http   varcity eu paper iccv2013 vandenbergh videoseeds pdf   ICCV  2013    BING   Project   http   mmcheng net bing       Ming Ming Cheng  Ziming Zhang  Wen Yan Lin  and Philip Torr   BING  Binarized Normed Gradients for Objectness Estimation at 300fps  http   mmcheng net mftp Papers ObjectnessBING pdf   CVPR  2014    CrackingBING     Qiyang Zhao  Zhibin Liu  Baolin Yin   Cracking BING and Beyond  http   www bmva org bmvc 2014 files paper030 pdf   BMVC  2014    BING       Ziming Zhang  Yun Liu  Tolga Bolukbasi  Ming Ming Cheng  and Venkatesh Saligrama   BING    A Fast High Quality Object Proposal Generator at 100fps  https   arxiv org pdf 1511 04511v1 pdf   arXiv 1511 04511      Ziming Zhang  Xi Chen  Yanjun Zhu  Zhiguo Cao  Venkatesh Saligrama  and Philip H S  Torr   Sequential Optimization for Efficient High Quality Object Proposal Generation  https   arxiv org pdf 1511 04511 pdf   arXiv 1511 04511v2    EdgeBoxes   Project   https   www microsoft com en us research publication edge boxes locating object proposals from edges     Code   https   github com pdollar edges      Piotr Doll r and C  Lawrence Zitnick   Edge Boxes  Locating Object Proposals from Edges  https   www microsoft com en us research wp content uploads 2014 09 ZitnickDollarECCV14edgeBoxes pdf   ECCV  2014    ContourBox     Cewu Lu   Shu Liu  Jiaya Jia and Chi Keung Tang   Contour Box  Rejecting Object Proposals Without Explicit Closed Contours  http   www cv foundation org openaccess content iccv 2015 papers Lu Contour Box Rejecting ICCV 2015 paper pdf   ICCV  2015        Similarity Grouping     SS  https   c2 staticflickr com 4 3852 33003653872 6c034b1c93 o jpg    CPMC   Project   http   home isr uc pt  joaoluis cpmc       Joao Carreira and Cristian Sminchisescu   Constrained Parametric Min Cuts for Automatic Object Segmentation  http   home isr uc pt  joaoluis papers cvpr2010 2 pdf   CVPR  2010      Joao Carreira and Cristian Sminchisescu   CPMC  Automatic Object Segmentation Using Constrained Parametric Min Cuts  http   home isr uc pt  joaoluis papers PAMI2012 pdf   TPAMI  2012    Endres   Project   http   vision cs illinois edu proposals       Ian Endres and Derek Hoiem   Category Independent Object Proposals  http   link springer com chapter 10 1007 978 3 642 15555 0 42   ECCV  2010      Ian Endres and Derek Hoiem   Category Independent Object Proposals With Diverse Ranking  http   dhoiem cs illinois edu publications pami2013 proposals endres pdf   TPAMI  2014    Selective Search   Project   http   koen me research selectivesearch       Koen E  A  van de Sande  Jasper R  R  Uijlings  Theo Gevers  and Arnold W  M  Smeulders   Segmentation As Selective Search for Object Recognition  http   koen me research pub vandesande iccv2011 pdf   ICCV  2011      Jasper R  R  Uijlings  Koen E  A  van de Sande  Theo Gevers  and Arnold W  M  Smeulders   Selective Search for Object Recognition  http   koen me research pub uijlings ijcv2013 draft pdf   IJCV  2013    ObjSal   Project   http   www iis sinica edu tw  liutyng Projects ObjSal       Kai Yueh Chang  Tyng Luh Liu  Hwann Tzong  and Chen Shang Hong Lai   Fusing Generic Objectness and Visual Saliency for Salient Object Detection  http   www iis sinica edu tw  liutyng Publication files iccv11 pdf   ICCV  2011    RandomizedPrim   Project   http   www vision ee ethz ch  smanenfr rp index html      Santiago Manen  Matthieu Guillaumin  and Luc Van Gool   Prime Object Proposals with Randomized Prim s Algorithm   http   www vision ee ethz ch  smanenfr rp ManenICCV2013 pdf   ICCV  2013    Rantalankila     Pekka Rantalankila  Juho Kannala  and Esa Rahtu   Generating Object Segmentation Proposals Using Global and Local Search   https   users aalto fi  kannalj1 publications cvpr2014a pdf   CVPR  2014    RIGOR   Project   http   cpl cc gatech edu projects RIGOR       Ahmad Humayun  Fuxin Li  and James M  Rehg   RIGOR  Reusing Inference in Graph Cuts for Generating Object Regions  http   cpl cc gatech edu projects RIGOR pubs humayun CVPR 2014 rigor pdf   CVPR  2014    GOP   Project   http   www philkr net 2014 10 01 eccv       Philipp Kr henb hl and Vladlen Koltun   Geodesic Object Proposals  http   www philkr net papers 2014 10 01 eccv 2014 10 01 eccv pdf   ECCV  2014    MCG   Project   https   www2 eecs berkeley edu Research Projects CS vision grouping mcg       Pablo Arbelaez   Jordi Pont Tuset   Jonathan T  Barron  Ferran Marques  Jitendra Malik   Multiscale Combinatorial Grouping  https   www2 eecs berkeley edu Research Projects CS vision grouping mcg resources MCG CVPR2014 pdf   CVPR  2014      Jordi Pont Tuset   Pablo Arbelaez   Jonathan T  Barron  Ferran Marques  Jitendra Malik   Multiscale Combinatorial Grouping for Image Segmentation and Object Proposal Generation  https   www2 eecs berkeley edu Research Projects CS vision grouping mcg resources MCG arxiv2015 v3 pdf   TPAMI  2017        Supervised Learning   RPN  https   c2 staticflickr com 4 3821 33118567676 fecd47a78c b jpg    MultiBox   Project   https   github com google multibox      Dumitru Erhan  Christian Szegedy  Alexander Toshev  and Dragomir Anguelov   Scalable Object Detection using Deep Neural Networks  https   arxiv org pdf 1312 2249 pdf   CVPR  2014      Christian Szegedy  Scott Reed  Dumitru Erhan  and Dragomir Anguelov   Scalable  High Quality Object Detection  https   arxiv org pdf 1412 1441 pdf   arXiv 1412 1441    DeepMask   Code   https   github com facebookresearch deepmask      Pedro O  Pinheiro  Ronan Collobert and Piotr Doll r   Learning to Segment Object Candidates  https   arxiv org pdf 1506 06204 pdf   NIPS  2015    Mid level Cues     Tom Lee  Sanja Fidler  and Sven Dickinson   Learning to Combine Mid level Cues for Object Proposal Generation  http   www cv foundation org openaccess content iccv 2015 papers Lee Learning to Combine ICCV 2015 paper pdf   ICCV  2015    LPO   Project   http   vladlen info publications learning to propose objects       Philipp Kr henb hl and Vladlen Koltun   Learning to Propose Objects  http   vladlen info papers lpo pdf   CVPR  2015    RPN   Project   https   github com ShaoqingRen faster rcnn      Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  https   arxiv org pdf 1506 01497 pdf   NIPS  2015    DeepProposal   Code   https   github com aghodrati deepproposal      Amir Ghodrati  Ali Diba  Marco Pedersoli  Tinne Tuytelaars  and Luc Van Gool   DeepProposal  Hunting Objects by Cascading Deep Convolutional Layers  https   arxiv org pdf 1510 04445 pdf   ICCV  2015    3DOP   Project   http   www cs toronto edu objprop3d       Xiaozhi Chen  Kaustav Kundu  Yukun Zhu  Andrew Berneshawi  Huimin Ma  Sanja Fidler  and Raquel Urtasun   3D Object Proposals for Accurate Object Class Detection  http   www cs toronto edu objprop3d 3dopNIPS15 pdf   NIPS  2015    Mono3D   Project   http   3dimage ee tsinghua edu cn cxz mono3d      Xiaozhi Chen  Kaustav Kundu  Ziyu Zhang  Huimin Ma  Sanja Fidler  and Raquel Urtasun   Monocular 3D Object Detection for Autonomous Driving  http   3dimage ee tsinghua edu cn files publications CVPR16 XiaozhiChen pdf   CVPR  2016    HyperNet     Tao Kong  Anbang Yao  Yurong Chen  and Fuchun Sun   HyperNet  Towards Accurate Region Proposal Generation and Joint Object Detection  http   www cv foundation org openaccess content cvpr 2016 papers Kong HyperNet Towards Accurate CVPR 2016 paper pdf   CVPR  2016    CRAFT   Project   https   github com byangderek CRAFT      Bin Yang  Junjie Yan  Zhen Lei  and Stan Z  Li   CRAFT Objects From Images  https   arxiv org pdf 1604 03239 pdf   CVPR  2016    AttractioNet   Project   https   github com gidariss AttractioNet      Spyros Gidaris and Nikos Komodakis   Attend Refine Repeat  Active Box Proposal Generation via In Out Localization  https   arxiv org pdf 1606 04446 pdf   BMVC  2016    SPOP net     Zequn Jie  Xiaodan Liang  Jiashi Feng  Wen Feng Lu  Eng Hock Francis Tay  and Shuicheng Yan   Scale Aware Pixelwise Object Proposal Networks  https   arxiv org pdf 1601 04798 pdf   TIP  2016    FCN     Zequn Jie  Wen Feng Lu  Siavash Sakhavi  Yunchao Wei  Eng Hock Francis Tay  and Shuicheng Yan   Object Proposal Generation with Fully Convolutional Networks  http   ieeexplore ieee org stamp stamp jsp arnumber 7484700   TCSVT  2016    InstanceFCN     Jifeng Dai  Kaiming He  Yi Li  Shaoqing Ren  and Jian Sun   Instance Sensitive Fully Convolutional Networks  https   arxiv org pdf 1603 08678 pdf   ECCV  2016    MV3D   Project   http   3dimage ee tsinghua edu cn cxz      Xiaozhi Chen  Huimin Ma  Ji Wan  Bo Li  and Tian Xia   Multi View 3D Object Detection Network for Autonomous Driving  https   arxiv org pdf 1611 07759 pdf   arxiv 1611 07759  2016        Hybrid   Part based   ShapeSharing   Project   http   vision cs utexas edu projects shapesharing       Jaechul Kim and Kristen Grauman   Shape Sharing for Object Segmentation  http   www cs utexas edu  grauman papers shape sharing ECCV2012 pdf   ECCV  2012    OOP   Project   http   www shengfenghe com oriented object proposals html      Shengfeng He and Rynson W H  Lau   Oriented Object Proposals  http   www shengfenghe com uploads 1 5 1 3 15132160 oop iccv15 pdf   ICCV  2015    Object Discovery   Project   http   www di ens fr willow research objectdiscovery       Minsu Cho  Suha Kwak  Cordelia Schmid  and Jean Ponce   Unsupervised Object Discovery and Localization in the Wild  Part based Matching with Bottom up Region Proposals  http   www di ens fr willow pdfscurrent cho2015 pdf   CVPR  2015    Adobe Boxes   Code   https   github com fzw310 AdobeBoxes v1 0  tree master AdobeBoxes v1 0       Authors   Adobe Boxes  Locating Object Proposals Using Object Adobes  http   ieeexplore ieee org stamp stamp jsp arnumber 7488218   TIP  2016        RGB D   MCG D   Project   https   github com s gupta rcnn depth      Saurabh Gupta  Ross Girshick  Pablo Arbel ez and Jitendra Malik   Learning Rich Features from RGB D Images for Object Detection and Segmentation  https   people eecs berkeley edu  sgupta pdf rcnn depth pdf   ECCV  2014    StereoObj   Dataset   http   www cs cityu edu hk  rynson papers demos StereoObj Dataset rar      Shao Huang  Weiqiang Wang  Shengfeng He  and Rynson W H  Lau   Stereo Object Proposals   http   www cs cityu edu hk  rynson papers tip17 pdf   TIP  2017    Elastic Edge Boxes     Jing Liu  Tongwei Ren  Yuantian Wang  Sheng Hua Zhong  Jia Bei  Shengchao Chen   Object proposal on RGB D images via elastic edge boxes  http   www sciencedirect com science article pii S0925231216314266   Neurocomputing  2017        Re ranking   Refinement   Re ranking  https   c1 staticflickr com 3 2880 32318038054 53b1b453eb c jpg    MTSE   Project   http   3dimage ee tsinghua edu cn cxz mtse      Xiaozhi Chen  Huimin Ma  Xiang Wang  Zhichen Zhao   Improving Object Proposals with Multi Thresholding Straddling Expansion  http   3dimage ee tsinghua edu cn files publications CVPR15 XiaozhiChen pdf   CVPR  2015      Xiaozhi Chen  Huimin Ma  Chenzhuo Zhu  Xiang Wang  Zhichen Zhao   Boundary aware box refinement for object proposal generation  http   3dimage ee tsinghua edu cn download filename files publications NC17 XiaozhiChen pdf   Neurocomputing  2017    DeepBox   Project   https   github com weichengkuo DeepBox      Weicheng Kuo  Bharath Hariharan  and Jitendra Malik   DeepBox  Learning Objectness with Convolutional Networks  https   arxiv org pdf 1505 02146 pdf   ICCV  2015    SharpMask   Code   https   github com facebookresearch deepmask      Pedro O  Pinheiro  Tsung Yi Lin  Ronan Collobert  and Piotr Doll r   Learning to Refine Object Segments  https   arxiv org pdf 1603 08695 pdf   ECCV  2016    DeepStereoOP     Cuong C  Pham and Jae Wook Jeon   Robust Object Proposals Re ranking for Object Detection in Autonomous Driving Using Convolutional Neural Networks  http   www sciencedirect com science article pii S0923596517300231   SPIC  2017        Spatio Temporal   3Dproposals   Project   http   lear inrialpes fr  oneata 3Dproposals       Dan Oneata  Jerome Revaud  Jakob Verbeek  Cordelia Schmid   Spatio temporal Object Detection Proposals  https   hal inria fr file index docid 1021902 filename proof pdf   ECCV  2014    STMOP   Project   https   www cs cmu edu  katef videolearn html      Katerina Fragkiadaki  Pablo Arbelaez  Panna Felsen  and Jitendra Malik   Learning to Segment Moving Objects in Videos  https   www cs cmu edu  katef papers CVPR2015 LearnVideoSegment pdf   CVPR  2015        Evaluation   Hosang  https   c1 staticflickr com 1 721 33003654282 6b18185807 b jpg    Hosang benchmark    Project   http   www mpi inf mpg de departments computer vision and multimodal computing research object recognition and scene understanding how good are detection proposals really     Code   https   github com hosang detection proposals      Jan Hosang  Rodrigo Benenson  and Bernt Schiele   How good are detection proposals  really   https   arxiv org pdf 1406 6962 pdf   BMVC  2014      Jan Hosang  Rodrigo Benenson  Piotr Doll r  and Bernt Schiele   What makes for effective detection proposals   https   arxiv org pdf 1502 05082 pdf   TPAMI  2016    Jordi Pont Tuset and Luc Van Gool   Boosting Object Proposals  From Pascal to COCO   http   www vision ee ethz ch  biwiproposals boosting coco data PontTusetVanGool Boosting ICCV2015 pdf   ICCV  2015    Project   http   www vision ee ethz ch  biwiproposals boosting coco index html    Neelima Chavali  Harsh Agrawal  Aroma Mahendru  and Dhruv Batra   Object Proposal Evaluation Protocol is  Gameable    https   arxiv org pdf 1505 05836 pdf   CVPR  2016    Project   https   filebox ece vt edu  aroma web object proposals html        Low Level Processing   Low level  https   c2 staticflickr com 4 3801 33163256395 fdfed8e710 c jpg    Felzenszwalb s segmentation   Project   http   cs brown edu  pff segment       Pedro F  Felzenszwalb and Daniel P  Huttenlocher   Efficient Graph Based Image Segmentation  http   cs brown edu  pff papers seg ijcv pdf   IJCV  2004    SLIC Superpixels   Project   http   ivrl epfl ch research superpixels      Radhakrishna Achanta  Appu Shaji  Kevin Smith  Aurelien Lucchi  Pascal Fua  and Sabine S sstrunk   SLIC Superpixels Compared to State of the art Superpixel Methods  https   infoscience epfl ch record 177415 files Superpixel PAMI2011 2 pdf   TPAMI  2012    Structured Edge Detection   Code   https   github com pdollar edges      Piotr Doll r and C  Lawrence Zitnick   Structured Forests for Fast Edge Detection   https   www microsoft com en us research wp content uploads 2013 12 DollarICCV13edges pdf   ICCV  2013       Datasets     COCO  https   c2 staticflickr com 4 3690 33003654372 bea4d16186 b jpg    PASCAL   Project   http   host robots ox ac uk pascal VOC       Mark Everingham  Luc Van Gool  Christopher K  I  Williams  John Winn  and Andrew Zisserman   The PASCAL Visual Object Classes  VOC  Challenge  http   host robots ox ac uk pascal VOC pubs everingham10 pdf   IJCV  2010    MS COCO   Project   http   mscoco org       Tsung Yi Lin  Michael Maire  Serge Belongie  Lubomir Bourdev  Ross Girshick  James Hays  Pietro Perona  Deva Ramanan  C  Lawrence Zitnick  and Piotr Doll r   Microsoft COCO  Common Objects in Context  https   arxiv org pdf 1405 0312 pdf   ECCV  2014    ImageNet   Project   http   www image net org       Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li and Li Fei Fei   ImageNet  A Large Scale Hierarchical Image Database  http   www image net org papers imagenet cvpr09 pdf   CVPR  2009    NYU Depth Dataset   Project   http   cs nyu edu  silberman datasets nyu depth v2 html      Nathan Silberman  Pushmeet Kohli  Derek Hoiem  and Rob Fergus   Indoor Segmentation and Support Inference from RGBD Images  http   cs nyu edu  silberman papers indoor seg support pdf   ECCV  2012    KITTI   Project   http   www cvlibs net datasets kitti index php      Andreas Geiger and Philip Lenz and Raquel Urtasun   Are we ready for Autonomous Driving  The KITTI Vision Benchmark Suite  http   www cvlibs net publications Geiger2012CVPR pdf   CVPR  2012        Object Detection     FastR CNN  https   c1 staticflickr com 1 715 32316133964 046a1c0f14 c jpg    R FCN   Code   https   github com daijifeng001 r fcn   PyCode   https   github com Orpine py R FCN      Jifeng Dai  Yi Li  Kaiming He  Jian Sun   R FCN  Object Detection via Region based Fully Convolutional Networks  https   arxiv org pdf 1605 06409 pdf   NIPS  2016    SSD   Code   https   github com weiliu89 caffe tree ssd      Wei Liu  Dragomir Anguelov  Dumitru Erhan  Christian Szegedy  Scott Reed  Cheng Yang Fu  Alexander C  Berg   SSD  Single Shot MultiBox Detector  https   arxiv org pdf 1512 02325v2 pdf   ECCV  2016    YOLO   Code   http   pjreddie com darknet yolo       Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   You Only Look Once  Unified  Real Time Object Detection  http   pjreddie com media files papers yolo pdf   ECCV  2016    Faster R CNN   Code   https   github com ShaoqingRen faster rcnn    PyCode    https   github com rbgirshick py faster rcnn      Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  https   arxiv org pdf 1506 01497 pdf   NIPS  2015    Fast R CNN   Code   https   github com rbgirshick fast rcnn      Ross Girshick   Fast R CNN  https   arxiv org pdf 1504 08083 pdf   ICCV  2015    SPP   Code   https   github com ShaoqingRen SPP net      Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  https   arxiv org pdf 1406 4729 pdf   ECCV  2014    R CNN   Code   https   github com rbgirshick rcnn      Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik   Rich feature hierarchies for accurate object detection and semantic segmentation  https   arxiv org pdf 1311 2524 pdf   CVPR  2014      Notes I hope this repository is helpful to everyone who re interested in this awesome topic  As Piotr Doll r said  it s an amazing time to be doing research in object detection  and deep learning    Feel free to send a  pull request  https   github com caocuong0306 awesome object proposals pulls  if you have anything in mind that would fit in this list  Thank you  ","software":"md","book":"caocuong0306","full_link":"https://github.com/caocuong0306/awesome-object-proposals"},{"name":"zhangdebin1119/py-faster-rcnn-cpu-","artist":"train, rcnn, faster, shell, network","id":858,"playcount":8992,"description":"zhangdebin1119/py-faster-rcnn-cpu- train, rcnn, faster, shell, network  References https   github com rbgirshick py faster rcnn change only for cpu remove code with gpu python2 7 5 tensorflow1 1 0      Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"zhangdebin1119","full_link":"https://github.com/zhangdebin1119/py-faster-rcnn-cpu-"},{"name":"csjunxu/py-faster-rcnn2","artist":"train, rcnn, faster, shell, network","id":859,"playcount":8855,"description":"csjunxu/py-faster-rcnn2 train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"csjunxu","full_link":"https://github.com/csjunxu/py-faster-rcnn2"},{"name":"freelist/py-faster-rcnn-myfork","artist":"train, rcnn, faster, shell, network","id":860,"playcount":8855,"description":"freelist/py-faster-rcnn-myfork train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"freelist","full_link":"https://github.com/freelist/py-faster-rcnn-myfork"},{"name":"manutdzou/py-faster-rcnn-OHEM","artist":"train, rcnn, faster, shell, network","id":861,"playcount":8311,"description":"manutdzou/py-faster-rcnn-OHEM train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   You can also directly use   train sh to train the project  ","software":"md","book":"manutdzou","full_link":"https://github.com/manutdzou/py-faster-rcnn-OHEM"},{"name":"happynear/caffe-windows","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":862,"playcount":4103,"description":"happynear/caffe-windows set, build, windowscommonsettingsprop, caff, cuda   Caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2015  CUDA 9 0  third party libraries   Baidu Yun  https   pan baidu com s 1ZTp8iWszMPrZ718w UCZ5Q  or  Google Drive  https   drive google com file d 13dbvXmMosxozWbSgJdDdxH62YWqXLjoJ view usp sharing   Please extract the archive into    windows thirdparty    Then  add the folder    windows thirdparty bins  to the environment variable  PATH        Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well       CUDA Download  CUDA Toolkit 8 0   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN     UseNCCL  to  false        cuDNN Download  cuDNN v5   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to add the    matlab  folder to Matlab search path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"happynear","full_link":"https://github.com/happynear/caffe-windows"},{"name":"Eddykim/caffe-vis-window","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":863,"playcount":4143,"description":"Eddykim/caffe-vis-window set, build, windowscommonsettingsprop, caff, cuda   Caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2015  CUDA 8 0  third party libraries   Baidu Yun  http   pan baidu com s 1hsN2hHq  or  Google Drive  https   drive google com open id 0B0OhXbSTAU1HSjM5MUdfZ2RPdFk   Please extract the archive into    windows thirdparty    Then  add the folder    windows thirdparty bins  to the environment variable  PATH        Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well       CUDA Download  CUDA Toolkit 8 0   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN     UseNCCL  to  false        cuDNN Download  cuDNN v5   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to    add the generated  matcaffe  folder to Matlab search path  and   add   caffe root  Build x64 Release  to your system path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Eddykim","full_link":"https://github.com/Eddykim/caffe-vis-window"},{"name":"bigking2017/caffe_dense","artist":"caff, model, learn, communiti, berkeley","id":864,"playcount":3324,"description":"bigking2017/caffe_dense caff, model, learn, communiti, berkeley   Caffe   Jin wei modified    add function dense feature fit 1  convert data to lmdb       build tools convert dense data bin   label file  path to feature file  images root    save lmdb to  feature dims       build tools convert dense data bin   label file  home kingk face sample face 01 feature txt  home kingk face sample face 01   home kingk face work caffe centerloss data face fit lmdb 128  2  set prototxt dense loss layer                   dense loss                 layer     name   dense loss    type   DenseLoss    bottom   fc6    bottom   label    top   dense loss    param       lr mult  1     decay mult  2        dense loss param       dense dims  128     dense weight  0 01      dense filler          type   xavier               loss weight  0 008    3  train        build tools caffe train    solver  path to solver      Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  SKX  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                  ","software":"md","book":"bigking2017","full_link":"https://github.com/bigking2017/caffe_dense"},{"name":"tarwii/Faster-RCNN","artist":"shell, train, model, rcnn, demo","id":865,"playcount":3780,"description":"tarwii/Faster-RCNN shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"tarwii","full_link":"https://github.com/tarwii/Faster-RCNN"},{"name":"cjw9202/BTSD_faster_rcnn","artist":"train, rcnn, set, faster, model","id":866,"playcount":3245,"description":"cjw9202/BTSD_faster_rcnn train, rcnn, set, faster, model   Faster RCNN with PyTorch   Note    I re implemented faster rcnn in this project when I started learning PyTorch  Then I use PyTorch in all of my projects  I still remember it costed one week for me to figure out how to build cuda code as a pytorch layer     But actually this is not a good implementation and I didn t achieve the same mIOU as the original caffe code      This project is no longer maintained  So I suggest      You can still read and study this code if you want to re implement faster rcnn by yourself    You can use the better PyTorch implementation by  ruotianluo  https   github com ruotianluo pytorch faster rcnn  if you want to train  faster rcnn with your own data   This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 0  Install the requirements  you can use pip or  Anaconda  https   www continuum io downloads                 conda install pip pyyaml sympy h5py cython numpy scipy     conda install  c menpo opencv3     pip install easydict           1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py      License  MIT license  MIT  ","software":"md","book":"cjw9202","full_link":"https://github.com/cjw9202/BTSD_faster_rcnn"},{"name":"someoneAlready/cg-py-faster-rcn","artist":"train, rcnn, faster, shell, network","id":867,"playcount":8855,"description":"someoneAlready/cg-py-faster-rcn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"someoneAlready","full_link":"https://github.com/someoneAlready/cg-py-faster-rcn"},{"name":"xuanyuyt/SSD_windows_caffe","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":868,"playcount":4239,"description":"xuanyuyt/SSD_windows_caffe set, build, windowscommonsettingsprop, caff, cuda   Caffe     Travis Build Status  https   api travis ci org Microsoft caffe svg branch master   https   travis ci org Microsoft caffe  Travis  Linux build      AppVeyor Build Status  https   ci appveyor com api projects status 58wvckt0rcqtwnr5 branch master svg true    https   ci appveyor com project pavlejosipovic caffe 3a30a  AppVeyor  Windows build      License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2013      Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well  3rd party dependencies required by Caffe are automatically resolved via NuGet       CUDA Download  CUDA Toolkit 7 5   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN  to  false        cuDNN Download  cuDNN v3  or  cuDNN v4   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to    add the generated  matcaffe  folder to Matlab search path  and   add   caffe root  Build x64 Release  to your system path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"xuanyuyt","full_link":"https://github.com/xuanyuyt/SSD_windows_caffe"},{"name":"AlphaNext/CaffePlus","artist":"caff, learn, model, deep, layer","id":869,"playcount":3257,"description":"AlphaNext/CaffePlus caff, learn, model, deep, layer   Fork of Caffe from  rbgirshick s caffe fast rcnn  https   github com rbgirshick caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83   This is a forked repo  replace and add some layers to original  caffe fast rcnn  https   github com rbgirshick caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83   using  BVLC caffe  https   github com BVLC caffe  and  matthieudelaro s caffeBVLCplus  https   github com matthieudelaro caffeBVLCplus   Many thanks to the following repo s authors         rbgirshick s caffe fast rcnn  https   github com rbgirshick caffe fast rcnn tree 0dcd397b29507b8314e252e850518c5695efbb83        BVLC caffe  https   github com BVLC caffe        matthieudelaro s caffeBVLCplus  https   github com matthieudelaro caffeBVLCplus        NVlabs s PL4NN  https   github com NVlabs PL4NN      Thanks to  matthieudelaro s caffeBVLCplus  https   github com matthieudelaro caffeBVLCplus   The   unpooling   layers provided by caffeBVLCplus have been add to this repo  You can use it to  set up some Encode Decode CNN architectures  Perceptual Losses for Neural Networks   PL4NN  https   github com NVlabs PL4NN   are also added        Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"AlphaNext","full_link":"https://github.com/AlphaNext/CaffePlus"},{"name":"CptSteven/faster-rcnn-mod","artist":"train, rcnn, faster, shell, network","id":870,"playcount":7115,"description":"CptSteven/faster-rcnn-mod train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper   ","software":"md","book":"CptSteven","full_link":"https://github.com/CptSteven/faster-rcnn-mod"},{"name":"victkid/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":871,"playcount":8855,"description":"victkid/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"victkid","full_link":"https://github.com/victkid/py-faster-rcnn"},{"name":"jinyixin621/Toyota_Proj","artist":"time, train, rcnn, net, vgg","id":872,"playcount":9190,"description":"jinyixin621/Toyota_Proj time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Ojbect Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17323 authkey  AJOz vdYtdPwuKo ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9    ","software":"md","book":"jinyixin621","full_link":"https://github.com/jinyixin621/Toyota_Proj"},{"name":"liruoteng/FlowNet","artist":"caff, learn, model, deep, layer","id":873,"playcount":4217,"description":"liruoteng/FlowNet caff, learn, model, deep, layer     10th April 2017 update You may find the official caffemodel file at  https   lmb informatik uni freiburg de resources software php  This repo has been tested under Ubuntu 14 04  CUDA 8 on NVIDIA GTX1080    For those who want to know how to read write visualize flow file   flo   please refer another repo of mine   Optical Flow Toolkit  https   github com liruoteng OpticalFlowToolkit            Caffe with FlowNet      Release  1 0   Date  08 02 2016   Based on caffe  GIT hash SHA 8e8d97d6 by Jeff Donahue  23 11 2015 04 33   This is a release of FlowNet S and FlowNet C  It comes as a fork of the caffe master branch and with a trained network  as well as examples on how to use or train it   To get started with FlowNet  first compile caffe  by configuring a       Makefile config   example given in Makefile config example   then make with         make  j 5 all tools  Go to this folder         flownet release models flownet   From this folder you can execute the scripts we prepared  To try out FlowNetS on a sample image pair  run        demo flownet py S data 0000000 img0 ppm data 0000000 img1 ppm  You can also provide lists of files to run it on multiple image pairs  To train FlowNetS with the 8 sample images that come with this package  just run         train flownet py S  To extend it  please modify the img1 list txt and img2 list txt files accordingly or adapt the python script for your needs  Please use strong image augmentation techniques to obtain satisfactory results        License and Citation  Please cite this paper in your publications if you use FlowNet for your research        inproceedings DFIB15        author          A  Dosovitskiy and P  Fischer and E  Ilg and P  H   a usser and C  Haz  rba   and V  Golkov and P  v d  Smagt and D  Cremers and T  Brox         title           FlowNet  Learning Optical Flow with Convolutional Networks         booktitle       IEEE International Conference on Computer Vision  ICCV          month           Dec         year            2015         url             http   lmb informatik uni freiburg de Publications 2015 DFIB15                Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"liruoteng","full_link":"https://github.com/liruoteng/FlowNet"},{"name":"qxin/learnLocalization","artist":"train, rcnn, faster, shell, network","id":874,"playcount":8251,"description":"qxin/learnLocalization train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details  ","software":"md","book":"qxin","full_link":"https://github.com/qxin/learnLocalization"},{"name":"ashutalewar/caffe_rcnn","artist":"train, rcnn, faster, shell, network","id":875,"playcount":8855,"description":"ashutalewar/caffe_rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"ashutalewar","full_link":"https://github.com/ashutalewar/caffe_rcnn"},{"name":"shallowyuan/cosegmentor-crf","artist":"train, rcnn, faster, shell, network","id":876,"playcount":8855,"description":"shallowyuan/cosegmentor-crf train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"shallowyuan","full_link":"https://github.com/shallowyuan/cosegmentor-crf"},{"name":"chapternewscu/python_faster-rcnn","artist":"train, rcnn, faster, shell, network","id":877,"playcount":8855,"description":"chapternewscu/python_faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"chapternewscu","full_link":"https://github.com/chapternewscu/python_faster-rcnn"},{"name":"RuibinMa/bottle-detection","artist":"time, train, rcnn, net, vgg","id":878,"playcount":9206,"description":"RuibinMa/bottle-detection time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main resutls                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Ojbect Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17290 authkey  AGhH4z667tHYYEw ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17331 authkey  APJHX5JQCLUGHK0 ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17330 authkey  AFy6VjnKXzk9aAQ ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17328 authkey  ANKPe Rn1h4htNw ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17329 authkey  AMUuqF2wzQiRgww ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17255 authkey  AHOIeRzQKCYXD3U ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17256 authkey  AF7wGc1kbUTfI7o ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17319 authkey  APSc546R6TbCCl4 ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17323 authkey  AJOz vdYtdPwuKo ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9    ","software":"md","book":"RuibinMa","full_link":"https://github.com/RuibinMa/bottle-detection"},{"name":"szc1523/FasterRCNN","artist":"train, rcnn, faster, shell, network","id":879,"playcount":8855,"description":"szc1523/FasterRCNN train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"szc1523","full_link":"https://github.com/szc1523/FasterRCNN"},{"name":"hainow/VL2","artist":"train, rcnn, faster, shell, network","id":880,"playcount":8916,"description":"hainow/VL2 train, rcnn, faster, shell, network     Disclaimer  The official Weakly Supervised Deep Detection Networks  WSDDN  code  written in MATLAB  is available  here  https   github com hbilen WSDDN   If your goal is to reproduce the results in the WSDDN paper  please use the  official code  https   github com hbilen WSDDN    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  py faster rcnn  https   github com rbgirshick py faster rcnn   There are slight differences between the two implementations       Todo  Finish Readme       In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name             VL2 ","software":"md","book":"hainow","full_link":"https://github.com/hainow/VL2"},{"name":"mfigurnov/perforated-cnn-caffe","artist":"caff, learn, model, deep, layer","id":881,"playcount":3352,"description":"mfigurnov/perforated-cnn-caffe caff, learn, model, deep, layer   perforated cnn caffe  PerforatedCNNs accelerate convolutional neural networks  CNNs  by skipping evaluation of the convolutional layers in some of the spatial positions  See the paper for more details   Michael Figurnov  Aijan Ibraimova  Dmitry Vetrov  Pushmeet Kohli  PerforatedCNNs  Acceleration through Elimination of Redundant Convolutions   NIPS 2016    arXiv  http   arxiv org abs 1504 08362     The code is based on Caffe from October 2015   See also  MatConvNet  https   github com mfigurnov perforated cnn matconvnet  implementation of PerforatedCNNs  Differences between the two versions   1  Caffe version does not support perforating a network  For the purposes of the paper  we performed perforation in MatConvNet code  and then imported the network using  python import matconvnet py  script  2  Caffe version performs explicit interpolation of outputs in  ConvolutionPerforatedLayer   This makes this implementation more self contained  compared to MatConvNet implementation with implicit interpolation  as there is no need to tweak indices of reads of the next layer  However  this means that no memory is saved for storage of intermediate outputs  and that the speedup might be lower  especially for CPU version      Original Caffe README     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"mfigurnov","full_link":"https://github.com/mfigurnov/perforated-cnn-caffe"},{"name":"minimrbanana/faster_rcnn-master","artist":"time, train, rcnn, net, vgg","id":882,"playcount":9206,"description":"minimrbanana/faster_rcnn-master time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main resutls                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Ojbect Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17290 authkey  AGhH4z667tHYYEw ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17331 authkey  APJHX5JQCLUGHK0 ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17330 authkey  AFy6VjnKXzk9aAQ ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17328 authkey  ANKPe Rn1h4htNw ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17329 authkey  AMUuqF2wzQiRgww ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17255 authkey  AHOIeRzQKCYXD3U ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17256 authkey  AF7wGc1kbUTfI7o ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17319 authkey  APSc546R6TbCCl4 ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17323 authkey  AJOz vdYtdPwuKo ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9    ","software":"md","book":"minimrbanana","full_link":"https://github.com/minimrbanana/faster_rcnn-master"},{"name":"BelindaJiao/faster-rcnn","artist":"train, rcnn, faster, shell, network","id":883,"playcount":9117,"description":"BelindaJiao/faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"BelindaJiao","full_link":"https://github.com/BelindaJiao/faster-rcnn"},{"name":"OAID/ObjectTracker","artist":"tracker, year, machin, code, titl","id":884,"playcount":3608,"description":"OAID/ObjectTracker tracker, year, machin, code, titl   ObjectTracker  This is a fork of the  C   implementation of OpenTLD  https   github com gnebehay OpenTLD  called TrackTLD  OpenTLD was originally proposed in  1  and implemented by Georg Nebehay in C     This fork uses C   implementations of correlation filter based trackers as short term trackers  Both short term trackers are modified variants of the visual trackers proposed in  2 3   The short term trackers are extended with target loss detection capabilities as in  4  and use the C   implementation  5  of the FHOG features proposed in  6   The detection cascade is only used to suggest possible target locations to the short term trackers for redetection purposes  It cannot reinitialize the short term trackers  The short term trackers decide whether a suggested patch actually contains the target   The system starts with the KCFcpp as default short term tracker     Usage If you have a webcam attached to your ROCK960  you can simply execute cftld in order to try it out   Press  r  key  drag the mouse to draw the box to be tracked target  And press the Enter key to start tracking       Keyboard shortcuts    r  select a target    q  quit    l  toggle learning    a  toggle alternating mode  if true  detector is switched off when tracker is available       Documents    Installation instructions  installation md     Accuracy test instructions  accuracy test instruction md     Performance Report PDF  performance report objecttraker pdf     Release History      Version 0 1 3   2018 02 05    Add script to test accuracy    Add 2xA72 and 4xA53 performance data      Commercial Use  US  The code using linear correlation filters may be affected by a US patent  If you want to use this code commercially in the US please refer to http   www cs colostate edu  vision ocof toolset 2012 index php for possible patent claims     References If you reuse this code for a scientific publication  please cite the related publications  dependent on what parts of the code you reuse     1       article kalal2012TLD  title  Tracking Learning Detection   author  Kalal  Zdenek and Mikolajczyk  Krystian and Matas  Jiri   journal  Pattern Analysis and Machine Intelligence  IEEE Transactions on   year  2012         2       article henriques2015tracking  title    High Speed Tracking with Kernelized Correlation Filters   author    Henriques  J  F  and Caseiro  R  and Martins  P  and Batista  J    journal    Pattern Analysis and Machine Intelligence  IEEE Transactions on   year    2015         3       inproceedings danelljan2014dsst  title  Accurate Scale Estimation for Robust Visual Tracking   author  Danelljan  Martin and H   a ger  Gustav and Khan  Fahad Shahbaz and Felsberg  Michael   booktitle  Proceedings of the British Machine Vision Conference BMVC   year  2014         4       inproceedings bolme2010mosse  author  Bolme  David S  and Beveridge  J  Ross and Draper  Bruce A  and Yui Man Lui   title  Visual Object Tracking using Adaptive Correlation Filters   booktitle  Conference on Computer Vision and Pattern Recognition  CVPR    year  2010         5       misc PMT  author    Piotr Doll  ar   title     P iotr s  C omputer  V ision  M atlab  T oolbox   PMT     howpublished     url http   vision ucsd edu  pdollar toolbox doc index html          6       article lsvm pami  title    Object Detection with Discriminatively Trained Part Based Models   author    Felzenszwalb  P  F  and Girshick  R  B  and McAllester  D  and Ramanan  D    journal    IEEE Transactions on Pattern Analysis and Machine Intelligence   year    2010   volume    32   number    9   pages    1627  1645        ","software":"md","book":"OAID","full_link":"https://github.com/OAID/ObjectTracker"},{"name":"marcopede/wsd","artist":"rcnn, fast, shell, matlab, voc","id":885,"playcount":11243,"description":"marcopede/wsd rcnn, fast, shell, matlab, voc  Modified version of fast R CNN that makes it run in a weakly supervised setting  no bbox annotations          Fast  R CNN  Fast Region based Convolutional Networks for object detection      Created by Ross Girshick at Microsoft Research  Redmond         Introduction      Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN     trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet      runs 200x faster than R CNN and 10x faster than SPPnet at test time      has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet      and is written in Python and C   Caffe     Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015         License    Fast R CNN is released under the MIT License  refer to the LICENSE file for details          Citing Fast R CNN    If you find Fast R CNN useful in your research  please consider citing          inproceedings girshickICCV15fastrcnn           Author    Ross Girshick            Title    Fast R CNN            Booktitle    International Conference on Computer Vision   ICCV              Year    2015                    Contents  1   Requirements  software   requirements software   2   Requirements  hardware   requirements hardware   3   Basic installation   installation sufficient for the demo   4   Demo   demo   5   Beyond the demo  training and testing   beyond the demo installation for training and testing models   6   Usage   usage   7   Extra downloads   extra downloads         Requirements  software    1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html          Note    Caffe  must  be built with support for Python layers          make      In your Makefile config  make sure to have this line uncommented    WITH PYTHON LAYER    1             You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference   2  Python packages you might not have   cython    python opencv    easydict   3   optional  MATLAB  required for PASCAL VOC evaluation only         Requirements  hardware    1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices  2  For training with VGG16  you ll need a K40   11G of memory         Installation  sufficient for the demo     1  Clone the Fast R CNN repository       Shell      Make sure to clone with   recursive    git clone   recursive https   github com rbgirshick fast rcnn git             2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT         Ignore notes 1 and 2 if you followed step 1 above              Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule          Shell      git submodule update   init   recursive                 Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions      3  Build the Cython modules         Shell      cd  FRCN ROOT lib      make                 4  Build Caffe and pycaffe         Shell      cd  FRCN ROOT caffe fast rcnn        Now follow the Caffe installation instructions here           http   caffe berkeleyvision org installation html          If you re experienced with Caffe and have all of the requirements installed        and your Makefile config in place  then simply do       make  j8    make pycaffe                 5  Download pre computed Fast R CNN detectors         Shell      cd  FRCN ROOT        data scripts fetch fast rcnn models sh                 This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details         Demo     After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo       Python      To run the demo     Shell  cd  FRCN ROOT    tools demo py       The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements       Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage       MATLAB      There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version      Shell  cd  FRCN ROOT matlab  matlab   wait for matlab to start         At the matlab prompt  run the script      fast rcnn demo         Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB   See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details       Computing object proposals      The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m    If you d like to compute proposals on your own images  there are many options   Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors     1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python   2  EdgeBoxes   matlab code  https   github com pdollar edges   3  GOP and LPO   python code  http   www philkr net    4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg    5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR      Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included         Beyond the demo  installation for training and testing models  1  Download the training  validation  test data and VOCdevkit        Shell   wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar   wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar   wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar           2  Extract all of these tars into one directory named  VOCdevkit         Shell   tar xvf VOCtrainval 06 Nov 2007 tar   tar xvf VOCtest 06 Nov 2007 tar   tar xvf VOCdevkit 08 Jun 2007 tar          3  It should have this basic structure        Shell      VOCdevkit                              development kit      VOCdevkit VOCcode                      VOC utility code      VOCdevkit VOC2007                      image sets  annotations  etc            and several other directories                   4  Create symlinks for the PASCAL VOC dataset        Shell      cd  FRCN ROOT data      ln  s  VOCdevkit VOCdevkit2007               Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects   5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012  6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models        Download pre computed Selective Search object proposals    Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012        Shell  cd  FRCN ROOT    data scripts fetch selective search data sh         This will populate the   FRCN ROOT data  folder with  selective selective data          Download pre trained ImageNet models    Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L           Shell  cd  FRCN ROOT    data scripts fetch imagenet models sh       These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience         Usage      Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval        Shell    tools train net py   gpu 0   solver models VGG16 solver prototxt       weights data imagenet models VGG16 v2 caffemodel         If you see this error         EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH          then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation       Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test        Shell    tools test net py   gpu 1   def models VGG16 test prototxt       net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel         Test output is written underneath   FRCN ROOT output        Compress   a Fast R CNN model using truncated SVD on the fully connected layers        Shell    tools compress net py   def models VGG16 test prototxt       def svd models VGG16 compressed test prototxt          net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel    Test the model you just compressed    tools test net py   gpu 0   def models VGG16 compressed test prototxt       net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel             Experiment scripts  Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs        Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag   Results generated before this commit will have some stochastic variation         Extra downloads       Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz     PASCAL VOC test set detections         voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz          voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz          voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz          voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz          voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz      Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"marcopede","full_link":"https://github.com/marcopede/wsd"},{"name":"yundabrowski/fast-rcnn","artist":"rcnn, fast, shell, matlab, voc","id":886,"playcount":11262,"description":"yundabrowski/fast-rcnn rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  https   dl dropboxusercontent com s q4i9v66xq9vhskl fast rcnn experiments tgz dl 0    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  https   dl dropboxusercontent com s rkj8ngkoebpltlt voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz dl 0         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  https   dl dropboxusercontent com s y8supay93f7dj0i voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz dl 0         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  https   dl dropboxusercontent com s yiqm42vtvvw60dg voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz dl 0         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  https   dl dropboxusercontent com s a3loiewc4f4tnaj voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz dl 0         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  https   dl dropboxusercontent com s 7pctvinam6j2nho voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz dl 0     Fast R CNN VGG16 model  https   dl dropboxusercontent com s 53im2gut2jin2qq voc12 submission tgz dl 0  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"yundabrowski","full_link":"https://github.com/yundabrowski/fast-rcnn"},{"name":"imisra/latent-noise-icnm","artist":"model, imag, train, caff, download","id":887,"playcount":8828,"description":"imisra/latent-noise-icnm model, imag, train, caff, download     Image Conditioned Noise Model  ICNM  Created by  Ishan Misra  http   www cs cmu edu  imisra    Based on the CVPR 2016 Paper    Seeing through the Human Reporting Bias   Visual Classifiers from Noisy Human Centric Labels   You can download the paper  here  http   arxiv org abs 1512 06974        Why use it  This codebase can help you replicate the results from the paper and train new models  In cases where your image labels are noisy  our method provides  orthogonal gains over existing techniques   It may help boost performance of your baseline classification system  This paper introduces a way to learn visually correct classifiers from noisy labels  It is an Image Conditioned Noise Model which can estimate label noise  without clean labels        Introduction  Our code base is a mix of Python and C   and uses the  Caffe  https   github com BVLC caffe  framework   It is heavily derived from the  visual concepts codebase  https   github com s gupta visual concepts  by Saurabh Gupta  and the  Fast RCNN codebase  https   github com rbgirshick fast rcnn  by Ross Girshick  It also uses the  MS COCO PythonAPI  https   github com pdollar coco tree master PythonAPI  from Piotr Dollar       Citing  If you find our code useful in your research  please consider citing          inproceedings MisraNoisy16      Author    Ishan Misra and C  Lawrence Zitnick and Margaret Mitchell and Ross Girshick       Booktitle    CVPR       Title     Seeing through the Human Reporting Bias   Visual Classifiers from Noisy Human Centric Labels        Year    2016                 Contents 1   Requirements  software   requirements software  2   Installation   installation  3   Download ground truth   download ground truth  4   Usage   usage  5   Training and Experiment scripts   training and experiment scripts  6   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers and OpenCV        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1   USE OPENCV    1        2  Python packages you might not have   python opencv    nltk   You can skip  nltk  if you download pre computed ground truth files  links below        Installation  1  Clone the ICNM repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com imisra icnm git        2  We ll call the directory that you cloned ICNM into  ICNM ROOT  The following subdirectories should exist as soon as you clone    caffe ICNM    contains the caffe version used by this codebase    utils    utilities for loading saving data  reading caffe logs  and simple MAP REDUCE jobs    vocabs    vocabulary files  classes  for visual concepts    coco    PythonAPI for MS COCO dataset    experiments    prototxt  solver  train  deploy  files for the models      baselines    baseline models  only prototxt       latentNoise    models that use our method  only prototxt   3  Build Caffe and pycaffe        Shell     cd  ICNM ROOT caffe icnm       Now follow the Caffe installation instructions here        http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8 pycaffe  makes caffe and pycaffe with 8 processes in parallel          4  Download pre computed ICNM classifiers  here  https   goo gl gf8IjP  and unzip    This will populate the folder   ICNM ROOT experiments latentNoise cache  with caffe model files   5  Download COCO Dataset and annotations        Shell     wget http   msvocds blob core windows net coco2014 train2014 zip     wget http   msvocds blob core windows net coco2014 val2014 zip     wget http   msvocds blob core windows net annotations 1 0 3 captions train val2014 zip        6  Extract all of these zips into one directory named   ICNM ROOT data coco   You can optionally extract them in another location  say  COCO ROOT and create a symlink to that location       Shell  unzip train2014 zip     unzip val2014 zip     unzip captions train val2014 zip       7  It should have this basic structure      Shell     ICNM ROOT data coco images                 images     ICNM ROOT data coco images train2014       images     ICNM ROOT data coco images val2014         images     ICNM ROOT data coco annotations            json files with annotations       8   Optional  Download baseline models for COCO  here  https   goo gl uxrbuI     Unzipping this in   ICNM ROOT  will populate the folder   ICNM ROOT experiments latentNoise cache  with caffe model files      Download ground truth Use these steps to train and test our model on the COCO dataset   We bundle up training labels  evaluation labels  and other files used for training testing our network  This step makes it so that the  nltk  package is not used  It also includes the  json  files for the 20k test split used in our paper  Following the MILVC paper  we call this split as  valid2   It is half the size of the official COCO 2014 val set  Download it  here  https   goo gl xU2k5V   This should give you the following files    coco1k coco valid2 label counts h5   Ground truth for 1000 visual concepts    coco instancesGT eval      COCO detection ground truth converted to classification ground truth    labels captions coco vocabS1k train h5  and  ids captions coco vocabS1k train txt    Label files used to  train  models    captions   json   COCO captions ground truth files for  valid2  split  Place them under the  annotations  directory of your COCO dataset       Usage Once you have models and data downloaded  you can run the  main test py  file  This should reproduce the results from the paper by first classifying 20k images from the  valid2  set and then evaluating the result  The file has documentation to understand the various types of evaluation and baseline methods  Since  this process is time consuming  we also provide the pre computed detections and evaluations in the  Extra downloads   extra downloads  section for the baseline and our method       Training and Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   ICNM ROOT experiments scripts   To train the methods  ensure that the label ground truth files and image paths in the prototxt are correct  Example  in the   ICNM ROOT experiments baselines classification finetune prototxt  file  the following paths should exist      mil data param     label file     data labels captions coco vocabS1k train h5    source     data ids captions coco vocabS1k train txt    root dir     data coco images train2014         Log files for experiments can be downloaded from  Experiment logs     After unzipping they are located in  experiments baseline logs  and  experiments latentNoise logs     Note   Our models  in the  experiments latentNoise  subdirectory   require you to train the baseline   experiments baseline   models first  for two epochs  and are initialized using these models  For the COCO dataset  one epoch is roughly 80k iterations with a batch size of 1  Thus  our models are initialized by baseline models trained for 160k iterations    Additional details on the data layer   The data layer used is from the visual concepts codebase  Briefly  it takes in the following parameters    n classes   number of classes    source   a list of file containing the image names  without file extension     label file   a h5 file with key as the image name  without file extension   and value as a vector of class labels size  1 x n classes x 1 x 1     root dir   root directory containing images  Paths in the  source  file must be relative to this directory       Extra downloads    Experiment logs  https   goo gl yKhf0q    ImageNet pre trained models  These models are fully convolutional      VGG16   AlexNet fully conv  https   goo gl 9BVvRF    download size 706MB    Classification and Evaluation files  https   goo gl VviUSD    COCO  valid2  set detections for methods in Table 1 from the paper   MILVC  MILVC   Latent  Classification  Classification   Latent   Download size is 3 5GB and expands to 7 6GB  poor compression by  h5py  results in big files     These files expand into the following directory structure    ICNM ROOT det output baselines  method     and   ICNM ROOT det output latentNoise  method      To read and print the data in these files please look at the function  mainTest  in file  main test py     It will print out the values in plain text   cap eval utils print benchmark text   or formatted in latex   cap eval utils print benchmark latex   according to our Table 1 in our paper  ","software":"md","book":"imisra","full_link":"https://github.com/imisra/latent-noise-icnm"},{"name":"deepsemantic/image_captioning","artist":"caff, learn, model, deep, layer","id":888,"playcount":3703,"description":"deepsemantic/image_captioning caff, learn, model, deep, layer   Image Captioning with Deep Bidirectional LSTMs  This branch hosts the code for our paper accepted at ACMMM 2016   Image Captioning with Deep Bidirectional LSTMs   http   arxiv org abs 1604 00790   to see  Demonstration  https   youtu be a0bh9 2LE24    Recently  we deployed the image captioning system to mobile device  find  demo  https   youtu be K9q 6 ogQEM  and  code  https   github com deepsemantic Captioner        Features     Training with Bidirectional LSTMs    Implemented data augmentation  multi crops  multi scale  vectical mirroring    Variant Bidirectional LSTMs  Bi F LSTM  Bi S LSTM      Usage and Example     This work extends   Long term Recurrent Convolutional Networks  LRCN    http   jeffdonahue com lrcn   to bidirectional LSTMs with data augmentation    We provide an example  flickr8K  http   nlp cs illinois edu HockenmaierGroup 8k pictures html   in which you can train proposed networks     1  download flickr8 training and test images  and put it to  data flickr8K images    the dataset splits can be found in  data flickr8K texts       2  create databases with  flickr8K to hdf5 data forward py  and  flickr8K to hdf5 data backward py       3  train network with  multi train Bi LSTM sh      4  perform image caption generation and image sentence retrieval experiments with  bi generation retrieval py         Citation  Please cite in your publications if it helps your research        inproceedings wang2016image       title  Image captioning with deep bidirectional LSTMs        author  Wang  Cheng and Yang  Haojin and Bartz  Christian and Meinel  Christoph        booktitle  Proceedings of the 2016 ACM on Multimedia Conference        pages  988  997        year  2016        organization  ACM            Following is orginal README of Caffe   Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"deepsemantic","full_link":"https://github.com/deepsemantic/image_captioning"},{"name":"chenxistephen/fast-rcnn","artist":"rcnn, fast, shell, matlab, voc","id":889,"playcount":11194,"description":"chenxistephen/fast-rcnn rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val   fast rcnn ","software":"md","book":"chenxistephen","full_link":"https://github.com/chenxistephen/fast-rcnn"},{"name":"rickyHong/caffe-rcnn-action-recognition","artist":"caff, learn, model, deep, layer","id":890,"playcount":3808,"description":"rickyHong/caffe-rcnn-action-recognition caff, learn, model, deep, layer   Special Feature for My Caffe     Clone from the official caffe  will continuely be up to date by the official caffe code   Add faster rcnn joint train and test   DONE     Add action recognition   DONE     Add spatial transform network   Not Started     Speed up  DOING     With demos including all tasks above           Faster RCNN End To End      Disclaimer The official Faster R CNN code  written in MATLAB  is  available  https   github com ShaoqingRen faster rcnn  here  If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official  https   github com ShaoqingRen faster rcnn  code   This repository contains a C   reimplementation of the Python code  py faster rcnn  https   github com rbgirshick py faster rcnn    This C   implementation is built on the offcial  caffe  https   github com BVLC caffe   I will continue to update this code for improvement and up to date by offcial caffe   All following steps  you should do these in the  CAFFE  ROOT path       Demo Using   sh example FRCNN demo sh    the will process five pictures in the examples FRCNN images   and put results into examples FRCNN results    Note  You should prepare the trained caffemodel into models FRCNN  as ZF  faster  rcnn  final caffemodel      Train Using   sh example FRCNN train sh    the will start train voc2007 data using ZF model     VOCdevkit should be put into  CAFFE  ROOT     ln  s  YOUR  VOCdevkit  Path  CAFFE  ROOT VOCdevkit   ZF pretrain model should be put into models FRCNN  as ZF v2 caffemodel      Detail  More details in the code       Commands  Rebase From Caffe Master    git remote add caffe https   github com BVLC caffe git   git fetch caffe   git rebase caffe master    Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/caffe-rcnn-action-recognition"},{"name":"pleuren/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":891,"playcount":7528,"description":"pleuren/py-faster-rcnn train, rcnn, faster, shell, network     Fix Bugs  2017 8 29  param str  cfg key error     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Windows 10 64 bit 2  Vs2015 3  Python 2 7  Recommend use Anaconda  4  OpenCV    3 1 0      Requirements  hardware  1  Nvidia GTX 1060 6GB      Installation  sufficient for the demo    1  Build caffe fast rcnn    cd  FRCN ROOT caffe fast rcnn scripts     modify build win cmd      Line 8  9  74  76           if NOT DEFINED WITH NINJA set WITH NINJA 0    if NOT DEFINED CPU ONLY set CPU ONLY 0           Line 25  29           if  PYTHON VERSION  EQU 2          set CONDA ROOT C  Program Files Anaconda2            Set python 3 5 with conda as the default python    if  PYTHON VERSION  EQU 3          set CONDA ROOT C  Program Files Anaconda2                Line 172  cudnn path             DCUDNN ROOT C  Program Files NVIDIA GPU Computing Toolkit CUDA v8 0               2  Build py faster            SET VS90COMNTOOLS  VS140COMNTOOLS            Add cl exe to env path             C  Program Files  x86  Microsoft Visual Studio 14 0 VC bin           Start setup and install python libs            cd  FRCN ROOT lib    python setup py install    python setup cuda py install    pip install  r requirements txt        3  Run Demo    SET PYTHONPATH  FRCN ROOT caffe fast rcnn python      Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"pleuren","full_link":"https://github.com/pleuren/py-faster-rcnn"},{"name":"changyq12/pedestrain_detection","artist":"rcnn, train, detect, network, faster","id":892,"playcount":3387,"description":"changyq12/pedestrain_detection rcnn, train, detect, network, faster   Comparing the differences between Faster RCNN and RPN BF in pedestrain detection  By zyq cyq      Introduction                                                                                       Faster R CNN RPN BF    Caltech                      This code has been tested on Ubuntu 16 04 with MATLAB 2014b and CUDA 7 5       Citing        RPN BF       article zhang2016faster        title  Is Faster R CNN Doing Well for Pedestrian Detection          author  Zhang  Liliang and Lin  Liang and Liang  Xiaodan and He  Kaiming         journal  arXiv preprint arXiv 1607 07032         year  2016                  Faster R CNN       article ren15fasterrcnn      Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks       Journal    arXiv preprint arXiv 1506 01497       Year    2015             Requirements  0   Caffe  build for RPN BF  see  here  https   github com zhangliliang caffe tree RPN BF         If the mex in  external caffe matlab caffe faster rcnn  could not run under your system  please follow the  instructions  https   github com zhangliliang caffe tree RPN BF  on our Caffe branch to compile and replace the mex   0  MATLAB  0  GPU  Titan X  K40c  etc       How to build and run  0  Download the special caffe vision for this project see  here  https   github com zhangliliang caffe tree RPN BF    and follow the readme md in it to build and run   0  Download the annotations and videos in  Caltech Pedestrian Dataset  http   www vision caltech edu Image Datasets CaltechPedestrians datasets USA   and put them in the three folder  videos res annotations  under   RPN BF external code3 2 1 data USA and   faster rcnn caltech external code3 2 1 data USA   0  The   faster rcnn caltech include the code of faster rcnn on caltech datasets  follow the readme md to make sure it perform well  Start MATLAB from the repo folder  and Run  script faster rcnn caltech m  to train and test the faster rcnn on Caltech   script fast rcnn caltech eval m  to evaluate the result after train and test   0  The   RPN BF include the code of RPN BF on caltech datasets  follow the readme md to make sure it perform well  Start MATLAB from the repo folder  and Run  script rpn pedestrian VGG16 caltech  to train and test the RPN model on Caltech  Run  script rpn bf pedestrian VGG16 caltech  to train and test the BF model on Caltech  the evaluation result is included in the test    0  Hopefully it would give the evaluation results         Experiment results       Faster RCNN    image  https   github com changyq12 pedestrain detection raw master screenshots FRCN ped2 jpg    image  https   github com changyq12 pedestrain detection raw master screenshots FRCN ped3 jpg    image  https   github com changyq12 pedestrain detection raw master screenshots FRCN faster rcnn stage2 jpg   In addition  we have raised the mr to 30  for Faster RCNN on the caltech datasets        RPN BF    image  https   github com changyq12 pedestrain detection raw master screenshots RPNBF ped2 ch jpg    image  https   github com changyq12 pedestrain detection raw master screenshots RPNBF ped3 jpg    image  https   github com changyq12 pedestrain detection raw master screenshots RPNBF rpn jpg    image  https   github com changyq12 pedestrain detection raw master screenshots RPNBF rpn bf jpg       ","software":"md","book":"changyq12","full_link":"https://github.com/changyq12/pedestrain_detection"},{"name":"ShaoqingRen/SPP_net","artist":"caff, model, arxiv, year, fast","id":893,"playcount":3677,"description":"ShaoqingRen/SPP_net caff, model, arxiv, year, fast SPP net  spatial pyramid pooling in deep convolutional networks for visual recognition                            Acknowledgements  a huge thanks to Yangqing Jia for creating Caffe and the BVLC team  and to Ross Girshick for creating RCNN      Introduction  This is a re implementation of the object detection algorithm described in the ECCV 2014 paper  Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition   This re implementation should reproduce the object detection results reported in the paper up to some statistical variance  The models used in the paper are trained fine tuned using cuda convnet  while the model attached with this code is trained fine tuned using Caffe  for the ease of code release   The implementation of image classification training testing has not been included  but the network configuration files can be found directly in this code   Please contact sqren mail ustc edu cn or kahe microsoft com if you have any question       Citing SPP net  If you find SPP net useful in your research  please consider citing        inproceedings kaiming14ECCV          Author    Kaiming  He and Xiangyu  Zhang and Shaoqing  Ren and Jian Sun           Title    Spatial pyramid pooling in deep convolutional networks for visual recognition           Booktitle    European Conference on Computer Vision           Year    2014             License  SPP net is released under the Simplified BSD License for non commercial use  refer to the LICENSE file for details        Installing SPP net  0    Prerequisites     0  MATLAB  tested with 2014a on 64 bit Windows    0  Caffe s prerequisites  some function is based our modified caffe  so we provied compiled caffe mex and cpp file for mex wapper   run  external fetch caffe mex 5 5 m  to download   1  News  a caffe version which supports spp mex is provided in https   github com ShaoqingRen caffe tree SPP net  this version is forked from  BVLC caffe  https   github com BVLC caffe  on Oct  1  2014    For the caffe mex compiled from this caffe code  the Zeiler CNN network with compatible structure  shared in  OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 113 authkey  AE6EgybdYr7tOVM ithint file 2czip     and new prototxts for finetune  in    model defs   should be used    0    Install SPP net     0  Get the SPP net source code by cloning the repository   git clone https   github com ShaoqingRen SPP net git    0  Now change into the SPP net source code directory   0  SPP net expects to find Caffe in  external caffe    0  Start MATLAB  make sure you re still in the  spp  directory    matlab    0  You ll be prompted to download the  Selective Search  http   disi unitn it  uijlings MyHomepage index php page projects1  code  which we cannot redistribute  Afterwards  you should see the message  SPP net startup done  followed by the MATLAB prompt         0  Run the build script      spp build     builds  liblinear  http   www csie ntu edu tw  cjlin liblinear     Selective Search  http   www science uva nl research publications 2013 UijlingsIJCV2013    spp pool and nms   Don t worry if you see compiler warnings while building liblinear  this is normal on my system    0  Download the model package by run  external fetch model data m        Training your own SPP net detector on PASCAL VOC  Let s use PASCAL VOC 2007 as an example  The basic pipeline is        extract features to disk    finetune    train SVMs    test      You ll need about 20GB of disk space free for the feature cache  which is stored in  feat cache  by default    It s best if the feature cache is on a fast  local disk      An one click script is  experiments Script spp voc m    ","software":"md","book":"ShaoqingRen","full_link":"https://github.com/ShaoqingRen/SPP_net"},{"name":"hzy46/faster-rcnn","artist":"shell, train, model, rcnn, demo","id":894,"playcount":3734,"description":"hzy46/faster-rcnn shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh GPU ID VGG16 pascal voc           The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"hzy46","full_link":"https://github.com/hzy46/faster-rcnn"},{"name":"shardul220/Self-Driving-Car-application--Car-detection","artist":"yolo, detect, onli, ali, joseph","id":895,"playcount":4195,"description":"shardul220/Self-Driving-Car-application--Car-detection yolo, detect, onli, ali, joseph   Self Driving Car application  Car detection Car detection using YOLO model   YOLO  YOLO   you only look once   is a popular algoritm because it achieves high accuracy while also being able to run in real time  almost clocking 45 frames per second  A smaller version of the network  Fast YOLO  processes an astounding 155 frames per second while still achieving double the mAP of other real time detectors  This algorithm  only looks once  at the image in the sense that it requires only one forward propagation pass through the network to make predictions  After non max suppression  it then outputs recognized objects together with the bounding boxes       Generic YOLO model                          img src  https   raw githubusercontent com tejaslodaya car detection yolo master nb images model architecture png  style  width 500px height 250          YOLO model in car detection                                   img src  https   raw githubusercontent com tejaslodaya car detection yolo master nb images fig1 png  style  width 500px height 250       The   input   is a batch of images of shape  m  608  608  3    The   output   is a list of bounding boxes along with the recognized classes  Each bounding box is represented by 6 numbers   p c  b x  b y  b h  b w  c   as explained above  If you expand  c  into an 80 dimensional vector  each bounding box is then represented by 85 numbers     The YOLO architecture if 5 anchor boxes are used is  IMAGE  m  608  608  3     DEEP CNN    ENCODING  m  19  19  5  85     img src  https   raw githubusercontent com tejaslodaya car detection yolo master nb images fig2 png  style  width 420px height 240px      Each cell gives you 5 boxes  In total  the model predicts  19x19x5   1805 boxes just by looking once at the image  one forward pass through the network   That is way too many boxes  Filter the algorithm s output down to a much smaller number of detected objects        Filtering               To reduce the number of detected objects  apply two techniques  1  Score thresholding     Throw away boxes that have detected a class with a score less than the threshold 2  Non maximum suppression  NMS      img src  https   raw githubusercontent com tejaslodaya car detection yolo master nb images non max suppression png  style  width 500px height 400      In this example  the model has predicted 3 cars  but it s actually 3 predictions of the same car  Running non max suppression  NMS  will select only the most accurate  highest probabiliy  one of the 3 boxes       The steps to perform NMS are    1  Select the box that has the highest score    2  Compute its overlap with all other boxes  and remove boxes that overlap it more than iou threshold    3  Iterate until there s no more boxes with a lower score than the current selected box       Results             Input image     img src  https   raw githubusercontent com tejaslodaya car detection yolo master nb images prediction input jpg  style  width 768px height 432px     Output image     img src  https   raw githubusercontent com tejaslodaya car detection yolo master nb images prediction output jpg  style  width 768px height 432px         NOTE          1  Training a YOLO model takes a very long time and requires a fairly large dataset of labelled bounding boxes for a large range of target classes  This project uses existing pretrained weights from the official YOLO website  and further processed using a function written by Allan Zelener  2  Complete model architecture can be found  here  https   github com tejaslodaya car detection yolo blob master model png  3  Instructions to generate  yolo h5  file can be found  here  https   github com allanzelener YAD2K   Place that in  model data  folder 4  Input images can be found in  images  directory  Corresponding output images can be found in  out  directory       References                1  Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi   You Only Look Once  Unified  Real Time Object Detection  2015  2  Joseph Redmon  Ali Farhadi   YOLO9000  Better  Faster  Stronger  2016  3  Allan Zelener   YAD2K  Yet Another Darknet 2 Keras 4  The official YOLO website  https   pjreddie com darknet yolo       ","software":"md","book":"shardul220","full_link":"https://github.com/shardul220/Self-Driving-Car-application--Car-detection"},{"name":"surajitsaikia27/Faster_RCNN_COCO_py3","artist":"train, rcnn, faster, shell, network","id":896,"playcount":4353,"description":"surajitsaikia27/Faster_RCNN_COCO_py3 train, rcnn, faster, shell, network   This repository contains a Python3  reimplementation  of the faster rcnn using Caffe  This Python3 implementation is built on a fork of  Faster R CNN  https   github com rbgirshick py faster rcnn  which was written with python2  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn         License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demonstration   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com surajitsaikia27 Faster RCNN COCO py3        2         Note 1    The  caffe fast rcnn  submodule needs to be on the  root  branch  or equivalent detached state   You need to clone it inside from the repository  https   github com rbgirshick py faster rcnn     If you clone the normal Caffe then the module wont work  because it doesnt not contain the RPN        Note 2    This version supports python3  But the original version is written in python2  so you need to install python3  3  Build the Cython modules        Shell     cd  Faster RCNN COCO py3 lib     make          4  Build Caffe and pycaffe        Shell     cd  Faster RCNN COCO py3 caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  Faster RCNN COCO py3       data scripts fetch faster rcnn models sh              This will populate the   Faster RCNN COCO py3 data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the code     Shell cd  Faster RCNN COCO py3   model Detect Objs py     The code performs detection using a VGG16 network trained with MS COCO dataset  Inside the  main  of the code you need to set path to the prototxt file and the pre trained model as follows     prototxt    path to prototxt     caffemodel    path to model vgg16 faster rcnn iter 80000 caffemodel    The prototxt file has been provided  but you need to download the caffemodel   ","software":"md","book":"surajitsaikia27","full_link":"https://github.com/surajitsaikia27/Faster_RCNN_COCO_py3"},{"name":"SakuraCoder/Landmark","artist":"caff, learn, model, deep, layer","id":897,"playcount":3298,"description":"SakuraCoder/Landmark caff, learn, model, deep, layer   Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            Layers related to our landmark project  There exists three layers related to our landmark project  yolo loss layer  perceptual loss layer and patch semantic layer  I finished the first two layers at present  source codes for patch semantic layer is also finished   both source codes under  src caffe layers  directory and test codes  test whether Forward and Backward are correct  under  src caffe test  directory  And the only one header file is  deep landmark layers hpp  under  include caffe  directory    The reference paper for yolo loss layer is   You Only Look Once  Unified  Real Time Object Detection  https   arxiv org abs 1506 02640  The reference paper for perceptual loss layer is   UNSUPERVISED CONVOLUTIONAL NEURAL NETWORKS FOR MOTION ESTIMATION  https   arxiv org abs 1601 06087  and  Determining optical flow  http   image diku dk imagecanon material HornSchunckOptical Flow pdf   For the paper  Determining optical flow  http   image diku dk imagecanon material HornSchunckOptical Flow pdf   you just need to figure out the computation of the three partial derivatives  this is analogously what patch semantic layer does   If you got any problems  feel free to let me know  ","software":"md","book":"SakuraCoder","full_link":"https://github.com/SakuraCoder/Landmark"},{"name":"aasharma90/FlowNet","artist":"caff, learn, model, deep, layer","id":898,"playcount":4111,"description":"aasharma90/FlowNet caff, learn, model, deep, layer     10th April 2017 update You may find the official caffemodel file at  https   lmb informatik uni freiburg de resources software php  This repo has been tested under Ubuntu 14 04  CUDA 8 on NVIDIA GTX1080             Caffe with FlowNet      Release  1 0   Date  08 02 2016   Based on caffe  GIT hash SHA 8e8d97d6 by Jeff Donahue  23 11 2015 04 33   This is a release of FlowNet S and FlowNet C  It comes as a fork of the caffe master branch and with a trained network  as well as examples on how to use or train it   To get started with FlowNet  first compile caffe  by configuring a       Makefile config   example given in Makefile config example   then make with  Make sure you are in the build directory before running the command below         make  j 5 all tools  Go to this folder         flownet release models flownet   From this folder you can execute the scripts we prepared  To try out FlowNetS on a sample image pair  run        demo flownet py S data 0000000 img0 ppm data 0000000 img1 ppm  You can also provide lists of files to run it on multiple image pairs  To train FlowNetS with the 8 sample images that come with this package  just run         train flownet py S  To extend it  please modify the img1 list txt and img2 list txt files accordingly or adapt the python script for your needs  Please use strong image augmentation techniques to obtain satisfactory results        License and Citation  Please cite this paper in your publications if you use FlowNet for your research        inproceedings DFIB15        author          A  Dosovitskiy and P  Fischer and E  Ilg and P  H   a usser and C  Haz  rba   and V  Golkov and P  v d  Smagt and D  Cremers and T  Brox         title           FlowNet  Learning Optical Flow with Convolutional Networks         booktitle       IEEE International Conference on Computer Vision  ICCV          month           Dec         year            2015         url             http   lmb informatik uni freiburg de Publications 2015 DFIB15                Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"aasharma90","full_link":"https://github.com/aasharma90/FlowNet"},{"name":"chenxistephen/faster-rcnn-matlab-macosx","artist":"time, train, rcnn, net, vgg","id":899,"playcount":9234,"description":"chenxistephen/faster-rcnn-matlab-macosx time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main resutls                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Ojbect Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17290 authkey  AGhH4z667tHYYEw ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17331 authkey  APJHX5JQCLUGHK0 ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17330 authkey  AFy6VjnKXzk9aAQ ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17328 authkey  ANKPe Rn1h4htNw ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17329 authkey  AMUuqF2wzQiRgww ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17255 authkey  AHOIeRzQKCYXD3U ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17256 authkey  AF7wGc1kbUTfI7o ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17319 authkey  APSc546R6TbCCl4 ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17323 authkey  AJOz vdYtdPwuKo ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9      faster rcnn matlab macosx ","software":"md","book":"chenxistephen","full_link":"https://github.com/chenxistephen/faster-rcnn-matlab-macosx"},{"name":"yuhan210/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":900,"playcount":8855,"description":"yuhan210/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"yuhan210","full_link":"https://github.com/yuhan210/py-faster-rcnn"},{"name":"natanielruiz/py-faster-rcnn-dockerface","artist":"train, rcnn, faster, shell, network","id":901,"playcount":8855,"description":"natanielruiz/py-faster-rcnn-dockerface train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"natanielruiz","full_link":"https://github.com/natanielruiz/py-faster-rcnn-dockerface"},{"name":"imraviagrawal/Faster-RCNN_TF","artist":"shell, train, model, rcnn, demo","id":902,"playcount":3780,"description":"imraviagrawal/Faster-RCNN_TF shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"imraviagrawal","full_link":"https://github.com/imraviagrawal/Faster-RCNN_TF"},{"name":"ganchunsheng/gcs-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":903,"playcount":8855,"description":"ganchunsheng/gcs-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"ganchunsheng","full_link":"https://github.com/ganchunsheng/gcs-faster-rcnn"},{"name":"ahaldar/caffe-heatmap","artist":"caff, learn, model, deep, layer","id":904,"playcount":3472,"description":"ahaldar/caffe-heatmap caff, learn, model, deep, layer   Caffe heatmap  This is a fork of Caffe that enables training of heatmap regressor ConvNets for the general problem of regressing  x y  positions in images     Multiple implementations are provided  using the PyCaffe interface for Python3  the MatCaffe interface for Matlab  and the standard C   Caffe API       Pretrained models    Fusion model trained on FLIC  http   tomas pfister fi models caffe heatmap flic caffemodel     Fusion model trained on ChaLearn  http   tomas pfister fi models caffe heatmap chalearn caffemodel      Pre cropped images and training labels for FLIC    Training  http   tomas pfister fi flic train cropped multfact282 tgz     Testing  http   tomas pfister fi flic test cropped multfact282 tgz    Note these files require multfact 282 in both training and testing data layers     Testing instructions  For example codes for running the FLIC model on a video  use the following     demo m  on Matlab version 2015 or earlier     python python pose demo py      build examples cpp heatmap demo bin  generated automatically on running  make          Paper Please cite our  ICCV 15 paper  http   www robots ox ac uk  vgg publications 2015 Pfister15a pfister15a pdf  in your publications if this code helps your research          InProceedings Pfister15a          author          Pfister  T  and Charles  J  and Zisserman  A            title           Flowing ConvNets for Human Pose Estimation in Videos           booktitle       IEEE International Conference on Computer Vision           year            2015               Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014         ","software":"md","book":"ahaldar","full_link":"https://github.com/ahaldar/caffe-heatmap"},{"name":"rtgoring/py-faster-rcnn-thesis","artist":"train, rcnn, faster, shell, network","id":905,"playcount":8898,"description":"rtgoring/py-faster-rcnn-thesis train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name        FasterRCNN Thesis   py faster rcnn thesis ","software":"md","book":"rtgoring","full_link":"https://github.com/rtgoring/py-faster-rcnn-thesis"},{"name":"closerbibi/bv_detection_two_channel","artist":"train, rcnn, faster, shell, network","id":906,"playcount":8855,"description":"closerbibi/bv_detection_two_channel train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"closerbibi","full_link":"https://github.com/closerbibi/bv_detection_two_channel"},{"name":"facebookresearch/ResNeXt","artist":"resnext, cifar, imagenet, model, pretrain","id":907,"playcount":7020,"description":"facebookresearch/ResNeXt resnext, cifar, imagenet, model, pretrain   ResNeXt  Aggregated Residual Transformations for Deep Neural Networks  By  Saining Xie  http   vcl ucsd edu  sxie    Ross Girshick  http   www rossgirshick info     Piotr Doll r  https   pdollar github io     Zhuowen Tu  http   pages ucsd edu  ztu     Kaiming He  http   kaiminghe com   UC San Diego  Facebook AI Research      Table of Contents 0   Introduction   introduction  0   Citation   citation  0   Requirements and Dependencies   requirements and dependencies  0   Training   training  0   ImageNet Pretrained Models   imagenet pretrained models  0   Third party re implementations   third party re implementations        News   Congrats to the ILSVRC 2017 classification challenge winner  WMW  http   image net org challenges LSVRC 2017 results   ResNeXt is the foundation of their new SENet architecture  a   ResNeXt 152  64 x 4d    with the Squeeze and Excitation module     Check out Figure 6 in the new  Memory Efficient Implementation of DenseNets  https   arxiv org pdf 1707 06990 pdf  paper for a comparision between ResNeXts and DenseNets   sub   DenseNet cosine is DenseNet trained with cosine learning rate schedule     sub   p align  center    img src  http   vcl ucsd edu resnext resnextvsdensenet png  width  480     p        Introduction  This repository contains a  Torch  http   torch ch  implementation for the  ResNeXt  https   arxiv org abs 1611 05431  algorithm for image classification  The code is based on  fb resnet torch  https   github com facebook fb resnet torch     ResNeXt  https   arxiv org abs 1611 05431  is a simple  highly modularized network architecture for image classification  Our network is constructed by repeating a building block that aggregates a set of transformations with the same topology  Our simple design results in a homogeneous  multi branch architecture that has only a few hyper parameters to set  This strategy exposes a new dimension  which we call  cardinality   the size of the set of transformations   as an essential factor in addition to the dimensions of depth and width      teaser  http   vcl ucsd edu resnext teaser png        Figure  Training curves on ImageNet 1K   Left   ResNet ResNeXt 50 with the same complexity   4 1 billion FLOPs   25 million parameters    Right   ResNet ResNeXt 101 with the same complexity   7 8 billion FLOPs   44 million parameters              Citation If you use ResNeXt in your research  please cite the paper       article Xie2016    title  Aggregated Residual Transformations for Deep Neural Networks     author  Saining Xie and Ross Girshick and Piotr Doll r and Zhuowen Tu and Kaiming He     journal  arXiv preprint arXiv 1611 05431     year  2016             Requirements and Dependencies See the fb resnet torch  installation instructions  https   github com facebook fb resnet torch blob master INSTALL md  for a step by step guide    Install  Torch  http   torch ch docs getting started html  on a machine with CUDA GPU   Install  cuDNN v4 or v5  https   developer nvidia com cudnn  and the Torch  cuDNN bindings  https   github com soumith cudnn torch tree R4    Download the  ImageNet  http   image net org download images  dataset and  move validation images  https   github com facebook fb resnet torch blob master INSTALL md download the imagenet dataset  to labeled subfolders      Training  Please follow  fb resnet torch  https   github com facebook fb resnet torch  for the general usage of the code  including  how  https   github com facebook fb resnet torch tree master pretrained  to use pretrained ResNeXt models for your own task   There are two new hyperparameters need to be specified to determine the bottleneck template      baseWidth   and    cardinality        1x Complexity Configurations Reference Table    baseWidth   cardinality                                 64          1               40          2               24          4               14          8               4           32              To train ResNeXt 50  32x4d  on 8 GPUs for ImageNet     bash th main lua  dataset imagenet  bottleneckType resnext C  depth 50  baseWidth 4  cardinality 32  batchSize 256  nGPU 8  nThreads 8  shareGradInput true  data  imagenet folder       To reproduce CIFAR results  e g  ResNeXt 16x64d for cifar10  on 8 GPUs     bash th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 128  nGPU 8  nThreads 8  shareGradInput true     To get comparable results using 2 4 GPUs  you should change the batch size and the corresponding learning rate     bash th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 64  nGPU 4  LR 0 05  nThreads 8  shareGradInput true th main lua  dataset cifar10  bottleneckType resnext C  depth 29  baseWidth 64  cardinality 16  weightDecay 5e 4  batchSize 32  nGPU 2  LR 0 025  nThreads 8  shareGradInput true     Note  CIFAR datasets will be automatically downloaded and processed for the first time  Note that in the arXiv paper CIFAR results are based on pre activated bottleneck blocks and a batch size of 256  We found that better CIFAR test acurracy can be achieved using original bottleneck blocks and a batch size of 128       ImageNet Pretrained Models ImageNet pretrained models are licensed under CC BY NC 4 0      CC BY NC 4 0  https   i creativecommons org l by nc 4 0 88x31 png   https   creativecommons org licenses by nc 4 0         Single crop  224x224  validation error rate   Network               GFLOPS   Top 1 Error    Download                                                                    ResNet 50  1x64d        4 1     23 9           Original ResNet 50  https   github com facebook fb resnet torch tree master pretrained            ResNeXt 50  32x4d       4 1     22 2           Download  191MB   https   s3 amazonaws com resnext imagenet models resnext 50 32x4d t7            ResNet 101  1x64d       7 8     22 0           Original ResNet 101  https   github com facebook fb resnet torch tree master pretrained           ResNeXt 101  32x4d      7 8     21 2           Download  338MB   https   s3 amazonaws com resnext imagenet models resnext 101 32x4d t7           ResNeXt 101  64x4d      15 6    20 4           Download  638MB   https   s3 amazonaws com resnext imagenet models resnext 101 64x4d t7               Third party re implementations  Besides our torch implementation  we recommend to see also the following third party re implementations and extensions   1  Training code in PyTorch  code  https   github com prlz77 ResNeXt pytorch  1  Converting ImageNet pretrained model to PyTorch model and source   code  https   github com clcarwin convert torch to pytorch  1  Training code in MXNet and pretrained ImageNet models  code  https   github com dmlc mxnet tree master example image classification imagenet 1k  1  Caffe prototxt  pretrained ImageNet models  with ResNeXt 152   curves  code  https   github com cypw ResNeXt 1  code  https   github com terrychenism ResNeXt  ","software":"md","book":"facebookresearch","full_link":"https://github.com/facebookresearch/ResNeXt"},{"name":"JiaqiHe/fast-rcnn","artist":"rcnn, fast, shell, matlab, voc","id":908,"playcount":11182,"description":"JiaqiHe/fast-rcnn rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"JiaqiHe","full_link":"https://github.com/JiaqiHe/fast-rcnn"},{"name":"rickyHong/fast-rcnn-clone","artist":"rcnn, fast, shell, matlab, voc","id":909,"playcount":11182,"description":"rickyHong/fast-rcnn-clone rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/fast-rcnn-clone"},{"name":"debidatta/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":910,"playcount":8855,"description":"debidatta/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"debidatta","full_link":"https://github.com/debidatta/py-faster-rcnn"},{"name":"harrysocool/ear_recognition","artist":"rcnn, fast, shell, matlab, voc","id":911,"playcount":11182,"description":"harrysocool/ear_recognition rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"harrysocool","full_link":"https://github.com/harrysocool/ear_recognition"},{"name":"arvindiitm/Faster-R-CNN","artist":"train, rcnn, faster, shell, network","id":912,"playcount":9119,"description":"arvindiitm/Faster-R-CNN train, rcnn, faster, shell, network       Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"arvindiitm","full_link":"https://github.com/arvindiitm/Faster-R-CNN"},{"name":"fanchenyou/deepdiary","artist":"model, imag, train, caff, download","id":913,"playcount":4315,"description":"fanchenyou/deepdiary model, imag, train, caff, download   Deepdiary This repository is  caffe  http   caffe berkeleyvision org   implementation of image captioning on lifelogging data  Please see our paper  1  https   arxiv org abs 1608 03819   for information of how to use this package on your own dataset      Lifelogging dataset We publish our lifelogging dataset by releasing image VGG features along with human labelings   br   You can download them  here  http   vision soic indiana edu deepdiary files data zip   image features and sentences    br  We tend to not publish the whole dataset with real photos for the reason of protecting privacy  br  However  we do list a subset of the dataset with photos which we published on Amazon Mechanical Turk for public labeling  You can download them  here  http   vision soic indiana edu deepdiary files amt data zip    br  For more details of how the dataset is collected  please refer to our  paper  https   arxiv org abs 1608 03819       Training To run training demo     clone this repository to your directory  say  CAFFE ROOT   download our packed lifelogging data and extract them as examples myexp data   download VGG ILSVRC 16 layers caffemodel from https   github com BVLC caffe wiki Model Zoo and place it into  CAFFE ROOT models VGG ILSVRC 16 layers   cd examples myexp   change setting py home dir  global sh CAFFE ROOT to same folder that you clone this repo      run finetune sh  You can also skip training stage  and use our trained models to do prediction     cd examples myexp models unzip models         prediction This part is implemented with Python   The original code of beam search implementation can be found https   github com karpathy neuraltalk  We add  Diverse M Best Solutions  https   filebox ece vt edu  dbatra papers MBestModes pdf  in order to produce diverse predictions in sentence structure and style   To run testing demo      cd examples myexp test data  check imgs folder  tasks txt  and vgg feats mat cd      predict sh      To predict on you own images     replace imgs folder with your images  and output names in tasks txt  one name per line   extract VGG features for each image in order as image names in tasks txt  name as vgg feats mat file  for example  there are 7 images in current imgs folder  so vgg feats mat contains an  feat  entry which is a matrix of size 4096x7   choose your model file in predict sh  This demo provides two pretrained models by authors   coco raw  is a model trained with COCO data   caffe finetune  is finetuned by lifelogging data  You will see that  caffe finetune  produces much better predictions with diverse structures   explore examples myexp prediction folder  the M Best diverse technique is implemented in lstm generator py     Going deep Input takes     json file which contains imageId and sentences as ground truth  which is congruent to Karpathy s neuraltalk   repo  https   github com karpathy neuraltalk    image features extracted from a CNN  typically bvlc reference net or vgg net   The core of this repository is composed of caffe cuda implementation of  LSTM  https   arxiv org abs 1411 4555      src caffe layers caption input layer cu src caffe layers lstm layer cu src caffe layers lstm loss layer cu        License and Citation  Please cite the following paper in your publications if you use our dataset or code in your research        inproceedings deepdiary2016eccvw        title    DeepDiary  Automatically Captioning Lifelogging Image Streams         author    David Crandall and Chenyou Fan         booktitle    European Conference on Computer Vision International Workshop on Egocentric Perception  Interaction  and Computing                  article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                  inproceedings karpathy2015deep        title  Deep visual semantic alignments for generating image descriptions         author  Karpathy  Andrej and Fei Fei  Li         booktitle  Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition         pages  3128  3137         year  2015         ","software":"md","book":"fanchenyou","full_link":"https://github.com/fanchenyou/deepdiary"},{"name":"rickyHong/py-faster-rcnn-tk1-branch","artist":"train, rcnn, faster, shell, network","id":914,"playcount":8251,"description":"rickyHong/py-faster-rcnn-tk1-branch train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details  ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/py-faster-rcnn-tk1-branch"},{"name":"szc1523/Faster_rcnn_datasets","artist":"train, rcnn, faster, shell, network","id":915,"playcount":8855,"description":"szc1523/Faster_rcnn_datasets train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"szc1523","full_link":"https://github.com/szc1523/Faster_rcnn_datasets"},{"name":"Deep-Scratch/Essential-Deep-learning-papers","artist":"deep, learn, network, convolut, imag","id":916,"playcount":8045,"description":"Deep-Scratch/Essential-Deep-learning-papers deep, learn, network, convolut, imag   Essential Deep learning papers    Read and review awesome deep learning papers        Paper list     Season 0   Basic     2017  07  08   2017  09  23     Member 8    Boseop Kim  https   github com aisolab    Daehoon Gwak  https   github com eogns282    Donghwa Kim  https   github com Donghwa KIM    Gyubin Son  https   github com gyubin    Heejung Choi  https   github com h doong    Heekyung Park  https   github com HeeKyung Park    Seongwon Moon  https   github com Moonswng    Wanjae Choi  https   github com mimi1942   1   Convolutional Neural Networks for Sentence Classification  http   emnlp2014 org papers pdf EMNLP2014181 pdf    Yoon Kim       reviewed by  Donghwa Kim  https   github com Donghwa KIM  2   ImageNet Classification with Deep Convolutional Neural Networks  https   papers nips cc paper 4824 imagenet classification with deep convolutional neural networks    Alex Krizhevsky et al        reviewed by  Heekyung Park  https   github com HeeKyung Park  3   Efficient Estimation of Word Representations in Vector Space  https   arxiv org abs 1301 3781    Tomas Mikolov et al        reviewed by  Heejung Choi  https   github com h doong  4   Distributed Representations of Words and Phrases and their Compositionality  https   arxiv org abs 1310 4546    Tomas Mikolov et al        reviewed by  Heejung Choi  https   github com h doong  5   Very Deep Convolutional Networks For Large Scale Image Recognition  https   arxiv org abs 1409 1556    Karen Simonyan et al        reviewed by  Gyubin Son  https   github com gyubin  6   GloVe  Global Vectors for Word Representation  https   nlp stanford edu pubs glove pdf    Jeffrey Pennington et al        reviewed by  Heejung Choi  https   github com h doong  7   Deep Residual Learning for Image Recognition  https   arxiv org abs 1512 03385    Kaiming He et al        reviewed by  Seongwon Moon  https   github com Moonswng  8   GoogLeNet  Going Deeper with Convolutions  https   arxiv org abs 1409 4842    Christian Szegedy et al        reviewed by  Boseop Kim  https   github com aisolab          Season 1   Object Detection      2017  09  23   2017  12  09     Member 10    Boseop Kim  https   github com aisolab    Daehoon Gwak  https   github com eogns282    Donghwa Kim  https   github com Donghwa KIM    Donguk Ju  https   github com ehddnr747    Gyubin Son  https   github com gyubin    Heejung Choi  https   github com h doong    Heekyung Park  https   github com HeeKyung Park    Hyerin Lim  https   github com     Seongwon Moon  https   github com Moonswng    Wanjae Choi  https   github com mimi1942   1   Rich feature hierarchies for accurate object detection and semantic segmentation  https   arxiv org abs 1311 2524    Ross Girshick et al        reviewed by  Gyubin Son  https   github com gyubin  2   Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognition  https   arxiv org abs 1406 4729    Kaiming He et al        reviewed by  Seongwon Moon  https   github com Moonswng        reviewed by  Boseop Kim  https   github com aisolab  3   Fast R CNN  https   arxiv org abs 1504 08083    Ross Girshick       reviewed by  Daehoon Gwak  https   github com eogns282        reviewed by  Boseop Kim  https   github com aisolab  4   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  https   arxiv org abs 1506 01497    Shaoqing Ren et al        reviewed by  Daehoon Gwak  https   github com eogns282        reviewed by  Boseop Kim  https   github com aisolab  5   Break time  Build a Blog with Jekyll       reviewed by  Gyubin Son  https   github com gyubin  6   You Only Look Once  Unified  Real Time Object Detection  https   arxiv org abs 1506 02640    Joseph Redmon et al        reviewed by  Gyubin Son  https   github com gyubin  7   SSD  Single Shot MultiBox Detector  https   arxiv org abs 1512 02325    Wei Liu et al        reviewed by  Wanjae Choi  https   github com mimi1942      Season 2   Semantic Segmentation          2017  12  09   2018  01  06     Member 10    Boseop Kim  https   github com aisolab    Daehoon Gwak  https   github com eogns282    Donghwa Kim  https   github com Donghwa KIM    Donguk Ju  https   github com ehddnr747    Gyubin Son  https   github com gyubin    Heejung Choi  https   github com h doong    Heekyung Park  https   github com HeeKyung Park    Hyerin Lim  https   github com     Seongwon Moon  https   github com Moonswng    Wanjae Choi  https   github com mimi1942   1   Fully Convolutional Networks for Semantic Segmentation  https   arxiv org abs 1411 4038    Jonathan Long et al        reviewed by  Heekyung Park  https   github com HeeKyung Park  2   Learning Deconvolution Network for Semantic Segmentation  https   arxiv org abs 1505 04366    Hyeonwoo Noh et al        reviewed by  Heejung Choi  https   github com h doong  3   Selective Search for Object Recognition  https   ivi fnwi uva nl isis publications bibtexbrowser php key UijlingsIJCV2013 bib all bib    J R R  Uijlings et al        reviewed by  Donghwa Kim  https   github com Donghwa KIM  4   SegNet  A Deep Convolutional Encoder Decoder Architecture for Image Segmentation  https   arxiv org abs 1511 00561    Vijay Badrinarayanan et al        reviewed by  Donguk Ju  https   github com ehddnr747  5   DeepLab  Semantic Image Segmentation with Deep Convolutional Nets  Atrous Convolution  and Fully Connected CRFs  https   arxiv org abs 1606 00915    Liang Chieh Chen et al        reviewed by  Hyerin Lim  https   github com   6   Pyramid Scene Parsing Network  https   arxiv org abs 1612 01105    Hengshuang Zhao et al        reviewed by  Daehoon Gwak  https   github com eogns282  7   Mask R CNN  https   arxiv org abs 1703 06870    Kaiming He et al        reviewed by  Donghwa Kim  https   github com Donghwa KIM  8   Conditional Random Fields  Probabilistic Models for Segmenting and Labeling Sequence Data  http   repository upenn edu cgi viewcontent cgi article 1162 context cis papers    John Lafferty et al        reviewed by  Boseop Kim  https   github com aisolab  9   Deformable Convolutional Networks  https   arxiv org abs 1703 06211    Jifeng Dai et al        reviewed by  Seongwon Moon  https   github com Moonswng  10   U Net  Convolutional Networks for Biomedical Image Segmentation  https   arxiv org abs 1505 04597    Olaf Ronneberger et al        reviewed by  Wanjae Choi  https   github com mimi1942  11   Edge Boxes  Locating Object Proposals from Edges  https   www microsoft com en us research publication edge boxes locating object proposals from edges     C  Lawrence Zitnick et al        reviewed by  Donghwa Kim  https   github com Donghwa KIM      Season 3   Generative Models  It is not confirmed yet   source   FlipGAN curriculum of ModuLabs  http   www modulabs co kr Flip GAN 17363           2018  01  20   2018  04  28     1   Generative Adversarial Networks  An Overview  https   arxiv org abs 1710 07035    Antonia Creswell       reviewed by     2   Generative Adversarial Networks  https   arxiv org abs 1406 2661    Ian Goodfellow       reviewed by     3   DCGAN  Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks  https   arxiv org abs 1511 06434    Alec Radford       reviewed by     4   Conditional Generative Adversarial Nets  https   arxiv org abs 1411 1784    Mehdi Mirza 5   InfoGAN  Interpretable Representation Learning by Information Maximizing Generative Adversarial Nets  https   arxiv org abs 1606 03657    Xi Chen 6   Adversarially Learned Inference  https   arxiv org abs 1606 00704    Vincent Dumoulin 7   Improved Techniques for Training GANs  https   arxiv org abs 1606 03498    Tim Salimans 8   WGAN  Wasserstein GAN  https   arxiv org abs 1701 07875    Martin Arjovsky 9   BEGAN  Boundary Equilibrium Generative Adversarial Networks  https   arxiv org abs 1703 10717    David Berthelot 10   CycleGAN  Unpaired Image to Image Translation using Cycle Consistent Adversarial Networks  https   arxiv org abs 1703 10593    Jun Yan Zhu 11   Bayesian GAN  https   arxiv org abs 1705 09558    Yunus Saatchi ","software":"md","book":"Deep-Scratch","full_link":"https://github.com/Deep-Scratch/Essential-Deep-learning-papers"},{"name":"YCJGG/caffe-1612","artist":"caff, model, learn, communiti, berkeley","id":917,"playcount":3291,"description":"YCJGG/caffe-1612 caff, model, learn, communiti, berkeley    My Caffe development repo   KFXW  My own Caffe development branch with some tools     Multi Mean Field Iteration  transfer from  CRF RNN caffe  https   github com torrvision crfasrnn     Segmetation Accuracy Layer  micro averaged F1 score or Mean IoU Jaccard score  with plugin files acommedating to various datasets    hard awared statistical contextual loss for parsing  under construction    Blob Align  python layer  resize a feature map to the same size of another feature map    imgResize  python layer    salientArea  Pyhton layer  convert parsing labels to 0 1 binary map   bg or object    image seg data layer  transfer from  Deeplab v1 caffe  https   github com TheLegendAli DeepLab Context     dense crf layer  transfer from  Deeplab v1 caffe  https   github com TheLegendAli DeepLab Context      Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"YCJGG","full_link":"https://github.com/YCJGG/caffe-1612"},{"name":"asensioatgithub/RCNN","artist":"rcnn, train, detect, network, faster","id":918,"playcount":4037,"description":"asensioatgithub/RCNN rcnn, train, detect, network, faster   A simple implements of RCNN with tensorflow    Introduction This is an experimental Tensorflow implementation of RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper R CNN   Rich feature hierarchies for accurate object detection and semantic segmentation  http   xueshu baidu com s wd paperuri  286f32e0834ddb27b36d7c5cda472a768d 29 filter sc long sign tn SE xueshusource 2kduw22v sc vurl http   arxiv org abs 1311 2524 ie utf 8 sc us 2810736414368325775  by Ross Girshick  Jeff Donahue  Trevor Darrell  Jitendra Malik    Requirements   python 3 6   tensorflow 1 2 1   Content    images     Some example imgs to test      finetune alexnet    Storage each epoch s weights in checkpints and log the finetuning progress in TensorBoard     Models    To storage alexnet weights and SVM Models     alexnet py   an TensorFLow implementation of  AlexNet  http   papers nips cc paper 4824 imagenet classification with deep convolutional neural networks pdf  by Alex Krizhevsky at all     validate alexnet py   If you wanna to validate alexnet  this script is helpful This file has no relation with RCNN   You need are the pretrained weights  which you can find  here  http   www cs toronto edu  7Eguerzhoy tf alexnet bvlc alexnet npy   place the weights file in  Models AlexNet   and try command  python validat alexnet py    br                              images  https   github com asensioatgithub RCNN blob master result validate png     finetune py   datagenerator py   Scripts to finetune alexnet   here  https   github com kratzert finetune alexnet with tensorflow  is the detail instructions to finetune alexnet     generate finetune data py   To generate the fixed format of train data and val data required by  finetune py   Notice this file only works on VOCdevkit  if you use other data sets  the implementation may not be the same  overall each of them list the complete path to your train val images together with the class number in the following structure      Example train txt   path to train image1 png 0  path to train image2 png 1  path to train image3 png 2  path to train image4 png 0            ckpt2npy   Change the format form   ckpy  to   npy  of alexnet weights     train svm py     tool py   Some func implements for other files calls  such as Non Maximum Suppression NMS  Intersection over Union IOU      and also a func to call module  selectivesearch selective search   you can try  python tool py  to check the proposal rectangles generate by  selective search                               image  https   github com asensioatgithub RCNN blob master result pro rect png   br    Note    The proposal rectangles are different according to the argu  scale  sigma  min size  in func selective search       Usage 1  Clone the Fast R CNN repository     git clone https   github com asensioatgithub RCNN git     2  Click  here  https   pan baidu com s 18r354ru1JfKhDdo VL9uZg  to download my tinetuned AlexNet weights and SVM Models  and put them in corresponding directory in  Moldes    3  Install the required python modules  and then instruct the follow cmd      python demo py       image  https   github com asensioatgithub RCNN blob master result 1 png   br    Train Model  here are my steps to experience RCNN with VOCPascll2012  if you want to train other datasets  they are Referable   1  wget the VOCPascll2012 datasets  or click  here  http   host robots ox ac uk pascal VOC voc2012 VOCtrainval 11 May 2012 tar       wget http   host robots ox ac uk pascal VOC voc2012 VOCtrainval 11 May 2011 tar     2  Extract the tar to repo  so the directory looks like this      images Models VOCtrainval 11 May 2012 alexnet py caffe classes py         3  Adjust parameter in config py scenes     class name     bus    person    car     The classes what rcnn to detect         4  run generate finetune data py to generate  finetune train list txt  and  finetune val list txt   they are looks like  5  run finetune py 6  run train svm py 7  run demo py ","software":"md","book":"asensioatgithub","full_link":"https://github.com/asensioatgithub/RCNN"},{"name":"awai54st/PYNQ-Classification","artist":"caff, model, arxiv, year, fast","id":919,"playcount":4226,"description":"awai54st/PYNQ-Classification caff, model, arxiv, year, fast    PROJECT NAME   PYNQ Classification   Python on Zynq FPGA for Convolutional Neural Networks  Alpha Release      BRIEF DESCRIPTION  This repository presents a fast prototyping framework  which is an Open Source framework designed to enable fast deployment of embedded Convolutional Neural Network  CNN  applications on PYNQ platforms      CITATION  If you make use of this code  please acknowledge us by citing  our article  https   spiral imperial ac uk handle 10044 1 57937      inproceedings Wang FCCM18          author  E  Wang and J  J  Davis and P  Y  K  Cheung           booktitle  IEEE Symposium on Field programmable Custom Computing Machines  FCCM            title   A PYNQ based Framework for Rapid CNN Prototyping            year  2018            INSTRUCTIONS TO BUILD AND TEST THE PROJECT       Repository Organisation  The project demo accepts pre trained CNN models in either Caffe or Theano syntax  hence the step 1 and 2 introduces how to install Caffe and Theano  with Lasagne  on PYNQ  Step 3 explains how to download and run the demos for LeNet and CIFAR 10  Caffe  quick  version  models   For a quick overview on the project please watch  my video tutorial  https   youtu be DoA8hKBltV4        1  PYNQ SD Card Image  We have prepared a SD card image with pre installed Caffe and Theano dependencies  A SD card with at least 16GB is needed  The static IP for the PYNQ Jupyter Notebook is 192 168 2 99   Download Link  on Baidu Drive   https   pan baidu com s 1c2EmMvY    Download Link  on Google Drive   https   drive google com open id 1A9MrN zzbHYiIHJvnNQYFc3sXqWZBb6o   If you wish to setup Caffe and Theano dependencies on your own  please see  MANUAL INSTAL md  MANUAL INSTALL md  for instructions   NOT RECOMMENDED since multiple issues have been reported       2  Vivado Project Setup   How to implement more CNN models   Please go to hw README md for guide on regenerating the Vivado and Vivado HLS projects       References          1  BNN PYNQ  If you find BNN PYNQ useful  please cite the  a href  https   arxiv org abs 1612 07119  target   blank  FINN paper  a         inproceedings finn      author    Umuroglu  Yaman and Fraser  Nicholas J  and Gambardella  Giulio and Blott  Michaela and Leong  Philip and Jahre  Magnus and Vissers  Kees       title    FINN  A Framework for Fast  Scalable Binarized Neural Network Inference       booktitle    Proceedings of the 2017 ACM SIGDA International Symposium on Field Programmable Gate Arrays       series    FPGA  17       year    2017       pages    65  74       publisher    ACM             2  Caffe  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014                 3  Theano       ARTICLE 2016arXiv160502688short         author     Theano Development Team            title     Theano  A  Python  framework for fast computation of mathematical expressions          journal    arXiv e prints          volume    abs 1605 02688        primaryClass    cs SC        keywords    Computer Science   Symbolic Computation  Computer Science   Learning  Computer Science   Mathematical Software            year   2016          month   may            url    http   arxiv org abs 1605 02688              4  Lasagne        misc lasagne        author          Sander Dieleman and                       Jan Schl ter and                       Colin Raffel and                       Eben Olson and                       S ren Kaae S nderby and                       Daniel Nouri and                       others         title           Lasagne  First release          month          aug        year           2015        doi             10 5281 zenodo 27878         url             http   dx doi org 10 5281 zenodo 27878        ","software":"md","book":"awai54st","full_link":"https://github.com/awai54st/PYNQ-Classification"},{"name":"BelindaJiao/faster-rcnn-matlab","artist":"time, train, rcnn, net, vgg","id":920,"playcount":9188,"description":"BelindaJiao/faster-rcnn-matlab time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Object Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1pKGBDyz        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 114 authkey  AERHoxZ iAx j34 ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1hsFKmeK    ","software":"md","book":"BelindaJiao","full_link":"https://github.com/BelindaJiao/faster-rcnn-matlab"},{"name":"CptSteven/repotest","artist":"train, rcnn, faster, shell, network","id":921,"playcount":8855,"description":"CptSteven/repotest train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"CptSteven","full_link":"https://github.com/CptSteven/repotest"},{"name":"closerbibi/bv_detection","artist":"train, rcnn, faster, shell, network","id":922,"playcount":8870,"description":"closerbibi/bv_detection train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name         bv detection ","software":"md","book":"closerbibi","full_link":"https://github.com/closerbibi/bv_detection"},{"name":"AkshayBhagat/Faster-RCNN-CPU-Version","artist":"train, rcnn, faster, shell, network","id":923,"playcount":8855,"description":"AkshayBhagat/Faster-RCNN-CPU-Version train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"AkshayBhagat","full_link":"https://github.com/AkshayBhagat/Faster-RCNN-CPU-Version"},{"name":"chyacinth/Lung-Nodule-Detection","artist":"shell, train, model, rcnn, demo","id":924,"playcount":3780,"description":"chyacinth/Lung-Nodule-Detection shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"chyacinth","full_link":"https://github.com/chyacinth/Lung-Nodule-Detection"},{"name":"ShuangLI59/person_search","artist":"shell, code, gpu, python, build","id":925,"playcount":3979,"description":"ShuangLI59/person_search shell, code, gpu, python, build   Person Search Project  This repository hosts the code for our paper  Joint Detection and Identification Feature Learning for Person Search  https   arxiv org abs 1604 01850   The code is modified from the py faster rcnn written by Ross Girshick       Installation  1  Clone this repo   recursively         Shell   git clone   recursive https   github com ShuangLI59 person search git        2  Build Caffe with python layers and interface    We modified caffe based on  Yuanjun s fork  https   github com yjxiong caffe tree mem   which supports multi gpu and memory optimization     Apart from the official installation  prerequisites  http   caffe berkeleyvision org installation html   we have several other dependencies        cudnn v5 1  https   developer nvidia com cudnn      1 7 4    openmpi  https   www open mpi org     2 0 0     boost    1 55  A tip for Ubuntu 14 04   sudo apt get autoremove libboost1 54   then  sudo apt get install libboost1 55 all dev      Then compile and install the caffe with      Shell   cd caffe   mkdir build    cd build   cmake     DUSE MPI ON  DCUDNN INCLUDE  path to cudnn include  DCUDNN LIBRARY  path to cudnn lib64 libcudnn so   make  j8    make install   cd                Please refer to  this page  https   github com yjxiong caffe tree mem usage  for detailed installation instructions and troubleshooting   3  Build the Cython modules    Install some Python packages you might not have   Cython    python opencv    easydict    1 6     PyYAML    protobuf    mpi4py   Then      Shell   cd lib    make    cd              Demo  Download our    trained model    https   drive google com open id 0B67 d0rLRTQYbVFENlVjdXRSWVE  to  output psdb train resnet50    then     Shell python2 tools demo py   gpu 0      Or you can use CPU only by setting     gpu  1       Demo  demo jpg  Demo        Experiments  1  Request the dataset from sli  at  ee cuhk edu hk or xiaotong  at  ee cuhk edu hk  academic only   Then       Shell   experiments scripts prepare data sh  path to the downloaded dataset zip        2  Download an  ImageNet pretrained  https   drive google com open id 0B67 d0rLRTQYUHFjU0pPSExhS1U  ResNet 50 model to  data imagenet models    3  Training with GPU 0       Shell   experiments scripts train sh 0   set EXP DIR resnet50          It will finish in around 18 hours  or you may directly download a    trained model    https   drive google com open id 0B67 d0rLRTQYbVFENlVjdXRSWVE  to  output psdb train resnet50    4  Evaluation      By default we use 8 GPUs for faster evaluation  Please adjust the  experiments scripts eval test sh  with your hardware settings  For example  to use only one GPU  remove the  mpirun  n 8  in L14 and change L16 to    gpu 0           Shell     experiments scripts eval test sh resnet50 50000 resnet50              The result should be around         Shell     search ranking        mAP   75 47        top  1   78 62        top  5   90 24        top 10   92 38           5  Visualization      The evaluation will also produce a json file  output psdb test resnet50 resnet50 iter 50000 results json  for visualization  Just copy it to  vis   and run  python2  m SimpleHTTPServer   Then open a browser and go to  http   localhost 8000 vis  http   localhost 8000 vis          Visualization Webpage  vis jpg  Visualization Webpage       Citation       inproceedings xiaoli2017joint        title  Joint Detection and Identification Feature Learning for Person Search         author  Xiao  Tong and Li  Shuang and Wang  Bochao and Lin  Liang and Wang  Xiaogang         booktitle  CVPR         year  2017            Repo History  The first version of our paper was published in 2016  We have made substantial improvements since then and published a new version of paper in 2017  The original code was moved to branch  v1  and the new code has been merged to  master   If you have checked out our code before  please be careful on this and we recommend clone recursively into a new repo instead  ","software":"md","book":"ShuangLI59","full_link":"https://github.com/ShuangLI59/person_search"},{"name":"Mehuli-Ruh11/Flownet_v1","artist":"caff, learn, model, deep, layer","id":926,"playcount":4036,"description":"Mehuli-Ruh11/Flownet_v1 caff, learn, model, deep, layer     10th April 2017 update You may find the official caffemodel file at  https   lmb informatik uni freiburg de resources software php  This repo has been tested under Ubuntu 14 04  CUDA 8 on NVIDIA GTX1080             Caffe with FlowNet      Release  1 0   Date  08 02 2016   Based on caffe  GIT hash SHA 8e8d97d6 by Jeff Donahue  23 11 2015 04 33   This is a release of FlowNet S and FlowNet C  It comes as a fork of the caffe master branch and with a trained network  as well as examples on how to use or train it   To get started with FlowNet  first compile caffe  by configuring a       Makefile config   example given in Makefile config example   then make with         make  j 5 all tools  Go to this folder         flownet release models flownet   From this folder you can execute the scripts we prepared  To try out FlowNetS on a sample image pair  run        demo flownet py S data 0000000 img0 ppm data 0000000 img1 ppm  You can also provide lists of files to run it on multiple image pairs  To train FlowNetS with the 8 sample images that come with this package  just run         train flownet py S  To extend it  please modify the img1 list txt and img2 list txt files accordingly or adapt the python script for your needs  Please use strong image augmentation techniques to obtain satisfactory results        License and Citation  Please cite this paper in your publications if you use FlowNet for your research        inproceedings DFIB15        author          A  Dosovitskiy and P  Fischer and E  Ilg and P  H   a usser and C  Haz  rba   and V  Golkov and P  v d  Smagt and D  Cremers and T  Brox         title           FlowNet  Learning Optical Flow with Convolutional Networks         booktitle       IEEE International Conference on Computer Vision  ICCV          month           Dec         year            2015         url             http   lmb informatik uni freiburg de Publications 2015 DFIB15                Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Mehuli-Ruh11","full_link":"https://github.com/Mehuli-Ruh11/Flownet_v1"},{"name":"githublsj/GPU-MTCNN","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":927,"playcount":4103,"description":"githublsj/GPU-MTCNN set, build, windowscommonsettingsprop, caff, cuda   Caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2015  CUDA 9 0  third party libraries   Baidu Yun  https   pan baidu com s 1ZTp8iWszMPrZ718w UCZ5Q  or  Google Drive  https   drive google com file d 13dbvXmMosxozWbSgJdDdxH62YWqXLjoJ view usp sharing   Please extract the archive into    windows thirdparty    Then  add the folder    windows thirdparty bins  to the environment variable  PATH        Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well       CUDA Download  CUDA Toolkit 8 0   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN     UseNCCL  to  false        cuDNN Download  cuDNN v5   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to add the    matlab  folder to Matlab search path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"githublsj","full_link":"https://github.com/githublsj/GPU-MTCNN"},{"name":"gunpowder78/fusionseg","artist":"imag, model, object, arxiv, caff","id":928,"playcount":4110,"description":"gunpowder78/fusionseg imag, model, object, arxiv, caff   FusionSeg  Learning to combine motion and appearance for fully automatic segmention of generic objects in videos   The following repository contains pretrained models for FusionSeg video object segementation method   Please visit our  project page  http   vision cs utexas edu projects fusionseg   for the paper and visual results   If you use this in your research  please cite the following papers      sh  article pixelobjectness    Author    Jain  Suyog and Xiong  Bo and Grauman  Kristen     Journal    arXiv preprint arXiv 1701 05349     Title    Pixel Objectness     Year    2017            sh  article fusionseg  Author    Jain  Suyog and Xiong  Bo and Grauman  Kristen   Journal    CVPR   Title    FusionSeg  Learning to combine motion and appearance for fully automatic segmention of generic objects in videos   Year    2017         These models are freely available for research and academic purposes  However it s patent pending  so please contact us for any commercial use      Using the pretrained models   This model is trained using Deeplab v2 caffe library  Please cite  1  and  2  if you use the code     Setup      Download and install Deeplab v2 from  here  https   bitbucket org aquariusjay deeplab public ver2     Download pretrained models using appearance download model sh and motion download model sh    Or Direct downlowd from here        Appearance stream   http   vision cs utexas edu projects fusionseg models appearance stream caffemodel         Motion stream   http   vision cs utexas edu projects fusionseg models motion stream caffemodel     Set the caffe binary path in demo py correctly     Refer to demo py for step by step instruction on how to run the code      Command  python demo py   model type     image extension    See below for examples        Running demo py will produce three files          model type   image list txt   contains list of of input images         model type   output list txt  contains names to be used to store the output of video segementation         model type   test protoxt  prototxt file required for loading the pretrained model     Please resize your images so that the maximum side is   513  otherwise update the crop size value in appearance appearance stream template prototxt and motion motion stream template prototxt  Bigger crop sizes require larger gpu memory  If GPU runs out of memory  try with smaller image dimensions  With maximum side   321 it should run on a basic modern GPU     Running the appearance stream model      Appearance stream model is stored under the  appearance  folder      Store the RGB images to be segmented under a folder named  images      Command  python demo py appearance jpg    Running the motion stream model      Motion stream model is stored under the  motion  folder      Store the optical flow encoded as RGB images under a folder named  motion images       Please refer to compute optical flow m to see an example of how to compute and encode optical flow as an RGB image      Command  python demo py motion png    Running the joint fusion model  Coming soon       Visualizing the results   After execution demo py will store video segmentation results as matlab files   Please refer to show results m to see how to visualize and extract foreground masks  You need to set model type in the matlab script to visualize results from either the appearance stream or motion stream       Please cite these too if you use the code    1  Caffe      sh  article jia2014caffe  Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor   Journal    arXiv preprint arXiv 1408 5093   Title    Caffe  Convolutional Architecture for Fast Feature Embedding   Year    2014          2  Deeplab v2      sh  article CP2016Deeplab  title  DeepLab  Semantic Image Segmentation with Deep Convolutional Nets  Atrous Convolution  and Fully Connected CRFs   author  Liang Chieh Chen and George Papandreou and Iasonas Kokkinos and Kevin Murphy and Alan L Yuille   journal  arXiv 1606 00915   year  2016        ","software":"md","book":"gunpowder78","full_link":"https://github.com/gunpowder78/fusionseg"},{"name":"MyCaffe/MyCaffe","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":929,"playcount":1,"description":"MyCaffe/MyCaffe “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> NA","software":"md","book":"MyCaffe","full_link":"https://github.com/MyCaffe/MyCaffe"},{"name":"lukeandshuo/sensiac_faster_rcnn","artist":"train, rcnn, faster, shell, network","id":930,"playcount":8855,"description":"lukeandshuo/sensiac_faster_rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"lukeandshuo","full_link":"https://github.com/lukeandshuo/sensiac_faster_rcnn"},{"name":"rohitgirdhar-cmu-experimental/py-faster-rcnn-cpu","artist":"train, rcnn, faster, shell, network","id":931,"playcount":8855,"description":"rohitgirdhar-cmu-experimental/py-faster-rcnn-cpu train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"rohitgirdhar-cmu-experimental","full_link":"https://github.com/rohitgirdhar-cmu-experimental/py-faster-rcnn-cpu"},{"name":"fighting-liu/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":932,"playcount":8855,"description":"fighting-liu/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"fighting-liu","full_link":"https://github.com/fighting-liu/py-faster-rcnn"},{"name":"ryangoy/FRCNN","artist":"train, rcnn, faster, shell, network","id":933,"playcount":8855,"description":"ryangoy/FRCNN train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"ryangoy","full_link":"https://github.com/ryangoy/FRCNN"},{"name":"Sirius-zn/C3POCV","artist":"train, rcnn, faster, shell, network","id":934,"playcount":8855,"description":"Sirius-zn/C3POCV train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"Sirius-zn","full_link":"https://github.com/Sirius-zn/C3POCV"},{"name":"Huan-Uestc/faster_rcnn_pytorch","artist":"train, rcnn, set, faster, model","id":935,"playcount":3245,"description":"Huan-Uestc/faster_rcnn_pytorch train, rcnn, set, faster, model   Faster RCNN with PyTorch   Note    I re implemented faster rcnn in this project when I started learning PyTorch  Then I use PyTorch in all of my projects  I still remember it costed one week for me to figure out how to build cuda code as a pytorch layer     But actually this is not a good implementation and I didn t achieve the same mIOU as the original caffe code      This project is no longer maintained  So I suggest      You can still read and study this code if you want to re implement faster rcnn by yourself    You can use the better PyTorch implementation by  ruotianluo  https   github com ruotianluo pytorch faster rcnn  if you want to train  faster rcnn with your own data   This is a  PyTorch  https   github com pytorch pytorch  implementation of Faster RCNN   This project is mainly based on  py faster rcnn  https   github com rbgirshick py faster rcnn  and  TFFRCNN  https   github com CharlesShang TFFRCNN    For details about R CNN please refer to the  paper  https   arxiv org abs 1506 01497   Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun       Progress     x  Forward for detecting    x  RoI Pooling layer with C extensions on CPU  only forward     x  RoI Pooling layer on GPU  forward and backward     x  Training on VOC2007    x  TensroBoard support    x  Evaluation      Installation and demo 0  Install the requirements  you can use pip or  Anaconda  https   www continuum io downloads                 conda install pip pyyaml sympy h5py cython numpy scipy     conda install  c menpo opencv3     pip install easydict           1  Clone the Faster R CNN repository        bash     git clone git github com longcw faster rcnn pytorch git          2  Build the Cython modules for nms and the roi pooling layer        bash     cd faster rcnn pytorch faster rcnn       make sh         3  Download the trained model  VGGnet fast rcnn iter 70000 h5  https   drive google com open id 0B4pXCfnYmG1WOXdpYVFybWxiZFE   and set the model path in  demo py  3  Run demo  python demo py       Training on Pascal VOC 2007  Follow  this project  TFFRCNN   https   github com CharlesShang TFFRCNN  to download and prepare the training  validation  test data  and the VGG16 model pre trained on ImageNet    Since the program loading the data in  faster rcnn pytorch data  by default  you can set the data path as following     bash cd faster rcnn pytorch mkdir data cd data ln  s  VOCdevkit VOCdevkit2007      Then you can set some hyper parameters in  train py  and training parameters in the   yml  file   Now I got a 0 661 mAP on VOC07 while the origin paper got a 0 699 mAP  You may need to tune the loss function defined in  faster rcnn faster rcnn py  by yourself       Training with TensorBoard With the aid of  Crayon  https   github com torrvision crayon   we can access the visualisation power of TensorBoard for any  deep learning framework   To use the TensorBoard  install Crayon  https   github com torrvision crayon  and set  use tensorboard   True  in  faster rcnn train py        Evaluation Set the path of the trained model in  test py      bash cd faster rcnn pytorch mkdir output python test py      License  MIT license  MIT  ","software":"md","book":"Huan-Uestc","full_link":"https://github.com/Huan-Uestc/faster_rcnn_pytorch"},{"name":"winjia/my-fastrcnn","artist":"rcnn, fast, shell, matlab, voc","id":936,"playcount":11287,"description":"winjia/my-fastrcnn rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val           my fastrcnn modify the rbgirshick s fast rcnn         06faaa7e6cd5934463e8c4b094daed5096f06375 ","software":"md","book":"winjia","full_link":"https://github.com/winjia/my-fastrcnn"},{"name":"pengxj/action-faster-rcnn","artist":"rcnn, train, detect, network, faster","id":937,"playcount":4258,"description":"pengxj/action-faster-rcnn rcnn, train, detect, network, faster   action faster rcnn This repository is a strongly modified version for action detection originally from  py faster rnn  https   github com rbgirshick py faster rcnn git  for my ECCV16 paper  It wraps three popular action detection dataset classes  UCF Sports  JHMDB  and UCF101  Also  it provides useful action detection evaluation scripts for both frame level and video level    Note the results on UCF101 are updated at https   hal inria fr hal 01349107 file eccv16 pxj v3 pdf dut to some annotation  parsing errors        Installation 1  Clone this reporsitory      Shell   git clone   recursive https   github com pengxj action faster rcnn git          2  Build the Cython modules which mainly compiles the nms module      Shell    cd  THIS ROOT lib   make          3  Build Caffe and pycaffe      Shell   cd  THIS ROOT caffe fast rcnn faster rcnn upstream 33f2445     Now follow the Caffe installation instructions here        http   caffe berkeleyvision org installation html          4  Dive into the code      Shell   dataset classes  lib datasets ucfsports py JHMDB py UCF101 py   training script  action experiments scripts train action det sh   evaluation scripts  action tools action util py ucfsports eval py jhmdb eval py ucf101 eval py fusion eval py eval linked results py   script for merging 2 stream models  action tools net surgery rgbflow py            Run experiments The entire pipeline for two stream rcnn includes optical flow extraction  r cnn training  frame level detecting  linking and evaluation  All these are included in this repository   If you just want to get the final video AP  you  download  https   drive google com open id 0B DiRMXFmUKQVDBRTy12UVJ2enM  the UCF101 linked results and run the eval linked results script  The folder  action results  includes linked results for UCF Sports and JHMDB datasets       video mAP results with different iou thresholds  without multi region scheme                       0 2     0 5     0 75    0 5 0 95                                                           UCF Sports       95 12   95 12   47 33   50 95        JHMDB            72 75   72 11   48 15   42 23        UCF101 Split 1   73 20   35 91   1 55    8 76        python action tools eval linked results py   imdb UCF101 RGB 1 FLOW 5 split 0   res path to ucf101 vdets 3scales rgb1flow5 pkl   0 05  0 7881  0 1  0 7745  0 2  0 7320  0 3  0 6630  0 4  0 5604  0 5  0 3591  0 6  0 1469  0 7  0 0349   python action tools eval linked results py   imdb JHMDB RGB 1 FLOW 5 split 2   res action results jhmdb s03 vdets 3scales rgb1flow5 pkl   0 5  0 7124  0 4  0 7124  0 2  0 7139  0 05  0 7139  0 6  0 7028  0 3  0 7134  0 1  0 7139  0 7  0 6009   python action tools eval linked results py   imdb JHMDB RGB 1 FLOW 5 split 1   res action results jhmdb s02 vdets 3scales rgb1flow5 pkl   0 5  0 7304  0 4  0 7360  0 2  0 7412  0 05  0 7414  0 6  0 7063  0 3  0 7412  0 1  0 7414  0 7  0 6004   python action tools eval linked results py   imdb JHMDB RGB 1 FLOW 5 split 0   res action results jhmdb s01 vdets 3scales rgb1flow5 pkl   0 5  0 7207  0 4  0 7240  0 2  0 7273  0 05  0 7299  0 6  0 6909  0 3  0 7244  0 1  0 7273  0 7  0 5974   python action tools eval linked results py   imdb UCF Sports RGB 1 FLOW 5 split 0   res action results ucfsports vdets 3scales rgb1flow5 pkl   0 5  0 9512  0 4  0 9512  0 2  0 9512  0 05  0 9512  0 6  0 9034  0 3  0 9512  0 1  0 9512  0 7  0 7370   And for the  imdb  option  you can find them in dir action experiments listfiles  which are actually the names of files       Citation  If you find this repository useful in your research  please consider citing        inproceedings peng2016multi      title  Multi region two stream R CNN for action detection       author  Peng  Xiaojiang and Schmid  Cordelia       booktitle  European Conference on Computer Vision       pages  744  759       year  2016       organization  Springer              inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015        ","software":"md","book":"pengxj","full_link":"https://github.com/pengxj/action-faster-rcnn"},{"name":"hanochk/FRCNN","artist":"shell, train, model, rcnn, demo","id":938,"playcount":3780,"description":"hanochk/FRCNN shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"hanochk","full_link":"https://github.com/hanochk/FRCNN"},{"name":"aqeelanwar/caffe_gpu","artist":"train, rcnn, faster, shell, network","id":939,"playcount":8865,"description":"aqeelanwar/caffe_gpu train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"aqeelanwar","full_link":"https://github.com/aqeelanwar/caffe_gpu"},{"name":"shudct/my-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":940,"playcount":8855,"description":"shudct/my-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"shudct","full_link":"https://github.com/shudct/my-faster-rcnn"},{"name":"flukeskywalker/highway-networks","artist":"caff, learn, model, deep, layer","id":941,"playcount":4362,"description":"flukeskywalker/highway-networks caff, learn, model, deep, layer   Highway Networks  This is sample code for convolutional   Highway Networks    implemented in Caffe checked out at  this  https   github com BVLC caffe tree e20498ebf985322bab2f4f28f0f6365ecde80c29  state  It runs only on the NVIDIA GPUs and requires NVIDIA s cuDNN v2  The original Caffe README is reproduced below the line   Highway Networks utilize the idea of  information highways   in turn inspired by LSTM networks   1  http   www bioinf at publications older 2604 pdf    2  http   citeseerx ist psu edu viewdoc download doi 10 1 1 55 5709 rep rep1 type pdf    3  http   arxiv org abs 1503 04069    Our experiments on highway networks show that when designed correctly  neural networks with tens  even hundreds of layers can be trained directly with stochastic gradient descent  thereby providing a promising solution to the vanishing gradient problem  More information is available on the  Project Website  http   people idsia ch  rupesh very deep learning     Highway Networks were introduced in the following paper   Srivastava  R  K   Greff  K     Schmidhuber  J   2015   Highway Networks  arXiv preprint  arXiv 1505 00387  http   arxiv org abs 1505 00387    Followed by a more detailed report   Srivastava  R  K   Greff  K     Schmidhuber  J   2015   Training Very Deep Networks  arXiv preprint  arXiv 1507 06228  http   arxiv org abs 1507 06228       Data  You can get preprocessed datasets  CIFAR 10 100 were global contrast normalized and padded with 8 pixels each side  at the links below  Caffe s data generation scripts do not generate validation sets  The provided data below includes splits into training and validation sets    CIFAR 10  https   www dropbox com s r9zuhhhii4uzi24 cifar10 gcn leveldb splits tar bz2 dl 0    2 27 GB   CIFAR 100  https   www dropbox com s w2qywjihzr7avfa cifar100 gcn leveldb splits tar bz2 dl 0    2 27 GB   MNIST  https   www dropbox com s 3q04bu5cz9mha52 mnist splits tar bz2 dl 0    20 MB      Examples  See examples and sample log outputs in examples highways  You probably need to adjust the paths to the datasets in the network definition files in order to train networks      Citation  Please cite us if you use this code        article srivastava2015highway          title  Training Very Deep Networks           author  Srivastava  Rupesh Kumar and Greff  Klaus and Schmidhuber  J   u rgen           journal  arXiv preprint arXiv 1507 06228           year  2015                  Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"flukeskywalker","full_link":"https://github.com/flukeskywalker/highway-networks"},{"name":"SharifAmit/Segmentation","artist":"caff, model, learn, communiti, berkeley","id":942,"playcount":3217,"description":"SharifAmit/Segmentation caff, model, learn, communiti, berkeley   VGG19 FCN Semantic Segmentation  Co authored by Sharif Amit Kamran  Md  Asif Bin Khaled and Sabit Bin Kabir under the supervision of Muhammad Hasan  http   host robots ox ac uk 8080 leaderboard displaylb php challengeid 11 compid 6 KEY VGG19 FCN   License VGG19 FCN Segmentation is released under the MIT License  you can read the license file included in the reposity for details     Score and Leaderboard   VGG19 FCN Mean Iou score 68 1 percent  VGG19 FCN  http   host robots ox ac uk 8080 leaderboard displaylb php challengeid 11 compid 6 KEY VGG19 FCN     Installation Make caffe with python wrapper  Detailed Instruction below    Demo Open demo py and change line 29 for running demo with different images  Run demoplay py    Caffe     Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Custom distributions      Intel Caffe  https   github com BVLC caffe tree intel   Optimized for CPU and support for multi node   in particular Xeon processors  HSW  BDW  Xeon Phi      OpenCL Caffe  https   github com BVLC caffe tree opencl  e g  for AMD or Intel devices     Windows Caffe  https   github com BVLC caffe tree windows      Community     Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014            ","software":"md","book":"SharifAmit","full_link":"https://github.com/SharifAmit/Segmentation"},{"name":"Dean-TianZhang/TestProject_student","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":943,"playcount":3960,"description":"Dean-TianZhang/TestProject_student “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>     Installation 1  Clone the repository      Shell   git clone https   github com Dean TianZhang TestProject student git        2  Update your  arch in setup script to match your GPU      Shell   cd tf faster rcnn lib     Change the GPU architecture   arch  if necessary   vim setup py            GPU model    Architecture                                           TitanX  Maxwell Pascal    sm 52       GTX 960M   sm 50       GTX 1080  Ti    sm 61       Grid K520  AWS g2 2xlarge    sm 30       Tesla K80  AWS p2 xlarge    sm 37        Note    You are welcome to contribute the settings on your end if you have made the code work properly on other GPUs  Also even if you are only using CPU tensorflow  GPU based code  for NMS  will be used by default  so please set   USE GPU NMS False   to get the correct output   3  Build the Cython modules      Shell   make clean   make   cd              Demo and Test with pre trained models 1  Download pre trained model      Shell     Resnet101 for voc pre trained on 07 12 set     data scripts fetch faster rcnn models sh           Note    if you cannot download the models through the link  or you want to try more models  you can check out the following solutions and optionally update the downloading script      Another server  here  http   xinlei sp cs cmu edu xinleic tf faster rcnn        Google drive  here  https   drive google com open id 0B1 fAEgxdnvJSmF3YUlZcHFqWTQ    2  Create a folder and a soft link to use the pre trained model      Shell   NET res101   TRAIN IMDB voc 2007 trainval voc 2012 trainval   mkdir  p output   NET    TRAIN IMDB    cd output   NET    TRAIN IMDB    ln  s          data voc 2007 trainval voc 2012 trainval   default   cd                 3  Demo for testing on custom video   please unzip  sort zip  in   tool   and then      Shell     tools demo video py              Citation If you find this implementation or the analysis conducted in our report helpful  please consider citing        article chen17implementation          Author    Xinlei Chen and Abhinav Gupta           Title    An Implementation of Faster RCNN with Study for Region Sampling           Journal    arXiv preprint arXiv 1702 02138           Year    2017             Or for a formal paper   Spatial Memory Network  https   arxiv org abs 1704 04224         article chen2017spatial        title  Spatial Memory for Context Reasoning in Object Detection         author  Chen  Xinlei and Gupta  Abhinav         journal  arXiv preprint arXiv 1704 04224         year  2017         For convenience  here is the faster RCNN citation        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015            Yolov2         article redmon2016yolo9000        title  YOLO9000  Better  Faster  Stronger         author  Redmon  Joseph and Farhadi  Ali         journal  arXiv preprint arXiv 1612 08242         year  2016             deep sort         article Wojke2017simple        title  Simple Online and Realtime Tracking with a Deep Association Metric         author  Wojke  Nicolai and Bewley  Alex and Paulus  Dietrich         journal  arXiv preprint arXiv 1703 07402         year  2017             sort         inproceedings Bewley2016 sort        author  Bewley  Alex and Ge  Zongyuan and Ott  Lionel and Ramos  Fabio and Upcroft  Ben         booktitle  2016 IEEE International Conference on Image Processing  ICIP          title  Simple online and realtime tracking         year  2016         pages  3464 3468         keywords  Benchmark testing Complexity theory Detectors Kalman filters Target tracking Visualization Computer Vision Data Association Detection Multiple Object Tracking         doi  10 1109 ICIP 2016 7533003        ","software":"md","book":"Dean-TianZhang","full_link":"https://github.com/Dean-TianZhang/TestProject_student"},{"name":"minimrbanana/py-faster-rcnn-test","artist":"train, rcnn, faster, shell, network","id":944,"playcount":8855,"description":"minimrbanana/py-faster-rcnn-test train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"minimrbanana","full_link":"https://github.com/minimrbanana/py-faster-rcnn-test"},{"name":"xinbangzhang123/my-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":945,"playcount":8855,"description":"xinbangzhang123/my-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"xinbangzhang123","full_link":"https://github.com/xinbangzhang123/my-faster-rcnn"},{"name":"goodluckcwl/custom-caffe","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":946,"playcount":4143,"description":"goodluckcwl/custom-caffe set, build, windowscommonsettingsprop, caff, cuda   Caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by Berkeley AI Research   BAIR  http   bair berkeley edu   The Berkeley Vision and Learning Center  BVLC  and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BAIR reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2015  CUDA 8 0  third party libraries   Baidu Yun  http   pan baidu com s 1hsN2hHq  or  Google Drive  https   drive google com open id 0B0OhXbSTAU1HSjM5MUdfZ2RPdFk   Please extract the archive into    windows thirdparty    Then  add the folder    windows thirdparty bins  to the environment variable  PATH        Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well       CUDA Download  CUDA Toolkit 8 0   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN     UseNCCL  to  false        cuDNN Download  cuDNN v5   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to    add the generated  matcaffe  folder to Matlab search path  and   add   caffe root  Build x64 Release  to your system path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BAIR BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"goodluckcwl","full_link":"https://github.com/goodluckcwl/custom-caffe"},{"name":"applesleam/MyRepository","artist":"train, rcnn, faster, shell, network","id":947,"playcount":8855,"description":"applesleam/MyRepository train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"applesleam","full_link":"https://github.com/applesleam/MyRepository"},{"name":"le-k/exp-py","artist":"train, rcnn, faster, shell, network","id":948,"playcount":8855,"description":"le-k/exp-py train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"le-k","full_link":"https://github.com/le-k/exp-py"},{"name":"Kai-I/FP-CAFFE","artist":"caff, learn, model, deep, layer","id":949,"playcount":3540,"description":"Kai-I/FP-CAFFE caff, learn, model, deep, layer   Caffe     Update for fixed point support  We already modified the caffe to support fixed point operations  The fixed point flow can be three steps      fix the network  The command is  caffe fix  with three new parameters extra to the original  model  and  weights  parameters    fixwidth  data width for fixed point  default value is 8   fixinfo  filename to save fixed point information for all layers   fixweights  new filename to save the weights after this fix step  For example  you can run as     caffe fix  model vgg16 prototxt  weights vgg16 caffemodel  fixwidth 8  fixinfo vgg16 fix txt  fixweights vgg16 fix caffemodel          run fixed point forward  The command is  caffe fixtest  with one new parameter  fixinfo   and please notice that   we should be specify the new fixed weights file for  fixweights  parameter     For example  you can run as     caffe fixtest  model vgg16 prototxt  fixweights vgg16 fix caffemodel  fixinfo vgg16 fix txt          finetune fixed point network  After  fix  and  fixtest   you may find the network performance become worse  you can use  fixtune  to finetune the network  We should not forget that   use the fixed point weights file for  fixweights  parameter    also specify  fixinfo  file    specify the learning rates of all convolutional layers to 0  For example  you can run as     caffe fixtune  solve vgg16 solver prototxt  fixweights vgg16 fix caffemodel  fixinfo vgg16 fix txt              Build Status  https   travis ci org BVLC caffe svg branch master   https   travis ci org BVLC caffe     License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Kai-I","full_link":"https://github.com/Kai-I/FP-CAFFE"},{"name":"lukeandshuo/sensiac_fast_rcnn","artist":"rcnn, fast, shell, matlab, voc","id":950,"playcount":11182,"description":"lukeandshuo/sensiac_fast_rcnn rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"lukeandshuo","full_link":"https://github.com/lukeandshuo/sensiac_fast_rcnn"},{"name":"kukuruza/caffe","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":951,"playcount":4239,"description":"kukuruza/caffe set, build, windowscommonsettingsprop, caff, cuda   Caffe     Travis Build Status  https   api travis ci org Microsoft caffe svg branch master   https   travis ci org Microsoft caffe  Travis  Linux build      AppVeyor Build Status  https   ci appveyor com api projects status 58wvckt0rcqtwnr5 branch master svg true    https   ci appveyor com project pavlejosipovic caffe 3a30a  AppVeyor  Windows build      License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2013      Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well  3rd party dependencies required by Caffe are automatically resolved via NuGet       CUDA Download  CUDA Toolkit 7 5   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN  to  false        cuDNN Download  cuDNN v3  or  cuDNN v4   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to    add the generated  matcaffe  folder to Matlab search path  and   add   caffe root  Build x64 Release  to your system path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"kukuruza","full_link":"https://github.com/kukuruza/caffe"},{"name":"kingsvalley/faster_rcnn_opt","artist":"train, rcnn, faster, shell, network","id":952,"playcount":8873,"description":"kingsvalley/faster_rcnn_opt train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name         faster rcnn opt ","software":"md","book":"kingsvalley","full_link":"https://github.com/kingsvalley/faster_rcnn_opt"},{"name":"tryerrorman/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":953,"playcount":8865,"description":"tryerrorman/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"tryerrorman","full_link":"https://github.com/tryerrorman/py-faster-rcnn"},{"name":"SmileLingyong/faster_rcnn-master","artist":"time, train, rcnn, net, vgg","id":954,"playcount":9188,"description":"SmileLingyong/faster_rcnn-master time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Object Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1pKGBDyz        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 114 authkey  AERHoxZ iAx j34 ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1hsFKmeK    ","software":"md","book":"SmileLingyong","full_link":"https://github.com/SmileLingyong/faster_rcnn-master"},{"name":"LuoxiaofeiFly/faster-rcnn","artist":"time, train, rcnn, net, vgg","id":955,"playcount":9190,"description":"LuoxiaofeiFly/faster-rcnn time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Ojbect Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid 4006CBB8476FF777 17323 authkey  AJOz vdYtdPwuKo ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9    ","software":"md","book":"LuoxiaofeiFly","full_link":"https://github.com/LuoxiaofeiFly/faster-rcnn"},{"name":"cogman2/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":956,"playcount":8855,"description":"cogman2/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"cogman2","full_link":"https://github.com/cogman2/py-faster-rcnn"},{"name":"assiaben/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":957,"playcount":9117,"description":"assiaben/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"assiaben","full_link":"https://github.com/assiaben/py-faster-rcnn"},{"name":"ninehb/P2-data-structure","artist":"train, rcnn, faster, shell, network","id":958,"playcount":9159,"description":"ninehb/P2-data-structure train, rcnn, faster, shell, network Under Windows OS     dir   jpg  b   file txt  This Repository is a fork of  py faster rcnn  https   github com rbgirshick py faster rcnn  in order to help achieving a binary classifier      The tutorial Readme can be found  here  https   github com deboc py faster rcnn blob master help Readme md            Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"ninehb","full_link":"https://github.com/ninehb/P2-data-structure"},{"name":"cumtcsys/Learn-Faster-RCNN","artist":"train, rcnn, faster, shell, network","id":959,"playcount":9311,"description":"cumtcsys/Learn-Faster-RCNN train, rcnn, faster, shell, network   py faster rcnn has been deprecated  Please see  Detectron  https   github com facebookresearch Detectron   which includes an implementation of  Mask R CNN  https   arxiv org abs 1703 06870        Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"cumtcsys","full_link":"https://github.com/cumtcsys/Learn-Faster-RCNN"},{"name":"rickyHong/fast-rcnn-ms","artist":"rcnn, fast, shell, matlab, voc","id":960,"playcount":11182,"description":"rickyHong/fast-rcnn-ms rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/fast-rcnn-ms"},{"name":"ChandlerGuan/frcnn","artist":"train, rcnn, faster, shell, network","id":961,"playcount":9117,"description":"ChandlerGuan/frcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"ChandlerGuan","full_link":"https://github.com/ChandlerGuan/frcnn"},{"name":"keithyin/Faster-RCNN_TFpy2","artist":"shell, train, model, rcnn, demo","id":962,"playcount":4175,"description":"keithyin/Faster-RCNN_TFpy2 shell, train, model, rcnn, demo This project is just a little extension to   https   github com smallcorgi Faster RCNN TF  https   github com smallcorgi Faster RCNN TF      when call       shell   cd  FRCN ROOT   python   tools demo py   model model path          the code will using opencv to call camera do real time detection    You should use python2 7 to run this code  in python3 5 there is something bad      Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit       Shell   wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar   wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar   wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit        Shell   tar xvf VOCtrainval 06 Nov 2007 tar   tar xvf VOCtest 06 Nov 2007 tar   tar xvf VOCdevkit 08 Jun 2007 tar        3  It should have this basic structure       Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories            4  Create symlinks for the PASCAL VOC dataset       Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007        5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0           Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy                   6  Run script to train and test model      Shell   cd  FRCN ROOT     experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc         DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes       AP                                aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP           0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"keithyin","full_link":"https://github.com/keithyin/Faster-RCNN_TFpy2"},{"name":"nellyLidanYang/imagenet","artist":"train, rcnn, faster, shell, network","id":963,"playcount":8855,"description":"nellyLidanYang/imagenet train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"nellyLidanYang","full_link":"https://github.com/nellyLidanYang/imagenet"},{"name":"heroinlin/fast_rcnn","artist":"rcnn, fast, shell, matlab, voc","id":964,"playcount":11182,"description":"heroinlin/fast_rcnn rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"heroinlin","full_link":"https://github.com/heroinlin/fast_rcnn"},{"name":"manutdzou/KITTI-detection-OHEM","artist":"train, rcnn, faster, shell, network","id":965,"playcount":7384,"description":"manutdzou/KITTI-detection-OHEM train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   pascallin ecs soton ac uk challenges VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper     download the KITTI in data training  and use the train sh to train the model the OHEM result is    Results  APs  78 4 64 7 75 1 86 5 89 6 83 5 74 0 mAP 78 8  and the standard result based on faster rcnn is    Results  APs  78 4 65 4 69 2 88 1 86 6 82 6 67 8 mAP 76 9 ","software":"md","book":"manutdzou","full_link":"https://github.com/manutdzou/KITTI-detection-OHEM"},{"name":"lukeandshuo/sensiac_fast_rcnn_quebec","artist":"rcnn, fast, shell, matlab, voc","id":966,"playcount":11182,"description":"lukeandshuo/sensiac_fast_rcnn_quebec rcnn, fast, shell, matlab, voc     This code base is no longer maintained and exists as a historical artifact to supplement my ICCV 2015 paper  For more recent work that s faster and more accurrate  please see  Faster R CNN  https   github com rbgirshick py faster rcnn   which also includes functionality for training Fast R CNN       Fast  R CNN  Fast Region based Convolutional Networks for object detection  Created by Ross Girshick at Microsoft Research  Redmond       Introduction    Fast R CNN   is a fast framework for object detection with deep ConvNets  Fast R CNN    trains state of the art models  like VGG16  9x faster than traditional R CNN and 3x faster than SPPnet     runs 200x faster than R CNN and 10x faster than SPPnet at test time     has a significantly higher mAP on PASCAL VOC than both R CNN and SPPnet     and is written in Python and C   Caffe   Fast R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1504 08083  and later published at ICCV 2015       License  Fast R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Fast R CNN  If you find Fast R CNN useful in your research  please consider citing        inproceedings girshickICCV15fastrcnn          Author    Ross Girshick           Title    Fast R CNN           Booktitle    International Conference on Computer Vision   ICCV             Year    2015                 Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage  7   Extra downloads   extra downloads       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   optional  MATLAB  required for PASCAL VOC evaluation only       Requirements  hardware  1  For training smaller networks  CaffeNet  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training with VGG16  you ll need a K40   11G of memory       Installation  sufficient for the demo   1  Clone the Fast R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick fast rcnn git          2  We ll call the directory that you cloned Fast R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above            Note 1    If you didn t clone Fast R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  fast rcnn  branch  or equivalent detached state   This will happen automatically  if you follow these instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe              5  Download pre computed Fast R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch fast rcnn models sh              This will populate the   FRCN ROOT data  folder with  fast rcnn models   See  data README md  for details       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo     Python    To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007  The object proposals are pre computed in order to reduce installation requirements     Note    If the demo crashes Caffe because your GPU doesn t have enough memory  try running the demo with a small network  e g      tools demo py   net caffenet  or with    net vgg cnn m 1024   Or run in CPU mode    tools demo py   cpu   Type    tools demo py  h  for usage     MATLAB    There s also a  basic  MATLAB demo  though it s missing some minor bells and whistles compared to the Python version     Shell cd  FRCN ROOT matlab matlab   wait for matlab to start       At the matlab prompt  run the script     fast rcnn demo      Fast R CNN training is implemented in Python only  but test time detection functionality also exists in MATLAB  See  matlab fast rcnn demo m  and  matlab fast rcnn im detect m  for details     Computing object proposals    The demo uses pre computed selective search proposals computed with  this code  https   github com rbgirshick rcnn blob master selective search selective search boxes m   If you d like to compute proposals on your own images  there are many options  Here are some pointers  if you run into trouble using these resources please direct questions to the respective authors   1  Selective Search   original matlab code  http   disi unitn it  uijlings MyHomepage index php page projects1    python wrapper  https   github com sergeyk selective search ijcv with python  2  EdgeBoxes   matlab code  https   github com pdollar edges  3  GOP and LPO   python code  http   www philkr net   4  MCG   matlab code  http   www eecs berkeley edu Research Projects CS vision grouping mcg   5  RIGOR   matlab code  http   cpl cc gatech edu projects RIGOR    Apologies if I ve left your method off this list  Feel free to contact me and ask for it to be included       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar        2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories                4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6  Follow the next sections to download pre computed object proposals and pre trained ImageNet models      Download pre computed Selective Search object proposals  Pre computed selective search boxes can also be downloaded for VOC2007 and VOC2012      Shell cd  FRCN ROOT   data scripts fetch selective search data sh      This will populate the   FRCN ROOT data  folder with  selective selective data        Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  CaffeNet  model   S     VGG CNN M 1024  model   M     and VGG16  model   L         Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     These models are all available in the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but are provided here for your convenience       Usage    Train   a Fast R CNN detector  For example  train a VGG16 network on VOC 2007 trainval      Shell   tools train net py   gpu 0   solver models VGG16 solver prototxt      weights data imagenet models VGG16 v2 caffemodel      If you see this error      EnvironmentError  MATLAB command  matlab  not found  Please add  matlab  to your PATH       then you need to make sure the  matlab  binary is in your   PATH   MATLAB is currently required for PASCAL VOC evaluation     Test   a Fast R CNN detector  For example  test the VGG 16 network on VOC 2007 test      Shell   tools test net py   gpu 1   def models VGG16 test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel      Test output is written underneath   FRCN ROOT output      Compress   a Fast R CNN model using truncated SVD on the fully connected layers      Shell   tools compress net py   def models VGG16 test prototxt      def svd models VGG16 compressed test prototxt         net output default voc 2007 trainval vgg16 fast rcnn iter 40000 caffemodel   Test the model you just compressed   tools test net py   gpu 0   def models VGG16 compressed test prototxt      net output default voc 2007 trainval vgg16 fast rcnn iter 40000 svd fc6 1024 fc7 256 caffemodel          Experiment scripts Scripts to reproduce the experiments in the paper   up to stochastic variation   are provided in   FRCN ROOT experiments scripts   Log files for experiments are located in  experiments logs      Note    Until recently  commit a566e39   the RNG seed for Caffe was not fixed during training  Now it s fixed  unless  train net py  is called with the    rand  flag  Results generated before this commit will have some stochastic variation       Extra downloads     Experiment logs  http   www cs berkeley edu  rbg fast rcnn data fast rcnn experiments tgz    PASCAL VOC test set detections        voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn caffenet trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg16 trained on 2007 trainval tgz         voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2007 test results fast rcnn vgg cnn m 1024 trained on 2007 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2007 trainvaltest 2012 trainval tgz         voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz  http   www cs berkeley edu  rbg fast rcnn data voc 2012 test results fast rcnn vgg16 trained on 2012 trainval tgz     Fast R CNN VGG16 model  http   www cs berkeley edu  rbg fast rcnn data voc12 submission tgz  trained on VOC07 train val test union with VOC12 train val ","software":"md","book":"lukeandshuo","full_link":"https://github.com/lukeandshuo/sensiac_fast_rcnn_quebec"},{"name":"yuexiajiao/Faster-RCNN","artist":"shell, train, model, rcnn, demo","id":967,"playcount":3780,"description":"yuexiajiao/Faster-RCNN shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"yuexiajiao","full_link":"https://github.com/yuexiajiao/Faster-RCNN"},{"name":"minimrbanana/py-faster-rcnn-train","artist":"train, rcnn, faster, shell, network","id":968,"playcount":8855,"description":"minimrbanana/py-faster-rcnn-train train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"minimrbanana","full_link":"https://github.com/minimrbanana/py-faster-rcnn-train"},{"name":"dinhtuyen/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":969,"playcount":9117,"description":"dinhtuyen/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software    NOTE   If you are having issues compiling and you are using a recent version of CUDA cuDNN  please consult  this issue  https   github com rbgirshick py faster rcnn issues 509  pjax  23js repo pjax container issuecomment 284133868  for a workaround  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"dinhtuyen","full_link":"https://github.com/dinhtuyen/py-faster-rcnn"},{"name":"kenjihata/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":970,"playcount":8855,"description":"kenjihata/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"kenjihata","full_link":"https://github.com/kenjihata/py-faster-rcnn"},{"name":"mm1994uestc/facebookresearch-multipathnet","artist":"model, imag, train, caff, download","id":971,"playcount":8968,"description":"mm1994uestc/facebookresearch-multipathnet model, imag, train, caff, download MultiPath Network training code             The code provides functionality to train Fast R CNN and MultiPath Networks in  Torch 7  http   torch ch   br  Corresponding paper    A MultiPath Network for Object Detection   http   arxiv org abs 1604 02135    sheep  https   cloud githubusercontent com assets 4953728 17826153 442d027a 666e 11e6 9a1e 2fac95a2d3ba jpg   If you use MultiPathNet in your research  please cite the relevant papers        INPROCEEDINGS Zagoruyko2016Multipath      author    S  Zagoruyko and A  Lerer and T  Y  Lin and P  O  Pinheiro and S  Gross and S  Chintala and P  Doll    a  r       title    A MultiPath Network for Object Detection       booktitle    BMVC      year    2016            Requirements    Linux   NVIDIA GPU with compute capability 3 5      Installation  The code depends on Torch 7  fb python and several other easy to install torch packages  br  To install Torch  follow http   torch ch docs getting started html br  Then install additional packages      bash luarocks install inn luarocks install torchnet luarocks install fbpython luarocks install class      Evaluation relies on COCO API calls via python interface  because lua interface doesn t support it  Lua API is used to load annotation files in   json to COCO API data structures  This doesn t work for proposal files as they re too big  so we provide converted proposals for sharpmask and selective search in torch format   First  clone https   github com pdollar coco       git clone https   github com pdollar coco      Then install LuaAPI       cd coco luarocks make LuaAPI rocks coco scm 1 rockspec      And PythonAPI       cd coco PythonAPI make      You will have to add the path to PythonAPI to  PYTHONPATH   Note that this won t work with anaconda as it ships with it s own libraries which conflict with torch       Data preparation  The root folder should have a folder  data  with the following subfolders       models  annotations  proposals        models  folder should contain AlexNet and VGG pretrained imagenet files downloaded from here   ResNets can resident in other places specified by  resnet path  env variable    annotations  should contain   json files downloaded from https   mscoco org external  There are   json annotation files for PASCAL VOC  MSCOCO  ImageNet and other datasets    proposals  should contain   t7 files downloaded from here We provide selective search VOC 2007 and VOC 2012 proposals converted from https   github com rbgirshick fast rcnn and SharpMask proposals for COCO 2015 converted from https   github com facebookresearch deepmask  which can be used to compute proposals for new images as well   Here is an example structure       data     annotations         instances train2014 json         instances val2014 json         pascal test2007 json         pascal train2007 json         pascal train2012 json         pascal val2007 json         pascal val2012 json     models         caffenet fast rcnn iter 40000 t7         imagenet pretrained alexnet t7         imagenet pretrained vgg t7         vgg16 fast rcnn iter 40000 t7     proposals         VOC2007             selective search                 test t7                 train t7                 trainval t7                 val t7         coco             sharpmask                 train t7                 val t7      Download selective search proposals for VOC2007      bash wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search train t7 wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search val t7 wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search trainval t7 wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search test t7      Download sharpmask proposals for COCO      bash wget https   s3 amazonaws com multipathnet proposals coco sharpmask train t7 wget https   s3 amazonaws com multipathnet proposals coco sharpmask val t7      As for the images themselves  provide paths to VOCDevkit and COCO in  config lua  config lua      Running DeepMask with MultiPathNet on provided image  We provide an example of how to extract DeepMask or SharpMask proposals from an image and run recognition MultiPathNet to classify them  then do non maximum suppression and draw the found objects   1  Clone DeepMask project into the root directory        bash   git clone https   github com facebookresearch deepmask        2  Download DeepMask or SharpMask network        bash   cd data models     download SharpMask based on ResNet 50   wget https   s3 amazonaws com deepmask models sharpmask model t7  O sharpmask t7        3  Download recognition network        bash   cd data models     download ResNet 18 based model trained on COCO with integral loss   wget https   s3 amazonaws com multipathnet models resnet18 integral coco t7        4  Make sure you have COCO validation  json files in  data annotations instances val2014 json   5  Pick some image and run the script        bash   th demo lua  img   deepmask data testImage jpg        And you should see this image     iterm2 4jpuod lua khbaaq  https   cloud githubusercontent com assets 4953728 17951035 69d6cb2e 6a5f 11e6 83b8 767c2ae0ae64 png   See file  demo lua  demo lua  for details      Training  The repository supports training Fast RCNN and MultiPath networks with data and model multi GPU paralellism  Supported base models are the following     AlexNet trained in  caffe  https   github com bvlc caffe  by Ross Girshick   imagenet pretrained alexnet t7  https   s3 amazonaws com multipathnet models imagenet pretrained alexnet t7    VGG trained in  caffe  https   github com bvlc caffe  by Ross Girshick   imagenet pretrained vgg t7  https   s3 amazonaws com multipathnet models imagenet pretrained vgg t7    ResNets trained in torch with  fb resnet torch  https   github com facebook fb resnet torch  by Sam Gross   inception v3 trained in  tensorflow  https   github com tensorflow tensorflow  by Google   Network In Network trained in torch with  imagenet multiGPU torch  https   github com soumith imagenet multiGPU torch  by Sergey Zagoruyko      PASCAL VOC  To train Fast RCNN on VOC2007 trainval with VGG base model and selective search proposals do      bash test nsamples 1000 model vgg   scripts train fastrcnn voc2007 sh      The resulting mAP is slightly   2 mAP  higher than original Fast RCNN number  We should mention that the code is not exactly the same as we improved ROIPooling by fixing a few bugs  see https   github com szagoruyko imagine nn pull 17      COCO  To train MultiPathNet with VGG 16 base model on 4 GPUs run      bash train nGPU 4 test nGPU 1   scripts train multipathnet coco sh      Here is a graph visualization of the network  click to enlarge     a href  https   s3 amazonaws com multipathnet extra multipathnet pdf    img width  1109  alt  multipathnet  src  https   cloud githubusercontent com assets 4953728 17974712 70baf428 6ae7 11e6 9881 e0dea8ab9c18 png     a   To train ResNet 18 on COCO do      bash train nGPU 4 test nGPU 1 model resnet resnet path   data models resnet resnet 18 t7   scripts train coco sh         Evaluation      PASCAL VOC  We provide original models from Fast RCNN paper converted to torch format here     caffenet fast rcnn iter 40000 t7  https   s3 amazonaws com multipathnet models caffenet fast rcnn iter 40000 t7     vgg16 fast rcnn iter 40000 t7  https   s3 amazonaws com multipathnet models vgg16 fast rcnn iter 40000 t7   To evaluate these models run      bash model data models caffenet fast rcnn iter 40000 t7   scripts eval fastrcnn voc2007 sh model data models vgg fast rcnn iter 40000 t7   scripts eval fastrcnn voc2007 sh          COCO  Evaluate fast ResNet 18 based network trained with integral loss on COCO val5k split   resnet18 integral coco t7  https   s3 amazonaws com multipathnet models resnet18 integral coco t7  89MB       bash test nGPU 4 test nsamples 5000   scripts eval coco sh      It achieves 24 4 mAP using 400 SharpMask proposals per image       Average Precision   AP     IoU 0 50 0 95   area    all   maxDets 100     0 244 Average Precision   AP     IoU 0 50        area    all   maxDets 100     0 402 Average Precision   AP     IoU 0 75        area    all   maxDets 100     0 268 Average Precision   AP     IoU 0 50 0 95   area  small   maxDets 100     0 078 Average Precision   AP     IoU 0 50 0 95   area medium   maxDets 100     0 266 Average Precision   AP     IoU 0 50 0 95   area  large   maxDets 100     0 394 Average Recall      AR     IoU 0 50 0 95   area    all   maxDets   1     0 249 Average Recall      AR     IoU 0 50 0 95   area    all   maxDets  10     0 368 Average Recall      AR     IoU 0 50 0 95   area    all   maxDets 100     0 377 Average Recall      AR     IoU 0 50 0 95   area  small   maxDets 100     0 135 Average Recall      AR     IoU 0 50 0 95   area medium   maxDets 100     0 444 Average Recall      AR     IoU 0 50 0 95   area  large   maxDets 100     0 561     ","software":"md","book":"mm1994uestc","full_link":"https://github.com/mm1994uestc/facebookresearch-multipathnet"},{"name":"cguindel/lsi-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":972,"playcount":7871,"description":"cguindel/lsi-faster-rcnn train, rcnn, faster, shell, network This repository contains a modified version of the deep learning based object detector  Faster  R CNN  created by Shaoqing Ren  Kaiming He  Ross Girshick and Jian Sun  Microsoft Research   It is a fork of their python implementation available  here  https   github com rbgirshick py faster rcnn    This version   lsi faster rcnn   has been developed by Carlos Guindel at the  Intelligent Systems Laboratory  http   uc3m es islab  research group  from the  Universidad Carlos III de Madrid  http   www uc3m es home    Features introduced in this fork include    Training  and eventually testing  on the  KITTI Object Detection Dataset  http   www cvlibs net datasets kitti eval object php     Mixed external RPN proposals    Discrete viewpoint prediction    Four channel input   The last two features are introduced in two published research papers  Please check the  citation section   citing this work  for further details   All the included methods can be quantitatively evaluated using the companion  eval kitti  https   github com cguindel eval kitti  repository       Disclaimer  Modifications have been introduced trying to preserve the different functionalities present in the original Faster R CNN code  which are largely configurable via parameters  Nevertheless  testing has been conducted over a limited set of combinations of parameters  it is not guaranteed in any case the proper operation under all the configuration alternatives  Pull requests fixing unfeasible configuration setups will be welcome       License  This work is released under the MIT License  refer to the LICENSE file for details        Citing this work  In case you make use of the solutions adopted in this code regarding the viewpoint estimation  please consider citing        inproceedings Guindel2017ICVES          author  Guindel  Carlos and Mart   i n  David and Armingol  Jos   e  Mar   i a           booktitle  2017  IEEE  International Conference on Vehicular Electronics and Safety   ICVES             title  Joint object detection and viewpoint estimation using  CNN  features           year  2017           pages  145 150           doi  10 1109 ICVES 2017 7991916           month  June         Otherwise  if you use the four channel input solution  please consider citing        inproceedings Guindel2018EUROCAST          author  Guindel  Carlos and Mart   i n  David and Armingol  Jos   e  Mar   i a           editor  Moreno D   i az  Roberto and Pichler  Franz and Quesada Arencibia  Alexis           title  Stereo Vision Based Convolutional Networks for Object Detection in Driving Environments           booktitle  Computer Aided Systems Theory   EUROCAST 2017           year  2018           publisher  Springer International Publishing           address  Cham           pages  427 434           isbn  978 3 319 74727 9         You can find the original research paper presenting the Faster R CNN approach in        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1        2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  This fork has been tested with the following GPU devices  NVIDIA Tesla K40  Titan X  Pascal   Titan Xp  We gratefully acknowledge the support of NVIDIA Corporation with the donation of the cited devices to our research group   For reference  training the VGG16 model uses  6G of memory in the Titan Xp  Training  and inference  could be performed with less powerful devices using smaller network architectures  ZF  VGG CNN M 1024        Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com cguindel lsi faster rcnn git         The    recursive  flag allows to automatically clone the  caffe fast rcnn  submodule  I use  my own fork  https   github com cguindel caffe fast rcnn  of  the official repository  https   github com rbgirshick caffe fast rcnn   I try to keep it updated with the upstream Caffe repository as far as possible  that is specially relevant when major changes are introduced in some dependency  e g  cuDNN    2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT      Ignore notes 1 and 2 if you followed step 1 above        Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need   to manually clone the  caffe fast rcnn  submodule       Shell   git submodule update   init   recursive           Note 2    My  caffe fast rcnn  submodule is expected to be on the  lsi faster rcnn  branch  This will happen automatically  if you followed step 1 instructions    3  Edit the line 141 of lib setup py to reflect the CUDA compute capability of your GPU  This can be made with an editor  e g  gedit        Shell   cd  FRCN ROOT lib   gedit setup py         The line to be edited is the  arch  flag  For example  for the Titan X Pascal  the following should be writen       Python   extra compile args   gcc      Wno unused function                                   nvcc      arch sm 61                                             ptxas options  v                                            c                                             compiler options                                             fPIC               Then  build the Cython modules       Shell   cd  FRCN ROOT lib   make        4  Build Caffe and pycaffe      Shell   cd  FRCN ROOT caffe fast rcnn     Now follow the Caffe installation instructions here        http   caffe berkeleyvision org installation html      If you re experienced with Caffe and have all of the requirements installed     and your Makefile config in place  then simply do    make  j8    make pycaffe        5  If you want to run our demo  please download the trained models       Shell   cd  FRCN ROOT     data scripts fetch lsi models sh          This will populate the   FRCN ROOT data  folder with  lsi models   These models were trained on KITTI   6  Our demo also requires to found the KITTI object dataset in   FRCN ROOT data kitti images   You will need to download the dataset from  their site  http   www cvlibs net datasets kitti   and then create a symbolic link to   FRCN ROOT data kitti images         Shell   ln  s  PATH TO OBJECT KITTI DATASET  FRCN ROOT data kitti images          Please note that  PATH TO OBJECT KITTI DATASET  must contain  at least  the  testing  folder with the left color images   image 2   in it       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo viewp py     The demo performs Faster R CNN detection and viewpoint inference using a VGG16 network trained for detection on the  KITTI Object Detection Dataset  http   www cvlibs net datasets kitti eval object php   ","software":"md","book":"cguindel","full_link":"https://github.com/cguindel/lsi-faster-rcnn"},{"name":"lawliet1718/https-github.com-smallcorgi-Faster-RCNN_TF","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":973,"playcount":15,"description":"lawliet1718/https-github.com-smallcorgi-Faster-RCNN_TF “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605> 404  Not Found ","software":"md","book":"lawliet1718","full_link":"https://github.com/lawliet1718/https-github.com-smallcorgi-Faster-RCNN_TF"},{"name":"ucasqcz/caffe_own","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":974,"playcount":4239,"description":"ucasqcz/caffe_own set, build, windowscommonsettingsprop, caff, cuda   Caffe     Travis Build Status  https   api travis ci org Microsoft caffe svg branch master   https   travis ci org Microsoft caffe  Travis  Linux build      AppVeyor Build Status  https   ci appveyor com api projects status 58wvckt0rcqtwnr5 branch master svg true    https   ci appveyor com project pavlejosipovic caffe 3a30a  AppVeyor  Windows build      License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2013      Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well  3rd party dependencies required by Caffe are automatically resolved via NuGet       CUDA Download  CUDA Toolkit 7 5   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN  to  false        cuDNN Download  cuDNN v3  or  cuDNN v4   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to    add the generated  matcaffe  folder to Matlab search path  and   add   caffe root  Build x64 Release  to your system path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"ucasqcz","full_link":"https://github.com/ucasqcz/caffe_own"},{"name":"YanceyZhangDL/py-faster-rcnn_cudnnv5","artist":"train, rcnn, faster, shell, network","id":975,"playcount":8855,"description":"YanceyZhangDL/py-faster-rcnn_cudnnv5 train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"YanceyZhangDL","full_link":"https://github.com/YanceyZhangDL/py-faster-rcnn_cudnnv5"},{"name":"blacky-i/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":976,"playcount":8855,"description":"blacky-i/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"blacky-i","full_link":"https://github.com/blacky-i/py-faster-rcnn"},{"name":"rickyHong/python-faster-rcnn-clone","artist":"train, rcnn, faster, shell, network","id":977,"playcount":8855,"description":"rickyHong/python-faster-rcnn-clone train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"rickyHong","full_link":"https://github.com/rickyHong/python-faster-rcnn-clone"},{"name":"xs-han/my_faster_rcnn","artist":"time, train, rcnn, net, vgg","id":978,"playcount":9188,"description":"xs-han/my_faster_rcnn time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Object Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1pKGBDyz        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 114 authkey  AERHoxZ iAx j34 ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1hsFKmeK    ","software":"md","book":"xs-han","full_link":"https://github.com/xs-han/my_faster_rcnn"},{"name":"aa10240tw/Caffe-Save","artist":"caff, model, arxiv, year, fast","id":979,"playcount":4140,"description":"aa10240tw/Caffe-Save caff, model, arxiv, year, fast Forked from https   www github com BVLC caffe master branch in 2016 02 04   Next update time may be around 2016 05 01      Good News    Microsoft has created a repository of caffe windows version in https   github com Microsoft caffe   Their solution may be more flexible and maintainable  I suggest all of you to try it   I have made a list of some frequently asked questions in  FAQ md  FAQ md   If you get confused during configuring  please firstly look up for your question in the  FAQ md  FAQ md   This FAQ list is still under construction  I will keep adding questions into it      Setup step   1  Download third party libraries from  BaiduYun Disk  http   pan baidu com s 1sk3QyyL  or  OneDrive  http   1drv ms 23KkbTk  and extract the files to  caffe windows root 3rdparty      Please don t forget to add the    3rdparty bin  folder to your environment variable  PATH      2  Run    src caffe proto extract proto bat  to create  caffe pb h    caffe pb cc  and  caffe pb2 py    3  Double click   buildVS2013 MainBuilder sln to open the solution  If you do not have a Nvidia GPU  please open   build cpu only MainBuilder sln   4  Change the compile mode to Release and X64   5  Modify the cuda device compute capability defined in the settings   caffelib properties      CUDA C C        Device      Code Generation   to your GPU s compute capability  such as compute 30 sm 30  etc   You can look up for your GPU s compute capability in https   en wikipedia org wiki CUDA   Some general GPUs  compute capabilities are listed below      If your GPU s compute capability is below or equal to 2 1  please remove the  USE CUDNN  macro in the proprocessor definition of all projects     If you are using cpu only solution  just ignore this step   6  Compile     GPU                                           Compute Capability                                                                                GTX660  680  760  770                         compute 30 sm 30          GTX780  Titan Z  Titan Black  K20  K40        compute 35 sm 35          GTX960  980  Titan X                          compute 52 sm 52                 http   blog csdn net happynear article details 45372231      Matlab Wrapper  Just replace the Matlab include and library path defined in the settings and compile    Don t forget to add    matlab  to your Matlab path         Python Wrapper  Similar with Matlab  replace the python include and library path and compile   Most of the libraries listed in    python requirements txt  can be installed by  pip install   However  some of them cannot be installed so easily   For protobuf  you may download the codes from https   github com google protobuf  Copy  caffe windows root src caffe proto protoc exe  to  protobuf root src   Then run  python setup py install  in  protobuf root python    For leveldb  I have created a repository https   github com happynear py leveldb windows   Please follow the instructions in  README md  to install it       MNIST example  Please download the mnist leveldb database from http   pan baidu com s 1mgl9ndu and extract it to    examples mnist   Then double click    run mnist bat  to run the MNIST demo      Update log  2015 11 09 CuDNN v3 works well now   2015 09 14 Multi GPU is supported now    WARNING  When you are using multiple gpus to train a model  please do not directly close the command window  Instead  please use  Ctrl C  to avoid the gpu driver from crash   You can also press  Ctrl Break  to save a model snapshot whenever you want during training      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"aa10240tw","full_link":"https://github.com/aa10240tw/Caffe-Save"},{"name":"gshruti95/news-shot-classification","artist":"model, imag, train, caff, download","id":980,"playcount":3955,"description":"gshruti95/news-shot-classification model, imag, train, caff, download   News Shot Classification Author  Shruti Gullapuram  gshruti95      Installation Clone the repository  while ensuring that all dependencies are correctly installed      Usage Run  python ShotClass 01 py  path to videofile    The path to the video file is either absolute or relative with respect to the  ShotClass 01 py  file       Usage on Case HPC   Process a list of videos using  l flag   Run    manager sh  l  list  txt    list  txt contains YYYY MM DD HOUR NETWORKNAME mp4  only basenames of files    Process a particular day s worth of news videos using  d flag   Run    manager sh  d YYYY MM DD   Run    manager sh  path to videofile     You can edit the variable VIDEO DST in manager sh to change the path of the processed video files      Output The output is stored as two files named   videofilename  sht  and   videofilename  json   json lines format  in the same directory as the video       Camera shot type     Newsperson s   Background roll  Graphic  Weather  Sports     Object category     Vehicle  Natural formation  Building Structure  Person s  Clothing  Weapon  Sports     Scene type     Indoor  Outdoor     Imagenet labels with probabilities   Places205 labels with probabilities   Scene attributes   YOLO Persons with detected count  probability and position of each detection as x y coordinates and height and width      Dependencies   Python  https   www python org downloads     The language of the project  The code has been tested with Python 2 7 8 and 2 7 12  It should work with any recent version of Python 2    Caffe  https   github com BVLC caffe    Neural network framework  Needs to be complied with Python support  pycaffe   The code has been tested with Caffe rc3  and should work with the GitHub version    FFMpeg  https   github com FFmpeg FFmpeg    For video processing  The code has been tested with v2 8 2 and v3 1 0  and should work with the GitHub version    PySceneDetect  https   github com Breakthrough PySceneDetect    For shot detection  The code has been tested with v0 3 5    Scikit Learn  http   scikit learn org stable install html    For various classifiers      Required External Files and Models All the required external files and classifier models can be found here  https   www dropbox com sh hv811iqnupcusp8 AAA nn4mYD2LIP2 deK1VUSWa dl 0  The paths to all external files required by the code can be modified in  path params py  according to the user s convenience      Google Summer of Code This is the project repository for a Google Summer of Code 2016 project for Red Hen Lab    The project link is https   summerofcode withgoogle com projects  6049536703201280   The final work product submission is at https   shrutigullapuram wordpress com 2016 08 22 gsoc work product submission      Citations Licenses   Places205 AlexNet model    B  Zhou  A  Lapedriza  J  Xiao  A  Torralba  and A  Oliva  Learning Deep Features for Scene Recognition using Places Database   Advances in Neural Information Processing Systems 27  NIPS  spotlight  2014   http   places csail mit edu downloadCNN html   GoogleNet model   http   arxiv org abs 1409 4842  Szegedy et al   Going Deeper with Convolutions  CoRR 2014  Used BVLC Googlenet model  trained by S  Guadarama    Reference Caffenet model   AlexNet trained on ILSVRC 2012  with a minor variation from the version as described in ImageNet classification with deep convolutional neural networks by Krizhevsky et al  in NIPS 2012  Model trained by J  Donahue    Red Hen Lab NewsScape Dataset   This work made use of the NewsScape dataset and the facilities of the Distributed Little Red Hen Lab  co directed by Francis Steen and Mark Turner   http   redhenlab org   YOLO model   https   arxiv org abs 1506 02640  Joseph Redmon  Santosh Divvala  Ross Girshick  Ali Farhadi  You Only Look Once  Unified  Real Time Object Detection  CoRR 2015  A demo of the actual system and the source code can be found on their project website  http   pjreddie com yolo  ","software":"md","book":"gshruti95","full_link":"https://github.com/gshruti95/news-shot-classification"},{"name":"closerbibi/bv_detection_one_channel","artist":"train, rcnn, faster, shell, network","id":981,"playcount":8855,"description":"closerbibi/bv_detection_one_channel train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"closerbibi","full_link":"https://github.com/closerbibi/bv_detection_one_channel"},{"name":"charan223/Faster-RCNN_TF","artist":"shell, train, model, rcnn, demo","id":982,"playcount":3780,"description":"charan223/Faster-RCNN_TF shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"charan223","full_link":"https://github.com/charan223/Faster-RCNN_TF"},{"name":"towardthesea/Faster_RCNN_TF","artist":"shell, train, model, rcnn, demo","id":983,"playcount":4538,"description":"towardthesea/Faster_RCNN_TF shell, train, model, rcnn, demo   Faster RCNN TF  It is originally  Faster RCNN TF  https   github com smallcorgi Faster RCNN TF   This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com towardthesea Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Demo with YARP    Shell cd  RFCN ROOT python   tools demo yarp py   model MODEL PATH   src CAMERA PORT   des VIEWER PORT   usage GPU FRACTION          Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc          DEVICE is either cpu gpu    7  Train with COCO     COCO datasets can be obtained from  here  http   mscoco org dataset  download      Download dataset images  unzip and place at  coco images       Download annotations  unzip and place at  coco       Create symlinks for COCO        bash     cd  FRCN ROOT data     ln  s  COCO ROOT coco             Make sure the number of classes in  VGGnet train  and  VGGnet test  is   81       Download   COCO develop kit   at  github link  https   github com pdollar coco      Run  make  in  coco PythonAPI         The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"towardthesea","full_link":"https://github.com/towardthesea/Faster_RCNN_TF"},{"name":"tonnkie/object-detection","artist":"shell, train, model, rcnn, demo","id":984,"playcount":3780,"description":"tonnkie/object-detection shell, train, model, rcnn, demo   Faster RCNN TF  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF   ","software":"md","book":"tonnkie","full_link":"https://github.com/tonnkie/object-detection"},{"name":"GBJim/py-faster-rcnn","artist":"train, rcnn, faster, shell, network","id":985,"playcount":8855,"description":"GBJim/py-faster-rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"GBJim","full_link":"https://github.com/GBJim/py-faster-rcnn"},{"name":"abhirevan/pedestrian-detector","artist":"train, rcnn, faster, shell, network","id":986,"playcount":8855,"description":"abhirevan/pedestrian-detector train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"abhirevan","full_link":"https://github.com/abhirevan/pedestrian-detector"},{"name":"wupeng78/Faster-R-CNN","artist":"time, train, rcnn, net, vgg","id":987,"playcount":9188,"description":"wupeng78/Faster-R-CNN time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Object Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1dDFGerf        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 114 authkey  AERHoxZ iAx j34 ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1dDCsSm9    ","software":"md","book":"wupeng78","full_link":"https://github.com/wupeng78/Faster-R-CNN"},{"name":"DeepLearningT/TargetDetection_Faster-RCNN_TF","artist":"shell, train, model, rcnn, demo","id":988,"playcount":4704,"description":"DeepLearningT/TargetDetection_Faster-RCNN_TF shell, train, model, rcnn, demo  This is an experimental Tensorflow implementation of Faster RCNN   a convnet for object detection with a region proposal network  For details about R CNN please refer to the paper  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  http   arxiv org pdf 1506 01497v3 pdf  by Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun        Requirements  software  1  Requirements for Tensorflow  see   Tensorflow  https   www tensorflow org     2  Python packages you might not have   cython    python opencv    easydict       Requirements  hardware  1  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com smallcorgi Faster RCNN TF git        2  Build the Cython modules        Shell     cd  FRCN ROOT lib     make              Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   Download model training on PASCAL VOC 2007    Google Drive   https   drive google com open id 0ByuDEGFYmWsbZ0EzeUlHcGFIVWM    Dropbox   https   www dropbox com s cfz3blmtmwj6bdh VGGnet fast rcnn iter 70000 ckpt dl 0   To run the demo    Shell cd  FRCN ROOT python   tools demo py   model model path     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Training Model 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     mv VOCdevkit VOCdevkit2007              5  Download pre trained ImageNet models     Download the pre trained ImageNet models   Google Drive   https   drive google com open id 0ByuDEGFYmWsbNVF5eExySUtMZmM    Dropbox   https   www dropbox com s po2kzdhdgl4ix55 VGG imagenet npy dl 0             Shell     mv VGG imagenet npy  FRCN ROOT data pretrain model VGG imagenet npy          6  Run script to train and test model     Shell  cd  FRCN ROOT    experiments scripts faster rcnn end2end sh  DEVICE  DEVICE ID VGG16 pascal voc        DEVICE is either cpu gpu      The result of testing on PASCAL VOC 2007     Classes         AP                                  aeroplane     0 698     bicycle       0 788     bird          0 657     boat          0 565     bottle        0 478     bus           0 762     car           0 797     cat           0 793     chair         0 479     cow           0 724     diningtable   0 648     dog           0 803     horse         0 797     motorbike     0 732     person        0 770     pottedplant   0 384     sheep         0 664     sofa          0 650     train         0 766     tvmonitor     0 666     mAP          0 681        References  Faster R CNN caffe version  https   github com rbgirshick py faster rcnn    A tensorflow implementation of SubCNN  working progress   https   github com yuxng SubCNN TF                       nsync cv h  No such file or directory          Library Frameworks Python framework Versions 2 7 lib python2 7 site packages tensorflow include tensorflow core platform default mutex h 25 10  fatal error                 nsync cv h  file not found          include  nsync cv h                                1   github   make sh           change  ROOT tool make sh to fit tenssorflow 1 6         https   github com smallcorgi Faster RCNN TF issues 284         2     mutex h                vi  Library Frameworks Python framework Versions 2 7 lib python2 7 site packages tensorflow include tensorflow core platform default mutex h          include   Library Frameworks Python framework Versions 2 7 lib python2 7 site packages tensorflow include external nsync public nsync cv h           include   Library Frameworks Python framework Versions 2 7 lib python2 7 site packages tensorflow include external nsync public nsync mu h ","software":"md","book":"DeepLearningT","full_link":"https://github.com/DeepLearningT/TargetDetection_Faster-RCNN_TF"},{"name":"dinhtuyen/faster_rcnn_matlab","artist":"time, train, rcnn, net, vgg","id":989,"playcount":9188,"description":"dinhtuyen/faster_rcnn_matlab time, train, rcnn, net, vgg    Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun at Microsoft Research      Introduction    Faster   R CNN is an object detection framework based on deep convolutional networks  which includes a Region Proposal Network  RPN  and an Object Detection Network  Both networks are trained for sharing convolutional layers for fast testing    Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497    This repo contains a MATLAB re implementation of Fast R CNN  Details about Fast R CNN are in   rbgirshick fast rcnn  https   github com rbgirshick fast rcnn    This code has been tested on Windows 7 8 64 bit  Windows Server 2012 R2  and Linux  and on MATLAB 2014a   Python version is available at  py faster rcnn  https   github com rbgirshick py faster rcnn        License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        article ren15fasterrcnn          Author    Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun           Title     Faster R CNN   Towards Real Time Object Detection with Region Proposal Networks           Journal    arXiv preprint arXiv 1506 01497           Year    2015             Main Results                             training data                            test data              mAP     time img                                                                                                            Faster RCNN  VGG 16         VOC 2007 trainval                        VOC 2007 test          69 9    198ms Faster RCNN  VGG 16         VOC 2007 trainval   2012 trainval        VOC 2007 test          73 2    198ms Faster RCNN  VGG 16         VOC 2012 trainval                        VOC 2012 test          67 0    198ms Faster RCNN  VGG 16         VOC 2007 trainval test   2012 trainval   VOC 2012 test          70 4    198ms    Note    The mAP results are subject to random variations  We have run 5 times independently for ZF net  and the mAPs are 59 9  as in the paper   60 4  59 5  60 1  and 59 5  with a mean of 59 88 and std 0 39        Contents 0   Requirements  software   requirements software  0   Requirements  hardware   requirements hardware  0   Preparation for Testing   preparation for testing  0   Testing Demo   testing demo  0   Preparation for Training   preparation for training  0   Training   training  0   Resources   resources        Requirements  software  0   Caffe  build for Faster R CNN  included in this repository  see  external caffe         If you are using Windows  you may download a compiled mex file by running  fetch data fetch caffe mex windows vs2013 cuda65 m        If you are using Linux or you want to compile for Windows  please follow the  instructions  https   github com ShaoqingRen caffe tree faster R CNN  on our Caffe branch  0  MATLAB            Requirements  hardware  GPU  Titan  Titan Black  Titan X  K20  K40  K80   0  Region Proposal Network  RPN        2GB GPU memory for ZF net       5GB GPU memory for VGG 16 net 0  Object Detection Network  Fast R CNN        3GB GPU memory for ZF net       8GB GPU memory for VGG 16 net       Preparation for Testing  0  Run  fetch data fetch caffe mex windows vs2013 cuda65 m  to download a compiled Caffe mex  for Windows only   0  Run  faster rcnn build m  0  Run  startup m        Testing Demo  0  Run  fetch data fetch faster rcnn final model m  to download our trained models  0  Run  experiments script faster rcnn demo m  to test a single demo image        You will see the timing information as below  We get the following running time on K40   875 MHz and Intel Xeon CPU E5 2650 v2   2 60GHz for the demo images with VGG 16      Shell  001763 jpg  500x375   time 0 201s  resize conv proposal  0 150s  nms regionwise  0 052s   004545 jpg  500x375   time 0 201s  resize conv proposal  0 151s  nms regionwise  0 050s   000542 jpg  500x375   time 0 192s  resize conv proposal  0 151s  nms regionwise  0 041s   000456 jpg  500x375   time 0 202s  resize conv proposal  0 152s  nms regionwise  0 050s   001150 jpg  500x375   time 0 194s  resize conv proposal  0 151s  nms regionwise  0 043s   mean time  0 198s       and with ZF net      Shell  001763 jpg  500x375   time 0 061s  resize conv proposal  0 032s  nms regionwise  0 029s   004545 jpg  500x375   time 0 063s  resize conv proposal  0 034s  nms regionwise  0 029s   000542 jpg  500x375   time 0 052s  resize conv proposal  0 034s  nms regionwise  0 018s   000456 jpg  500x375   time 0 062s  resize conv proposal  0 034s  nms regionwise  0 028s   001150 jpg  500x375   time 0 058s  resize conv proposal  0 034s  nms regionwise  0 023s   mean time  0 059s            The visual results might be different from those in the paper due to numerical variations         Running time on other GPUs                 GPU   mean time                 VGG 16                 ZF                                                                                         K40                      198ms                 59ms              Titan Black                   174ms                 56ms          Titan X                    151ms                 59ms      Preparation for Training  0  Run  fetch data fetch model ZF m  to download an ImageNet pre trained ZF net  0  Run  fetch data fetch model VGG16 m  to download an ImageNet pre trained VGG 16 net  0  Download VOC 2007 and 2012 data to   datasets       Training  0  Run  experiments script faster rcnn VOC2007 ZF m  to train a model with ZF net  It runs four steps as follows        Train RPN with conv layers tuned  compute RPN results on the train test sets        Train Fast R CNN with conv layers tuned using step 1 RPN proposals  evaluate detection mAP        Train RPN with conv layers fixed  compute RPN results on the train test sets         Train Fast R CNN with conv layers fixed using step 3 RPN proposals  evaluate detection mAP          Note    the entire training time is  12 hours on K40  0  Run  experiments script faster rcnn VOC2007 VGG16 m  to train a model with VGG net          Note    the entire training time is  2 days on K40  0  Check other scripts in    experiments  for more settings       Resources    Note    This documentation may contain links to third party websites  which are provided for your convenience only  Such third party websites are not under Microsoft s control  Microsoft does not endorse or make any representation  guarantee or assurance regarding any third party website  content  service or product  Third party websites may be subject to the third party s terms  conditions  and privacy statements   0  Experiment logs   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 110 authkey  ACpgYZR2MmfklwI ithint file 2czip    DropBox  https   www dropbox com s wu841r7zmebjp6r faster rcnn logs zip dl 0    BaiduYun  http   pan baidu com s 1ntJ3dLv  0  Regions proposals of our trained RPN        ZF net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 115 authkey  AJJMrFJHKLXIg5c ithint file 2czip    BaiduYun  http   pan baidu com s 1pKGBDyz        ZF net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 117 authkey  AJiy5F6Cum1iosI ithint file 2czip    BaiduYun  http   pan baidu com s 1jGAgkZW        VGG net trained on VOC 07 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 116 authkey  AH4Zi KAaun7MhQ ithint file 2czip    BaiduYun  http   pan baidu com s 1qWHv4JU        VGG net trained on VOC 07 12 trainval  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 118 authkey  AB lKk3dbGyr1 I ithint file 2czip    BaiduYun  http   pan baidu com s 1c0fQpqg          Note    the proposals are in the format of  left  top  right  bottom  confidence   If the automatic  fetch data  fails  you may manually download resouces from   0  Pre complied caffe mex        Windows based mex complied with VS2013 and Cuda6 5   OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 111 authkey  AFVWFGTbViiX5tg ithint file 2czip    DropBox  https   www dropbox com s m6sg347tiaqpcwy caffe mex zip dl 0    BaiduYun  http   pan baidu com s 1i3m0i0H  0  ImageNet pretrained networks        Zeiler   Fergus  ZF  net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 113 authkey  AIzdm0sD SmhUQ4 ithint file 2czip    DropBox  https   www dropbox com s sw58b2froihzwyf model ZF zip dl 0    BaiduYun  http   pan baidu com s 1o6zipPS        VGG 16 net  OneDrive  https   onedrive live com download resid 36FEC490FBC32F1A 114 authkey  AE8uV9B07dREbhM ithint file 2czip    DropBox  https   www dropbox com s z5rrji25uskha73 model VGG16 zip dl 0    BaiduYun  http   pan baidu com s 1mgzSnI4  0  Final RPN FastRCNN models   OneDrive  https   onedrive live com download resid D7AF52BADBA8A4BC 114 authkey  AERHoxZ iAx j34 ithint file 2czip    DropBox  https   www dropbox com s jswrnkaln47clg2 faster rcnn final model zip dl 0    BaiduYun  http   pan baidu com s 1hsFKmeK    ","software":"md","book":"dinhtuyen","full_link":"https://github.com/dinhtuyen/faster_rcnn_matlab"},{"name":"ataraxialab/RCNN","artist":"rcnn, train, detect, network, faster","id":990,"playcount":13030,"description":"ataraxialab/RCNN rcnn, train, detect, network, faster   Faster R CNN in MXNet with distributed implementation and data parallelization     Why  There exist good implementations of Faster R CNN yet they lack support for recent  ConvNet architectures  The aim of reproducing it from scratch is to fully utilize  MXNet engines and parallelization for object detection     Indicator   py faster rcnn  caffe resp     mx rcnn  this reproduction                                                                                 Speed  1    2 5 img s training  5 img s testing   3 8 img s in training  12 5 img s testing     Performance  2    mAP 73 2                 mAP 75 97                       Efficiency  3     11G for Fast R CNN       4 6G for Fast R CNN             Parallelization   4    None                3 8 img s to 6 img s for 2 GPUs     Extensibility  5    Old framework and base networks   ResNet               1  On Ubuntu 14 04 5 with device Titan X  cuDNN enabled      The experiment is VGG 16 end to end training     2  VGG network  Trained end to end on VOC07trainval 12trainval  tested on VOC07 test     3  VGG network  Fast R CNN is the most memory expensive process     4  VGG network  parallelization limited by bandwidth       ResNet 101 speeds up from 2 img s to 3 5 img s     5  py faster rcnn does not support ResNet or recent caffe version      Why Not    If you value stability and reproducibility over performance and efficiency  please refer to official implementations    There is no promise in all cases nor all experiments    If you value simplicity  Technical details are  very complicated  in MXNet    This is by design to attain maximum possible performance instead of patching fixes after fixes    Performance and parallelization are more than a change of parameter    If you want to do CPU training  be advised that it has not been verified yet    You will not encounter NOT IMPLEMENTED ERROR so it is still possible    If you are on Windows or Python3  some people reported it was possible with some modifications    But they have disappeared      Experiments   Method   Network   Training Data   Testing Data   Reference   Result                                                                              Fast R CNN   VGG16   VOC07   VOC07test   66 9   66 50     Faster R CNN alternate   VGG16   VOC07   VOC07test   69 9   69 62     Faster R CNN end to end   VGG16   VOC07   VOC07test   69 9   70 23     Faster R CNN end to end   VGG16   VOC07 12   VOC07test   73 2   75 97     Faster R CNN end to end   ResNet 101   VOC07 12   VOC07test   76 4   79 35     Faster R CNN end to end   VGG16   COCO train   COCO val   21 2   22 8     Faster R CNN end to end   ResNet 101   COCO train   COCO val   27 2   26 1    All reference results are from original publications  All VOC experiments are conducted in MXNet v0 9 1 nnvm  MXNet v0 8 have similar results  All COCO experiments are conducted in MXNet v0 8      Training with ImageNet samples   add soft link with dataset    bash     ln  s data imagenet  disk2 data ILSVRC2015       add soft link with training scripts    bash     cd data imagenet DET ImageSets DET     ln  s train txt trainXXX txt       runing training scripts    bash     bash script vgg voc07 sh 0 1 2 3     ss    I m Feeling Lucky   Prepare   bash script additional deps sh    Download training data   bash script get voc sh    Download pretrained model   bash script get pretrained model sh    Training and testing   bash script vgg voc07 sh 0 1   use gpu 0 and 1      Getting started See if  bash script additional deps sh  will do the following for you    Suppose  HOME  represents where this file is located  All commands  unless stated otherwise  should be started from  HOME     Executing scripts in  script  must also be from  HOME     Install python package  cython easydict matplotlib scikit image     Install MXNet Python Interface  Open  python  type  import mxnet  to confirm    Run  make  in  HOME    Command line arguments have the same meaning as in mxnet example image classification     prefix  refers to the first part of a saved model file name and  epoch  refers to a number in this file name    In  model vgg 0000 params    prefix  is   model vgg   and  epoch  is  0      begin epoch  means the start of your training process  which will apply to all saved checkpoints    Remember to turn off cudnn auto tune   export MXNET CUDNN AUTOTUNE DEFAULT 0       Demo  Pascal VOC    An example of trained model  trained on VOC07 trainval  can be accessed from      Baidu Yun  http   pan baidu com s 1boRhGvH   ixiw  or     Dropbox  https   www dropbox com s jrr83q0ai2ckltq final 0000 params tar gz dl 0     If you put the extracted model  final 0000 params  in  HOME  then use    prefix final   epoch 0  to access it     Try out detection result by running  python demo py   prefix final   epoch 0   image myimage jpg   gpu 0   vis     Drop the    vis  if you do not have a display or want to save as a new file      Training Faster R CNN The following tutorial is based on VOC data  VGG network  Supply    network resnet  and     dataset coco  to use other networks and datasets  Refer to  script vgg voc07 sh  and other experiments for examples       Prepare Training Data See  bash script get voc sh  and  bash script get coco sh  will do the following for you    Make a folder  data  in  HOME    data  folder will be used to place the training data folder  VOCdevkit  and  coco      Download and extract  Pascal VOC data  http   host robots ox ac uk pascal VOC    place the  VOCdevkit  folder in  HOME data     Download and extract  coco dataset  http   mscoco org dataset    place all images to  coco images  and annotation jsons to  data annotations     Skip this if not interested  All dataset have three attributes   image set    root path  and  dataset path        image set  could be  2007 trainval  or something like  2007trainval 2012trainval        root path  is usually  data   where  cache    selective search data    rpn data  will be stored       dataset path  could be something like  data VOCdevkit   where images  annotations and results can be put so that many copies of datasets can be linked to the same actual place           Prepare Pretrained Models See if  bash script get pretrained model sh  will do this for you  If not    Make a folder  model  in  HOME    model  folder will be used to place model checkpoints along the training process     Download VGG16 pretrained model  vgg16 0000 params  from  MXNet model gallery  https   github com dmlc mxnet model gallery blob master imagenet 1k vgg md  to  model  folder    Download ResNet pretrained model  resnet 101 0000 params  from  ResNet  https   github com tornadomeet ResNet  to  model  folder       Alternate Training See if  bash script vgg alter voc07 sh 0   use gpu 0  will do the following for you    Start training by running  python train alternate py   This will train the VGG network on the VOC07 trainval    More control of training process can be found in the argparse help    Start testing by running  python test py   prefix model final   epoch 0  after completing the training process    This will test the VGG network on the VOC07 test with the model in  HOME model final 0000 params     Adding a    vis  will turn on visualization and   h  will show help as in the training process       End to end Training  approximate process  See if  bash script vgg voc07 sh 0   use gpu 0  will do the following for you    Start training by running  python train end2end py   This will train the VGG network on VOC07 trainval    Start testing by running  python test py   This will test the VGG network on the VOC07 test      Training Fast R CNN  legacy from the initial version  See if  bash script get selective sh  and  bash script vgg fast rcnn sh 0   use gpu 0  will do the following for you    To reproduce Fast R CNN   scipy  is used to load selective search proposals    Download  precomputed selective search data  https   github com rbgirshick fast rcnn tree master data  and place them to  data  folder     script get selective search sh  will do this    Start training by running  python  m rcnn tools train rcnn   proposal selective search  to use the selective search proposal    Start testing by running  python  m rcnn tools test rcnn   proposal selective search      script vgg fast rcnn sh  will train Fast R CNN on VOC07 and test on VOC07test      What is Faster R CNN  anyway  Region Proposal Network solves object detection as a regression problem  from the objectness perspective  Bounding boxes are predicted by applying  learned bounding box deltas to base boxes  namely anchor boxes across  different positions in feature maps  Training process directly learns a  mapping from raw image intensities to bounding box transformation targets   Fast R CNN treats general object detection as a classification problem and bounding box prediction as a regression problem  Classifying cropped region feature maps and predicting bounding box displacements together yields detection results  Cropping feature maps instead of image input accelerates computation utilizing shared convolution maps  Bounding box displacements are simultaneously learned in the training process   Faster R CNN utilize an alternate optimization training process between RPN  and Fast R CNN  Fast R CNN weights are used to initiate RPN for training  The approximate joint training scheme does not backpropagate rcnn training error to rpn training      Structure This repository provides Faster R CNN as a package named  rcnn        rcnn core   core routines in Faster R CNN training and testing       rcnn cython   cython speedup from py faster rcnn       rcnn dataset   dataset library  Base class is  rcnn dataset imdb IMDB        rcnn io   prepare training data       rcnn processing   data and label processing library       rcnn pycocotools   python api from coco dataset       rcnn symbol   symbol and operator       rcnn tools   training and testing wrapper       rcnn utils   utilities in training and testing  usually overloads mxnet functions      Disclaimer This repository used code from  MXNet  https   github com dmlc mxnet    Fast R CNN  https   github com rbgirshick fast rcnn    Faster R CNN  https   github com rbgirshick py faster rcnn    caffe  https   github com BVLC caffe    tornadomeet mx rcnn  https   github com tornadomeet mx rcnn    MS COCO API  https   github com pdollar coco     Training data are from  Pascal VOC  http   host robots ox ac uk pascal VOC     ImageNet  http   image net org     COCO  http   mscoco org      Model comes from  VGG16  http   www robots ox ac uk  vgg research very deep     ResNet  https   github com tornadomeet ResNet     Thanks to tornadomeet for end to end experiments and MXNet contributers for helpful discussions   History of this implementation is    Fast R CNN  v1    Faster R CNN  v2    Faster R CNN with module training  v3    Faster R CNN with end to end training  v3 5  tornadomeet mx rcnn    Faster R CNN with end to end training and module testing  v4    Faster R CNN with accelerated training and resnet  v5     mxnet example rcnn was v1  v2 and v3 5      References 1  Tianqi Chen  Mu Li  Yutian Li  Min Lin  Naiyan Wang  Minjie Wang  Tianjun Xiao  Bing Xu  Chiyuan Zhang  and Zheng Zhang  MXNet  A Flexible and Efficient Machine Learning Library for Heterogeneous Distributed Systems  In Neural Information Processing Systems  Workshop on Machine Learning Systems  2015 2  Ross Girshick   Fast R CNN   In Proceedings of the IEEE International Conference on Computer Vision  2015  3  Shaoqing Ren  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In IEEE Transactions on Pattern Analysis and Machine Intelligence  2016  4  Yangqing Jia  Evan Shelhamer  Jeff Donahue  Sergey Karayev  Jonathan Long  Ross Girshick  Sergio Guadarrama  and Trevor Darrell   Caffe  Convolutional architecture for fast feature embedding   In Proceedings of the ACM International Conference on Multimedia  2014  5  Mark Everingham  Luc Van Gool  Christopher KI Williams  John Winn  and Andrew Zisserman   The pascal visual object classes  voc  challenge   International journal of computer vision 88  no  2  2010   303 338  6  Jia Deng  Wei Dong  Richard Socher  Li Jia Li  Kai Li  and Li Fei Fei   ImageNet  A large scale hierarchical image database   In Computer Vision and Pattern Recognition  IEEE Conference on  2009  7  Karen Simonyan  and Andrew Zisserman   Very deep convolutional networks for large scale image recognition   arXiv preprint arXiv 1409 1556  2014   8  Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun   Deep Residual Learning for Image Recognition   In Computer Vision and Pattern Recognition  IEEE Conference on  2016  9  Tsung Yi Lin  Michael Maire  Serge Belongie  James Hays  Pietro Perona  Deva Ramanan  Piotr Doll r  and C  Lawrence Zitnick   Microsoft COCO  Common Objects in Context  In European Conference on Computer Vision  pp  740 755  Springer International Publishing  2014  ","software":"md","book":"ataraxialab","full_link":"https://github.com/ataraxialab/RCNN"},{"name":"JudyMRSD/PY_Faster_RCNN","artist":"train, rcnn, faster, shell, network","id":991,"playcount":8855,"description":"JudyMRSD/PY_Faster_RCNN train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"JudyMRSD","full_link":"https://github.com/JudyMRSD/PY_Faster_RCNN"},{"name":"VisionLearningGroup/R-C3D","artist":"model, imag, train, caff, download","id":992,"playcount":4606,"description":"VisionLearningGroup/R-C3D model, imag, train, caff, download   R C3D  Region Convolutional 3D Network for Temporal Activity Detection  By Huijuan Xu  Abir Das and Kate Saenko  Boston University        Introduction  We propose a fast end to end Region Convolutional 3D Network  R C3D  for activity detection in continuous video streams  The network encodes the frames with fully convolutional 3D filters  proposes activity segments  then classifies and refines them based on pooled features within their boundaries       License  R C3D is released under the MIT License  refer to the LICENSE file for details        Citing R C3D  If you find R C3D useful in your research  please consider citing        inproceedings Xu2017iccv          title    R C3D  Region Convolutional 3D Network for Temporal Activity Detection           author    Huijuan Xu and Abir Das and Kate Saenko           booktitle    Proceedings of the International Conference on Computer Vision  ICCV            year    2017         We build this repo based on Fater R CNN  C3D and ActivityNet dataset  Please cite the following papers as well   Ren  Shaoqing  Kaiming He  Ross Girshick  and Jian Sun   Faster R CNN  Towards real time object detection with region proposal networks   In Advances in neural information processing systems  pp  91 99  2015   Tran  Du  Lubomir Bourdev  Rob Fergus  Lorenzo Torresani  and Manohar Paluri   Learning spatiotemporal features with 3d convolutional networks   In Proceedings of the IEEE international conference on computer vision  pp  4489 4497  2015    Caba Heilbron  Fabian  Victor Escorcia  Bernard Ghanem  and Juan Carlos Niebles   Activitynet  A large scale video benchmark for human activity understanding   In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition  pp  961 970  2015       Contents 1   Installation   installation  2   Preparation   preparation  3   Training   training  4   Testing   testing       Installation   1  Clone the R C3D repository        Shell    git clone   recursive git github com VisionLearningGroup R C3D git           2  Build  Caffe3d  with  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe must be built with Python support         Shell  cd   caffe3d      If have all of the requirements installed and your Makefile config in place  then simply do   make  j8    make pycaffe       3  Build R C3D lib folder       Shell  cd   lib      make           Preparation   1  Download the ground truth annatations and videos in ActivityNet dataset       Shell  cd   preprocess activityNet       Download the groud truth annotations in ActivityNet dataset   wget http   ec2 52 11 11 89 us west 2 compute amazonaws com files activity net v1 3 min json      Download the videos in ActivityNet dataset into   preprocess activityNet videos   python download video py       2  Extract frames from downloaded videos in 25 fps       Shell    training video frames are saved in   preprocess activityNet frames training     validation video frames are saved in   preprocess activityNet frames validation    python generate frames py       3  Generate the pickle data for training and testing R C3D model       Shell      generate training data  python generate roidb training py      generate validation data  python generate roidb validation py             Training    1  Download C3D classification pretrain model to   pretrain        The C3D model weight pretrained on Sports1M and finetuned on ActivityNet dataset is provided in   caffemodel    https   drive google com file d 131Cpuq1FndydeHzu38TY0baiS uyN71w view   2  In R C3D root folder  run      Shell    experiments activitynet script train sh             Testing   1  Download one sample R C3D model to   snapshot        One R C3D model on ActivityNet dataset is provided in   caffemodel    https   drive google com file d 1wkDwwdqEt6S0xduR4PWalGZaXpxjsX j view      The provided R C3D model has the Average mAP 14 4  on the validation set          2  In R C3D root folder  generate the prediction log file on the validation set      Shell    experiments activitynet test script test sh          3  Generate the results json file from the prediction log file      Shell  cd   experiments activitynet test  python activitynet log analysis py test log  iters  txt           4  Get the detection evaluation result      Shell  cd   experiments activitynet test Evaluation  python get detection performance py data activity net v1 3 min json    results json              Notes       The codes for THUMOS 14 dataset and Charades dataset are uploaded to the corresponding folders    ","software":"md","book":"VisionLearningGroup","full_link":"https://github.com/VisionLearningGroup/R-C3D"},{"name":"xiaolonw/py-faster-rcnn-grasp","artist":"train, rcnn, faster, shell, network","id":993,"playcount":8855,"description":"xiaolonw/py-faster-rcnn-grasp train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"xiaolonw","full_link":"https://github.com/xiaolonw/py-faster-rcnn-grasp"},{"name":"facebookresearch/multipathnet","artist":"model, imag, train, caff, download","id":994,"playcount":9220,"description":"facebookresearch/multipathnet model, imag, train, caff, download MultiPath Network training code             The code provides functionality to train Fast R CNN and MultiPath Networks in  Torch 7  http   torch ch   br  Corresponding paper    A MultiPath Network for Object Detection   http   arxiv org abs 1604 02135    sheep  https   cloud githubusercontent com assets 4953728 17826153 442d027a 666e 11e6 9a1e 2fac95a2d3ba jpg   If you use MultiPathNet in your research  please cite the relevant papers        INPROCEEDINGS Zagoruyko2016Multipath      author    S  Zagoruyko and A  Lerer and T  Y  Lin and P  O  Pinheiro and S  Gross and S  Chintala and P  Doll    a  r       title    A MultiPath Network for Object Detection       booktitle    BMVC      year    2016            Requirements    Linux   NVIDIA GPU with compute capability 3 5      Installation  The code depends on Torch 7  fb python and several other easy to install torch packages  br  To install Torch  follow http   torch ch docs getting started html br  Then install additional packages      bash luarocks install inn luarocks install torchnet luarocks install fbpython luarocks install class      Evaluation relies on COCO API calls via python interface  because lua interface doesn t support it  Lua API is used to load annotation files in   json to COCO API data structures  This doesn t work for proposal files as they re too big  so we provide converted proposals for sharpmask and selective search in torch format   First  clone https   github com pdollar coco       git clone https   github com pdollar coco      Then install LuaAPI       cd coco luarocks make LuaAPI rocks coco scm 1 rockspec      And PythonAPI       cd coco PythonAPI make      You might need to install Cython for this       sudo apt get install python pip sudo pip install Cython      You will have to add the path to PythonAPI to  PYTHONPATH   Note that this won t work with anaconda as it ships with it s own libraries which conflict with torch       EC2 installation script  Thanks to  DeegC there is  scripts ec2 install sh  scripts ec2 install sh  script for quick EC2 setup      Data preparation  The root folder should have a folder  data  with the following subfolders       models  annotations  proposals        models  folder should contain AlexNet and VGG pretrained imagenet files downloaded from  here   training   ResNets can resident in other places specified by  resnet path  env variable    annotations  should contain   json files downloaded from http   mscoco org external  There are   json annotation files for PASCAL VOC  MSCOCO  ImageNet and other datasets    proposals  should contain   t7 files downloaded from here We provide selective search VOC 2007 and VOC 2012 proposals converted from https   github com rbgirshick fast rcnn and SharpMask proposals for COCO 2015 converted from https   github com facebookresearch deepmask  which can be used to compute proposals for new images as well   Here is an example structure       data     annotations         instances train2014 json         instances val2014 json         pascal test2007 json         pascal train2007 json         pascal train2012 json         pascal val2007 json         pascal val2012 json     models         caffenet fast rcnn iter 40000 t7         imagenet pretrained alexnet t7         imagenet pretrained vgg t7         vgg16 fast rcnn iter 40000 t7     proposals         VOC2007             selective search                 test t7                 train t7                 trainval t7                 val t7         coco             sharpmask                 train t7                 val t7      Download selective search proposals for VOC2007      bash wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search train t7 wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search val t7 wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search trainval t7 wget https   s3 amazonaws com multipathnet proposals VOC2007 selective search test t7      Download sharpmask proposals for COCO      bash wget https   s3 amazonaws com multipathnet proposals coco sharpmask train t7 wget https   s3 amazonaws com multipathnet proposals coco sharpmask val t7      As for the images themselves  provide paths to VOCDevkit and COCO in  config lua  config lua      Running DeepMask with MultiPathNet on provided image  We provide an example of how to extract DeepMask or SharpMask proposals from an image and run recognition MultiPathNet to classify them  then do non maximum suppression and draw the found objects   1  Clone DeepMask project into the root directory        bash   git clone https   github com facebookresearch deepmask        2  Download DeepMask or SharpMask network        bash   cd data models     download SharpMask based on ResNet 50   wget https   s3 amazonaws com deepmask models sharpmask model t7  O sharpmask t7        3  Download recognition network        bash   cd data models     download ResNet 18 based model trained on COCO with integral loss   wget https   s3 amazonaws com multipathnet models resnet18 integral coco t7        4  Make sure you have COCO validation  json files in  data annotations instances val2014 json   5  Pick some image and run the script        bash   th demo lua  img   deepmask data testImage jpg        And you should see this image     iterm2 4jpuod lua khbaaq  https   cloud githubusercontent com assets 4953728 17951035 69d6cb2e 6a5f 11e6 83b8 767c2ae0ae64 png   See file  demo lua  demo lua  for details      Training  The repository supports training Fast RCNN and MultiPath networks with data and model multi GPU paralellism  Supported base models are the following     AlexNet trained in  caffe  https   github com bvlc caffe  by Ross Girshick   imagenet pretrained alexnet t7  https   s3 amazonaws com multipathnet models imagenet pretrained alexnet t7    VGG trained in  caffe  https   github com bvlc caffe  by Ross Girshick   imagenet pretrained vgg t7  https   s3 amazonaws com multipathnet models imagenet pretrained vgg t7    ResNets trained in torch with  fb resnet torch  https   github com facebook fb resnet torch  by Sam Gross   inception v3 trained in  tensorflow  https   github com tensorflow tensorflow  by Google   Network In Network trained in torch with  imagenet multiGPU torch  https   github com soumith imagenet multiGPU torch  by Sergey Zagoruyko      PASCAL VOC  To train Fast RCNN on VOC2007 trainval with VGG base model and selective search proposals do      bash test nsamples 1000 model vgg   scripts train fastrcnn voc2007 sh      The resulting mAP is slightly   2 mAP  higher than original Fast RCNN number  We should mention that the code is not exactly the same as we improved ROIPooling by fixing a few bugs  see https   github com szagoruyko imagine nn pull 17      COCO  To train MultiPathNet with VGG 16 base model on 4 GPUs run      bash train nGPU 4 test nGPU 1   scripts train multipathnet coco sh      Here is a graph visualization of the network  click to enlarge     a href  https   s3 amazonaws com multipathnet extra multipathnet pdf    img width  1109  alt  multipathnet  src  https   cloud githubusercontent com assets 4953728 17974712 70baf428 6ae7 11e6 9881 e0dea8ab9c18 png     a   To train ResNet 18 on COCO do      bash train nGPU 4 test nGPU 1 model resnet resnet path   data models resnet resnet 18 t7   scripts train coco sh         Evaluation      PASCAL VOC  We provide original models from Fast RCNN paper converted to torch format here     caffenet fast rcnn iter 40000 t7  https   s3 amazonaws com multipathnet models caffenet fast rcnn iter 40000 t7     vgg16 fast rcnn iter 40000 t7  https   s3 amazonaws com multipathnet models vgg16 fast rcnn iter 40000 t7   To evaluate these models run      bash model data models caffenet fast rcnn iter 40000 t7   scripts eval fastrcnn voc2007 sh model data models vgg fast rcnn iter 40000 t7   scripts eval fastrcnn voc2007 sh          COCO  Evaluate fast ResNet 18 based network trained with integral loss on COCO val5k split   resnet18 integral coco t7  https   s3 amazonaws com multipathnet models resnet18 integral coco t7  89MB       bash test nGPU 4 test nsamples 5000   scripts eval coco sh      It achieves 24 4 mAP using 400 SharpMask proposals per image       Average Precision   AP     IoU 0 50 0 95   area    all   maxDets 100     0 244 Average Precision   AP     IoU 0 50        area    all   maxDets 100     0 402 Average Precision   AP     IoU 0 75        area    all   maxDets 100     0 268 Average Precision   AP     IoU 0 50 0 95   area  small   maxDets 100     0 078 Average Precision   AP     IoU 0 50 0 95   area medium   maxDets 100     0 266 Average Precision   AP     IoU 0 50 0 95   area  large   maxDets 100     0 394 Average Recall      AR     IoU 0 50 0 95   area    all   maxDets   1     0 249 Average Recall      AR     IoU 0 50 0 95   area    all   maxDets  10     0 368 Average Recall      AR     IoU 0 50 0 95   area    all   maxDets 100     0 377 Average Recall      AR     IoU 0 50 0 95   area  small   maxDets 100     0 135 Average Recall      AR     IoU 0 50 0 95   area medium   maxDets 100     0 444 Average Recall      AR     IoU 0 50 0 95   area  large   maxDets 100     0 561     ","software":"md","book":"facebookresearch","full_link":"https://github.com/facebookresearch/multipathnet"},{"name":"b00040611/apply-machine-learning-deep-learning-usingPython","artist":"deep, learn, network, convolut, imag","id":995,"playcount":14433,"description":"b00040611/apply-machine-learning-deep-learning-usingPython deep, learn, network, convolut, imag   Apply Machine Learning and Deep Learning Tools in Our Research  using Python   A list of resources which help researchers to apply Machine Learning and Deep Learning Tools in research  using Python     Maintainers    Luke Liu  https   github com b00040611      Contributing  Welcome your contribution by comments or  Pull requests  https   github com b00040611 apply machine learning deep learning usingPython pulls       Table of Contents    Python   python       Python IDE   python ide       Courses   courses       Python Books   python books       Other Resources   other resources     Machine Learning Using Python   machine learning using python       Machine Learning Courses   machine learning courses       Python Packages for Machine Learning   python packages for machine learning       Practice Your Skills   pratice your skills     Deep Learning   deep learning       DP Books   dp books       Deep Learning Courses   deep learning courses       Frameworks   frameworks       Network Architectures and Examples   network architectures and examples         Convolutional Networks   convolutional networks         Recurrent Neural Networks   recurrent neural networks         Recursive Neural Networks   recursive neural networks         Generative Adversarial Network   generative adversarial network       Datasets   datasets         Image   image         Handwriting   handwriting         Video   video       Model Zoo   model zoo       Research Groups And People   research groups and people       Other Resources of Deep Learning   other resources of deep learning     Using Commercial Cloud Computing Platforms   using commercial cloud computing platforms       ML and DL APIs   ml and dl apis       Deeplearning using cloud   deeplearning using cloud      Python      Python IDE     Anaconda  https   www continuum io downloads   The open source version of Anaconda is a high performance distribution of Python and R and includes over 100 of the most popular Python  R and Scala packages for data science       Courses     Programming for Everybody  https   www coursera org learn python    Open course in Coursera from University of Michigan       Python Books     Python Cookbook  https   learko github io books coding Python Cookbook 3rd Edition pdf    Advanced use of python       Other Resources     A list of awesome Python frameworks  libraries and software  https   github com uhub awesome python     Another list of awesome Python frameworks  libraries and software  https   github com vinta awesome python distribution     List of Python API Wrappers  https   github com realpython list of python api wrappers     List of resources about Python in Education  https   github com quobit awesome python in education     Some frameworks including Django and Flask  https   github com adrianmoisey learn python      Machine Learning Using Python      Machine Learning Courses     Machine Learning  https   www coursera org learn machine learning    Introduction to machine learning  datamining  and statistical pattern recognition  by Andrew Ng  Standford University      Tutorials  Data analysis using Python  https   pythonprogramming net data analysis tutorials     Tutorial with code samples       Python Packages for Machine Learning     scikit learn  http   scikit learn org stable     Simple and efficient tools for data mining and data analysis     pandas  http   pandas pydata org     Python Data Analysis Library     Numpy  http   www numpy org     Fundamental package for scientific computing with Python     SciPy  https   www scipy org     user friendly and efficient numerical routines such as routines for numerical integration and optimization     matplotlib  https   matplotlib org     Matplotlib is a Python 2D plotting library which produces publication quality figures in a variety of hardcopy formats and interactive environments across platforms     list of other python libraries for machine learning  https   github com josephmisiti awesome machine learning python       Practice Your Skills     Pratice your skills and learn from others on kaggle  https   www kaggle com       Deep Learning      DP Books       Deep Learning  http   www deeplearningbook org   by Ian Goodfellow  Yoshua Bengio  and Aaron Courville       Deep Learning Courses      University of Toronto   Neural Networks for Machine Learning  https   www coursera org learn neural networks    by   Geoffrey Hinton  Professor      Stanford   CS231n  Convolutional Neural Networks for Visual Recognition  http   cs231n stanford edu     by Fei Fei Li  Andrej Karpathy      Stanford   CS224d  Deep Learning for Natural Language Processing  http   cs224d stanford edu        Andrew Ng   Deep Learning Specialization on Coursera  https   www coursera org specializations deep learning       Frameworks   Keras  The Python Deep Learning library on top of either TensorFlow  CNTK or Theano    Web  https   keras io      Tensorflow  Google   An open source software library for numerical computation using data flow graph by Google   Web  https   www tensorflow org      Torch7  NYU Facebook   Deep learning library in Lua  used by Facebook and Google Deepmind   Web  http   torch ch        Torch based deep learning libraries    torchnet  https   github com torchnet torchnet        Pytorch  Facebook   Tensors and Dynamic neural networks in Python with strong GPU acceleration   Web  http   pytorch org      Caffe  UC Berkeley   Deep learning framework by the BVLC   Web  http   caffe berkeleyvision org       Caffe2  Facebook   A New Lightweight  Modular  and Scalable Deep Learning Framework  Web  https   caffe2 ai      Theano  U Montreal   Mathematical library in Python  maintained by LISA lab   Web  http   deeplearning net software theano        Theano based deep learning libraries    Pylearn2  http   deeplearning net software pylearn2       Blocks  https   github com mila udem blocks      Keras  http   keras io       Lasagne  https   github com Lasagne Lasagne     CNTK  Microsoft   A unified deep learning toolkit by Microsoft   Web  https   docs microsoft com en us cognitive toolkit      MXNet  Amazon   Developed by U Washington  CMU  MIT  Hong Kong U  etc but main framework of choice at AWS   Web  https   github com dmlc mxnet         Network Architectures and Examples       Convolutional Networks   CNNs are a specialized kind of neural network for processing datathat has a known  grid like topology  Examples include time series data  which canbe thought of as a 1D grid taking samples at regular time intervals  and image data which can be thought of as a 2D grid of pixels  The name  convolutional neuralnetwork  indicates that the network employs a mathematical operation called convolution  Convolution is a specialized kind of linear operation  Convolutionalnetworks are simply neural networks that use convolution in place of general matrix multiplication in at least one of their layers  Typical applications  Image Classification  Image Segmentation Object Detection  Region CNN      AlexNet   Paper   http   papers nips cc book advances in neural information processing systems 25 2012      Alex Krizhevsky  Ilya Sutskever  Geoffrey E  Hinton  ImageNet Classification with Deep Convolutional Neural Networks  NIPS  2012    VGG Net   Web   http   www robots ox ac uk  vgg research very deep     Paper   http   arxiv org pdf 1409 1556      Karen Simonyan and Andrew Zisserman  Very Deep Convolutional Networks for Large Scale Visual Recognition  ICLR  2015    GoogLeNet   Paper   http   arxiv org pdf 1409 4842      Christian Szegedy  Wei Liu  Yangqing Jia  Pierre Sermanet  Scott Reed  Dragomir Anguelov  Dumitru Erhan  Vincent Vanhoucke  Andrew Rabinovich  CVPR  2015    Microsoft ResNet  Deep Residual Learning    Paper  http   arxiv org pdf 1512 03385v1 pdf    Slide  http   image net org challenges talks ilsvrc2015 deep residual learning kaiminghe pdf       Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  Deep Residual Learning for Image Recognition  arXiv 1512 03385    R CNN  UC Berkeley   Paper CVPR14   http   www cv foundation org openaccess content cvpr 2014 papers Girshick Rich Feature Hierarchies 2014 CVPR paper pdf    Paper arXiv14   http   arxiv org pdf 1311 2524    Fast R CNN  Microsoft Research   Paper   http   arxiv org pdf 1504 08083      Ross Girshick  Fast R CNN  arXiv 1504 08083    Faster R CNN  Microsoft Research   Paper   http   arxiv org pdf 1506 01497      Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Faster R CNN  Towards Real Time Object Detection with Region Proposal Networks  arXiv 1506 01497    Inside Outside Net   Paper   http   arxiv org abs 1512 04143      Sean Bell  C  Lawrence Zitnick  Kavita Bala  Ross Girshick  Inside Outside Net  Detecting Objects in Context with Skip Pooling and Recurrent Neural Networks   Deep Residual Network  Current State of the Art    Paper   http   arxiv org abs 1512 03385      Kaiming He  Xiangyu Zhang  Shaoqing Ren  Jian Sun  Deep Residual Learning for Image Recognition   R FCN   Paper   https   arxiv org abs 1605 06409    Code   https   github com daijifeng001 R FCN      Jifeng Dai  Yi Li  Kaiming He  Jian Sun  R FCN  Object Detection via Region based Fully Convolutional Networks       Recurrent Neural Networks   RNNs are a family ofneural networks for processing sequential data  Typical applications  Image Captioning CNN RNN   Natural Language Processing  Common used techniques are LSTM and GRU which are variants of RNN      LSTM  Paper  https   arxiv org pdf 1503 04069 pdf utm content buffereddc5 utm medium social utm source plus google com utm campaign buffer   LSTM  A search space odyssey  2016   K  Greff et al    GRU   Paper  https   arxiv org pdf 1406 1078 pdf   Learning phrase representations using RNN encoder decoder for statistical machine translation  2014   K  Cho et al        Recursive Neural Networks   Recursive neural networks represent yet another generalization of recurrent networks  with a different kind of computational graph  which is structured as a deep tree  rather than the chain like structure of RNNs      RNN  Paper  http   citeseerx ist psu edu viewdoc download doi 10 1 1 383 1327 rep rep1 type pdf  Recursive deep models for semantic compositionality over a sentiment treebank  2013   R  Socher et al        Generative Adversarial Network   Generative adversarial networks  GANs  are a class of artificial intelligence algorithms used in unsupervised machine learning  implemented by a system of two neural networks contesting with each other in a zero sum game framework      GAN    Generative Adversarial Networks  https   arxiv org abs 1406 2661       Datasets       Image    IMAGENET  http   www image net org      CIFAR 10 and CIFAR 100  http   www cs toronto edu  kriz cifar html     AT T Laboratories Cambridge face database  http   www uk research att com facedatabase html     Google House Numbers  http   ufldl stanford edu housenumbers   from street view    Flickr Data  https   yahooresearch tumblr com post 89783581601 one hundred million creative commons flickr images  100 Million Yahoo dataset       Handwriting    MNIST  http   yann lecun com exdb mnist   Handwritten digits       Video    YouTube 8M Dataset  https   research google com youtube8m     YouTube 8M is a large scale labeled video dataset that consists of 8 million YouTube video IDs and associated labels from a diverse vocabulary of 4800 visual entities       Model Zoo   Pretrained Models      Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo     MXNet Model Zoo  http   mxnet io model zoo      Keras Model Zoo  https   keras io applications      Torch Model Zoo  https   github com szagoruyko loadcaffe   Maintains a list of popular models like AlexNet and VGG  Weights ported from Caffe      Research Groups And People    University of Toronto    Machine Learning Group  http   deeplearning cs toronto edu people   Geoffrey Hinton  et al      Universit  de Montr al     MILA Lab  https   mila umontreal ca   Yoshua Bengio  Pascal Vincent  Aaron Courville  Roland Memisevic     New York University    Yann Lecun  http   yann lecun com ex index html   Rob Fergus  David Sontag and Kyunghyun Cho    Stanford University    Andrew Ng  http   www robotics stanford edu  ang group html   Christopher Manning s   Fei fei Li s  http   vision stanford edu feifeili   group    University of Oxford    Deep learning group  http   www cs ox ac uk people phil blunsom     Nando de Freitas and Phil Blunsom  Andrew Zisserman     Google Research  http   research google com    Jeff Dean  Geoffrey Hinton  Samy Bengio  Ilya Sutskever  Ian Goodfellow  Oriol Vinyals et al      Google DeepMind  http   deepmind com     Alex Graves  Karol Gregor  Koray Kavukcuoglu  Andriy Mnih  Guillaume Desjardins  et al      Facebook AI Research FAIR   https   research fb com category facebook ai research fair     Yann Lecun  Rob Fergus  Jason Weston  Antoine Bordes  Yann Dauphin et al      Microsoft Research  https   www microsoft com en us research group deep learning group     Li Deng et al      Other Resources of Deep Learning     Awesome Deep Learning  https   github com ChristosChristofidis awesome deep learning     Practical Deep Learning resources For Coders    Awesome Deep Vision  https   github com apacha awesome deep vision    A list of deep learning resources for computer vision    Awesome Tensorflow  https   github com jtoy awesome tensorflow     Tensorflow examples  https   github com aymericdamien TensorFlow Examples     Awosome PyTorch  https   github com rickiepark awesome pytorch     A good PyTorch resource list  https   github com ritchieng the incredible pytorch     Awesome adversarial machine learning  https   github com yenchenlin awesome adversarial machine learning     List of Most Cited Deep Learning Papers  https   github com terryum awesome deep learning papers     A list of recent papers and trained models and other resources  https   github com endymecy awesome deeplearning resources      Using Commercial Cloud Computing Platforms      ML and DL APIs     Microsoft Cognitive Services APIs  https   azure microsoft com en gb services cognitive services      Google Could Machine Learning APIs  https   cloud google com products machine learning        Deeplearning using cloud     Data Science Virtual Machine for Linux  Ubuntu   https   azuremarketplace microsoft com en us marketplace apps microsoft ads linux data science vm ubuntu ","software":"md","book":"b00040611","full_link":"https://github.com/b00040611/apply-machine-learning-deep-learning-usingPython"},{"name":"D-X-Y/caffe-reid","artist":"“cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>","id":996,"playcount":3769,"description":"D-X-Y/caffe-reid “cardinality”, “learn, +--, +--, <U+2605><U+2605><U+2605>   A Discriminatively Learned CNN Embedding for Person Re identification  A  caffe  https   github com BVLC caffe  based implementation of  this paper  https   arxiv org abs 1611 05666   providing whole training  testing and evaluation codes   The official code  written in matconvnet  is available  here  https   github com layumi 2016 person re ID      Structure  https   github com D X Y caffe reid blob master figures person re identification struct png      Preparation   download Market 1501 dataset and put Market 1501 in  HOME datasets     cd examples market1501 mat codes  and  matlab  nodisplay  r   generate train    exit     to generate train  test and qurey data lists    Build with NCLL   cuda 8 0   cudnn v5 1     Results on Market 1501   Market 1501  http   liangzheng com cn Project state of the art market1501 html  is one of the most popular person re identification datasets   Models can be found in  models market1501 model name   Many scripts  e g initialization  testing  training  extract feature and evaluation  can be found in  examples market1501     iter size   batch size    real batch size      CaffeNet   Link to the  pre trained CaffeNet model  http   dl caffe berkeleyvision org bvlc reference caffenet caffemodel     python models market1501 generate caffenet py  for generate caffenet based person re ID network and solver files     sh models market1501 caffenet train sh   gpu 0  for training models     sh examples market1501 extract extract prediction sh 0 caffenet fc7  for extracting features of query and test data    cd examples market1501 evaluation   and  evaluation  caffenet    to evaluate performance of the trained model on Market 1501   final results are  1x128    mAP   0 402689  r1 precision   0 639846  Euclidean       GoogleNet   Link to the  pre trained GoogleNet model  http   dl caffe berkeleyvision org bvlc googlenet caffemodel    GoogleNet v1 model is already in  models market1501 googlenet     sh models market1501 googlenet train sh   gpu 0     sh examples market1501 extract extract prediction sh 0 googlenet pool5 7x7 s1     cd examples market1501 evaluation   and  evaluation  googlenet      final results are   mAP   0 511545  r1 precision   0 735154  Cos   Eucl       VGG 16   Link to the  pre trained VGG 16 model  http   www robots ox ac uk  vgg software very deep caffe VGG ILSVRC 16 layers caffemodel     python models market1501 generate vgg16 py  for generate caffenet based person re ID network and solver files     sh models market1501 vgg16 train sh   gpu 2 3  for training    sh examples market1501 extract extract prediction sh 0 vgg16 fc7  for extracting features    cd examples market1501 evaluation   and  evaluation  vgg16    to evaluate performance of vgg16 fc7 on Market 1501   final results are  2x 24    mAP   0 456417  r1 precision   0 677257      resnet 50    python models market1501 generate resnet50 py     sh models market1501 res50 train sh   gpu 2 3     sh examples market1501 extract extract prediction sh 0 res50 pool5    final results are   mAP   0 585765  r1 precision   0 790974  Cos   Eucl      Citation Please cite the following papers in your publications if it helps your research        article zheng2016discriminatively        title  A Discriminatively Learned CNN Embedding for Person Re identification         author  Zheng  Zhedong and Zheng  Liang and Yang  Yi         journal  TOMM         year  2017             article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"D-X-Y","full_link":"https://github.com/D-X-Y/caffe-reid"},{"name":"jsupancic/deep_hand_pose","artist":"caff, learn, model, deep, layer","id":997,"playcount":3968,"description":"jsupancic/deep_hand_pose caff, learn, model, deep, layer   Deep Hand Pose  examples deep hand pose train sh should run my implementation of  1  on the NYU dataset  It can be configured to  use a variety of datasets     1  M  Oberweger  P  Wohlhart  and V  Lepetit  Hands Deep in Deep Learning for Hand Pose Estimation  CVWW  2015   I ve added 3 new layers to caffe  in the src caffe layers directory   HandData which loads a variety of hand image annotation formats   PCA which implements Oberweger s PCA bottleneck initialization   MVRegLoss which adds visualization to the euclidean loss    step by step instructions    Download the NYU HANDS dataset  http   horatio cs nyu edu mit tompson nyu hand dataset v2 zip  into  mnt data NYU Hands v2    Download the deep hand pose code    git clone git github com jsupancic deep hand pose git   deep hand pose    I ve converted the annotations from  mat to  csv for you     cd   deep hand pose     cp nyu csv annotations test   csv  mnt data NYU Hands v2 test     cp nyu csv annotations train   csv  mnt data NYU Hands v2 train     Compile caffe and deep hand pose    cd   deep hand pose       mkdir build      pushd build      cmake          make  j16      popd     create the directory where results will be stored    mkdir out    now run the pre trained model on the NYU dataset      examples deep hand pose train sh        Deep Hand Base License and Citation  The license is the same as caffe from which this is derived  Please see below    If you find this useful  relevant citations would be       article supancic2015depth        title  Depth based hand pose estimation  methods  data  and challenges         author  Supancic III  James Steven and Rogez  Gregory and Yang  Yi and Shotton  Jamie and Ramanan  Deva         journal  arXiv preprint arXiv 1504 06378         year  2015         and       article oberweger2015hands        title  Hands Deep in Deep Learning for Hand Pose Estimation         author  Oberweger  Markus and Wohlhart  Paul and Lepetit  Vincent         journal  arXiv preprint arXiv 1502 06807         year  2015           Caffe  Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Join the chat at https   gitter im BVLC caffe  https   badges gitter im Join 20Chat svg   https   gitter im BVLC caffe utm source badge utm medium badge utm campaign pr badge utm content badge   Please join the  caffe users group  https   groups google com forum   forum caffe users  or  gitter chat  https   gitter im BVLC caffe  to ask questions and talk about methods and models  Framework development discussions and thorough bug reports are collected on  Issues  https   github com BVLC caffe issues    Happy brewing      Caffe License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"jsupancic","full_link":"https://github.com/jsupancic/deep_hand_pose"},{"name":"weinaike/joy_faster_rcnn","artist":"train, rcnn, faster, shell, network","id":998,"playcount":8855,"description":"weinaike/joy_faster_rcnn train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  http   www cs berkeley edu  rbg fast rcnn data Makefile config  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"weinaike","full_link":"https://github.com/weinaike/joy_faster_rcnn"},{"name":"xuqiang/traffic-sign-detection","artist":"train, rcnn, faster, shell, network","id":999,"playcount":8865,"description":"xuqiang/traffic-sign-detection train, rcnn, faster, shell, network     Disclaimer  The official Faster R CNN code  written in MATLAB  is available  here  https   github com ShaoqingRen faster rcnn   If your goal is to reproduce the results in our NIPS 2015 paper  please use the  official code  https   github com ShaoqingRen faster rcnn    This repository contains a Python  reimplementation  of the MATLAB code  This Python implementation is built on a fork of  Fast R CNN  https   github com rbgirshick fast rcnn   There are slight differences between the two implementations  In particular  this Python port    is  10  slower at test time  because some operations execute on the CPU in Python layers  e g   220ms   image vs  200ms   image for VGG16     gives similar  but not exactly the same  mAP as the MATLAB version    is  not compatible  with models trained using the MATLAB code due to the minor implementation differences      includes approximate joint training   that is 1 5x faster than alternating optimization  for VGG16     see these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more information     Faster  R CNN  Towards Real Time Object Detection with Region Proposal Networks  By Shaoqing Ren  Kaiming He  Ross Girshick  Jian Sun  Microsoft Research   This Python implementation contains contributions from Sean Bell  Cornell  written during an MSR internship   Please see the official  README md  https   github com ShaoqingRen faster rcnn blob master README md  for more details   Faster R CNN was initially described in an  arXiv tech report  http   arxiv org abs 1506 01497  and was subsequently published in NIPS 2015       License  Faster R CNN is released under the MIT License  refer to the LICENSE file for details        Citing Faster R CNN  If you find Faster R CNN useful in your research  please consider citing        inproceedings renNIPS15fasterrcnn          Author    Shaoqing Ren and Kaiming He and Ross Girshick and Jian Sun           Title    Faster  R CNN   Towards Real Time Object Detection                  with Region Proposal Networks           Booktitle    Advances in Neural Information Processing Systems   NIPS             Year    2015             Contents 1   Requirements  software   requirements software  2   Requirements  hardware   requirements hardware  3   Basic installation   installation sufficient for the demo  4   Demo   demo  5   Beyond the demo  training and testing   beyond the demo installation for training and testing models  6   Usage   usage       Requirements  software  1  Requirements for  Caffe  and  pycaffe   see   Caffe installation instructions  http   caffe berkeleyvision org installation html        Note    Caffe  must  be built with support for Python layers        make     In your Makefile config  make sure to have this line uncommented   WITH PYTHON LAYER    1     Unrelatedly  it s also recommended that you use CUDNN   USE CUDNN    1          You can download my  Makefile config  https   dl dropboxusercontent com s 6joa55k64xo2h68 Makefile config dl 0  for reference  2  Python packages you might not have   cython    python opencv    easydict  3   Optional  MATLAB is required for   official   PASCAL VOC evaluation only  The code now includes unofficial Python evaluation code       Requirements  hardware  1  For training smaller networks  ZF  VGG CNN M 1024  a good GPU  e g   Titan  K20  K40       with at least 3G of memory suffices 2  For training Fast R CNN with VGG16  you ll need a K40   11G of memory  3  For training the end to end version of Faster R CNN with VGG16  3G of GPU memory is sufficient  using CUDNN       Installation  sufficient for the demo   1  Clone the Faster R CNN repository      Shell     Make sure to clone with   recursive   git clone   recursive https   github com rbgirshick py faster rcnn git        2  We ll call the directory that you cloned Faster R CNN into  FRCN ROOT       Ignore notes 1 and 2 if you followed step 1 above         Note 1    If you didn t clone Faster R CNN with the    recursive  flag  then you ll need to manually clone the  caffe fast rcnn  submodule         Shell     git submodule update   init   recursive               Note 2    The  caffe fast rcnn  submodule needs to be on the  faster rcnn  branch  or equivalent detached state   This will happen automatically  if you followed step 1 instructions    3  Build the Cython modules        Shell     cd  FRCN ROOT lib     make          4  Build Caffe and pycaffe        Shell     cd  FRCN ROOT caffe fast rcnn       Now follow the Caffe installation instructions here          http   caffe berkeleyvision org installation html        If you re experienced with Caffe and have all of the requirements installed       and your Makefile config in place  then simply do      make  j8    make pycaffe          5  Download pre computed Faster R CNN detectors        Shell     cd  FRCN ROOT       data scripts fetch faster rcnn models sh              This will populate the   FRCN ROOT data  folder with  faster rcnn models   See  data README md  for details      These models were trained on VOC 2007 trainval       Demo   After successfully completing  basic installation   installation sufficient for the demo    you ll be ready to run the demo   To run the demo    Shell cd  FRCN ROOT   tools demo py     The demo performs detection using a VGG16 network trained for detection on PASCAL VOC 2007       Beyond the demo  installation for training and testing models 1  Download the training  validation  test data and VOCdevkit      Shell  wget http   host robots ox ac uk pascal VOC voc2007 VOCtrainval 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCtest 06 Nov 2007 tar  wget http   host robots ox ac uk pascal VOC voc2007 VOCdevkit 08 Jun 2007 tar       2  Extract all of these tars into one directory named  VOCdevkit       Shell  tar xvf VOCtrainval 06 Nov 2007 tar  tar xvf VOCtest 06 Nov 2007 tar  tar xvf VOCdevkit 08 Jun 2007 tar       3  It should have this basic structure      Shell     VOCdevkit                              development kit     VOCdevkit VOCcode                      VOC utility code     VOCdevkit VOC2007                      image sets  annotations  etc           and several other directories             4  Create symlinks for the PASCAL VOC dataset      Shell     cd  FRCN ROOT data     ln  s  VOCdevkit VOCdevkit2007             Using symlinks is a good idea because you will likely want to share the same PASCAL dataset installation between multiple projects  5   Optional  follow similar steps to get PASCAL VOC 2010 and 2012 6   Optional  If you want to use COCO  please see some notes under  data README md  7  Follow the next sections to download pre trained ImageNet models      Download pre trained ImageNet models  Pre trained ImageNet models can be downloaded for the three networks described in the paper  ZF and VGG16      Shell cd  FRCN ROOT   data scripts fetch imagenet models sh     VGG16 comes from the  Caffe Model Zoo  https   github com BVLC caffe wiki Model Zoo   but is provided here for your convenience  ZF was trained at MSRA       Usage  To train and test a Faster R CNN detector using the   alternating optimization   algorithm from our NIPS 2015 paper  use  experiments scripts faster rcnn alt opt sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn alt opt sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701        alt opt  refers to the alternating optimization training algorithm described in the NIPS paper    To train and test a Faster R CNN detector using the   approximate joint training   method  use  experiments scripts faster rcnn end2end sh   Output is written underneath   FRCN ROOT output       Shell cd  FRCN ROOT   experiments scripts faster rcnn end2end sh  GPU ID   NET     set        GPU ID is the GPU you want to train on   NET in  ZF  VGG CNN M 1024  VGG16  is the network arch to use     set     allows you to specify fast rcnn config options  e g        set EXP DIR seed rng1701 RNG SEED 1701      This method trains the RPN module jointly with the Fast R CNN network  rather than alternating between training the two  It results in faster    1 5x speedup  training times and similar detection accuracy  See these  slides  https   www dropbox com s xtr4yd4i5e0vw8g iccv15 tutorial training rbg pdf dl 0  for more details   Artifacts generated by the scripts in  tools  are written in this directory   Trained Fast R CNN networks are saved under       output  experiment directory   dataset name        Test outputs are saved under       output  experiment directory   dataset name   network snapshot name       ","software":"md","book":"xuqiang","full_link":"https://github.com/xuqiang/traffic-sign-detection"},{"name":"Coderx7/Old_Caffe_Windows_Branch","artist":"set, build, windowscommonsettingsprop, caff, cuda","id":1000,"playcount":4239,"description":"Coderx7/Old_Caffe_Windows_Branch set, build, windowscommonsettingsprop, caff, cuda   Caffe     Travis Build Status  https   api travis ci org Microsoft caffe svg branch master   https   travis ci org Microsoft caffe  Travis  Linux build      AppVeyor Build Status  https   ci appveyor com api projects status 58wvckt0rcqtwnr5 branch master svg true    https   ci appveyor com project pavlejosipovic caffe 3a30a  AppVeyor  Windows build      License  https   img shields io badge license BSD blue svg   LICENSE   Caffe is a deep learning framework made with expression  speed  and modularity in mind  It is developed by the Berkeley Vision and Learning Center   BVLC  http   bvlc eecs berkeley edu   and community contributors   Check out the  project site  http   caffe berkeleyvision org  for all the details like     DIY Deep Learning for Vision with Caffe  https   docs google com presentation d 1UeKXVgRvvxg9OUdh UiC5G71UMscNPlvArsWER41PsU edit slide id p     Tutorial Documentation  http   caffe berkeleyvision org tutorial      BVLC reference models  http   caffe berkeleyvision org model zoo html  and the  community model zoo  https   github com BVLC caffe wiki Model Zoo     Installation instructions  http   caffe berkeleyvision org installation html   and step by step examples      Windows Setup   Requirements    Visual Studio 2013      Pre Build Steps Copy    windows CommonSettings props example  to    windows CommonSettings props   By defaults Windows build requires  CUDA  and  cuDNN  libraries  Both can be disabled by adjusting build variables in    windows CommonSettings props   Python support is disabled by default  but can be enabled via    windows CommonSettings props  as well  3rd party dependencies required by Caffe are automatically resolved via NuGet       CUDA Download  CUDA Toolkit 7 5   from nVidia website  https   developer nvidia com cuda toolkit   If you don t have CUDA installed  you can experiment with CPU ONLY build  In    windows CommonSettings props  set  CpuOnlyBuild  to  true  and set  UseCuDNN  to  false        cuDNN Download  cuDNN v3  or  cuDNN v4   from nVidia website  https   developer nvidia com cudnn   Unpack downloaded zip to  CUDA PATH   environment variable set by CUDA installer   Alternatively  you can unpack zip to any location and set  CuDnnPath  to point to this location in    windows CommonSettings props    CuDnnPath  defined in    windows CommonSettings props   Also  you can disable cuDNN by setting  UseCuDNN  to  false  in the property file       Python To build Caffe Python wrapper set  PythonSupport  to  true  in    windows CommonSettings props   Download Miniconda 2 7 64 bit Windows installer  from Miniconda website   http   conda pydata org miniconda html   Install for all users and add Python to PATH  through installer    Run the following commands from elevated command prompt       conda install   yes numpy scipy matplotlib scikit image pip pip install protobuf           Remark After you have built solution with Python support  in order to use it you have to either      set  PythonPath  environment variable to point to   caffe root  Build x64 Release pycaffe   or   copy folder   caffe root  Build x64 Release pycaffe caffe  under   python root  lib site packages        Matlab To build Caffe Matlab wrapper set  MatlabSupport  to  true  and  MatlabDir  to the root of your Matlab installation in    windows CommonSettings props         Remark After you have built solution with Matlab support  in order to use it you have to    add the generated  matcaffe  folder to Matlab search path  and   add   caffe root  Build x64 Release  to your system path       Build Now  you should be able to build    windows Caffe sln      License and Citation  Caffe is released under the  BSD 2 Clause license  https   github com BVLC caffe blob master LICENSE   The BVLC reference models are released for unrestricted use   Please cite Caffe in your publications if it helps your research        article jia2014caffe        Author    Jia  Yangqing and Shelhamer  Evan and Donahue  Jeff and Karayev  Sergey and Long  Jonathan and Girshick  Ross and Guadarrama  Sergio and Darrell  Trevor         Journal    arXiv preprint arXiv 1408 5093         Title    Caffe  Convolutional Architecture for Fast Feature Embedding         Year    2014        ","software":"md","book":"Coderx7","full_link":"https://github.com/Coderx7/Old_Caffe_Windows_Branch"}],"links":[]}