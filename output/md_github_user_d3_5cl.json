{"nodes":[{"name":"d3/d3-dsv","artist":"return, specifi, sourc, array, valu","id":1,"playcount":19834,"description":"d3/d3-dsv return, specifi, sourc, array, valu   d3 dsv  This module provides a parser and formatter for delimiter separated values  most commonly  comma   https   en wikipedia org wiki Comma separated values   CSV  or tab separated values  TSV   These tabular formats are popular with spreadsheet programs such as Microsoft Excel  and are often more space efficient than JSON  This implementation is based on  RFC 4180  http   tools ietf org html rfc4180    Comma  CSV  and tab  TSV  delimiters are built in  For example  to parse      js d3 csvParse  foo bar n1 2         foo   1   bar   2    columns    foo    bar    d3 tsvParse  foo tbar n1 t2         foo   1   bar   2    columns    foo    bar         Or to format      js d3 csvFormat   foo   1   bar   2          foo bar n1 2  d3 tsvFormat   foo   1   bar   2          foo tbar n1 t2       To use a different delimiter  such as     for pipe separated values  use  d3 dsvFormat   dsvFormat       js var psv   d3 dsvFormat        console log psv parse  foo bar n1 2          foo   1   bar   2    columns    foo    bar         For easy loading of DSV files in a browser  see  d3 request  https   github com d3 d3 request  s  d3 csv  https   github com d3 d3 request csv  and  d3 tsv  https   github com d3 d3 request tsv  methods      Installing  If you use NPM   npm install d3 dsv   Otherwise  download the  latest release  https   github com d3 d3 dsv releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 dsv v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 dsv v1 min js    script   script   var data   d3 csvParse string      script        Try d3 dsv in your browser   https   tonicdev com npm d3 dsv      API Reference   a name  csvParse  href   csvParse     a  d3  b csvParse  b   i string  i     i row  i         https   github com d3 d3 dsv blob master src csv js L5  Source    Equivalent to  dsvFormat   dsvFormat        parse   dsv parse     a name  csvParseRows  href   csvParseRows     a  d3  b csvParseRows  b   i string  i     i row  i         https   github com d3 d3 dsv blob master src csv js L6  Source    Equivalent to  dsvFormat   dsvFormat        parseRows   dsv parseRows     a name  csvFormat  href   csvFormat     a  d3  b csvFormat  b   i rows  i     i columns  i         https   github com d3 d3 dsv blob master src csv js L7  Source    Equivalent to  dsvFormat   dsvFormat        format   dsv format     a name  csvFormatRows  href   csvFormatRows     a  d3  b csvFormatRows  b   i rows  i        https   github com d3 d3 dsv blob master src csv js L8  Source    Equivalent to  dsvFormat   dsvFormat        formatRows   dsv formatRows     a name  tsvParse  href   tsvParse     a  d3  b tsvParse  b   i string  i     i row  i         https   github com d3 d3 dsv blob master src tsv js L5  Source    Equivalent to  dsvFormat   dsvFormat    t    parse   dsv parse     a name  tsvParseRows  href   tsvParseRows     a  d3  b tsvParseRows  b   i string  i     i row  i         https   github com d3 d3 dsv blob master src tsv js L6  Source    Equivalent to  dsvFormat   dsvFormat    t    parseRows   dsv parseRows     a name  tsvFormat  href   tsvFormat     a  d3  b tsvFormat  b   i rows  i     i columns  i         https   github com d3 d3 dsv blob master src tsv js L7  Source    Equivalent to  dsvFormat   dsvFormat    t    format   dsv format     a name  tsvFormatRows  href   tsvFormatRows     a  d3  b tsvFormatRows  b   i rows  i        https   github com d3 d3 dsv blob master src tsv js L8  Source    Equivalent to  dsvFormat   dsvFormat    t    formatRows   dsv formatRows     a name  dsvFormat  href   dsvFormat     a  d3  b dsvFormat  b   i delimiter  i        https   github com d3 d3 dsv blob master src dsv js L30   Constructs a new DSV parser and formatter for the specified  delimiter   The  delimiter  must be a single character   i e    a single 16 bit code unit   so  ASCII delimiters are fine  but emoji delimiters are not    a name  dsv parse  href   dsv parse     a   dsv   b parse  b   i string  i     i row  i         https   github com d3 d3 dsv blob master src dsv js L34  Source    Parses the specified  string   which must be in the delimiter separated values format with the appropriate delimiter  returning an array of objects representing the parsed rows   Unlike   dsv  parseRows   dsv parseRows   this method requires that the first line of the DSV content contains a delimiter separated list of column names  these column names become the attributes on the returned objects  For example  consider the following CSV file       Year Make Model Length 1997 Ford E350 2 34 2000 Mercury Cougar 2 38      The resulting JavaScript array is      js       Year    1997    Make    Ford    Model    E350    Length    2 34        Year    2000    Make    Mercury    Model    Cougar    Length    2 38          The returned array also exposes a  columns  property containing the column names in input order  in contrast to Object keys  whose iteration order is arbitrary   For example      js data columns       Year    Make    Model    Length        If a  row  conversion function is not specified  field values are strings  For safety  there is no automatic conversion to numbers  dates  or other types  In some cases  JavaScript may coerce strings to numbers for you automatically  for example  using the     operator   but better is to specify a  row  conversion function   If a  row  conversion function is specified  the specified function is invoked for each row  being passed an object representing the current row   d    the index   i   starting at zero for the first non header row  and the array of column names  If the returned value is null or undefined  the row is skipped and will be ommitted from the array returned by  dsv  parse  otherwise  the returned value defines the corresponding row object  For example      js var data   d3 csvParse string  function d      return       year  new Date  d Year  0  1      lowercase and convert  Year  to Date     make  d Make     lowercase     model  d Model     lowercase     length   d Length    lowercase and convert  Length  to number               Note  using     rather than  parseInt  https   developer mozilla org en JavaScript Reference Global Objects parseInt  or  parseFloat  https   developer mozilla org en JavaScript Reference Global Objects parseFloat  is typically faster  though more restrictive  For example    30px   when coerced using     returns  NaN   while parseInt and parseFloat return  30     a name  dsv parseRows  href   dsv parseRows     a   i dsv  i   b parseRows  b   i string  i     i row  i         https   github com d3 d3 dsv blob master src dsv js L43  Source    Parses the specified  string   which must be in the delimiter separated values format with the appropriate delimiter  returning an array of arrays representing the parsed rows   Unlike   dsv  parse   dsv parse   this method treats the header line as a standard row  and should be used whenever DSV content does not contain a header  Each row is represented as an array rather than an object  Rows may have variable length  For example  consider the following CSV file  which notably lacks a header line       1997 Ford E350 2 34 2000 Mercury Cougar 2 38      The resulting JavaScript array is      js       1997    Ford    E350    2 34        2000    Mercury    Cougar    2 38          If a  row  conversion function is not specified  field values are strings  For safety  there is no automatic conversion to numbers  dates  or other types  In some cases  JavaScript may coerce strings to numbers for you automatically  for example  using the     operator   but better is to specify a  row  conversion function   If a  row  conversion function is specified  the specified function is invoked for each row  being passed an array representing the current row   d    the index   i   starting at zero for the first row  and the array of column names  If the returned value is null or undefined  the row is skipped and will be ommitted from the array returned by  dsv  parse  otherwise  the returned value defines the corresponding row object  For example      js var data   d3 csvParseRows string  function d  i      return       year  new Date  d 0   0  1      convert first colum column to Date     make  d 1       model  d 2       length   d 3     convert fourth column to number               In effect   row  is similar to applying a  map  https   developer mozilla org en JavaScript Reference Global Objects Array map  and  filter  https   developer mozilla org en JavaScript Reference Global Objects Array filter  operator to the returned rows    a name  dsv format  href   dsv format     a   i dsv  i   b format  b   i rows  i     i columns  i         https   github com d3 d3 dsv blob master src dsv js L105  Source    Formats the specified array of object  rows  as delimiter separated values  returning a string  This operation is the inverse of   dsv  parse   dsv parse   Each row will be separated by a newline    n    and each column within each row will be separated by the delimiter  such as a comma        Values that contain either the delimiter  a double quote       or a newline will be escaped using double quotes   If  columns  is not specified  the list of column names that forms the header row is determined by the union of all properties on all objects in  rows   the order of columns is nondeterministic  If  columns  is specified  it is an array of strings representing the column names  For example      js var string   d3 csvFormat data    year    make    model    length          All fields on each row object will be coerced to strings  For more control over which and how fields are formatted  first map  rows  to an array of array of string  and then use   dsv  formatRows   dsv formatRows     a name  dsv formatRows  href   dsv formatRows     a   i dsv  i   b formatRows  b   i rows  i        https   github com d3 d3 dsv blob master src dsv js L114  Source    Formats the specified array of array of string  rows  as delimiter separated values  returning a string  This operation is the reverse of   dsv  parseRows   dsv parseRows   Each row will be separated by a newline    n    and each column within each row will be separated by the delimiter  such as a comma        Values that contain either the delimiter  a double quote     or a newline will be escaped using double quotes   To convert an array of objects to an array of arrays while explicitly specifying the columns  use   array  map  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array map   For example      js var string   d3 csvFormatRows data map function d  i      return       d year getFullYear       Assuming d year is a Date object      d make      d model      d length                If you like  you can also   array  concat  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array concat  this result with an array of column names to generate the first row      js var string   d3 csvFormatRows         year        make        model        length       concat data map function d  i      return       d year getFullYear       Assuming d year is a Date object      d make      d model      d length                     Content Security Policy  If a  content security policy  http   www w3 org TR CSP   is in place  note that   dsv  parse   dsv parse  requires  unsafe eval  in the  script src  directive  due to the  safe  use of dynamic code generation for fast parsing   See  source  https   github com d3 d3 dsv blob master src dsv js    Alternatively  use   dsv  parseRows   dsv parseRows        Byte Order Marks  DSV files sometimes begin with a  byte order mark  BOM   https   en wikipedia org wiki Byte order mark   saving a spreadsheet in CSV UTF 8 format from Microsoft Excel  for example  will include a BOM  On the web this is not usually a problem because the  UTF 8 decode algorithm  https   encoding spec whatwg org  utf 8 decode  specified in the Encoding standard removes the BOM  Node js  on the other hand   does not remove the BOM  https   github com nodejs node v0 x archive issues 1918  when decoding UTF 8   If the BOM is not removed  the first character of the text is a zero width non breaking space  So if a CSV file with a BOM is parsed by  d3 csvParse   csvParse   the first column s name will begin with a zero width non breaking space  This can be hard to spot since this character is usually invisible when printed   To remove the BOM before parsing  consider using  strip bom  https   www npmjs com package strip bom       Command Line Reference      dsv2dsv   a name  dsv2dsv  href   dsv2dsv     a   b dsv2dsv  b    i options   i     i file  i    Converts the specified DSV input  file  to DSV  typically with a different delimiter or encoding   If  file  is not specified  defaults to reading from stdin  For example  to convert to CSV to TSV       csv2tsv   example csv   example tsv      To convert windows 1252 CSV to utf 8 CSV       dsv2dsv   input encoding windows 1252   latin1 csv   utf8 csv       a name  dsv2dsv help  href  dsv2dsv help     a  dsv2dsv  b  h  b   br  a href  dsv2dsv help     a  dsv2dsv  b   help  b   Output usage information    a name  dsv2dsv version  href  dsv2dsv version     a  dsv2dsv  b  V  b   br  a href  dsv2dsv version     a  dsv2dsv  b   version  b   Output the version number    a name  dsv2dsv out  href  dsv2dsv out     a  dsv2dsv  b  o  b   i file  i   br  a href  dsv2dsv out     a  dsv2dsv  b   out  b   i file  i   Specify the output file name  Defaults to     for stdout    a name  dsv2dsv input delimiter  href  dsv2dsv input delimiter     a  dsv2dsv  b  r  b   i delimiter  i   br  a href  dsv2dsv input delimiter     a  dsv2dsv  b   input delimiter  b   i delimiter  i   Specify the input delimiter character  Defaults to     for reading CSV   You can enter a tab on the command line by typing  V     a name  dsv2dsv input encoding  href  dsv2dsv input encoding     a  dsv2dsv  b   input encoding  b   i encoding  i   Specify the input character encoding  Defaults to  utf8     a name  dsv2dsv output delimiter  href  dsv2dsv output delimiter     a  dsv2dsv  b  w  b   i delimiter  i   br  a href  dsv2dsv output delimiter     a  dsv2dsv  b   output delimiter  b   i delimiter  i   Specify the output delimiter character  Defaults to     for writing CSV   You can enter a tab on the command line by typing  V     a name  dsv2dsv output encoding  href  dsv2dsv output encoding     a  dsv2dsv  b   output encoding  b   i encoding  i   Specify the output character encoding  Defaults to  utf8     a name  csv2tsv  href   csv2tsv     a   b csv2tsv  b    i options   i     i file  i    Equivalent to  dsv2dsv   dsv2dsv   but the  output delimiter   dsv2dsv output delimiter  defaults to the tab character   t     a name  tsv2csv  href   tsv2csv     a   b tsv2csv  b    i options   i     i file  i    Equivalent to  dsv2dsv   dsv2dsv   but the  input delimiter   dsv2dsv output delimiter  defaults to the tab character   t        dsv2json   a name  dsv2json  href   dsv2json     a   b dsv2json  b    i options   i     i file  i    Converts the specified DSV input  file  to JSON  If  file  is not specified  defaults to reading from stdin  For example  to convert to CSV to JSON       csv2json   example csv   example json      Or to convert CSV to a newline delimited JSON stream       csv2json  n   example csv   example ndjson       a name  dsv2json help  href  dsv2json help     a  dsv2json  b  h  b   br  a href  dsv2json help     a  dsv2json  b   help  b   Output usage information    a name  dsv2json version  href  dsv2json version     a  dsv2json  b  V  b   br  a href  dsv2json version     a  dsv2json  b   version  b   Output the version number    a name  dsv2json out  href  dsv2json out     a  dsv2json  b  o  b   i file  i   br  a href  dsv2json out     a  dsv2json  b   out  b   i file  i   Specify the output file name  Defaults to     for stdout    a name  dsv2json input delimiter  href  dsv2json input delimiter     a  dsv2json  b  r  b   i delimiter  i   br  a href  dsv2json input delimiter     a  dsv2json  b   input delimiter  b   i delimiter  i   Specify the input delimiter character  Defaults to     for reading CSV   You can enter a tab on the command line by typing  V     a name  dsv2json input encoding  href  dsv2json input encoding     a  dsv2json  b   input encoding  b   i encoding  i   Specify the input character encoding  Defaults to  utf8     a name  dsv2json output encoding  href  dsv2json output encoding     a  dsv2json  b  r  b   i encoding  i   br  a href  dsv2json output encoding     a  dsv2json  b   output encoding  b   i encoding  i   Specify the output character encoding  Defaults to  utf8     a name  dsv2json newline delimited  href  dsv2json newline delimited     a  dsv2json  b  n  b   br  a href  dsv2json newline delimited     a  dsv2json  b   newline delimited  b   Output  newline delimited JSON  https   github com mbostock ndjson cli  instead of a single JSON array    a name  csv2json  href   csv2json     a   b csv2json  b    i options   i     i file  i    Equivalent to  dsv2json   dsv2json     a name  tsv2json  href   csv2json     a   b tsv2json  b    i options   i     i file  i    Equivalent to  dsv2json   dsv2json   but the  input delimiter   dsv2json input delimiter  defaults to the tab character   t        json2dsv   a name  json2dsv  href   json2dsv     a   b json2dsv  b    i options   i     i file  i    Converts the specified JSON input  file  to DSV  If  file  is not specified  defaults to reading from stdin  For example  to convert to JSON to CSV       json2csv   example json   example csv      Or to convert a newline delimited JSON stream to CSV       json2csv  n   example ndjson   example csv       a name  json2dsv help  href  json2dsv help     a  json2dsv  b  h  b   br  a href  json2dsv help     a  json2dsv  b   help  b   Output usage information    a name  json2dsv version  href  json2dsv version     a  json2dsv  b  V  b   br  a href  json2dsv version     a  json2dsv  b   version  b   Output the version number    a name  json2dsv out  href  json2dsv out     a  json2dsv  b  o  b   i file  i   br  a href  json2dsv out     a  json2dsv  b   out  b   i file  i   Specify the output file name  Defaults to     for stdout    a name  json2dsv input encoding  href  json2dsv input encoding     a  json2dsv  b   input encoding  b   i encoding  i   Specify the input character encoding  Defaults to  utf8     a name  json2dsv output delimiter  href  json2dsv output delimiter     a  json2dsv  b  w  b   i delimiter  i   br  a href  json2dsv output delimiter     a  json2dsv  b   output delimiter  b   i delimiter  i   Specify the output delimiter character  Defaults to     for writing CSV   You can enter a tab on the command line by typing  V     a name  json2dsv output encoding  href  json2dsv output encoding     a  json2dsv  b   output encoding  b   i encoding  i   Specify the output character encoding  Defaults to  utf8     a name  json2dsv newline delimited  href  json2dsv newline delimited     a  json2dsv  b  n  b   br  a href  json2dsv newline delimited     a  json2dsv  b   newline delimited  b   Read  newline delimited JSON  https   github com mbostock ndjson cli  instead of a single JSON array    a name  csv2json  href   csv2json     a   b csv2json  b    i options   i     i file  i    Equivalent to  json2dsv   json2dsv     a name  tsv2json  href   csv2json     a   b tsv2json  b    i options   i     i file  i    Equivalent to  json2dsv   json2dsv   but the  output delimiter   json2dsv output delimiter  defaults to the tab character   t   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-dsv"},{"name":"d3/d3-color","artist":"color, specifi, return, valu, space","id":2,"playcount":11710,"description":"d3/d3-color color, specifi, return, valu, space   d3 color  Even though your browser understands a lot about colors  it doesn t offer much help in manipulating colors through JavaScript  The d3 color module therefore provides representations for various color spaces  allowing specification  conversion and manipulation   Also see  d3 interpolate  https   github com d3 d3 interpolate  for color interpolation    For example  take the color named  steelblue       js var c   d3 color  steelblue        r  70  g  130  b  180  opacity  1       Let s try converting it to HSL      js var c   d3 hsl  steelblue        h  207 27   s  0 44  l  0 4902   opacity  1       Now rotate the hue by 90   bump up the saturation  and format as a string for CSS      js c h    90  c s    0 2  c          rgb 198  45  205       To fade the color slightly      js c opacity   0 8  c          rgba 198  45  205  0 8       In addition to the ubiquitous and machine friendly  RGB   rgb  and  HSL   hsl  color space  d3 color supports two color spaces that are designed for humans     Dave Green s  Cubehelix   cubehelix     Lab  CIELAB    lab  and  HCL  CIELCH    hcl   Cubehelix features monotonic lightness  while Lab and HCL are perceptually uniform  Note that HCL is the cylindrical form of Lab  similar to how HSL is the cylindrical form of RGB   For additional color spaces  see      d3 cam16  https   github com d3 d3 cam16     d3 cam02  https   github com connorgr d3 cam02     d3 hsv  https   github com d3 d3 hsv     d3 hcg  https   github com d3 d3 hcg      Installing  If you use NPM   npm install d3 color   Otherwise  download the  latest release  https   github com d3 d3 color releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 color v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script   var steelblue   d3 rgb  steelblue       script        Try d3 color in your browser   https   tonicdev com npm d3 color      API Reference   a name  color  href   color     a  d3  b color  b   i specifier  i        https   github com d3 d3 color blob master src color js  Source    Parses the specified  CSS Color Module Level 3  http   www w3 org TR css3 color  colorunits   specifier  string  returning an  RGB   rgb  or  HSL   hsl  color  If the specifier was not valid  null is returned  Some examples      rgb 255  255  255      rgb 10   20   30       rgba 255  255  255  0 4      rgba 10   20   30   0 4      hsl 120  50   20       hsla 120  50   20   0 4       ffeeaa      fea     steelblue   The list of supported  named colors  http   www w3 org TR SVG types html ColorKeywords  is specified by CSS   Note  this function may also be used with  instanceof  to test if an object is a color instance  The same is true of color subclasses  allowing you to test whether a color is in a particular color space    a name  color opacity  href   color opacity     a   color   b opacity  b   This color s opacity  typically in the range  0  1     a name  color rgb  href   color rgb     a   color   b rgb  b         https   github com d3 d3 color blob master src color js  Source    Returns the  RGB equivalent   rgb  of this color  For RGB colors  that s  this     a name  color brighter  href   color brighter     a   color   b brighter  b    i k  i         https   github com d3 d3 color blob master src color js  Source    Returns a brighter copy of this color  If  k  is specified  it controls how much brighter the returned color should be  If  k  is not specified  it defaults to 1  The behavior of this method is dependent on the implementing color space    a name  color darker  href   color darker     a   color   b darker  b    i k  i         https   github com d3 d3 color blob master src color js  Source    Returns a darker copy of this color  If  k  is specified  it controls how much darker the returned color should be  If  k  is not specified  it defaults to 1  The behavior of this method is dependent on the implementing color space    a name  color displayable  href   color displayable     a   color   b displayable  b         https   github com d3 d3 color blob master src color js  Source    Returns true if and only if the color is displayable on standard hardware  For example  this returns false for an RGB color if any channel value is less than zero or greater than 255  or if the opacity is not in the range  0  1     a name  color hex  href   color hex     a   color   b hex  b         https   github com d3 d3 color blob master src color js  Source    Returns a hexadecimal string representing this color in RGB space  such as   f7eaba   If this color is not displayable  a suitable displayable color is returned instead  For example  RGB channel values greater than 255 are clamped to 255    a name  color toString  href   color toString     a   color   b toString  b         https   github com d3 d3 color blob master src color js  Source    Returns a string representing this color according to the  CSS Object Model specification  https   drafts csswg org cssom  serialize a css component value   such as  rgb 247  234  186   or  rgba 247  234  186  0 2    If this color is not displayable  a suitable displayable color is returned instead  For example  RGB channel values greater than 255 are clamped to 255    a name  rgb  href   rgb     a  d3  b rgb  b   i r  i    i g  i    i b  i     i opacity  i         https   github com d3 d3 color blob master src color js  Source   br   a href   rgb     a  d3  b rgb  b   i specifier  i   br   a href   rgb     a  d3  b rgb  b   i color  i   br   Constructs a new  RGB  https   en wikipedia org wiki RGB color model  color  The channel values are exposed as  r    g  and  b  properties on the returned instance  Use the  RGB color picker  http   bl ocks org mbostock 78d64ca7ef013b4dcf8f  to explore this color space   If  r    g  and  b  are specified  these represent the channel values of the returned color  an  opacity  may also be specified  If a CSS Color Module Level 3  specifier  string is specified  it is parsed and then converted to the RGB color space  See  color   color  for examples  If a   color    color  instance is specified  it is converted to the RGB color space using   color  rgb   color rgb   Note that unlike   color  rgb   color rgb  this method  always  returns a new instance  even if  color  is already an RGB color    a name  hsl  href   hsl     a  d3  b hsl  b   i h  i    i s  i    i l  i     i opacity  i         https   github com d3 d3 color blob master src color js  Source   br   a href   hsl     a  d3  b hsl  b   i specifier  i   br   a href   hsl     a  d3  b hsl  b   i color  i   br   Constructs a new  HSL  https   en wikipedia org wiki HSL and HSV  color  The channel values are exposed as  h    s  and  l  properties on the returned instance  Use the  HSL color picker  http   bl ocks org mbostock debaad4fcce9bcee14cf  to explore this color space   If  h    s  and  l  are specified  these represent the channel values of the returned color  an  opacity  may also be specified  If a CSS Color Module Level 3  specifier  string is specified  it is parsed and then converted to the HSL color space  See  color   color  for examples  If a   color    color  instance is specified  it is converted to the RGB color space using   color  rgb   color rgb  and then converted to HSL   Colors already in the HSL color space skip the conversion to RGB     a name  lab  href   lab     a  d3  b lab  b   i l  i    i a  i    i b  i     i opacity  i         https   github com d3 d3 color blob master src lab js  Source   br   a href   lab     a  d3  b lab  b   i specifier  i   br   a href   lab     a  d3  b lab  b   i color  i   br   Constructs a new  Lab  https   en wikipedia org wiki Lab color space CIELAB  color  The channel values are exposed as  l    a  and  b  properties on the returned instance  Use the  Lab color picker  http   bl ocks org mbostock 9f37cc207c0cb166921b  to explore this color space  The value of  l  is typically in the range  0  100   while  a  and  b  are typically in   160   160    If  l    a  and  b  are specified  these represent the channel values of the returned color  an  opacity  may also be specified  If a CSS Color Module Level 3  specifier  string is specified  it is parsed and then converted to the Lab color space  See  color   color  for examples  If a   color    color  instance is specified  it is converted to the RGB color space using   color  rgb   color rgb  and then converted to Lab   Colors already in the Lab color space skip the conversion to RGB  and colors in the HCL color space are converted directly to Lab     a name  gray  href   gray     a  d3  b gray  b   i l  i     i opacity  i         https   github com d3 d3 color blob master src lab js  Source   br   Constructs a new  Lab   lab  color with the specified  l  value and  a     b    0    a name  hcl  href   hcl     a  d3  b hcl  b   i h  i    i c  i    i l  i     i opacity  i         https   github com d3 d3 color blob master src lab js  Source   br   a href   hcl     a  d3  b hcl  b   i specifier  i   br   a href   hcl     a  d3  b hcl  b   i color  i   br   Constructs a new  HCL  https   en wikipedia org wiki HCL color space  color  The channel values are exposed as  h    c  and  l  properties on the returned instance  Use the  HCL color picker  http   bl ocks org mbostock 3e115519a1b495e0bd95  to explore this color space  The value of  l  is typically in the range  0  100    c  is typically in  0  230   and  h  is typically in  0  360    If  h    c  and  l  are specified  these represent the channel values of the returned color  an  opacity  may also be specified  If a CSS Color Module Level 3  specifier  string is specified  it is parsed and then converted to the HCL color space  See  color   color  for examples  If a   color    color  instance is specified  it is converted to the RGB color space using   color  rgb   color rgb  and then converted to HCL   Colors already in the HCL color space skip the conversion to RGB  and colors in the Lab color space are converted directly to HCL     a name  lch  href   lch     a  d3  b lch  b   i l  i    i c  i    i h  i     i opacity  i         https   github com d3 d3 color blob master src lab js  Source   br   a href   lch     a  d3  b lch  b   i specifier  i   br   a href   lch     a  d3  b lch  b   i color  i   br   Equivalent to  d3 hcl   hcl   but with reversed argument order    a name  cubehelix  href   cubehelix     a  d3  b cubehelix  b   i h  i    i s  i    i l  i     i opacity  i         https   github com d3 d3 color blob master src cubehelix js  Source   br   a href   cubehelix     a  d3  b cubehelix  b   i specifier  i   br   a href   cubehelix     a  d3  b cubehelix  b   i color  i   br   Constructs a new  Cubehelix  https   www mrao cam ac uk  dag CUBEHELIX   color  The channel values are exposed as  h    s  and  l  properties on the returned instance  Use the  Cubehelix color picker  http   bl ocks org mbostock ba8d75e45794c27168b5  to explore this color space   If  h    s  and  l  are specified  these represent the channel values of the returned color  an  opacity  may also be specified  If a CSS Color Module Level 3  specifier  string is specified  it is parsed and then converted to the Cubehelix color space  See  color   color  for examples  If a   color    color  instance is specified  it is converted to the RGB color space using   color  rgb   color rgb  and then converted to Cubehelix   Colors already in the Cubehelix color space skip the conversion to RGB   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-color"},{"name":"d3/d3-brush","artist":"specifi, return, select, current, element","id":3,"playcount":13513,"description":"d3/d3-brush specifi, return, select, current, element   d3 brush  Brushing is the interactive specification a one  or two dimensional selected region using a pointing gesture  such as by clicking and dragging the mouse  Brushing is often used to select discrete elements  such as dots in a scatterplot or files on a desktop  It can also be used to zoom in to a region of interest  or to select continuous regions for  cross filtering data  http   square github io crossfilter   or live histograms     img alt  Mona Lisa Histogram  src  https   raw githubusercontent com d3 d3 brush master img mona lisa jpg  width  420  height  219    http   bl ocks org mbostock 0d20834e3d5a46138752f86b9b79727e   The d3 brush module implements brushing for mouse and touch events using  SVG  https   www w3 org TR SVG    Click and drag on the brush selection to translate the selection  Click and drag on one of the selection handles to move the corresponding edge  or edges  of the selection  Click and drag on the invisible overlay to define a new brush selection  or click anywhere within the brushable region while holding down the META     key  Holding down the ALT     key while moving the brush causes it to reposition around its center  while holding down SPACE locks the current brush size  allowing only translation   Brushes also support programmatic control  For example  you can listen to   end  events   brush events   and then initiate a transition with   brush  move   brush move  to snap the brush selection to semantic boundaries     img alt  Brush Snapping  src  https   raw githubusercontent com d3 d3 brush master img snapping png  width  420  height  219    http   bl ocks org mbostock 6232537   Or you can have the brush recenter when you click outside the current selection     img alt  Click to Recenter  src  https   raw githubusercontent com d3 d3 brush master img recenter jpg  width  420  height  219    https   bl ocks org mbostock 6498000      Installing  If you use NPM   npm install d3 brush   Otherwise  download the  latest release  https   github com d3 d3 brush releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 brush v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 dispatch v1 min js    script   script src  https   d3js org d3 ease v1 min js    script   script src  https   d3js org d3 interpolate v1 min js    script   script src  https   d3js org d3 timer v1 min js    script   script src  https   d3js org d3 selection v1 min js    script   script src  https   d3js org d3 transition v1 min js    script   script src  https   d3js org d3 drag v1 min js    script   script src  https   d3js org d3 brush v1 min js    script   script   var brush   d3 brush       script        Try d3 brush in your browser   https   tonicdev com npm d3 brush      API Reference   a href   brush  name  brush     a  d3  b brush  b         https   github com d3 d3 brush blob master src brush js L131  Source    Creates a new two dimensional brush    a href   brushX  name  brushX     a  d3  b brushX  b         https   github com d3 d3 brush blob master src brush js L123  Source    Creates a new one dimensional brush along the  x  dimension    a href   brushY  name  brushY     a  d3  b brushY  b         https   github com d3 d3 brush blob master src brush js L127  Source    Creates a new one dimensional brush along the  y  dimension    a href    brush  name   brush     a   i brush  i   i group  i        https   github com d3 d3 brush blob master src brush js L142  Source    Applies the brush to the specified  group   which must be a  selection  https   github com d3 d3 selection  of SVG  G elements  https   www w3 org TR SVG struct html Groups   This function is typically not invoked directly  and is instead invoked via   selection  call  https   github com d3 d3 selection selection call   For example  to render a brush      js svg append  g        attr  class    brush        call d3 brush   on  brush   brushed         Internally  the brush uses   selection  on  https   github com d3 d3 selection selection on  to bind the necessary event listeners for dragging  The listeners use the name   brush   so you can subsequently unbind the brush event listeners as follows      js group on   brush   null        The brush also creates the SVG elements necessary to display the brush selection and to receive input events for interaction  You can add  remove or modify these elements as desired to change the brush appearance  you can also apply stylesheets to modify the brush appearance  The structure of a two dimensional brush is as follows      html  g class  brush  fill  none  pointer events  all  style   webkit tap highlight color  rgba 0  0  0  0        rect class  overlay  pointer events  all  cursor  crosshair  x  0  y  0  width  960  height  500    rect     rect class  selection  cursor  move  fill   777  fill opacity  0 3  stroke   fff  shape rendering  crispEdges  x  112  y  194  width  182  height  83    rect     rect class  handle handle  n  cursor  ns resize  x  107  y  189  width  192  height  10    rect     rect class  handle handle  e  cursor  ew resize  x  289  y  189  width  10  height  93    rect     rect class  handle handle  s  cursor  ns resize  x  107  y  272  width  192  height  10    rect     rect class  handle handle  w  cursor  ew resize  x  107  y  189  width  10  height  93    rect     rect class  handle handle  nw  cursor  nwse resize  x  107  y  189  width  10  height  10    rect     rect class  handle handle  ne  cursor  nesw resize  x  289  y  189  width  10  height  10    rect     rect class  handle handle  se  cursor  nwse resize  x  289  y  272  width  10  height  10    rect     rect class  handle handle  sw  cursor  nesw resize  x  107  y  272  width  10  height  10    rect    g       The overlay rect covers the brushable area defined by   brush  extent   brush extent   The selection rect covers the area defined by the current  brush selection   brushSelection   The handle rects cover the edges and corners of the brush selection  allowing the corresponding value in the brush selection to be modified interactively  To modify the brush selection programmatically  use   brush  move   brush move     a href   brush move  name  brush move     a   i brush  i   b move  b   i group  i    i selection  i        https   github com d3 d3 brush blob master src brush js L189  Source    Sets the active  selection  of the brush on the specified  group   which must be a  selection  https   github com d3 d3 selection  or a  transition  https   github com d3 d3 transition  of SVG  G elements  https   www w3 org TR SVG struct html Groups   The  selection  must be defined as an array of numbers  or null to clear the brush selection  For a  two dimensional brush   brush   it must be defined as    x0    y0      x1    y1     where  x0  is the minimum  x  value   y0  is the minimum  y  value   x1  is the maximum  x  value  and  y1  is the maximum  y  value  For an   x  brush   brushX   it must be defined as   x0    x1    for a   y  brush   brushY   it must be defined as   y0    y1    The selection may also be specified as a function which returns such an array  if a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The returned array defines the brush selection for that element    a href   brush extent  name  brush extent     a   i brush  i   b extent  b    i extent  i         https   github com d3 d3 brush blob master src brush js L521  Source    If  extent  is specified  sets the brushable extent to the specified array of points    x0    y0      x1    y1     where   x0    y0   is the top left corner and   x1    y1   is the bottom right corner  and returns this brush  The  extent  may also be specified as a function which returns such an array  if a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  If  extent  is not specified  returns the current extent accessor  which defaults to      js function extent       var svg   this ownerSVGElement    this    return   0  0    svg width baseVal value  svg height baseVal value           This default implementation requires that the owner SVG element have defined  width  https   www w3 org TR SVG struct html SVGElementWidthAttribute  and  height  https   www w3 org TR SVG struct html SVGElementHeightAttribute  attributes rather than  for example  relying on CSS properties or the viewBox attribute  SVG provides no programmatic method for retrieving the  initial viewport size  https   www w3 org TR SVG coords html ViewportSpace   Alternatively  consider using   element  getBoundingClientRect  https   developer mozilla org en US docs Web API Element getBoundingClientRect    In Firefox    element  clientWidth  https   developer mozilla org en US docs Web API Element clientWidth  and   element  clientHeight  https   developer mozilla org en US docs Web API Element clientHeight  is zero for SVG elements    The brush extent determines the size of the invisible overlay and also constrains the brush selection  the brush selection cannot go outside the brush extent    a href   brush filter  name  brush filter     a   i brush  i   b filter  b    i filter  i         https   github com d3 d3 brush blob master src brush js L525  Source    If  filter  is specified  sets the filter to the specified function and returns the brush  If  filter  is not specified  returns the current filter  which defaults to      js function filter       return  event button         If the filter returns falsey  the initiating event is ignored and no brush gesture is started  Thus  the filter determines which input events are ignored  The default filter ignores mousedown events on secondary buttons  since those buttons are typically intended for other purposes  such as the context menu    a href   brush handleSize  name  brush handleSize     a   i brush  i   b handleSize  b    i size  i         https   github com d3 d3 brush blob master src brush js L529  Source    If  size  is specified  sets the size of the brush handles to the specified number and returns the brush  If  size  is not specified  returns the current handle size  which defaults to six  This method must be called before  applying the brush    brush  to a selection  changing the handle size does not affect brushes that were previously rendered    a href   brush on  name  brush on     a   i brush  i   b on  b   i typenames  i     i listener  i         https   github com d3 d3 brush blob master src brush js L533  Source    If  listener  is specified  sets the event  listener  for the specified  typenames  and returns the brush  If an event listener was already registered for the same type and name  the existing listener is removed before the new listener is added  If  listener  is null  removes the current event listeners for the specified  typenames   if any  If  listener  is not specified  returns the first currently assigned listener matching the specified  typenames   if any  When a specified event is dispatched  each  listener  will be invoked with the same context and arguments as   selection  on  https   github com d3 d3 selection selection on  listeners  the current datum  d  and index  i   with the  this  context as the current DOM element   The  typenames  is a string containing one or more  typename  separated by whitespace  Each  typename  is a  type   optionally followed by a period       and a  name   such as  brush foo  and  brush bar   the name allows multiple listeners to be registered for the same  type   The  type  must be one of the following      start    at the start of a brush gesture  such as on mousedown     brush    when the brush moves  such as on mousemove     end    at the end of a brush gesture  such as on mouseup   See   dispatch  on  https   github com d3 d3 dispatch dispatch on  and  Brush Events   brush events  for more    a href   brushSelection  name  brushSelection     a  d3  b brushSelection  b   i node  i        https   github com d3 d3 brush blob master src brush js L118  Source    Returns the current brush selection for the specified  node   Internally  an element s brush state is stored as  element      brush  however  you should use this method rather than accessing it directly  If the given  node  has no selection  returns null  Otherwise  the  selection  is defined as an array of numbers  For a  two dimensional brush   brush   it is    x0    y0      x1    y1     where  x0  is the minimum  x  value   y0  is the minimum  y  value   x1  is the maximum  x  value  and  y1  is the maximum  y  value  For an   x  brush   brushX   it is   x0    x1    for a   y  brush   brushY   it is   y0    y1         Brush Events  When a  brush event listener   brush on  is invoked   d3 event  https   github com d3 d3 selection event  is set to the current brush event  The  event  object exposes several fields      target    the associated  brush behavior   brush      type    the string  start    brush  or  end   see   brush  on   brush on      selection    the current  brush selection   brushSelection      sourceEvent    the underlying input event  such as mousemove or touchmove  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-brush"},{"name":"d3/d3-hierarchy","artist":"return, specifi, sourc, array, valu","id":4,"playcount":41962,"description":"d3/d3-hierarchy return, specifi, sourc, array, valu   d3 hierarchy  Many datasets are intrinsically hierarchical  Consider  geographic entities  https   www census gov geo reference hierarchy html   such as census blocks  census tracts  counties and states  the command structure of businesses and governments  file systems and software packages  And even non hierarchical data may be arranged empirically into a hierarchy  as with   k  means clustering  https   en wikipedia org wiki K means clustering  or  phylogenetic trees  https   bl ocks org mbostock c034d66572fd6bd6815a    This module implements several popular techniques for visualizing hierarchical data     Node link diagrams   show topology using discrete marks for nodes and links  such as a circle for each node and a line connecting each parent and child  The   tidy  tree   tree  is delightfully compact  while the  dendrogram   cluster  places leaves at the same level   These have both polar and Cartesian forms    Indented trees  https   bl ocks org mbostock 1093025  are useful for interactive browsing     Adjacency diagrams   show topology through the relative placement of nodes  They may also encode a quantitative dimension in the area of each node  for example to show revenue or file size  The   icicle  diagram   partition  uses rectangles  while the  sunburst  uses annular segments     Enclosure diagrams   also use an area encoding  but show topology through containment  A  treemap   treemap  recursively subdivides area into rectangles   Circle packing   pack  tightly nests circles  this is not as space efficient as a treemap  but perhaps more readily shows topology   A good hierarchical visualization facilitates rapid multiscale inference  micro observations of individual elements and macro observations of large groups      Installing  If you use NPM   npm install d3 hierarchy   Otherwise  download the  latest release  https   github com d3 d3 hierarchy releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 hierarchy v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 hierarchy v1 min js    script   script   var treemap   d3 treemap       script        Try d3 hierarchy in your browser   https   tonicdev com npm d3 hierarchy      API Reference     Hierarchy   hierarchy    Stratify   stratify      Cluster   cluster     Tree   tree     Treemap   treemap    Treemap Tiling   treemap tiling      Partition   partition     Pack   pack       Hierarchy  Before you can compute a hierarchical layout  you need a root node  If your data is already in a hierarchical format  such as JSON  you can pass it directly to  d3 hierarchy   hierarchy   otherwise  you can rearrange tabular data  such as comma separated values  CSV   into a hierarchy using  d3 stratify   stratify     a name  hierarchy  href   hierarchy     a  d3  b hierarchy  b   i data  i     i children  i         https   github com d3 d3 hierarchy blob master src hierarchy index js L12  Source    Constructs a root node from the specified hierarchical  data   The specified  data  must be an object representing the root node  For example      json      name    Eve      children                  name    Cain                      name    Seth          children                          name    Enos                                  name    Noam                                        name    Abel                      name    Awan          children                          name    Enoch                                        name    Azura                   The specified  children  accessor function is invoked for each datum  starting with the root  data   and must return an array of data representing the children  or null if the current datum has no children  If  children  is not specified  it defaults to      js function children d      return d children         The returned node and each descendant has the following properties      node  data   the associated data  as specified to the  constructor   hierarchy      node  depth   zero for the root node  and increasing by one for each descendant generation     node  height   zero for leaf nodes  and the greatest distance from any descendant leaf for internal nodes     node  parent   the parent node  or null for the root node     node  children   an array of child nodes  if any  undefined for leaf nodes     node  value   the summed value of the node and its  descendants   node descendants   optional  see   node  sum   node sum  and   node  count   node count    This method can also be used to test if a node is an  instanceof d3 hierarchy  and to extend the node prototype    a name  node ancestors  href   node ancestors     a   i node  i   b ancestors  b         https   github com d3 d3 hierarchy blob master src hierarchy ancestors js  Source    Returns the array of ancestors nodes  starting with this node  then followed by each parent up to the root    a name  node descendants  href   node descendants     a   i node  i   b descendants  b         https   github com d3 d3 hierarchy blob master src hierarchy descendants js  Source    Returns the array of descendant nodes  starting with this node  then followed by each child in topological order    a name  node leaves  href   node leaves     a   i node  i   b leaves  b         https   github com d3 d3 hierarchy blob master src hierarchy leaves js  Source    Returns the array of leaf nodes in traversal order  leaves are nodes with no children    a name  node path  href   node path     a   i node  i   b path  b   i target  i        https   github com d3 d3 hierarchy blob master src hierarchy path js  Source    Returns the shortest path through the hierarchy from this  node  to the specified  target  node  The path starts at this  node   ascends to the least common ancestor of this  node  and the  target  node  and then descends to the  target  node  This is particularly useful for  hierarchical edge bundling  https   bl ocks org mbostock 7607999     a name  node links  href   node links     a   i node  i   b links  b         https   github com d3 d3 hierarchy blob master src hierarchy links js  Source    Returns an array of links for this  node   where each  link  is an object that defines source and target properties  The source of each link is the parent node  and the target is a child node    a name  node sum  href   node sum     a   i node  i   b sum  b   i value  i        https   github com d3 d3 hierarchy blob master src hierarchy sum js  Source    Evaluates the specified  value  function for this  node  and each descendant in  post order traversal   node eachAfter   and returns this  node   The  node  value property of each node is set to the numeric value returned by the specified function plus the combined value of all descendants  The function is passed the node s data  and must return a non negative number  The  value  accessor is evaluated for  node  and every descendant  including internal nodes  if you only want leaf nodes to have internal value  then return zero for any node with children   For example  http   bl ocks org mbostock b4c0f143db88a9eb01a315a1063c1d77   as an alternative to   node  count   node count       js root sum function d    return d value   1   0           You must call  node  sum or   node  count   node count  before invoking a hierarchical layout that requires  node  value  such as  d3 treemap   treemap   Since the API supports  method chaining  https   en wikipedia org wiki Method chaining   you can invoke  node  sum and   node  sort   node sort  before computing the layout  and then subsequently generate an array of all  descendant nodes   node descendants  like so      js var treemap   d3 treemap        size  width  height        padding 2    var nodes   treemap root      sum function d    return d value          sort function a  b    return b height   a height    b value   a value         descendants         This example assumes that the node data has a value field    a name  node count  href   node count     a   i node  i   b count  b         https   github com d3 d3 hierarchy blob master src hierarchy count js  Source    Computes the number of leaves under this  node  and assigns it to  node  value  and similarly for every descendant of  node   If this  node  is a leaf  its count is one  Returns this  node   See also   node  sum   node sum     a name  node sort  href   node sort     a   i node  i   b sort  b   i compare  i        https   github com d3 d3 hierarchy blob master src hierarchy sort js  Source    Sorts the children of this  node   if any  and each of this  node  s descendants  children  in  pre order traversal   node eachBefore  using the specified  compare  function  and returns this  node   The specified function is passed two nodes  a  and  b  to compare  If  a  should be before  b   the function must return a value less than zero  if  b  should be before  a   the function must return a value greater than zero  otherwise  the relative order of  a  and  b  are not specified  See   array  sort  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array sort  for more   Unlike   node  sum   node sum   the  compare  function is passed two  nodes   hierarchy  rather than two nodes  data  For example  if the data has a value property  this sorts nodes by the descending aggregate value of the node and all its descendants  as is recommended for  circle packing   pack       js root      sum function d    return d value          sort function a  b    return b value   a value              Similarly  to sort nodes by descending height  greatest distance from any descendant leaf  and then descending value  as is recommended for  treemaps   treemap  and  icicles   partition       js root      sum function d    return d value          sort function a  b    return b height   a height    b value   a value           To sort nodes by descending height and then ascending id  as is recommended for  trees   tree  and  dendrograms   cluster       js root      sum function d    return d value          sort function a  b    return b height   a height    a id localeCompare b id            You must call  node  sort before invoking a hierarchical layout if you want the new sort order to affect the layout  see   node  sum   node sum  for an example    a name  node each  href   node each     a   i node  i   b each  b   i function  i        https   github com d3 d3 hierarchy blob master src hierarchy each js  Source    Invokes the specified  function  for  node  and each descendant in  breadth first order  https   en wikipedia org wiki Breadth first search   such that a given  node  is only visited if all nodes of lesser depth have already been visited  as well as all preceding nodes of the same depth  The specified function is passed the current  node     a name  node eachAfter  href   node eachAfter     a   i node  i   b eachAfter  b   i function  i        https   github com d3 d3 hierarchy blob master src hierarchy eachAfter js  Source    Invokes the specified  function  for  node  and each descendant in  post order traversal  https   en wikipedia org wiki Tree traversal Post order   such that a given  node  is only visited after all of its descendants have already been visited  The specified function is passed the current  node     a name  node eachBefore  href   node eachBefore     a   i node  i   b eachBefore  b   i function  i        https   github com d3 d3 hierarchy blob master src hierarchy eachBefore js  Source    Invokes the specified  function  for  node  and each descendant in  pre order traversal  https   en wikipedia org wiki Tree traversal Pre order   such that a given  node  is only visited after all of its ancestors have already been visited  The specified function is passed the current  node     a name  node copy  href   node copy     a   i node  i   b copy  b         https   github com d3 d3 hierarchy blob master src hierarchy index js L39  Source    Return a deep copy of the subtree starting at this  node    The returned deep copy shares the same data  however   The returned node is the root of a new tree  the returned node s parent is always null and its depth is always zero        Stratify  Consider the following table of relationships   Name    Parent                 Eve     Cain    Eve Seth    Eve Enos    Seth Noam    Seth Abel    Eve Awan    Eve Enoch   Awan Azura   Eve  These names are conveniently unique  so we can unambiguously represent the hierarchy as a CSV file       name parent Eve  Cain Eve Seth Eve Enos Seth Noam Seth Abel Eve Awan Eve Enoch Awan Azura Eve      To parse the CSV using  d3 csvParse  https   github com d3 d3 dsv csvParse       js var table   d3 csvParse text        This returns      json       name    Eve      parent            name    Cain     parent    Eve        name    Seth     parent    Eve        name    Enos     parent    Seth        name    Noam     parent    Seth        name    Abel     parent    Eve        name    Awan     parent    Eve        name    Enoch    parent    Awan        name    Azura    parent    Eve          To convert to a hierarchy      js var root   d3 stratify        id function d    return d name          parentId function d    return d parent          table        This returns     img alt  Stratify  src  https   raw githubusercontent com d3 d3 hierarchy master img stratify png    https   tonicdev com mbostock 56fed33d8630b01300f72daa   This hierarchy can now be passed to a hierarchical layout  such as  d3 tree    tree   for visualization    a name  stratify  href   stratify     a  d3  b stratify  b         https   github com d3 d3 hierarchy blob master src stratify js  Source    Constructs a new stratify operator with the default settings    a name   stratify  href    stratify     a   i stratify  i   i data  i        https   github com d3 d3 hierarchy blob master src stratify js L20  Source    Generates a new hierarchy from the specified tabular  data     a name  stratify id  href   stratify id     a   i stratify  i   b id  b    i id  i         https   github com d3 d3 hierarchy blob master src stratify js L64  Source    If  id  is specified  sets the id accessor to the given function and returns this stratify operator  Otherwise  returns the current id accessor  which defaults to      js function id d      return d id         The id accessor is invoked for each element in the input data passed to the  stratify operator    stratify   being passed the current datum   d   and the current index   i    The returned string is then used to identify the node s relationships in conjunction with the  parent id   stratify parentId   For leaf nodes  the id may be undefined  otherwise  the id must be unique   Null and the empty string are equivalent to undefined     a name  stratify parentId  href   stratify parentId     a   i stratify  i   b parentId  b    i parentId  i         https   github com d3 d3 hierarchy blob master src stratify js L68  Source    If  parentId  is specified  sets the parent id accessor to the given function and returns this stratify operator  Otherwise  returns the current parent id accessor  which defaults to      js function parentId d      return d parentId         The parent id accessor is invoked for each element in the input data passed to the  stratify operator    stratify   being passed the current datum   d   and the current index   i    The returned string is then used to identify the node s relationships in conjunction with the  id   stratify id   For the root node  the parent id should be undefined   Null and the empty string are equivalent to undefined   There must be exactly one root node in the input data  and no circular relationships       Cluster    img alt  Dendrogram  src  https   raw githubusercontent com d3 d3 hierarchy master img cluster png    http   bl ocks org mbostock ff91c1558bc570b08539547ccc90050b   The   cluster layout   produces  dendrograms  http   en wikipedia org wiki Dendrogram   node link diagrams that place leaf nodes of the tree at the same depth  Dendograms are typically less compact than  tidy trees   tree   but are useful when all the leaves should be at the same level  such as for hierarchical clustering or  phylogenetic tree diagrams  http   bl ocks org mbostock c034d66572fd6bd6815a     a name  cluster  href   cluster     a  d3  b cluster  b         https   github com d3 d3 hierarchy blob master src cluster js  Source    Creates a new cluster layout with default settings    a name   cluster  href    cluster     a   i cluster  i   i root  i        https   github com d3 d3 hierarchy blob master src cluster js L39  Source    Lays out the specified  root   hierarchy   hierarchy   assigning the following properties on  root  and its descendants      node  x   the  x  coordinate of the node    node  y   the  y  coordinate of the node  The coordinates  x  and  y  represent an arbitrary coordinate system  for example  you can treat  x  as an angle and  y  as a radius to produce a  radial layout  http   bl ocks org mbostock 4739610f6d96aaad2fb1e78a72b385ab   You may want to call   root  sort   node sort  before passing the hierarchy to the cluster layout    a name  cluster size  href   cluster size     a   i cluster  i   b size  b    i size  i         https   github com d3 d3 hierarchy blob master src cluster js L75  Source    If  size  is specified  sets this cluster layout s size to the specified two element array of numbers   width    height   and returns this cluster layout  If  size  is not specified  returns the current layout size  which defaults to  1  1   A layout size of null indicates that a  node size   cluster nodeSize  will be used instead  The coordinates  x  and  y  represent an arbitrary coordinate system  for example  to produce a  radial layout  http   bl ocks org mbostock 4739610f6d96aaad2fb1e78a72b385ab   a size of  360   radius   corresponds to a breadth of 360  and a depth of  radius     a name  cluster nodeSize  href   cluster nodeSize     a   i cluster  i   b nodeSize  b    i size  i         https   github com d3 d3 hierarchy blob master src cluster js L79  Source    If  size  is specified  sets this cluster layout s node size to the specified two element array of numbers   width    height   and returns this cluster layout  If  size  is not specified  returns the current node size  which defaults to null  A node size of null indicates that a  layout size   cluster size  will be used instead  When a node size is specified  the root node is always positioned at  0  0     a name  cluster separation  href   cluster separation     a   i cluster  i   b separation  b    i separation  i         https   github com d3 d3 hierarchy blob master src cluster js L71  Source    If  separation  is specified  sets the separation accessor to the specified function and returns this cluster layout  If  separation  is not specified  returns the current separation accessor  which defaults to      js function separation a  b      return a parent    b parent   1   2         The separation accessor is used to separate neighboring leaves  The separation function is passed two leaves  a  and  b   and must return the desired separation  The nodes are typically siblings  though the nodes may be more distantly related if the layout decides to place such nodes adjacent       Tree    img alt  Tidy Tree  src  https   raw githubusercontent com d3 d3 hierarchy master img tree png    http   bl ocks org mbostock 9d0899acb5d3b8d839d9d613a9e1fe04   The   tree   layout produces tidy node link diagrams of trees using the  Reingold Tilford  tidy  algorithm  http   reingold co tidier drawings pdf   improved to run in linear time by  Buchheim  et al    http   dirk jivas de papers buchheim02improving pdf  Tidy trees are typically more compact than  dendograms   cluster     a name  tree  href   tree     a  d3  b tree  b         https   github com d3 d3 hierarchy blob master src tree js  Source    Creates a new tree layout with default settings    a name   tree  href    tree     a   i tree  i   i root  i        https   github com d3 d3 hierarchy blob master src tree js L106  Source    Lays out the specified  root   hierarchy   hierarchy   assigning the following properties on  root  and its descendants      node  x   the  x  coordinate of the node    node  y   the  y  coordinate of the node  The coordinates  x  and  y  represent an arbitrary coordinate system  for example  you can treat  x  as an angle and  y  as a radius to produce a  radial layout  http   bl ocks org mbostock 2e12b0bd732e7fe4000e2d11ecab0268   You may want to call   root  sort   node sort  before passing the hierarchy to the tree layout    a name  tree size  href   tree size     a   i tree  i   b size  b    i size  i         https   github com d3 d3 hierarchy blob master src tree js L228  Source    If  size  is specified  sets this tree layout s size to the specified two element array of numbers   width    height   and returns this tree layout  If  size  is not specified  returns the current layout size  which defaults to  1  1   A layout size of null indicates that a  node size   tree nodeSize  will be used instead  The coordinates  x  and  y  represent an arbitrary coordinate system  for example  to produce a  radial layout  http   bl ocks org mbostock 2e12b0bd732e7fe4000e2d11ecab0268   a size of  360   radius   corresponds to a breadth of 360  and a depth of  radius     a name  tree nodeSize  href   tree nodeSize     a   i tree  i   b nodeSize  b    i size  i         https   github com d3 d3 hierarchy blob master src tree js L232  Source    If  size  is specified  sets this tree layout s node size to the specified two element array of numbers   width    height   and returns this tree layout  If  size  is not specified  returns the current node size  which defaults to null  A node size of null indicates that a  layout size   tree size  will be used instead  When a node size is specified  the root node is always positioned at  0  0     a name  tree separation  href   tree separation     a   i tree  i   b separation  b    i separation  i         https   github com d3 d3 hierarchy blob master src tree js L224  Source    If  separation  is specified  sets the separation accessor to the specified function and returns this tree layout  If  separation  is not specified  returns the current separation accessor  which defaults to      js function separation a  b      return a parent    b parent   1   2         A variation that is more appropriate for radial layouts reduces the separation gap proportionally to the radius      js function separation a  b      return  a parent    b parent   1   2    a depth         The separation accessor is used to separate neighboring nodes  The separation function is passed two nodes  a  and  b   and must return the desired separation  The nodes are typically siblings  though the nodes may be more distantly related if the layout decides to place such nodes adjacent       Treemap    img alt  Treemap  src  https   raw githubusercontent com d3 d3 hierarchy master img treemap png    http   bl ocks org mbostock 6bbb0a7ff7686b124d80   Introduced by  Ben Shneiderman  http   www cs umd edu hcil treemap history   in 1991  a   treemap   recursively subdivides area into rectangles according to each node s associated value  D3 s treemap implementation supports an extensible  tiling method   treemap tile   the default  squarified   treemapSquarify  method seeks to generate rectangles with a  golden  https   en wikipedia org wiki Golden ratio  aspect ratio  this offers better readability and size estimation than  slice and dice   treemapSliceDice   which simply alternates between horizontal and vertical subdivision by depth    a name  treemap  href   treemap     a  d3  b treemap  b     Creates a new treemap layout with default settings    a name   treemap  href    treemap     a   i treemap  i   i root  i        https   github com d3 d3 hierarchy blob master src treemap index js L18  Source    Lays out the specified  root   hierarchy   hierarchy   assigning the following properties on  root  and its descendants      node  x0   the left edge of the rectangle    node  y0   the top edge of the rectangle    node  x1   the right edge of the rectangle    node  y1   the bottom edge of the rectangle  You must call   root  sum   node sum  before passing the hierarchy to the treemap layout  You probably also want to call   root  sort   node sort  to order the hierarchy before computing the layout    a name  treemap tile  href   treemap tile     a   i treemap  i   b tile  b    i tile  i         https   github com d3 d3 hierarchy blob master src treemap index js L61  Source    If  tile  is specified  sets the  tiling method   treemap tiling  to the specified function and returns this treemap layout  If  tile  is not specified  returns the current tiling method  which defaults to  d3 treemapSquarify   treemapSquarify  with the golden ratio    a name  treemap size  href   treemap size     a   i treemap  i   b size  b    i size  i         https   github com d3 d3 hierarchy blob master src treemap index js L57  Source    If  size  is specified  sets this treemap layout s size to the specified two element array of numbers   width    height   and returns this treemap layout  If  size  is not specified  returns the current size  which defaults to  1  1     a name  treemap round  href   treemap round     a   i treemap  i   b round  b    i round  i         https   github com d3 d3 hierarchy blob master src treemap index js L53  Source    If  round  is specified  enables or disables rounding according to the given boolean and returns this treemap layout  If  round  is not specified  returns the current rounding state  which defaults to false    a name  treemap padding  href   treemap padding     a   i treemap  i   b padding  b    i padding  i         https   github com d3 d3 hierarchy blob master src treemap index js L65  Source    If  padding  is specified  sets the  inner   treemap paddingInner  and  outer   treemap paddingOuter  padding to the specified number or function and returns this treemap layout  If  padding  is not specified  returns the current inner padding function    a name  treemap paddingInner  href   treemap paddingInner     a   i treemap  i   b paddingInner  b    i padding  i         https   github com d3 d3 hierarchy blob master src treemap index js L69  Source    If  padding  is specified  sets the inner padding to the specified number or function and returns this treemap layout  If  padding  is not specified  returns the current inner padding function  which defaults to the constant zero  If  padding  is a function  it is invoked for each node with children  being passed the current node  The inner padding is used to separate a node s adjacent children    a name  treemap paddingOuter  href   treemap paddingOuter     a   i treemap  i   b paddingOuter  b    i padding  i         https   github com d3 d3 hierarchy blob master src treemap index js L73  Source    If  padding  is specified  sets the  top   treemap paddingTop    right   treemap paddingRight    bottom   treemap paddingBottom  and  left   treemap paddingLeft  padding to the specified number or function and returns this treemap layout  If  padding  is not specified  returns the current top padding function    a name  treemap paddingTop  href   treemap paddingTop     a   i treemap  i   b paddingTop  b    i padding  i         https   github com d3 d3 hierarchy blob master src treemap index js L77  Source    If  padding  is specified  sets the top padding to the specified number or function and returns this treemap layout  If  padding  is not specified  returns the current top padding function  which defaults to the constant zero  If  padding  is a function  it is invoked for each node with children  being passed the current node  The top padding is used to separate the top edge of a node from its children    a name  treemap paddingRight  href   treemap paddingRight     a   i treemap  i   b paddingRight  b    i padding  i         https   github com d3 d3 hierarchy blob master src treemap index js L81  Source    If  padding  is specified  sets the right padding to the specified number or function and returns this treemap layout  If  padding  is not specified  returns the current right padding function  which defaults to the constant zero  If  padding  is a function  it is invoked for each node with children  being passed the current node  The right padding is used to separate the right edge of a node from its children    a name  treemap paddingBottom  href   treemap paddingBottom     a   i treemap  i   b paddingBottom  b    i padding  i         https   github com d3 d3 hierarchy blob master src treemap index js L85  Source    If  padding  is specified  sets the bottom padding to the specified number or function and returns this treemap layout  If  padding  is not specified  returns the current bottom padding function  which defaults to the constant zero  If  padding  is a function  it is invoked for each node with children  being passed the current node  The bottom padding is used to separate the bottom edge of a node from its children    a name  treemap paddingLeft  href   treemap paddingLeft     a   i treemap  i   b paddingLeft  b    i padding  i         https   github com d3 d3 hierarchy blob master src treemap index js L89  Source    If  padding  is specified  sets the left padding to the specified number or function and returns this treemap layout  If  padding  is not specified  returns the current left padding function  which defaults to the constant zero  If  padding  is a function  it is invoked for each node with children  being passed the current node  The left padding is used to separate the left edge of a node from its children        Treemap Tiling  Several built in tiling methods are provided for use with   treemap  tile   treemap tile     a name  treemapBinary  href   treemapBinary     a  d3  b treemapBinary  b   i node  i    i x0  i    i y0  i    i x1  i    i y1  i        https   github com d3 d3 hierarchy blob master src treemap binary js  Source    Recursively partitions the specified  nodes  into an approximately balanced binary tree  choosing horizontal partitioning for wide rectangles and vertical partitioning for tall rectangles    a name  treemapDice  href   treemapDice     a  d3  b treemapDice  b   i node  i    i x0  i    i y0  i    i x1  i    i y1  i        https   github com d3 d3 hierarchy blob master src treemap dice js  Source    Divides the rectangular area specified by  x0    y0    x1    y1  horizontally according the value of each of the specified  node  s children  The children are positioned in order  starting with the left edge   x0   of the given rectangle  If the sum of the children s values is less than the specified  node  s value   i e    if the specified  node  has a non zero internal value   the remaining empty space will be positioned on the right edge   x1   of the given rectangle    a name  treemapSlice  href   treemapSlice     a  d3  b treemapSlice  b   i node  i    i x0  i    i y0  i    i x1  i    i y1  i        https   github com d3 d3 hierarchy blob master src treemap slice js  Source    Divides the rectangular area specified by  x0    y0    x1    y1  vertically according the value of each of the specified  node  s children  The children are positioned in order  starting with the top edge   y0   of the given rectangle  If the sum of the children s values is less than the specified  node  s value   i e    if the specified  node  has a non zero internal value   the remaining empty space will be positioned on the bottom edge   y1   of the given rectangle    a name  treemapSliceDice  href   treemapSliceDice     a  d3  b treemapSliceDice  b   i node  i    i x0  i    i y0  i    i x1  i    i y1  i        https   github com d3 d3 hierarchy blob master src treemap sliceDice js  Source    If the specified  node  has odd depth  delegates to  treemapSlice   treemapSlice   otherwise delegates to  treemapDice   treemapDice     a name  treemapSquarify  href   treemapSquarify     a  d3  b treemapSquarify  b   i node  i    i x0  i    i y0  i    i x1  i    i y1  i        https   github com d3 d3 hierarchy blob master src treemap squarify js  Source    Implements the  squarified treemap  https   www win tue nl  vanwijk stm pdf  algorithm by Bruls  et al    which seeks to produce rectangles of a given  aspect ratio   squarify ratio     a name  treemapResquarify  href   treemapResquarify     a  d3  b treemapResquarify  b   i node  i    i x0  i    i y0  i    i x1  i    i y1  i        https   github com d3 d3 hierarchy blob master src treemap resquarify js  Source    Like  d3 treemapSquarify   treemapSquarify   except preserves the topology  node adjacencies  of the previous layout computed by d3 treemapResquarify  if there is one and it used the same  target aspect ratio   squarify ratio   This tiling method is good for animating changes to treemaps because it only changes node sizes and not their relative positions  thus avoiding distracting shuffling and occlusion  The downside of a stable update  however  is a suboptimal layout for subsequent updates  only the first layout uses the Bruls  et al   squarified algorithm    a name  squarify ratio  href   squarify ratio     a   i squarify  i   b ratio  b   i ratio  i        https   github com d3 d3 hierarchy blob master src treemap squarify js L58  Source    Specifies the desired aspect ratio of the generated rectangles  The  ratio  must be specified as a number greater than or equal to one  Note that the orientation of the generated rectangles  tall or wide  is not implied by the ratio  for example  a ratio of two will attempt to produce a mixture of rectangles whose  width   height  ratio is either 2 1 or 1 2   However  you can approximately achieve this result by generating a square treemap at different dimensions  and then  stretching the treemap  http   bl ocks org mbostock 5c50a377e76a1974248bd628befdec95  to the desired aspect ratio   Furthermore  the specified  ratio  is merely a hint to the tiling algorithm  the rectangles are not guaranteed to have the specified aspect ratio  If not specified  the aspect ratio defaults to the golden ratio       1   sqrt 5     2  per  Kong  et al    http   vis stanford edu papers perception treemaps       Partition    img alt  Partition  src  https   raw githubusercontent com d3 d3 hierarchy master img partition png    http   bl ocks org mbostock 2e73ec84221cb9773f4c   The   partition layout   produces adjacency diagrams  a space filling variant of a node link tree diagram  Rather than drawing a link between parent and child in the hierarchy  nodes are drawn as solid areas  either arcs or rectangles   and their placement relative to other nodes reveals their position in the hierarchy  The size of the nodes encodes a quantitative dimension that would be difficult to show in a node link diagram    a name  partition  href   partition     a  d3  b partition  b     Creates a new partition layout with the default settings    a name   partition  href    partition     a   i partition  i   i root  i        https   github com d3 d3 hierarchy blob master src partition js L10  Source    Lays out the specified  root   hierarchy   hierarchy   assigning the following properties on  root  and its descendants      node  x0   the left edge of the rectangle    node  y0   the top edge of the rectangle    node  x1   the right edge of the rectangle    node  y1   the bottom edge of the rectangle  You must call   root  sum   node sum  before passing the hierarchy to the partition layout  You probably also want to call   root  sort   node sort  to order the hierarchy before computing the layout    a name  partition size  href   partition size     a   i partition  i   b size  b    i size  i         https   github com d3 d3 hierarchy blob master src partition js L43  Source    If  size  is specified  sets this partition layout s size to the specified two element array of numbers   width    height   and returns this partition layout  If  size  is not specified  returns the current size  which defaults to  1  1     a name  partition round  href   partition round     a   i partition  i   b round  b    i round  i         https   github com d3 d3 hierarchy blob master src partition js L39  Source    If  round  is specified  enables or disables rounding according to the given boolean and returns this partition layout  If  round  is not specified  returns the current rounding state  which defaults to false    a name  partition padding  href   partition padding     a   i partition  i   b padding  b    i padding  i         https   github com d3 d3 hierarchy blob master src partition js L47  Source    If  padding  is specified  sets the padding to the specified number and returns this partition layout  If  padding  is not specified  returns the current padding  which defaults to zero  The padding is used to separate a node s adjacent children       Pack    img alt  Circle Packing  src  https   raw githubusercontent com d3 d3 hierarchy master img pack png    http   bl ocks org mbostock ca5b03a33affa4160321   Enclosure diagrams use containment  nesting  to represent a hierarchy  The size of the leaf circles encodes a quantitative dimension of the data  The enclosing circles show the approximate cumulative size of each subtree  but due to wasted space there is some distortion  only the leaf nodes can be compared accurately  Although  circle packing  http   en wikipedia org wiki Circle packing  does not use space as efficiently as a  treemap   treemap   the  wasted  space more prominently reveals the hierarchical structure    a name  pack  href   pack     a  d3  b pack  b     Creates a new pack layout with the default settings    a name   pack  href    pack     a   i pack  i   i root  i        https   github com d3 d3 hierarchy blob master src pack index js L15  Source    Lays out the specified  root   hierarchy   hierarchy   assigning the following properties on  root  and its descendants      node  x   the  x  coordinate of the circle s center    node  y   the  y  coordinate of the circle s center    node  r   the radius of the circle  You must call   root  sum   node sum  before passing the hierarchy to the pack layout  You probably also want to call   root  sort   node sort  to order the hierarchy before computing the layout    a name  pack radius  href   pack radius     a   i pack  i   b radius  b    i radius  i         https   github com d3 d3 hierarchy blob master src pack index js L30  Source    If  radius  is specified  sets the pack layout s radius accessor to the specified function and returns this pack layout  If  radius  is not specified  returns the current radius accessor  which defaults to null  If the radius accessor is null  the radius of each leaf circle is derived from the leaf  node  value  computed by   node  sum   node sum    the radii are then scaled proportionally to fit the  layout size   pack size   If the radius accessor is not null  the radius of each leaf circle is specified exactly by the function    a name  pack size  href   pack size     a   i pack  i   b size  b    i size  i         https   github com d3 d3 hierarchy blob master src pack index js L34  Source    If  size  is specified  sets this pack layout s size to the specified two element array of numbers   width    height   and returns this pack layout  If  size  is not specified  returns the current size  which defaults to  1  1     a name  pack padding  href   pack padding     a   i pack  i   b padding  b    i padding  i         https   github com d3 d3 hierarchy blob master src pack index js L38  Source    If  padding  is specified  sets this pack layout s padding accessor to the specified number or function and returns this pack layout  If  padding  is not specified  returns the current padding accessor  which defaults to the constant zero  When siblings are packed  tangent siblings will be separated by approximately the specified padding  the enclosing parent circle will also be separated from its children by approximately the specified padding  If an  explicit radius   pack radius  is not specified  the padding is approximate because a two pass algorithm is needed to fit within the  layout size   pack size   the circles are first packed without padding  a scaling factor is computed and applied to the specified padding  and lastly the circles are re packed with padding    a name  packSiblings  href   packSiblings     a  d3  b packSiblings  b   i circles  i        https   github com d3 d3 hierarchy blob master src pack siblings js  Source    Packs the specified array of  circles   each of which must have a  circle  r property specifying the circle s radius  Assigns the following properties to each circle      circle  x   the  x  coordinate of the circle s center    circle  y   the  y  coordinate of the circle s center  The circles are positioned according to the front chain packing algorithm by  Wang  et al    https   dl acm org citation cfm id 1124851    a name  packEnclose  href   packEnclose     a  d3  b packEnclose  b   i circles  i        https   github com d3 d3 hierarchy blob master src pack enclose js  Source    Computes the  smallest circle  https   en wikipedia org wiki Smallest circle problem  that encloses the specified array of  circles   each of which must have a  circle  r property specifying the circle s radius  and  circle  x and  circle  y properties specifying the circle s center  The enclosing circle is computed using the  Matou ek Sharir Welzl algorithm  http   www inf ethz ch personal emo PublFiles SubexLinProg ALG16 96 pdf    See also  Apollonius  Problem  https   bl ocks org mbostock 751fdd637f4bc2e3f08b    ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-hierarchy"},{"name":"d3/d3-axis","artist":"return, specifi, sourc, array, valu","id":5,"playcount":13630,"description":"d3/d3-axis return, specifi, sourc, array, valu   d3 axis  The axis component renders human readable reference marks for  scales  https   github com d3 d3 scale   This alleviates one of the more tedious tasks in visualizing data      Installing  If you use NPM   npm install d3 axis   Otherwise  download the  latest release  https   github com d3 d3 axis releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 axis v1 min js  or as part of  D3 4 0  https   github com d3 d3    To be useful  you ll also want to use  d3 scale  https   github com d3 d3 scale  and  d3 selection  https   github com d3 d3 selection   but these are soft dependencies   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 axis v1 min js    script   script   var axis   d3 axisLeft scale      script        Try d3 axis in your browser   https   tonicdev com npm d3 axis      API Reference  Regardless of orientation  axes are always rendered at the origin  To change the position of the axis with respect to the chart  specify a  transform attribute  http   www w3 org TR SVG coords html TransformAttribute  on the containing element  For example      js d3 select  body   append  svg        attr  width   1440       attr  height   30     append  g        attr  transform    translate 0 30         call axis        The elements created by the axis are considered part of its public API  You can apply external stylesheets or modify the generated axis elements to  customize the axis appearance  https   bl ocks org mbostock 3371592      img alt  Custom Axis  src  https   raw githubusercontent com d3 d3 axis master img custom png  width  420  height  219    http   bl ocks org mbostock 3371592   An axis consists of a  path element  https   www w3 org TR SVG paths html PathElement  of class  domain  representing the extent of the scale s domain  followed by transformed  g elements  https   www w3 org TR SVG struct html Groups  of class  tick  representing each of the scale s ticks  Each tick has a  line element  https   www w3 org TR SVG shapes html LineElement  to draw the tick line  and a  text element  https   www w3 org TR SVG text html TextElement  for the tick label  For example  here is a typical bottom oriented axis      html  g fill  none  font size  10  font family  sans serif  text anchor  middle      path class  domain  stroke   000  d  M0 5 6V0 5H880 5V6    path     g class  tick  opacity  1  transform  translate 0 5 0         line stroke   000  y2  6    line       text fill   000  y  9  dy  0 71em  0 0  text      g     g class  tick  opacity  1  transform  translate 176 5 0         line stroke   000  y2  6    line       text fill   000  y  9  dy  0 71em  0 2  text      g     g class  tick  opacity  1  transform  translate 352 5 0         line stroke   000  y2  6    line       text fill   000  y  9  dy  0 71em  0 4  text      g     g class  tick  opacity  1  transform  translate 528 5 0         line stroke   000  y2  6    line       text fill   000  y  9  dy  0 71em  0 6  text      g     g class  tick  opacity  1  transform  translate 704 5 0         line stroke   000  y2  6    line       text fill   000  y  9  dy  0 71em  0 8  text      g     g class  tick  opacity  1  transform  translate 880 5 0         line stroke   000  y2  6    line       text fill   000  y  9  dy  0 71em  1 0  text      g    g       The orientation of an axis is fixed  to change the orientation  remove the old axis and create a new axis    a name  axisTop  href   axisTop     a  d3  b axisTop  b   i scale  i        https   github com d3 d3 axis blob master src axis js L159  Source    Constructs a new top oriented axis generator for the given  scale  https   github com d3 d3 scale   with empty  tick arguments   axis ticks   a  tick size   axis tickSize  of 6 and  padding   axis tickPadding  of 3  In this orientation  ticks are drawn above the horizontal domain path    a name  axisRight  href   axisRight     a  d3  b axisRight  b   i scale  i        https   github com d3 d3 axis blob master src axis js L163  Source    Constructs a new right oriented axis generator for the given  scale  https   github com d3 d3 scale   with empty  tick arguments   axis ticks   a  tick size   axis tickSize  of 6 and  padding   axis tickPadding  of 3  In this orientation  ticks are drawn to the right of the vertical domain path    a name  axisBottom  href   axisBottom     a  d3  b axisBottom  b   i scale  i        https   github com d3 d3 axis blob master src axis js L167  Source    Constructs a new bottom oriented axis generator for the given  scale  https   github com d3 d3 scale   with empty  tick arguments   axis ticks   a  tick size   axis tickSize  of 6 and  padding   axis tickPadding  of 3  In this orientation  ticks are drawn below the horizontal domain path    a name  axisLeft  href   axisLeft     a  d3  b axisLeft  b   i scale  i        https   github com d3 d3 axis blob master src axis js L171  Source    Constructs a new left oriented axis generator for the given  scale  https   github com d3 d3 scale   with empty  tick arguments   axis ticks   a  tick size   axis tickSize  of 6 and  padding   axis tickPadding  of 3  In this orientation  ticks are drawn to the left of the vertical domain path    a name   axis  href    axis     a   i axis  i   i context  i        https   github com d3 d3 axis blob master src axis js L40  Source    Render the axis to the given  context   which may be either a  selection  https   github com d3 d3 selection  of SVG containers  either SVG or G elements  or a corresponding  transition  https   github com d3 d3 transition     a name  axis scale  href   axis scale     a   i axis  i   b scale  b    i scale  i         https   github com d3 d3 axis blob master src axis js L120  Source    If  scale  is specified  sets the  scale  https   github com d3 d3 scale  and returns the axis  If  scale  is not specified  returns the current scale    a name  axis ticks  href   axis ticks     a   i axis  i   b ticks  b   i arguments   i        https   github com d3 d3 axis blob master src axis js L124  Source    br  a href   axis ticks     a   i axis  i   b ticks  b    i count  i     i specifier  i      br  a href   axis ticks     a   i axis  i   b ticks  b    i interval  i     i specifier  i      Sets the  arguments  that will be passed to   scale  ticks  https   github com d3 d3 scale blob master README md continuous ticks  and   scale  tickFormat  https   github com d3 d3 scale blob master README md continuous tickFormat  when the axis is  rendered    axis   and returns the axis generator  The meaning of the  arguments  depends on the  axis  scale   axis scale  type  most commonly  the arguments are a suggested  count  for the number of ticks  or a  time  interval   https   github com d3 d3 time  for time scales   and an optional  format  specifier   https   github com d3 d3 format  to customize how the tick values are formatted   This method has no effect if the scale does not implement  scale  ticks  as with  band  https   github com d3 d3 scale blob master README md band scales  and  point  https   github com d3 d3 scale blob master README md point scales  scales  To set the tick values explicitly  use   axis  tickValues   axis tickValues   To set the tick format explicitly  use   axis  tickFormat   axis tickFormat    For example  to generate twenty ticks with SI prefix formatting on a linear scale  say      js axis ticks 20   s         To generate ticks every fifteen minutes with a time scale  say      js axis ticks d3 timeMinute every 15         This method is also a convenience function for   axis  tickArguments   axis tickArguments   For example  this      js axis ticks 10        Is equivalent to      js axis tickArguments  10          a name  axis tickArguments  href   axis tickArguments     a   i axis  i   b tickArguments  b    i arguments  i         https   github com d3 d3 axis blob master src axis js L128  Source    If  arguments  is specified  sets the  arguments  that will be passed to   scale  ticks  https   github com d3 d3 scale blob master README md continuous ticks  and   scale  tickFormat  https   github com d3 d3 scale blob master README md continuous tickFormat  when the axis is  rendered    axis   and returns the axis generator  The meaning of the  arguments  depends on the  axis  scale   axis scale  type  most commonly  the arguments are a suggested  count  for the number of ticks  or a  time  interval   https   github com d3 d3 time  for time scales   and an optional  format  specifier   https   github com d3 d3 format  to customize how the tick values are formatted   If  arguments  is specified  this method has no effect if the scale does not implement  scale  ticks  as with  band  https   github com d3 d3 scale blob master README md band scales  and  point  https   github com d3 d3 scale blob master README md point scales  scales  To set the tick values explicitly  use   axis  tickValues   axis tickValues   To set the tick format explicitly  use   axis  tickFormat   axis tickFormat    If  arguments  is not specified  returns the current tick arguments  which defaults to the empty array   For example  to generate twenty ticks with SI prefix formatting on a linear scale  say      js axis tickArguments  20   s          To generate ticks every fifteen minutes with a time scale  say      js axis tickArguments  d3 timeMinute every 15          See also   axis  ticks   axis ticks     a name  axis tickValues  href   axis tickValues     a   i axis  i   b tickValues  b    i values  i         https   github com d3 d3 axis blob master src axis js L132  Source    If a  values  array is specified  the specified values are used for ticks rather than using the scale s automatic tick generator  If  values  is null  clears any previously set explicit tick values and reverts back to the scale s tick generator  If  values  is not specified  returns the current tick values  which defaults to null  For example  to generate ticks at specific values      js var xAxis   d3 axisBottom x       tickValues  1  2  3  5  8  13  21         The explicit tick values take precedent over the tick arguments set by   axis  tickArguments   axis tickArguments   However  any tick arguments will still be passed to the scale s  tickFormat   axis tickFormat  function if a tick format is not also set    a name  axis tickFormat  href   axis tickFormat     a   i axis  i   b tickFormat  b    i format  i         https   github com d3 d3 axis blob master src axis js L136  Source    If  format  is specified  sets the tick format function and returns the axis  If  format  is not specified  returns the current format function  which defaults to null  A null format indicates that the scale s default formatter should be used  which is generated by calling   scale  tickFormat  https   github com d3 d3 scale blob master README md continuous tickFormat   In this case  the arguments specified by   axis  tickArguments   axis tickArguments  are likewise passed to  scale  tickFormat   See  d3 format  https   github com d3 d3 format  and  d3 time format  https   github com d3 d3 time format  for help creating formatters  For example  to display integers with comma grouping for thousands      js axis tickFormat d3 format    0f          More commonly  a format specifier is passed to   axis  ticks   axis ticks       js axis ticks 10    f         This has the advantage of setting the format precision automatically based on the tick interval    a name  axis tickSize  href   axis tickSize     a   i axis  i   b tickSize  b    i size  i         https   github com d3 d3 axis blob master src axis js L140  Source    If  size  is specified  sets the  inner   axis tickSizeInner  and  outer   axis tickSizeOuter  tick size to the specified value and returns the axis  If  size  is not specified  returns the current inner tick size  which defaults to 6    a name  axis tickSizeInner  href   axis tickSizeInner     a   i axis  i   b tickSizeInner  b    i size  i         https   github com d3 d3 axis blob master src axis js L144  Source    If  size  is specified  sets the inner tick size to the specified value and returns the axis  If  size  is not specified  returns the current inner tick size  which defaults to 6  The inner tick size controls the length of the tick lines  offset from the native position of the axis    a name  axis tickSizeOuter  href   axis tickSizeOuter     a   i axis  i   b tickSizeOuter  b    i size  i         https   github com d3 d3 axis blob master src axis js L148  Source    If  size  is specified  sets the outer tick size to the specified value and returns the axis  If  size  is not specified  returns the current outer tick size  which defaults to 6  The outer tick size controls the length of the square ends of the domain path  offset from the native position of the axis  Thus  the  outer ticks  are not actually ticks but part of the domain path  and their position is determined by the associated scale s domain extent  Thus  outer ticks may overlap with the first or last inner tick  An outer tick size of 0 suppresses the square ends of the domain path  instead producing a straight line    a name  axis tickPadding  href   axis tickPadding     a   i axis  i   b tickPadding  b    i padding  i         https   github com d3 d3 axis blob master src axis js L152  Source    If  padding  is specified  sets the padding to the specified value in pixels and returns the axis  If  padding  is not specified  returns the current padding which defaults to 3 pixels  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-axis"},{"name":"d3/d3-logo","artist":"project, sourc, img, bra, polygon","id":6,"playcount":1452,"description":"d3/d3-logo project, sourc, img, bra, polygon   D3 Logos  This repository contains the official D3 logos in PNG and SVG form     Variant   PNG   SVG                             orange     img src  https   raw githubusercontent com d3 d3 logo master d3 png  width  200  height  200    https   github com d3 d3 logo blob master d3 png      img src  https   raw githubusercontent com d3 d3 logo master d3 png  width  200  height  200    https   github com d3 d3 logo blob master d3 svg      black     img src  https   raw githubusercontent com d3 d3 logo master d3 black png  width  200  height  200    https   github com d3 d3 logo blob master d3 black png      img src  https   raw githubusercontent com d3 d3 logo master d3 black png  width  200  height  200    https   github com d3 d3 logo blob master d3 black svg      outline     img src  https   raw githubusercontent com d3 d3 logo master d3 outline png  width  200  height  200    https   github com d3 d3 logo blob master d3 outline png      img src  https   raw githubusercontent com d3 d3 logo master d3 outline png  width  200  height  200    https   github com d3 d3 logo blob master d3 outline svg      white     img src  https   raw githubusercontent com d3 d3 logo master d3 white png  width  200  height  200    https   github com d3 d3 logo blob master d3 white png      img src  https   raw githubusercontent com d3 d3 logo master d3 white png  width  200  height  200    https   github com d3 d3 logo blob master d3 white svg    ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-logo"},{"name":"d3/d3-require","artist":"color, specifi, return, valu, space","id":7,"playcount":4947,"description":"d3/d3-require color, specifi, return, valu, space   d3 require  A minimal  promise based implementation to require  asynchronous module definitions  https   github com amdjs amdjs api blob master AMD md   AMD   This implementation is  small  https   github com d3 d3 require blob master index js  and supports a strict subset of AMD  It is designed to work with browser targeting libraries that implement one of the  recommended UMD patterns  https   github com umdjs umd   The constraints of this implementation are     The  define  method must be called synchronously by the library on load     Only the built in  exports  dependency is allowed  no  require  or  module  as in CommonJS     Named module definitions   e g    jQuery  are treated as anonymous modules   By default   d3 require   require  loads modules from  unpkg  https   unpkg com    the module  name  can be any package  or scoped package  name optionally followed by the at sign     and a semver range  For example   d3 require  d3 5    loads the highest version of  D3  https   d3js org  5 x  Relative paths and absolute URLs are also supported  You can change this behavior using  d3 requireFrom   requireFrom       Installing  If you use NPM   npm install d3 require   Otherwise  download the  latest release  https   github com d3 d3 require releases latest   You can also load directly from  unpkg com  https   unpkg com d3 require    AMD  CommonJS  and vanilla environments are supported  In vanilla   d3  and  define  globals are exported      html  script src  https   unpkg com d3 require 1    script   script   d3 require  d3 array   then d3        console log d3 range 100           script          API Reference   a href   require  name  require     a  d3  b require  b   i names   i        https   github com d3 d3 require blob master index js  Source    To load a module      js d3 require  d3 array   then d3        console log d3 range 100             To load a module within a version range      js d3 require  d3 array 1   then d3        console log d3 range 100             To load two modules and merge them into a single object      js d3 require  d3 array    d3 color   then d3        console log d3 range 360  map h    d3 hsl h  1  0 5              Note  if more than one  name  is specified  the promise will yield a new object with each of the loaded module s own enumerable property values copied into the new object  If multiple modules define the same property name  the value from the latest module that defines the property is used  it is recommended that you only combine modules that avoid naming conflicts   If a module s property value is null or undefined on load  such as  d3 event  https   github com d3 d3 selection blob master README md event   the value will be exposed via  getter  https   developer mozilla org en US docs Web JavaScript Reference Functions get  rather than copied  this is to simulate ES module style  live bindings  http   2ality com 2015 07 es6 module exports html   However  property values that are neither null nor undefined on load are copied by value assignment  and thus   are not live bindings      a href   requireFrom  name  requireFrom     a  d3  b requireFrom  b   i resolver  i        https   github com d3 d3 require blob master index js  Source    Returns a new  require function   require  which loads modules from the specified  resolver   which is a function that takes a module name and returns the corresponding URL  For example      js const myRequire   d3 requireFrom async name        return  https   unpkg com   name         myRequire  d3 array   then d3        console log d3 range 100             The returned  require  function exposes the passed in  resolver  as   require  resolve   require resolve     a href   require resolve  name  require resolve     a   i require  i   b resolve  b   i name  i     i base  i         https   github com d3 d3 require blob master index js  Source    Returns a promise to the URL to load the module with the specified  name   The  name  may also be specified as a relative path  in which case it is resolved relative to the specified  base  URL  If  base  is not specified  it defaults to the global  location  https   developer mozilla org en US docs Web API Window location     a href   require alias  name  require alias     a   i require  i   b alias  b   i aliases  i        https   github com d3 d3 require blob master index js  Source    Returns a  require function   require  with the specified  aliases   For each key in the specified  aliases  object  any require of that key is substituted with the corresponding value  The values can be strings representing the name or URL of the module to load  or a literal non string value for direct substitution  For example  if  React  and  ReactDOM  are already in scope  you can say      js const myRequire   d3 require alias      react   React     react dom   ReactDOM      myRequire  semiotic   then Semiotic        console log Semiotic           ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-require"},{"name":"d3/d3-sankey","artist":"return, specifi, sourc, array, valu","id":8,"playcount":12284,"description":"d3/d3-sankey return, specifi, sourc, array, valu   d3 sankey  Sankey diagrams visualize the directed flow between nodes in an acyclic network  For example  this diagram shows a possible scenario of UK energy production and consumption in 2050     img alt  Sankey diagram  src  https   raw githubusercontent com d3 d3 sankey master img energy png  width  960    https   bl ocks org mbostock ca9a0bb7ba204d12974bca90acc507c0   Source  Department of Energy   Climate Change  Tom Counsell      Installing  If you use NPM   npm install d3 sankey   Otherwise  download the  latest release  https   github com d3 d3 sankey releases latest   You can also load directly from  unpkg com  https   unpkg com d3 sankey    AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   unpkg com d3 array 1    script   script src  https   unpkg com d3 collection 1    script   script src  https   unpkg com d3 path 1    script   script src  https   unpkg com d3 shape 1    script   script src  https   unpkg com d3 sankey 0    script   script   var sankey   d3 sankey       script          API Reference   a href   sankey  name  sankey     a  d3  b sankey  b         https   github com d3 d3 sankey blob master src sankey js L52  Source    Constructs a new Sankey generator with the default settings    a href    sankey  name   sankey     a   i sankey  i   i arguments  i         https   github com d3 d3 sankey blob master src sankey js L62  Source    Computes the node and link positions for the given  arguments   returning a  graph  representing the Sankey layout  The returned  graph  has the following properties      graph  nodes   the array of  nodes   sankey nodes     graph  links   the array of  links   sankey links    a href   sankey update  name  sankey update     a   i sankey  i   b update  b   i graph  i        https   github com d3 d3 sankey blob master src sankey js L72  Source    Recomputes the specified  graph  s links  positions  updating the following properties of each  link       link  y0   the link s vertical starting position  at source node     link  y1   the link s vertical end position  at target node   This method is intended to be called after computing the initial  Sankey layout    sankey   for example when the diagram is repositioned interactively    a name  sankey nodes  href   sankey nodes     a   i sankey  i   b nodes  b    i nodes  i         https   github com d3 d3 sankey blob master src sankey js L93  Source    If  nodes  is specified  sets the Sankey generator s nodes accessor to the specified function or array and returns this Sankey generator  If  nodes  is not specified  returns the current nodes accessor  which defaults to      js function nodes graph      return graph nodes         If  nodes  is specified as a function  the function is invoked when the Sankey layout is  generated    sankey   being passed any arguments passed to the Sankey generator  This function must return an array of nodes  If  nodes  is not a function  it must be a constant array of  nodes    Each  node  must be an object  The following properties are assigned by the  Sankey generator    sankey       node  sourceLinks   the array of outgoing  links   sankey links  which have this node as their source    node  targetLinks   the array of incoming  links   sankey links  which have this node as their target    node  value   the node s value  the sum of  link  value for the node s incoming  links   sankey links     node  index   the node s zero based index within the array of nodes    node  depth   the node s zero based graph depth  derived from the graph topology    node  height   the node s zero based graph height  derived from the graph topology    node  x0   the node s minimum horizontal position  derived from  node  depth    node  x1   the node s maximum horizontal position   node  x0     sankey  nodeWidth   sankey nodeWidth      node  y0   the node s minimum vertical position    node  y1   the node s maximum vertical position   node  y1    node  y0 is proportional to  node  value   See also   sankey  links   sankey links     a name  sankey links  href   sankey links     a   i sankey  i   b links  b    i links  i         https   github com d3 d3 sankey blob master src sankey js L97  Source    If  links  is specified  sets the Sankey generator s links accessor to the specified function or array and returns this Sankey generator  If  links  is not specified  returns the current links accessor  which defaults to      js function links graph      return graph links         If  links  is specified as a function  the function is invoked when the Sankey layout is  generated    sankey   being passed any arguments passed to the Sankey generator  This function must return an array of links  If  links  is not a function  it must be a constant array of  links    Each  link  must be an object with the following properties      link  source   the link s source  node   sankey nodes     link  target   the link s target  node   sankey nodes     link  value   the link s numeric value  For convenience  a link s source and target may be initialized using numeric or string identifiers rather than object references    see   sankey  nodeId   sankey nodeId   The following properties are assigned to each link by the  Sankey generator    sankey       link  y0   the link s vertical starting position  at source node     link  y1   the link s vertical end position  at target node     link  width   the link s width  proportional to  link  value     link  index   the zero based index of  link  within the array of links   a name  sankey nodeId  href   sankey nodeId     a   i sankey  i   b nodeId  b    i id  i         https   github com d3 d3 sankey blob master src sankey js L77  Source    If  id  is specified  sets the node id accessor to the specified function and returns this Sankey generator  If  id  is not specified  returns the current node id accessor  which defaults to the numeric  node  index      js function id d      return d index         The default id accessor allows each link s source and target to be specified as a zero based index into the  nodes   sankey nodes  array  For example      js var nodes         id    Alice        id    Bob        id    Carol       var links         source   0   target   1      Alice   Bob     source   1   target   2     Bob   Carol         Now consider a different id accessor that returns a string      js function id d      return d id         With this accessor  you can use named sources and targets      js var nodes         id    Alice        id    Bob        id    Carol       var links         source    Alice    target    Bob        source    Bob    target    Carol           This is particularly useful when representing graphs in JSON  as JSON does not allow references  See  this example  https   bl ocks org mbostock f584aa36df54c451c94a9d0798caed35     a name  sankey nodeAlign  href   sankey nodeAlign     a   i sankey  i   b nodeAlign  b    i align  i         https   github com d3 d3 sankey blob master src sankey js L81  Source    If  align  is specified  sets the node  alignment method   alignments  the specified function and returns this Sankey generator  If  align  is not specified  returns the current node alignment method  which defaults to  d3 sankeyJustify   sankeyJustify   The specified function is evaluated for each input  node  in order  being passed the current  node  and the total depth  n  of the graph  one plus the maximum  node  depth   and must return an integer between 0 and  n    1 that indicates the desired horizontal position of the node in the generated Sankey diagram    a name  sankey nodeWidth  href   sankey nodeWidth     a   i sankey  i   b nodeWidth  b    i width  i         https   github com d3 d3 sankey blob master src sankey js L85  Source    If  width  is specified  sets the node width to the specified number and returns this Sankey generator  If  width  is not specified  returns the current node width  which defaults to 24    a name  sankey nodePadding  href   sankey nodePadding     a   i sankey  i   b nodePadding  b    i padding  i         https   github com d3 d3 sankey blob master src sankey js L89  Source    If  padding  is specified  sets the vertical separation between nodes at each column to the specified number and returns this Sankey generator  If  padding  is not specified  returns the current node padding  which defaults to 8    a name  sankey extent  href   sankey extent     a   i sankey  i   b extent  b    i extent  i         https   github com d3 d3 sankey blob master src sankey js L105  Source    If  extent  is specified  sets the extent of the Sankey layout to the specified bounds and returns the layout  The  extent  bounds are specified as an array      i x0  i    i y0  i        i x1  i    i y1  i       where  x0  is the left side of the extent   y0  is the top   x1  is the right and  y1  is the bottom  If  extent  is not specified  returns the current extent which defaults to   0  0    1  1      a name  sankey size  href   sankey size     a   i sankey  i   b size  b    i size  i         https   github com d3 d3 sankey blob master src sankey js L101  Source    An alias for   sankey  extent   sankey extent  where the minimum  x  and  y  of the extent are  0 0   Equivalent to      js sankey extent   0  0   size          a name  sankey iterations  href   sankey iterations     a   i sankey  i   b iterations  b    i iterations  i         https   github com d3 d3 sankey blob master src sankey js L109  Source    If  iterations  is specified  sets the number of relaxation iterations when  generating the layout    sankey  and returns this Sankey generator  If  iterations  is not specified  returns the current number of relaxation iterations  which defaults to 32       Alignments  See   sankey  nodeAlign   sankey nodeAlign     a name  sankeyLeft  href   sankeyLeft     a  d3  b sankeyLeft  b   i node  i    i n  i        https   github com d3 d3 sankey blob master src align js L7  Source     img alt  left  src  https   raw githubusercontent com d3 d3 sankey master img align left png  width  480    Returns  node  depth    a name  sankeyRight  href   sankeyRight     a  d3  b sankeyRight  b   i node  i    i n  i        https   github com d3 d3 sankey blob master src align js L11  Source     img alt  right  src  https   raw githubusercontent com d3 d3 sankey master img align right png  width  480    Returns  n    1    node  height    a name  sankeyCenter  href   sankeyCenter     a  d3  b sankeyCenter  b   i node  i    i n  i        https   github com d3 d3 sankey blob master src align js L19  Source     img alt  center  src  https   raw githubusercontent com d3 d3 sankey master img align center png  width  480    Like  d3 sankeyLeft   sankeyLeft   except that nodes without any incoming links are moved as right as possible    a name  sankeyJustify  href   sankeyJustify     a  d3  b sankeyJustify  b   i node  i    i n  i        https   github com d3 d3 sankey blob master src align js L15  Source     img alt  justify  src  https   raw githubusercontent com d3 d3 sankey master img energy png  width  480    Like  d3 sankeyLeft   sankeyLeft   except that nodes without any outgoing links are moved to the far right       Links   a name  sankeyLinkHorizontal  href   sankeyLinkHorizontal     a  d3  b sankeyLinkHorizontal  b         https   github com d3 d3 sankey blob master src sankeyLinkHorizontal js  Source    Returns a  horizontal link shape  https   github com d3 d3 shape blob master README md linkHorizontal  suitable for a Sankey diagram  The  source accessor  https   github com d3 d3 shape blob master README md link source  is defined as      js function source d      return  d source x1  d y0          The  target accessor  https   github com d3 d3 shape blob master README md link target  is defined as      js function target d      return  d target x0  d y1          For example  to render the links of a Sankey diagram in SVG  you might say      js svg append  g        attr  fill    none        attr  stroke     000        attr  stroke opacity   0 2     selectAll  path      data graph links     enter   append  path        attr  d   d3 sankeyLinkHorizontal         attr  stroke width   function d    return d width          ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-sankey"},{"name":"d3/d3-ease","artist":"project, sourc, img, bra, polygon","id":9,"playcount":17841,"description":"d3/d3-ease project, sourc, img, bra, polygon   d3 ease   Easing  is a method of distorting time to control apparent motion in animation  It is most commonly used for  slow in  slow out  https   en wikipedia org wiki 12 basic principles of animation Slow In and Slow Out   By easing time   animated transitions  https   github com d3 d3 transition  are smoother and exhibit more plausible motion   The easing types in this module implement the  ease method   ease ease   which takes a normalized time  t  and returns the corresponding  eased  time  t    Both the normalized time and the eased time are typically in the range  0 1   where 0 represents the start of the animation and 1 represents the end  some easing types  such as  elastic   easeElastic   may return eased times slightly outside this range  A good easing type should return 0 if  t    0 and 1 if  t    1  See the  easing explorer  http   bl ocks org mbostock 248bac3b8e354a9103c4  for a visual demonstration   These easing types are largely based on work by  Robert Penner  http   robertpenner com easing        Installing  If you use NPM   npm install d3 ease   Otherwise  download the  latest release  https   github com d3 d3 ease releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 ease v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 ease v1 min js    script   script   var ease   d3 easeCubic     script        Try d3 ease in your browser   https   tonicdev com npm d3 ease      API Reference   a name   ease  href    ease     a   i ease  i   i t  i    Given the specified normalized time  t   typically in the range  0 1   returns the  eased  time  t    also typically in  0 1   0 represents the start of the animation and 1 represents the end  A good implementation returns 0 if  t    0 and 1 if  t    1  See the  easing explorer  http   bl ocks org mbostock 248bac3b8e354a9103c4  for a visual demonstration  For example  to apply  cubic   easeCubic  easing      js var te   d3 easeCubic t        Similarly  to apply custom  elastic   easeElastic  easing      js    Before the animation starts  create your easing function  var customElastic   d3 easeElastic period 0 4       During the animation  apply the easing function  var te   customElastic t         a name  easeLinear  href   easeLinear     a  d3  b easeLinear  b   i t  i        https   github com d3 d3 ease blob master src linear js  Source    Linear easing  the identity function   linear   t   returns  t      img src  https   raw githubusercontent com d3 d3 ease master img linear png  alt  linear  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  linear    a name  easePolyIn  href   easePolyIn     a  d3  b easePolyIn  b   i t  i        https   github com d3 d3 ease blob master src poly js L3  Source    Polynomial easing  raises  t  to the specified  exponent   poly exponent   If the exponent is not specified  it defaults to 3  equivalent to  cubicIn   easeCubicIn      img src  https   raw githubusercontent com d3 d3 ease master img polyIn png  alt  polyIn  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  polyIn    a name  easePolyOut  href   easePolyOut     a  d3  b easePolyOut  b   i t  i        https   github com d3 d3 ease blob master src poly js L15  Source    Reverse polynomial easing  equivalent to 1    polyIn   easePolyIn  1    t    If the  exponent   poly exponent  is not specified  it defaults to 3  equivalent to  cubicOut   easeCubicOut      img src  https   raw githubusercontent com d3 d3 ease master img polyOut png  alt  polyOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  polyOut    a name  easePoly  href   easePoly     a  d3  b easePoly  b   i t  i        https   github com d3 d3 ease blob master src poly js  Source    br  a name  easePolyInOut  href   easePolyInOut     a  d3  b easePolyInOut  b   i t  i        https   github com d3 d3 ease blob master src poly js L27  Source    Symmetric polynomial easing  scales  polyIn   easePolyIn  for  t  in  0  0 5  and  polyOut   easePolyOut  for  t  in  0 5  1   If the  exponent   poly exponent  is not specified  it defaults to 3  equivalent to  cubic   easeCubic      img src  https   raw githubusercontent com d3 d3 ease master img polyInOut png  alt  polyInOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  polyInOut    a name  poly exponent  href   poly exponent     a   i poly  i   b exponent  b   i e  i        https   github com d3 d3 ease blob master src poly js L1  Source    Returns a new polynomial easing with the specified exponent  e   For example  to create equivalents of  linear   easeLinear    quad   easeQuad   and  cubic   easeCubic       js var linear   d3 easePoly exponent 1       quad   d3 easePoly exponent 2       cubic   d3 easePoly exponent 3         a name  easeQuadIn  href   easeQuadIn     a  d3  b easeQuadIn  b   i t  i        https   github com d3 d3 ease blob master src quad js L1  Source    Quadratic easing  equivalent to  polyIn   easePolyIn   exponent   poly exponent  2      img src  https   raw githubusercontent com d3 d3 ease master img quadIn png  alt  quadIn  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  quadIn    a name  easeQuadOut  href   easeQuadOut     a  d3  b easeQuadOut  b   i t  i        https   github com d3 d3 ease blob master src quad js L5  Source    Reverse quadratic easing  equivalent to 1    quadIn   easeQuadIn  1    t    Also equivalent to  polyOut   easePolyOut   exponent   poly exponent  2      img src  https   raw githubusercontent com d3 d3 ease master img quadOut png  alt  quadOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  quadOut    a name  easeQuad  href   easeQuad     a  d3  b easeQuad  b   i t  i        https   github com d3 d3 ease blob master src quad js  Source    br  a name  easeQuadInOut  href   easeQuadInOut     a  d3  b easeQuadInOut  b   i t  i        https   github com d3 d3 ease blob master src quad js L9  Source    Symmetric quadratic easing  scales  quadIn   easeQuadIn  for  t  in  0  0 5  and  quadOut   easeQuadOut  for  t  in  0 5  1   Also equivalent to  poly   easePoly   exponent   poly exponent  2      img src  https   raw githubusercontent com d3 d3 ease master img quadInOut png  alt  quadInOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  quadInOut    a name  easeCubicIn  href   easeCubicIn     a  d3  b easeCubicIn  b   i t  i        https   github com d3 d3 ease blob master src cubic js L1  Source    Cubic easing  equivalent to  polyIn   easePolyIn   exponent   poly exponent  3      img src  https   raw githubusercontent com d3 d3 ease master img cubicIn png  alt  cubicIn  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  cubicIn    a name  easeCubicOut  href   easeCubicOut     a  d3  b easeCubicOut  b   i t  i        https   github com d3 d3 ease blob master src cubic js L5  Source    Reverse cubic easing  equivalent to 1    cubicIn   easeCubicIn  1    t    Also equivalent to  polyOut   easePolyOut   exponent   poly exponent  3      img src  https   raw githubusercontent com d3 d3 ease master img cubicOut png  alt  cubicOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  cubicOut    a name  easeCubic  href   easeCubic     a  d3  b easeCubic  b   i t  i        https   github com d3 d3 ease blob master src cubic js  Source    br  a name  easeCubicInOut  href   easeCubicInOut     a  d3  b easeCubicInOut  b   i t  i        https   github com d3 d3 ease blob master src cubic js L9  Source    Symmetric cubic easing  scales  cubicIn   easeCubicIn  for  t  in  0  0 5  and  cubicOut   easeCubicOut  for  t  in  0 5  1   Also equivalent to  poly   easePoly   exponent   poly exponent  3      img src  https   raw githubusercontent com d3 d3 ease master img cubicInOut png  alt  cubicInOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  cubicInOut    a name  easeSinIn  href   easeSinIn     a  d3  b easeSinIn  b   i t  i        https   github com d3 d3 ease blob master src sin js L4  Source    Sinusoidal easing  returns sin  t       img src  https   raw githubusercontent com d3 d3 ease master img sinIn png  alt  sinIn  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  sinIn    a name  easeSinOut  href   easeSinOut     a  d3  b easeSinOut  b   i t  i        https   github com d3 d3 ease blob master src sin js L8  Source    Reverse sinusoidal easing  equivalent to 1    sinIn   easeSinIn  1    t       img src  https   raw githubusercontent com d3 d3 ease master img sinOut png  alt  sinOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  sinOut    a name  easeSin  href   easeSin     a  d3  b easeSin  b   i t  i        https   github com d3 d3 ease blob master src sin js  Source    br  a name  easeSinInOut  href   easeSinInOut     a  d3  b easeSinInOut  b   i t  i        https   github com d3 d3 ease blob master src sin js L12  Source    Symmetric sinusoidal easing  scales  sinIn   easeSinIn  for  t  in  0  0 5  and  sinOut   easeSinOut  for  t  in  0 5  1      img src  https   raw githubusercontent com d3 d3 ease master img sinInOut png  alt  sinInOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  sinInOut    a name  easeExpIn  href   easeExpIn     a  d3  b easeExpIn  b   i t  i        https   github com d3 d3 ease blob master src exp js L1  Source    Exponential easing  raises 2 to the exponent 10      t    1      img src  https   raw githubusercontent com d3 d3 ease master img expIn png  alt  expIn  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  expIn    a name  easeExpOut  href   easeExpOut     a  d3  b easeExpOut  b   i t  i        https   github com d3 d3 ease blob master src exp js L5  Source    Reverse exponential easing  equivalent to 1    expIn   easeExpIn  1    t       img src  https   raw githubusercontent com d3 d3 ease master img expOut png  alt  expOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  expOut    a name  easeExp  href   easeExp     a  d3  b easeExp  b   i t  i        https   github com d3 d3 ease blob master src exp js  Source    br  a name  easeExpInOut  href   easeExpInOut     a  d3  b easeExpInOut  b   i t  i        https   github com d3 d3 ease blob master src exp js L9  Source    Symmetric exponential easing  scales  expIn   easeExpIn  for  t  in  0  0 5  and  expOut   easeExpOut  for  t  in  0 5  1      img src  https   raw githubusercontent com d3 d3 ease master img expInOut png  alt  expInOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  expInOut    a name  easeCircleIn  href   easeCircleIn     a  d3  b easeCircleIn  b   i t  i        https   github com d3 d3 ease blob master src circle js L1  Source    Circular easing     img src  https   raw githubusercontent com d3 d3 ease master img circleIn png  alt  circleIn  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  circleIn    a name  easeCircleOut  href   easeCircleOut     a  d3  b easeCircleOut  b   i t  i        https   github com d3 d3 ease blob master src circle js L5  Source    Reverse circular easing  equivalent to 1    circleIn   easeCircleIn  1    t       img src  https   raw githubusercontent com d3 d3 ease master img circleOut png  alt  circleOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  circleOut    a name  easeCircle  href   easeCircle     a  d3  b easeCircle  b   i t  i        https   github com d3 d3 ease blob master src circle js  Source    br  a name  easeCircleInOut  href   easeCircleInOut     a  d3  b easeCircleInOut  b   i t  i        https   github com d3 d3 ease blob master src circle js L9  Source    Symmetric circular easing  scales  circleIn   easeCircleIn  for  t  in  0  0 5  and  circleOut   easeCircleOut  for  t  in  0 5  1      img src  https   raw githubusercontent com d3 d3 ease master img circleInOut png  alt  circleInOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  circleInOut    a name  easeElasticIn  href   easeElasticIn     a  d3  b easeElasticIn  b   i t  i        https   github com d3 d3 ease blob master src elastic js L5  Source    Elastic easing  like a rubber band  The  amplitude   elastic amplitude  and  period   elastic period  of the oscillation are configurable  if not specified  they default to 1 and 0 3  respectively     img src  https   raw githubusercontent com d3 d3 ease master img elasticIn png  alt  elasticIn  width  100   height  360    http   bl ocks org mbostock 248bac3b8e354a9103c4  elasticIn    a name  easeElastic  href   easeElastic     a  d3  b easeElastic  b   i t  i        https   github com d3 d3 ease blob master src elastic js  Source    br  a name  easeElasticOut  href   easeElasticOut     a  d3  b easeElasticOut  b   i t  i        https   github com d3 d3 ease blob master src elastic js L18  Source    Reverse elastic easing  equivalent to 1    elasticIn   easeElasticIn  1    t       img src  https   raw githubusercontent com d3 d3 ease master img elasticOut png  alt  elasticOut  width  100   height  360    http   bl ocks org mbostock 248bac3b8e354a9103c4  elasticOut    a name  easeElasticInOut  href   easeElasticInOut     a  d3  b easeElasticInOut  b   i t  i        https   github com d3 d3 ease blob master src elastic js L31  Source    Symmetric elastic easing  scales  elasticIn   easeElasticIn  for  t  in  0  0 5  and  elasticOut   easeElasticOut  for  t  in  0 5  1      img src  https   raw githubusercontent com d3 d3 ease master img elasticInOut png  alt  elasticInOut  width  100   height  360    http   bl ocks org mbostock 248bac3b8e354a9103c4  elasticInOut    a name  elastic amplitude  href   elastic amplitude     a   i elastic  i   b amplitude  b   i a  i        https   github com d3 d3 ease blob master src elastic js L40  Source    Returns a new elastic easing with the specified amplitude  a     a name  elastic period  href   elastic period     a   i elastic  i   b period  b   i p  i        https   github com d3 d3 ease blob master src elastic js L41  Source    Returns a new elastic easing with the specified period  p     a name  easeBackIn  href   easeBackIn     a  d3  b easeBackIn  b   i t  i        https   github com d3 d3 ease blob master src back js L3  Source     Anticipatory  https   en wikipedia org wiki 12 basic principles of animation Anticipation  easing  like a dancer bending his knees before jumping off the floor  The degree of  overshoot   back overshoot  is configurable  it not specified  it defaults to 1 70158     img src  https   raw githubusercontent com d3 d3 ease master img backIn png  alt  backIn  width  100   height  300    http   bl ocks org mbostock 248bac3b8e354a9103c4  backIn    a name  easeBackOut  href   easeBackOut     a  d3  b easeBackOut  b   i t  i        https   github com d3 d3 ease blob master src back js L15  Source    Reverse anticipatory easing  equivalent to 1    backIn   easeBackIn  1    t       img src  https   raw githubusercontent com d3 d3 ease master img backOut png  alt  backOut  width  100   height  300    http   bl ocks org mbostock 248bac3b8e354a9103c4  backOut    a name  easeBack  href   easeBack     a  d3  b easeBack  b   i t  i        https   github com d3 d3 ease blob master src back js  Source    br  a name  easeBackInOut  href   easeBackInOut     a  d3  b easeBackInOut  b   i t  i        https   github com d3 d3 ease blob master src back js L27  Source    Symmetric anticipatory easing  scales  backIn   easeBackIn  for  t  in  0  0 5  and  backOut   easeBackOut  for  t  in  0 5  1      img src  https   raw githubusercontent com d3 d3 ease master img backInOut png  alt  backInOut  width  100   height  300    http   bl ocks org mbostock 248bac3b8e354a9103c4  backInOut    a name  back overshoot  href   back overshoot     a   i back  i   b overshoot  b   i s  i        https   github com d3 d3 ease blob master src back js L1  Source    Returns a new back easing with the specified overshoot  s     a name  easeBounceIn  href   easeBounceIn     a  d3  b easeBounceIn  b   i t  i        https   github com d3 d3 ease blob master src bounce js L12  Source    Bounce easing  like a rubber ball     img src  https   raw githubusercontent com d3 d3 ease master img bounceIn png  alt  bounceIn  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  bounceIn    a name  easeBounce  href   easeBounce     a  d3  b easeBounce  b   i t  i        https   github com d3 d3 ease blob master src bounce js  Source    br  a name  easeBounceOut  href   easeBounceOut     a  d3  b easeBounceOut  b   i t  i        https   github com d3 d3 ease blob master src bounce js L16  Source    Reverse bounce easing  equivalent to 1    bounceIn   easeBounceIn  1    t       img src  https   raw githubusercontent com d3 d3 ease master img bounceOut png  alt  bounceOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  bounceOut    a name  easeBounceInOut  href   easeBounceInOut     a  d3  b easeBounceInOut  b   i t  i        https   github com d3 d3 ease blob master src bounce js L20  Source    Symmetric bounce easing  scales  bounceIn   easeBounceIn  for  t  in  0  0 5  and  bounceOut   easeBounceOut  for  t  in  0 5  1      img src  https   raw githubusercontent com d3 d3 ease master img bounceInOut png  alt  bounceInOut  width  100   height  240    http   bl ocks org mbostock 248bac3b8e354a9103c4  bounceInOut  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-ease"},{"name":"d3/d3-interpolate","artist":"color, specifi, return, valu, space","id":10,"playcount":21879,"description":"d3/d3-interpolate color, specifi, return, valu, space   d3 interpolate  This module provides a variety of interpolation methods for blending between two values  Values may be numbers  colors  strings  arrays  or even deeply nested objects  For example      js var i   d3 interpolateNumber 10  20   i 0 0      10 i 0 2      12 i 0 5      15 i 1 0      20      The returned function  i  is called an  interpolator   Given a starting value  a  and an ending value  b   it takes a parameter  t  in the domain  0  1  and returns the corresponding interpolated value between  a  and  b   An interpolator typically returns a value equivalent to  a  at  t    0 and a value equivalent to  b  at  t    1   You can interpolate more than just numbers  To find the perceptual midpoint between steelblue and brown      js d3 interpolateLab  steelblue    brown   0 5       rgb 142  92  109        Here s a more elaborate example demonstrating type inference used by  interpolate   interpolate       js var i   d3 interpolate  colors    red    blue      colors    white    black      i 0 0       colors    rgb 255  0  0     rgb 0  0  255     i 0 5       colors    rgb 255  128  128     rgb 0  0  128     i 1 0       colors    rgb 255  255  255     rgb 0  0  0          Note that the generic value interpolator detects not only nested objects and arrays  but also color strings and numbers embedded in strings      Installing  If you use NPM   npm install d3 interpolate   Otherwise  download the  latest release  https   github com d3 d3 interpolate releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 interpolate v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 interpolate v1 min js    script   script   var interpolate   d3 interpolateRgb  steelblue    brown       script        Try d3 interpolate in your browser   https   tonicdev com npm d3 interpolate      API Reference   a name  interpolate  href   interpolate     a  d3  b interpolate  b   i a  i    i b  i    Returns an interpolator between the two arbitrary values  a  and  b   The interpolator implementation is based on the type of the end value  b   using the following algorithm   1  If  b  is null  undefined or a boolean  use the constant  b   2  If  b  is a number  use  interpolateNumber   interpolateNumber   3  If  b  is a  color  https   github com d3 d3 color color  or a string coercible to a color  use  interpolateRgb   interpolateRgb   4  If  b  is a  date  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Date   use  interpolateDate   interpolateDate   5  If  b  is a string  use  interpolateString   interpolateString   6  If  b  is an  array  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array isArray   use  interpolateArray   interpolateArray   7  If  b  is coercible to a number  use  interpolateNumber   interpolateNumber   8  Use  interpolateObject   interpolateObject    Based on the chosen interpolator   a  is coerced to the suitable corresponding type    a name  interpolateNumber  href   interpolateNumber     a  d3  b interpolateNumber  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src number js  Source    Returns an interpolator between the two numbers  a  and  b   The returned interpolator is equivalent to      js function interpolator t      return a    1   t    b   t         Caution  avoid interpolating to or from the number zero when the interpolator is used to generate a string  When very small values are stringified  they may be converted to scientific notation  which is an invalid attribute or style property value in older browsers  For example  the number  0 0000001  is converted to the string   1e 7    This is particularly noticeable with interpolating opacity  To avoid scientific notation  start or end the transition at 1e 6  the smallest value that is not stringified in scientific notation    a name  interpolateRound  href   interpolateRound     a  d3  b interpolateRound  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src round js  Source    Returns an interpolator between the two numbers  a  and  b   the interpolator is similar to  interpolateNumber   interpolateNumber   except it will round the resulting value to the nearest integer    a name  interpolateString  href   interpolateString     a  d3  b interpolateString  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src string js  Source    Returns an interpolator between the two strings  a  and  b   The string interpolator finds numbers embedded in  a  and  b   where each number is of the form understood by JavaScript  A few examples of numbers that will be detected within a string    1    42    3 14159   and  6 0221413e 23    For each number embedded in  b   the interpolator will attempt to find a corresponding number in  a   If a corresponding number is found  a numeric interpolator is created using  interpolateNumber   interpolateNumber   The remaining parts of the string  b  are used as a template  the static parts of the string  b  remain constant for the interpolation  with the interpolated numeric values embedded in the template   For example  if  a  is   300 12px sans serif    and  b  is   500 36px Comic Sans    two embedded numbers are found  The remaining static parts  of string  b   are a space between the two numbers          and the suffix    px Comic Sans     The result of the interpolator at  t    0 5 is   400 24px Comic Sans      a name  interpolateDate  href   interpolateDate     a  d3  b interpolateDate  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src date js  Source    Returns an interpolator between the two  dates  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Date   a  and  b    Note    no defensive copy   of the returned date is created  the same Date instance is returned for every evaluation of the interpolator  No copy is made for performance reasons  interpolators are often part of the inner loop of  animated transitions  https   github com d3 d3 transition     a name  interpolateArray  href   interpolateArray     a  d3  b interpolateArray  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src array js  Source    Returns an interpolator between the two arrays  a  and  b   Internally  an array template is created that is the same length in  b   For each element in  b   if there exists a corresponding element in  a   a generic interpolator is created for the two elements using  interpolate   interpolate   If there is no such element  the static value from  b  is used in the template  Then  for the given parameter  t   the template s embedded interpolators are evaluated  The updated array template is then returned   For example  if  a  is the array   0  1   and  b  is the array   1  10  100    then the result of the interpolator for  t    0 5 is the array   0 5  5 5  100     Note    no defensive copy   of the template array is created  modifications of the returned array may adversely affect subsequent evaluation of the interpolator  No copy is made for performance reasons  interpolators are often part of the inner loop of  animated transitions  https   github com d3 d3 transition     a name  interpolateObject  href   interpolateObject     a  d3  b interpolateObject  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src object js  Source    Returns an interpolator between the two objects  a  and  b   Internally  an object template is created that has the same properties as  b   For each property in  b   if there exists a corresponding property in  a   a generic interpolator is created for the two elements using  interpolate   interpolate   If there is no such property  the static value from  b  is used in the template  Then  for the given parameter  t   the template s embedded interpolators are evaluated and the updated object template is then returned   For example  if  a  is the object   x  0  y  1   and  b  is the object   x  1  y  10  z  100    the result of the interpolator for  t    0 5 is the object   x  0 5  y  5 5  z  100     Object interpolation is particularly useful for  dataspace interpolation   where data is interpolated rather than attribute values  For example  you can interpolate an object which describes an arc in a pie chart  and then use d3 svg arc to compute the new SVG path data   Note    no defensive copy   of the template object is created  modifications of the returned object may adversely affect subsequent evaluation of the interpolator  No copy is made for performance reasons  interpolators are often part of the inner loop of  animated transitions  https   github com d3 d3 transition     a name  interpolateTransformCss  href   interpolateTransformCss     a  d3  b interpolateTransformCss  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src transform index js L62  Source    Returns an interpolator between the two 2D CSS transforms represented by  a  and  b   Each transform is decomposed to a standard representation of translate  rotate   x  skew and scale  these component transformations are then interpolated  This behavior is standardized by CSS  see  matrix decomposition for animation  http   www w3 org TR css3 2d transforms  matrix decomposition     a name  interpolateTransformSvg  href   interpolateTransformSvg     a  d3  b interpolateTransformSvg  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src transform index js L63  Source    Returns an interpolator between the two 2D SVG transforms represented by  a  and  b   Each transform is decomposed to a standard representation of translate  rotate   x  skew and scale  these component transformations are then interpolated  This behavior is standardized by CSS  see  matrix decomposition for animation  http   www w3 org TR css3 2d transforms  matrix decomposition     a name  interpolateZoom  href   interpolateZoom     a  d3  b interpolateZoom  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src zoom js  Source    Returns an interpolator between the two views  a  and  b  of a two dimensional plane  based on   Smooth and efficient zooming and panning   http   www win tue nl  vanwijk zoompan pdf  by Jarke J  van Wijk and Wim A A  Nuij  Each view is defined as an array of three numbers   cx    cy  and  width   The first two coordinates  cx    cy  represent the center of the viewport  the last coordinate  width  represents the size of the viewport   The returned interpolator exposes a  duration  property which encodes the recommended transition duration in milliseconds  This duration is based on the path length of the curved trajectory through  x y  space  If you want to a slower or faster transition  multiply this by an arbitrary scale factor   i V  i  as described in the original paper        Sampling   a name  quantize  href   quantize     a  d3  b quantize  b   i interpolator  i    i n  i        https   github com d3 d3 interpolate blob master src quantize js  Source    Returns  n  uniformly spaced samples from the specified  interpolator   where  n  is an integer greater than one  The first sample is always at  t    0  and the last sample is always at  t    1  This can be useful in generating a fixed number of samples from a given interpolator  such as to derive the range of a  quantize scale  https   github com d3 d3 scale quantize scales  from a  continuous interpolator  https   github com d3 d3 scale interpolateWarm    Caution  this method will not work with interpolators that do not return defensive copies of their output  such as  d3 interpolateArray   interpolateArray    d3 interpolateDate   interpolateDate  and  d3 interpolateObject   interpolateObject   For those interpolators  you must wrap the interpolator and create a copy for each returned value       Color Spaces   a name  interpolateRgb  href   interpolateRgb     a  d3  b interpolateRgb  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src rgb js  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img rgb png  width  100   height  40  alt  rgb    Or  with a corrected  gamma   interpolate gamma  of 2 2    img src  https   raw githubusercontent com d3 d3 interpolate master img rgbGamma png  width  100   height  40  alt  rgbGamma    Returns an RGB color space interpolator between the two colors  a  and  b  with a configurable  gamma   interpolate gamma   If the gamma is not specified  it defaults to 1 0  The colors  a  and  b  need not be in RGB  they will be converted to RGB using  d3 rgb  https   github com d3 d3 color rgb   The return value of the interpolator is an RGB string    a href   interpolateRgbBasis  name  interpolateRgbBasis     a  d3  b interpolateRgbBasis  b   i colors  i        https   github com d3 d3 interpolate blob master src rgb js L54  Source    Returns a uniform nonrational B spline interpolator through the specified array of  colors   which are converted to  RGB color space  https   github com d3 d3 color rgb   Implicit control points are generated such that the interpolator returns  colors  0  at  t    0 and  colors   colors  length   1  at  t    1  Opacity interpolation is not currently supported  See also  d3 interpolateBasis   interpolateBasis   and see  d3 scale chromatic  https   github com d3 d3 scale chromatic  for examples    a href   interpolateRgbBasisClosed  name  interpolateRgbBasisClosed     a  d3  b interpolateRgbBasisClosed  b   i colors  i        https   github com d3 d3 interpolate blob master src rgb js L55  Source    Returns a uniform nonrational B spline interpolator through the specified array of  colors   which are converted to  RGB color space  https   github com d3 d3 color rgb   The control points are implicitly repeated such that the resulting spline has cyclical C  continuity when repeated around  t  in  0 1   this is useful  for example  to create cyclical color scales  Opacity interpolation is not currently supported  See also  d3 interpolateBasisClosed   interpolateBasisClosed   and see  d3 scale chromatic  https   github com d3 d3 scale chromatic  for examples    a name  interpolateHsl  href   interpolateHsl     a  d3  b interpolateHsl  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src hsl js  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img hsl png  width  100   height  40  alt  hsl    Returns an HSL color space interpolator between the two colors  a  and  b   The colors  a  and  b  need not be in HSL  they will be converted to HSL using  d3 hsl  https   github com d3 d3 color hsl   If either color s hue or saturation is NaN  the opposing color s channel value is used  The shortest path between hues is used  The return value of the interpolator is an RGB string    a name  interpolateHslLong  href   interpolateHslLong     a  d3  b interpolateHslLong  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src hsl js L21  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img hslLong png  width  100   height  40  alt  hslLong    Like  interpolateHsl   interpolateHsl   but does not use the shortest path between hues    a name  interpolateLab  href   interpolateLab     a  d3  b interpolateLab  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src lab js  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img lab png  width  100   height  40  alt  lab    Returns a Lab color space interpolator between the two colors  a  and  b   The colors  a  and  b  need not be in Lab  they will be converted to Lab using  d3 lab  https   github com d3 d3 color lab   The return value of the interpolator is an RGB string    a name  interpolateHcl  href   interpolateHcl     a  d3  b interpolateHcl  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src hcl js  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img hcl png  width  100   height  40  alt  hcl    Returns an HCL color space interpolator between the two colors  a  and  b   The colors  a  and  b  need not be in HCL  they will be converted to HCL using  d3 hcl  https   github com d3 d3 color hcl   If either color s hue or chroma is NaN  the opposing color s channel value is used  The shortest path between hues is used  The return value of the interpolator is an RGB string    a name  interpolateHclLong  href   interpolateHclLong     a  d3  b interpolateHclLong  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src hcl js L21  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img hclLong png  width  100   height  40  alt  hclLong    Like  interpolateHcl   interpolateHcl   but does not use the shortest path between hues    a name  interpolateCubehelix  href   interpolateCubehelix     a  d3  b interpolateCubehelix  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src cubehelix js  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img cubehelix png  width  100   height  40  alt  cubehelix    Or  with a  gamma   interpolate gamma  of 3 0 to emphasize high intensity values    img src  https   raw githubusercontent com d3 d3 interpolate master img cubehelixGamma png  width  100   height  40  alt  cubehelixGamma    Returns a Cubehelix color space interpolator between the two colors  a  and  b  using a configurable  gamma   interpolate gamma   If the gamma is not specified  it defaults to 1 0  The colors  a  and  b  need not be in Cubehelix  they will be converted to Cubehelix using  d3 cubehelix  https   github com d3 d3 color cubehelix   If either color s hue or saturation is NaN  the opposing color s channel value is used  The shortest path between hues is used  The return value of the interpolator is an RGB string    a name  interpolateCubehelixLong  href   interpolateCubehelixLong     a  d3  b interpolateCubehelixLong  b   i a  i    i b  i        https   github com d3 d3 interpolate blob master src cubehelix js L29  Source     img src  https   raw githubusercontent com d3 d3 interpolate master img cubehelixLong png  width  100   height  40  alt  cubehelixLong    Or  with a  gamma   interpolate gamma  of 3 0 to emphasize high intensity values    img src  https   raw githubusercontent com d3 d3 interpolate master img cubehelixGammaLong png  width  100   height  40  alt  cubehelixGammaLong    Like  interpolateCubehelix   interpolateCubehelix   but does not use the shortest path between hues    a name  interpolate gamma  href   interpolate gamma     a   i interpolate  i   b gamma  b   i gamma  i    Given that  interpolate  is one of  interpolateRgb   interpolateRgb    interpolateCubehelix   interpolateCubehelix  or  interpolateCubehelixLong   interpolateCubehelixLong   returns a new interpolator factory of the same type using the specified  gamma   For example  to interpolate from purple to orange with a gamma of 2 2 in RGB space      js var interpolator   d3 interpolateRgb gamma 2 2   purple    orange         See Eric Brasseur s article   Gamma error in picture scaling  https   web archive org web 20160112115812 http   www 4p8 com eric brasseur gamma html   for more on gamma correction       Splines  Whereas standard interpolators blend from a starting value  a  at  t    0 to an ending value  b  at  t    1  spline interpolators smoothly blend multiple input values for  t  in  0 1  using piecewise polynomial functions  Only cubic uniform nonrational  B splines  https   en wikipedia org wiki B spline  are currently supported  also known as basis splines    a href   interpolateBasis  name  interpolateBasis     a  d3  b interpolateBasis  b   i values  i        https   github com d3 d3 interpolate blob master src basis js  Source    Returns a uniform nonrational B spline interpolator through the specified array of  values   which must be numbers  Implicit control points are generated such that the interpolator returns  values  0  at  t    0 and  values   values  length   1  at  t    1  See also  d3 curveBasis  https   github com d3 d3 shape curveBasis     a href   interpolateBasisClosed  name  interpolateBasisClosed     a  d3  b interpolateBasisClosed  b   i values  i        https   github com d3 d3 interpolate blob master src basisClosed js  Source    Returns a uniform nonrational B spline interpolator through the specified array of  values   which must be numbers  The control points are implicitly repeated such that the resulting one dimensional spline has cyclical C  continuity when repeated around  t  in  0 1   See also  d3 curveBasisClosed  https   github com d3 d3 shape curveBasisClosed        Piecewise   a name  piecewise  href   piecewise     a  d3  b piecewise  b   i interpolate  i    i values  i        https   github com d3 d3 interpolate blob master src piecewise js  Source    Returns a piecewise interpolator  composing interpolators for each adjacent pair of  values   The returned interpolator maps  t  in  0  1     n    1   to  interpolate   values  0    values  1     t  in  1     n    1   2     n    1   to  interpolate   values  1    values  2    and so on  where  n     values  length  In effect  this is a lightweight  linear scale  https   github com d3 d3 scale blob master README md linear scales   For example  to blend through red  green and blue      js var interpolate   d3 piecewise d3 interpolateRgb gamma 2 2     red    green    blue         ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-interpolate"},{"name":"d3/d3-voronoi","artist":"return, specifi, sourc, array, valu","id":11,"playcount":11239,"description":"d3/d3-voronoi return, specifi, sourc, array, valu   d3 voronoi    Deprecation notice    Consider using the newer  d3 delaunay  https   github com d3 d3 delaunay  instead of d3 voronoi  Based on  Delaunator  https   github com mapbox delaunator   d3 delaunay is 5 10  faster than d3 voronoi to construct the Delaunay triangulation or the Voronoi diagram  is more robust numerically  has Canvas rendering built in  allows traversal of the Delaunay graph  and a variety of other improvements        This module implements  Steven J  Fortune s algorithm  https   en wikipedia org wiki Fortune s algorithm  for computing the  Voronoi diagram  https   en wikipedia org wiki Voronoi diagram  or  Delaunay triangulation  https   en wikipedia org wiki Delaunay triangulation  of a set of two dimensional points  This implementation is largely based on  work by Raymond Hill  http   www raymondhill net voronoi rhill voronoi html    Voronoi diagrams are not only  visually  http   bl ocks org mbostock 4360892   attractive  http   bl ocks org mbostock 4636377  but practical tools for interaction  such as to increase the target area of points in a scatterplot  See   Strikeouts on the Rise   http   www nytimes com interactive 2013 03 29 sports baseball Strikeouts Are Still Soaring html  in  The New York Times  and this  multi line chart  http   bl ocks org mbostock 8033015  for examples  also see Tovi Grossman s paper on  bubble cursors  http   www tovigrossman com BubbleCursor  for a related technique  Voronoi diagrams can also be used to  automate label positioning  http   bl ocks org mbostock 6909318   and Delaunay meshes are useful in computing adjacency or grouping of visual elements    a href  http   bl ocks org mbostock 6675193   img src  http   bl ocks org mbostock raw 6675193 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 4060366   img src  http   bl ocks org mbostock raw 4060366 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 4341156   img src  http   bl ocks org mbostock raw 4341156 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 4360892   img src  http   bl ocks org mbostock raw 4360892 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 7608400   img src  http   bl ocks org mbostock raw 7608400 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 4636377   img src  http   bl ocks org mbostock raw 4636377 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 1073373   img src  http   bl ocks org mbostock raw 1073373 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 8033015   img src  http   bl ocks org mbostock raw 8033015 thumbnail png  width  202    a   a href  http   bl ocks org mbostock c6966db1fcb0ed2988da   img src  http   bl ocks org mbostock raw c6966db1fcb0ed2988da thumbnail png  width  202    a   a href  http   bl ocks org mbostock ec10387f24c1fad2acac3bc11eb218a5   img src  http   bl ocks org mbostock raw ec10387f24c1fad2acac3bc11eb218a5 thumbnail png  width  202    a      Installing  If you use NPM   npm install d3 voronoi   Otherwise  download the  latest release  https   github com d3 d3 voronoi releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 voronoi v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 voronoi v1 min js    script   script   var voronoi   d3 voronoi       script        Try d3 voronoi in your browser   https   tonicdev com npm d3 voronoi      API Reference   a name  voronoi  href   voronoi     a  d3  b voronoi  b         https   github com d3 d3 voronoi blob master src voronoi js  Source    Creates a new Voronoi layout with default   x     voronoi x  and   y     voronoi y  accessors and a null  extent   voronoi extent     a name   voronoi  href    voronoi     a   i voronoi  i   i data  i        https   github com d3 d3 voronoi blob master src voronoi js L10  Source    Computes the  Voronoi diagram   voronoi diagrams  for the specified  data  points    a name  voronoi x  href   voronoi x     a   i voronoi  i   b x  b    i x  i         https   github com d3 d3 voronoi blob master src voronoi js L31  Source    If  x  is specified  sets the  x  coordinate accessor  If  x  is not specified  returns the current  x  coordinate accessor  which defaults to      js function x d      return d 0           a name  voronoi y  href   voronoi y     a   i voronoi  i   b y  b    i y  i         https   github com d3 d3 voronoi blob master src voronoi js L35  Source    If  y  is specified  sets the  y  coordinate accessor  If  y  is not specified  returns the current  y  coordinate accessor  which defaults to      js function y d      return d 1           a name  voronoi extent  href   voronoi extent     a   i voronoi  i   b extent  b    i extent  i         https   github com d3 d3 voronoi blob master src voronoi js L39  Source    If  extent  is specified  sets the clip extent of the Voronoi layout to the specified bounds and returns the layout  The  extent  bounds are specified as an array      i x0  i    i y0  i        i x1  i    i y1  i       where  i x0  i  is the left side of the extent   i y0  i  is the top   i x1  i  is the right and  i y1  i  is the bottom  If  extent  is not specified  returns the current clip extent which defaults to null  A clip extent is required when using   voronoi  polygons   voronoi polygons     a name  voronoi size  href   voronoi size     a   i voronoi  i   b size  b    i size  i         https   github com d3 d3 voronoi blob master src voronoi js L43  Source    An alias for   voronoi  extent   voronoi extent  where the minimum  x  and  y  of the extent are  0 0   Equivalent to      js voronoi extent   0  0   size          a name  voronoi polygons  href   voronoi polygons     a   i voronoi  i   b polygons  b   i data  i        https   github com d3 d3 voronoi blob master src voronoi js L19  Source    Returns a sparse array of polygons  one for each unique input point in the specified  data  points  corresponding to the cells in the computed Voronoi diagram  Equivalent to      js voronoi data  polygons         See   diagram  polygons   diagram polygons  for more detail  Note  an  extent   voronoi extent  is required    a name  voronoi triangles  href   voronoi triangles     a   i voronoi  i   b triangles  b   i data  i        https   github com d3 d3 voronoi blob master src voronoi js L27  Source    Returns the Delaunay triangulation of the specified  data  array as an array of triangles  Each triangle is a three element array of elements from  data   Equivalent to      js voronoi data  triangles         See   diagram  triangles   diagram triangles  for more detail    a name  voronoi links  href   voronoi links     a   i voronoi  i   b links  b   i data  i        https   github com d3 d3 voronoi blob master src voronoi js L23  Source    Returns the Delaunay triangulation of the specified  data  array as an array of links  Each link has  source  and  target  attributes referring to elements in  data   Equivalent to      js voronoi data  links         See   diagram  links   diagram links  for more detail       Voronoi Diagrams   a name  diagram  href   diagram     a   i diagram  i       https   github com d3 d3 voronoi blob master src Diagram js  Source    The computed Voronoi diagram returned by   voronoi     voronoi  has the following properties      edges    an array of  edges   diagram edge      cells    a sparse array of  cells   diagram cell   one for each unique input point   For each set of coincident input points  one of the points is chosen arbitrarily and assigned the associated cell  the other coincident input points  entries are missing from the returned sparse array    a name  diagram polygons  href   diagram polygons     a   i diagram  i   b polygons  b         https   github com d3 d3 voronoi blob master src Diagram js L72  Source    Returns a sparse array of polygons clipped to the   extent    voronoi extent   one for each cell  each unique input point  in the diagram  Each polygon is represented as an array of points    x    y    where  x  and  y  are the point coordinates  and a  data  field that refers to the corresponding element in  data   Polygons are open  they do not contain a closing point that duplicates the first point  a triangle  for example  is an array of three points  Polygons are also counterclockwise  assuming the origin  0 0  is in the top left corner   For each set of coincident input points  one of the points is chosen arbitrarily and assigned the associated polygon  the other coincident input points  entries are missing from the returned sparse array    a name  diagram triangles  href   diagram triangles     a   i diagram  i   b triangles  b         https   github com d3 d3 voronoi blob master src Diagram js L82  Source    Returns the Delaunay triangulation of the specified  data  array as an array of triangles  Each triangle is a three element array of elements from  data   Since the triangulation is computed as the dual of the Voronoi diagram  and the Voronoi diagram is clipped by the  extent   voronoi extent   a subset of the Delaunay triangulation is returned    a name  diagram links  href   diagram links     a   i diagram  i   b links  b         https   github com d3 d3 voronoi blob master src Diagram js L108  Source    Returns the Delaunay triangulation of the specified  data  array as an array of links  one for each edge in the mesh  Each link has the following attributes      source    the source node  an element in  data      target    the target node  an element in  data    Since the triangulation is computed as the dual of the Voronoi diagram  and the Voronoi diagram is clipped by the  extent   voronoi extent   a subset of the Delaunay links is returned    a name  diagram find  href   diagram find     a   i diagram  i   b find  b   i x  i    i y  i     i radius  i         https   github com d3 d3 voronoi blob master src Diagram js L119  Source    Returns the nearest site to point    x    y     If  radius  is specified  only sites within  radius  distance are considered   See Philippe Rivi re s  bl ocks org 1b7ddbcd71454d685d1259781968aefc  http   bl ocks org Fil 1b7ddbcd71454d685d1259781968aefc  for an example    a name  cell  href   cell     a   i cell  i   Each cell in the diagram is an object with the following properties      site    the  site   site  of the cell s associated input point     halfedges    an array of indexes into   diagram  edges   diagram  representing the cell s polygon    a name  site  href   site     a   i site  i   Each site in the diagram is an array    x    y    with two additional properties      index    the site s index  corresponding to the associated input point     data    the input data corresponding to this site    a name  edge  href   edge     a   i edge  i   Each edge in the diagram is an array      x0    y0        x1    y1      with two additional properties      left    the  site   site  on the left side of the edge     right    the  site   site  on the right side of the edge  null for a clipped border edge  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-voronoi"},{"name":"d3/d3-time","artist":"return, specifi, sourc, array, valu","id":12,"playcount":25624,"description":"d3/d3-time return, specifi, sourc, array, valu   d3 time  When visualizing time series data  analyzing temporal patterns  or working with time in general  the irregularities of conventional time units quickly become apparent  In the  Gregorian calendar  https   en wikipedia org wiki Gregorian calendar   for example  most months have 31 days but some have 28  29 or 30  most years have 365 days but  leap years  https   en wikipedia org wiki Leap year  have 366  and with  daylight saving  https   en wikipedia org wiki Daylight saving time   most days have 24 hours but some have 23 or 25  Adding to complexity  daylight saving conventions vary around the world   As a result of these temporal peculiarities  it can be difficult to perform seemingly trivial tasks  For example  if you want to compute the number of days that have passed between two dates  you can t simply subtract and divide by 24 hours  86 400 000 ms       js var start   new Date 2015  02  01      Sun Mar 01 2015 00 00 00 GMT 0800  PST      end   new Date 2015  03  01      Wed Apr 01 2015 00 00 00 GMT 0700  PDT   end   start    864e5     30 958333333333332  oops       You can  however  use  d3 timeDay   timeDay   count   interval count       js d3 timeDay count start  end      31      The  day   day   interval   api reference  is one of several provided by d3 time  Each interval represents a conventional unit of time  hours   timeHour    weeks   timeWeek    months   timeMonth    etc   and has methods to calculate boundary dates  For example   d3 timeDay   timeDay  computes midnight  typically 12 00 AM local time  of the corresponding day  In addition to  rounding   interval round  and  counting   interval count   intervals can also be used to generate arrays of boundary dates  For example  to compute each Sunday in the current month      js var now   new Date  d3 timeWeek range d3 timeMonth floor now   d3 timeMonth ceil now        Sun Jun 07 2015 00 00 00 GMT 0700  PDT       Sun Jun 14 2015 00 00 00 GMT 0700  PDT       Sun Jun 21 2015 00 00 00 GMT 0700  PDT       Sun Jun 28 2015 00 00 00 GMT 0700  PDT        The d3 time module does not implement its own calendaring system  it merely implements a convenient API for calendar math on top of ECMAScript  Date  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Date   Thus  it ignores leap seconds and can only work with the local time zone and  Coordinated Universal Time  https   en wikipedia org wiki Coordinated Universal Time   UTC    This module is used by D3 s time scales to generate sensible ticks  by D3 s time format  and can also be used directly to do things like  calendar layouts  http   bl ocks org mbostock 4063318       Installing  If you use NPM   npm install d3 time   Otherwise  download the  latest release  https   github com d3 d3 time releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 time v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 time v1 min js    script   script   var day   d3 timeDay new Date      script        Try d3 time in your browser   https   tonicdev com npm d3 time      API Reference   a name   interval  href    interval     a   i interval  i   i date  i        https   github com d3 d3 time blob master src interval js L6  Source    Alias for   interval  floor   interval floor   For example   d3 timeYear   timeYear   date   and d3 timeYear floor  date   are equivalent    a name  interval floor  href   interval floor     a   i interval  i   b floor  b   i date  i        https   github com d3 d3 time blob master src interval js L10  Source    Returns a new date representing the latest interval boundary date before or equal to  date   For example   d3 timeDay   timeDay  floor  date   typically returns 12 00 AM local time on the given  date    This method is idempotent  if the specified  date  is already floored to the current interval  a new date with an identical time is returned  Furthermore  the returned date is the minimum expressible value of the associated interval  such that  interval  floor  interval  floor  date     1  returns the preceeding interval boundary date   Note that the      and       operators do not compare by value with  Date  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Date  objects  and thus you cannot use them to tell whether the specified  date  has already been floored  Instead  coerce to a number and then compare      js    Returns true if the specified date is a day boundary  function isDay date      return  d3 timeDay floor date       date         This is more reliable than testing whether the time is 12 00 AM  as in some time zones midnight may not exist due to daylight saving    a name  interval round  href   interval round     a   i interval  i   b round  b   i date  i        https   github com d3 d3 time blob master src interval js L16  Source    Returns a new date representing the closest interval boundary date to  date   For example   d3 timeDay   timeDay  round  date   typically returns 12 00 AM local time on the given  date  if it is on or before noon  and 12 00 AM of the following day if it is after noon   This method is idempotent  if the specified  date  is already rounded to the current interval  a new date with an identical time is returned    a name  interval ceil  href   interval ceil     a   i interval  i   b ceil  b   i date  i        https   github com d3 d3 time blob master src interval js L12  Source    Returns a new date representing the earliest interval boundary date after or equal to  date   For example   d3 timeDay   timeDay  ceil  date   typically returns 12 00 AM local time on the date following the given  date    This method is idempotent  if the specified  date  is already ceilinged to the current interval  a new date with an identical time is returned  Furthermore  the returned date is the maximum expressible value of the associated interval  such that  interval  ceil  interval  ceil  date     1  returns the following interval boundary date    a name  interval offset  href   interval offset     a   i interval  i   b offset  b   i date  i     i step  i         https   github com d3 d3 time blob master src interval js L22  Source    Returns a new date equal to  date  plus  step  intervals  If  step  is not specified it defaults to 1  If  step  is negative  then the returned date will be before the specified  date   if  step  is zero  then a copy of the specified  date  is returned  if  step  is not an integer  it is  floored  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Math floor   This method does not round the specified  date  to the interval  For example  if  date  is today at 5 34 PM  then  d3 timeDay   timeDay  offset  date   1  returns 5 34 PM tomorrow  even if daylight saving changes      a name  interval range  href   interval range     a   i interval  i   b range  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src interval js L26  Source    Returns an array of dates representing every interval boundary after or equal to  start   inclusive  and before  stop   exclusive   If  step  is specified  then every  step th boundary will be returned  for example  for the  d3 timeDay   timeDay  interval a  step  of 2 will return every other day  If  step  is not an integer  it is  floored  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Math floor    The first date in the returned array is the earliest boundary after or equal to  start   subsequent dates are  offset   interval offset  by  step  intervals and  floored   interval floor   Thus  two overlapping ranges may be consistent  For example  this range contains odd days      js d3 timeDay range new Date 2015  0  1   new Date 2015  0  7   2       Thu Jan 01 2015 00 00 00 GMT 0800  PST       Sat Jan 03 2015 00 00 00 GMT 0800  PST       Mon Jan 05 2015 00 00 00 GMT 0800  PST        While this contains even days      js d3 timeDay range new Date 2015  0  2   new Date 2015  0  8   2       Fri Jan 02 2015 00 00 00 GMT 0800  PST       Sun Jan 04 2015 00 00 00 GMT 0800  PST       Tue Jan 06 2015 00 00 00 GMT 0800  PST        To make ranges consistent when a  step  is specified  use   interval  every   interval every  instead    a name  interval filter  href   interval filter     a   i interval  i   b filter  b   i test  i        https   github com d3 d3 time blob master src interval js L35  Source    Returns a new interval that is a filtered subset of this interval using the specified  test  function  The  test  function is passed a date and should return true if and only if the specified date should be considered part of the interval  For example  to create an interval that returns the 1st  11th  21th and 31th  if it exists  of each month      js var i   d3 timeDay filter function d    return  d getDate     1    10     0           The returned filtered interval does not support   interval  count   interval count   See also   interval  every   interval every     a name  interval every  href   interval every     a   i interval  i   b every  b   i step  i        https   github com d3 d3 time blob master src interval js L50  Source    Returns a  filtered   interval filter  view of this interval representing every  step th date  The meaning of  step  is dependent on this interval s parent interval as defined by the field function  For example   d3 timeMinute   timeMinute  every 15  returns an interval representing every fifteen minutes  starting on the hour   00   15   30   45   i etc   i  Note that for some intervals  the resulting dates may not be uniformly spaced   d3 timeDay   timeDay  s parent interval is  d3 timeMonth   timeMonth   and thus the interval number resets at the start of each month  If  step  is not valid  returns null  If  step  is one  returns this interval   This method can be used in conjunction with   interval  range   interval range  to ensure that two overlapping ranges are consistent  For example  this range contains odd days      js d3 timeDay every 2  range new Date 2015  0  1   new Date 2015  0  7        Thu Jan 01 2015 00 00 00 GMT 0800  PST       Sat Jan 03 2015 00 00 00 GMT 0800  PST       Mon Jan 05 2015 00 00 00 GMT 0800  PST        As does this one      js d3 timeDay every 2  range new Date 2015  0  2   new Date 2015  0  8        Sat Jan 03 2015 00 00 00 GMT 0800  PST       Mon Jan 05 2015 00 00 00 GMT 0800  PST       Wed Jan 07 2015 00 00 00 GMT 0800  PST        The returned filtered interval does not support   interval  count   interval count   See also   interval  filter   interval filter     a name  interval count  href   interval count     a   i interval  i   b count  b   i start  i    i end  i        https   github com d3 d3 time blob master src interval js L44  Source    Returns the number of interval boundaries after  start   exclusive  and before or equal to  end   inclusive   Note that this behavior is slightly different than   interval  range   interval range  because its purpose is to return the zero based number of the specified  end  date relative to the specified  start  date  For example  to compute the current zero based day of year number      js var now   new Date  d3 timeDay count d3 timeYear now   now      177      Likewise  to compute the current zero based week of year number for weeks that start on Sunday      js d3 timeSunday count d3 timeYear now   now      25       a name  timeInterval  href   timeInterval     a  d3  b timeInterval  b   i floor  i    i offset  i     i count  i     i field  i          https   github com d3 d3 time blob master src interval js L4  Source    Constructs a new custom interval given the specified  floor  and  offset  functions and an optional  count  function   The  floor  function takes a single date as an argument and rounds it down to the nearest interval boundary   The  offset  function takes a date and an integer step as arguments and advances the specified date by the specified number of boundaries  the step may be positive  negative or zero   The optional  count  function takes a start date and an end date  already floored to the current interval  and returns the number of boundaries between the start  exclusive  and end  inclusive   If a  count  function is not specified  the returned interval does not expose   interval  count   interval count  or   interval  every   interval every  methods  Note  due to an internal optimization  the specified  count  function must not invoke  interval  count on other time intervals   The optional  field  function takes a date  already floored to the current interval  and returns the field value of the specified date  corresponding to the number of boundaries between this date  exclusive  and the latest previous parent boundary  For example  for the  d3 timeDay   timeDay  interval  this returns the number of days since the start of the month  If a  field  function is not specified  it defaults to counting the number of interval boundaries since the UNIX epoch of January 1  1970 UTC  The  field  function defines the behavior of   interval  every   interval every        Intervals  The following intervals are provided    a name  timeMillisecond  href   timeMillisecond     a  d3  b timeMillisecond  b       https   github com d3 d3 time blob master src millisecond js  Source    br  a href   timeMillisecond     a  d3  b utcMillisecond  b   Milliseconds  the shortest available time unit    a name  timeSecond  href   timeSecond     a  d3  b timeSecond  b       https   github com d3 d3 time blob master src second js  Source    br  a href   timeSecond     a  d3  b utcSecond  b   Seconds  e g   01 23 45 0000 AM   1 000 milliseconds    a name  timeMinute  href   timeMinute     a  d3  b timeMinute  b       https   github com d3 d3 time blob master src minute js  Source    br  a href   timeMinute     a  d3  b utcMinute  b       https   github com d3 d3 time blob master src utcMinute js  Source    Minutes  e g   01 02 00 AM   60 seconds  Note that ECMAScript  ignores leap seconds  http   www ecma international org ecma 262 5 1  sec 15 9 1 1     a name  timeHour  href   timeHour     a  d3  b timeHour  b       https   github com d3 d3 time blob master src hour js  Source    br  a href   timeHour     a  d3  b utcHour  b       https   github com d3 d3 time blob master src utcHour js  Source    Hours  e g   01 00 AM   60 minutes  Note that advancing time by one hour in local time can return the same hour or skip an hour due to daylight saving    a name  timeDay  href   timeDay     a  d3  b timeDay  b       https   github com d3 d3 time blob master src day js  Source    br  a href   timeDay     a  d3  b utcDay  b       https   github com d3 d3 time blob master src utcDay js  Source    Days  e g   February 7  2012 at 12 00 AM   typically 24 hours  Days in local time may range from 23 to 25 hours due to daylight saving    a name  timeWeek  href   timeWeek     a  d3  b timeWeek  b       https   github com d3 d3 time blob master src week js  Source    br  a href   timeWeek     a  d3  b utcWeek  b       https   github com d3 d3 time blob master src utcWeek js  Source    Alias for  d3 timeSunday   timeSunday   7 days and typically 168 hours  Weeks in local time may range from 167 to 169 hours due on daylight saving    a name  timeSunday  href   timeSunday     a  d3  b timeSunday  b       https   github com d3 d3 time blob master src week js L15  Source    br  a href   timeSunday     a  d3  b utcSunday  b       https   github com d3 d3 time blob master src utcWeek js L15  Source    Sunday based weeks  e g   February 5  2012 at 12 00 AM     a name  timeMonday  href   timeMonday     a  d3  b timeMonday  b       https   github com d3 d3 time blob master src week js L16  Source    br  a href   timeMonday     a  d3  b utcMonday  b       https   github com d3 d3 time blob master src utcWeek js L16  Source    Monday based weeks  e g   February 6  2012 at 12 00 AM     a name  timeTuesday  href   timeTuesday     a  d3  b timeTuesday  b       https   github com d3 d3 time blob master src week js L17  Source    br  a href   timeTuesday     a  d3  b utcTuesday  b       https   github com d3 d3 time blob master src utcWeek js L17  Source    Tuesday based weeks  e g   February 7  2012 at 12 00 AM     a name  timeWednesday  href   timeWednesday     a  d3  b timeWednesday  b       https   github com d3 d3 time blob master src week js L18  Source    br  a href   timeWednesday     a  d3  b utcWednesday  b       https   github com d3 d3 time blob master src utcWeek js L18  Source    Wednesday based weeks  e g   February 8  2012 at 12 00 AM     a name  timeThursday  href   timeThursday     a  d3  b timeThursday  b       https   github com d3 d3 time blob master src week js L19  Source    br  a href   timeThursday     a  d3  b utcThursday  b       https   github com d3 d3 time blob master src utcWeek js L19  Source    Thursday based weeks  e g   February 9  2012 at 12 00 AM     a name  timeFriday  href   timeFriday     a  d3  b timeFriday  b       https   github com d3 d3 time blob master src week js L20  Source    br  a href   timeFriday     a  d3  b utcFriday  b       https   github com d3 d3 time blob master src utcWeek js L20  Source    Friday based weeks  e g   February 10  2012 at 12 00 AM     a name  timeSaturday  href   timeSaturday     a  d3  b timeSaturday  b       https   github com d3 d3 time blob master src week js L21  Source    br  a href   timeSaturday     a  d3  b utcSaturday  b       https   github com d3 d3 time blob master src utcWeek js L21  Source    Saturday based weeks  e g   February 11  2012 at 12 00 AM     a name  timeMonth  href   timeMonth     a  d3  b timeMonth  b       https   github com d3 d3 time blob master src month js  Source    br  a href   timeMonth     a  d3  b utcMonth  b       https   github com d3 d3 time blob master src utcMonth js  Source    Months  e g   February 1  2012 at 12 00 AM   ranges from 28 to 31 days    a name  timeYear  href   timeYear     a  d3  b timeYear  b       https   github com d3 d3 time blob master src year js  Source    br  a href   timeYear     a  d3  b utcYear  b       https   github com d3 d3 time blob master src utcYear js  Source    Years  e g   January 1  2012 at 12 00 AM   ranges from 365 to 366 days       Ranges  For convenience  aliases for   interval  range   interval range  are also provided as plural forms of the corresponding interval    a name  timeMilliseconds  href   timeMilliseconds     a  d3  b timeMilliseconds  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src millisecond js L26  Source    br  a href   timeMilliseconds     a  d3  b utcMilliseconds  b   i start  i    i stop  i     i step  i     Aliases for  d3 timeMillisecond   timeMillisecond   range   interval range  and  d3 utcMillisecond   timeMillisecond   range   interval range     a name  timeSeconds  href   timeSeconds     a  d3  b timeSeconds  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src second js L15  Source    br  a href   timeSeconds     a  d3  b utcSeconds  b   i start  i    i stop  i     i step  i     Aliases for  d3 timeSecond   timeSecond   range   interval range  and  d3 utcSecond   timeSecond   range   interval range     a name  timeMinutes  href   timeMinutes     a  d3  b timeMinutes  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src minute js L15  Source    br  a href   timeMinutes     a  d3  b utcMinutes  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcMinute js L15  Source    Aliases for  d3 timeMinute   timeMinute   range   interval range  and  d3 utcMinute   timeMinute   range   interval range     a name  timeHours  href   timeHours     a  d3  b timeHours  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src hour js L17  Source    br  a href   timeHours     a  d3  b utcHours  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcHour js L15  Source    Aliases for  d3 timeHour   timeHour   range   interval range  and  d3 utcHour   timeHour   range   interval range     a name  timeDays  href   timeDays     a  d3  b timeDays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src day js L15  Source    br  a href   timeDays     a  d3  b utcDays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcDay js L15  Source    Aliases for  d3 timeDay   timeDay   range   interval range  and  d3 utcDay   timeDay   range   interval range     a name  timeWeeks  href   timeWeeks     a  d3  b timeWeeks  b   i start  i    i stop  i     i step  i     br  a href   timeWeeks     a  d3  b utcWeeks  b   i start  i    i stop  i     i step  i     Aliases for  d3 timeWeek   timeWeek   range   interval range  and  d3 utcWeek   timeWeek   range   interval range     a name  timeSundays  href   timeSundays     a  d3  b timeSundays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src week js L23  Source    br  a href   timeSundays     a  d3  b utcSundays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcWeek js L23  Source    Aliases for  d3 timeSunday   timeSunday   range   interval range  and  d3 utcSunday   timeSunday   range   interval range     a name  timeMondays  href   timeMondays     a  d3  b timeMondays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src week js L24  Source    br  a href   timeMondays     a  d3  b utcMondays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcWeek js L24  Source    Aliases for  d3 timeMonday   timeMonday   range   interval range  and  d3 utcMonday   timeMonday   range   interval range     a name  timeTuesdays  href   timeTuesdays     a  d3  b timeTuesdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src week js L25  Source    br  a href   timeTuesdays     a  d3  b utcTuesdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcWeek js L25  Source    Aliases for  d3 timeTuesday   timeTuesday   range   interval range  and  d3 utcTuesday   timeTuesday   range   interval range     a name  timeWednesdays  href   timeWednesdays     a  d3  b timeWednesdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src week js L26  Source    br  a href   timeWednesdays     a  d3  b utcWednesdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcWeek js L26  Source    Aliases for  d3 timeWednesday   timeWednesday   range   interval range  and  d3 utcWednesday   timeWednesday   range   interval range     a name  timeThursdays  href   timeThursdays     a  d3  b timeThursdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src week js L27  Source    br  a href   timeThursdays     a  d3  b utcThursdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcWeek js L27  Source    Aliases for  d3 timeThursday   timeThursday   range   interval range  and  d3 utcThursday   timeThursday   range   interval range     a name  timeFridays  href   timeFridays     a  d3  b timeFridays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src week js L28  Source    br  a href   timeFridays     a  d3  b utcFridays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcWeek js L28  Source    Aliases for  d3 timeFriday   timeFriday   range   interval range  and  d3 utcFriday   timeFriday   range   interval range     a name  timeSaturdays  href   timeSaturdays     a  d3  b timeSaturdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src week js L29  Source    br  a href   timeSaturdays     a  d3  b utcSaturdays  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcWeek js L29  Source    Aliases for  d3 timeSaturday   timeSaturday   range   interval range  and  d3 utcSaturday   timeSaturday   range   interval range     a name  timeMonths  href   timeMonths     a  d3  b timeMonths  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src month js L15  Source    br  a href   timeMonths     a  d3  b utcMonths  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcMonth js L15  Source    Aliases for  d3 timeMonth   timeMonth   range   interval range  and  d3 utcMonth   timeMonth   range   interval range     a name  timeYears  href   timeYears     a  d3  b timeYears  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src year js L26  Source    br  a href   timeYears     a  d3  b utcYears  b   i start  i    i stop  i     i step  i         https   github com d3 d3 time blob master src utcYear js L26  Source    Aliases for  d3 timeYear   timeYear   range   interval range  and  d3 utcYear   timeYear   range   interval range   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-time"},{"name":"d3/d3-contour","artist":"return, specifi, sourc, array, valu","id":13,"playcount":15722,"description":"d3/d3-contour return, specifi, sourc, array, valu   d3 contour  This library computes contour polygons by applying  marching squares  https   en wikipedia org wiki Marching squares  to a rectangular array of numeric values  For example  here is Maungawhau s topology  the classic  volcano  dataset and  terrain colors  from R      img alt  Contour Plot  src  https   raw githubusercontent com d3 d3 contour master img volcano gif  width  420  height  295    https   bl ocks org mbostock 4241134   For each  threshold value   contours thresholds   the  contour generator    contours  constructs a GeoJSON MultiPolygon geometry object representing the area where the input values are greater than or equal to the threshold value  The geometry is in planar coordinates  where   i i  i    0 5   i j  i    0 5  corresponds to element  i i  i     i jn  i  in the input values array  Here is an example that loads a GeoTIFF of surface temperatures  and another that blurs a noisy monochrome PNG to produce smooth contours of cloud fraction     img alt  GeoTiff Contours  src  https   raw githubusercontent com d3 d3 contour master img temperature png  width  420  height  219    https   bl ocks org mbostock 4886c227038510f1c103ce305bef6fcc    img alt  Cloud Contours  src  https   raw githubusercontent com d3 d3 contour master img clouds png  width  420  height  219    https   bl ocks org mbostock 818053c76d79d4841790c332656bf9da   Since the contour polygons are GeoJSON  you can transform and display them using standard tools  see  d3 geoPath  https   github com d3 d3 geo blob master README md geoPath    d3 geoProject  https   github com d3 d3 geo projection blob master README md geoProject  and  d3 geoStitch  https   github com d3 d3 geo projection blob master README md geoStitch   for example  Here the above contours of surface temperature are displayed in the Natural Earth projection     img alt  GeoTiff Contours II  src  https   raw githubusercontent com d3 d3 contour master img reprojection png  width  420  height  219    https   bl ocks org mbostock 83c0be21dba7602ee14982b020b12f51   Contour plots can also visualize continuous functions by sampling  Here is the Goldstein Price function  a test function for global optimization  and a trippy animation of  sin   x     y   sin   x     y       img alt  Contour Plot II  src  https   raw githubusercontent com d3 d3 contour master img goldstein price png  width  420  height  219    https   bl ocks org mbostock f48ff9c1af4d637c9a518727f5fdfef5    img alt  Contour Plot III  src  https   raw githubusercontent com d3 d3 contour master img sin cos png  width  420  height  219    https   bl ocks org mbostock bf2f5f02b62b5b3bb92ae1b59b53da36   Contours can also show the  estimated density   density estimation  of point clouds  which is especially useful to avoid overplotting in large datasets  This library implements fast two dimensional kernel density estimation  see  d3 contourDensity   contourDensity   Here is a scatterplot showing the relationship between the idle duration and eruption duration for Old Faithful     img alt  Density Contours  src  https   raw githubusercontent com d3 d3 contour master img faithful png  width  420  height  219    https   bl ocks org mbostock e3f4376d54e02d5d43ae32a7cf0e6aa9   And here is a density contour plot showing the relationship between the weight and price of 53 940 diamonds     img alt  Density Contours  src  https   raw githubusercontent com d3 d3 contour master img diamonds png  width  420  height  420    https   bl ocks org mbostock 7f5f22524bd1d824dd53c535eda0187f      Installing  If you use NPM   npm install d3 contour   Otherwise  download the  latest release  https   github com d3 d3 contour releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 contour v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 contour v1 min js    script   script      Populate a grid of n m values where  2   x   2 and  2   y   1  var n   256  m   256  values   new Array n   m   for  var j   0 5  k   0  j   m    j      for  var i   0 5  i   n    i    k        values k    goldsteinPrice i   n   4   2  1   j   m   3             Compute the contour polygons at log spaced intervals  returns an array of MultiPolygon  var contours   d3 contours        size  n  m        thresholds d3 range 2  21  map p    Math pow 2  p         values       See https   en wikipedia org wiki Test functions for optimization function goldsteinPrice x  y      return  1   Math pow x   y   1  2     19   14   x   3   x   x   14   y   6   x   x   3   y   y            30   Math pow 2   x   3   y  2     18   32   x   12   x   x   48   y   36   x   y   27   y   y         script        Try d3 contour in your browser   https   tonicdev com npm d3 contour      API Reference   a name  contours  href   contours     a  d3  b contours  b         https   github com d3 d3 contour blob master src contours js  Source    Constructs a new contour generator with the default settings    a name   contours  href    contours     a   i contours  i   i values  i        https   github com d3 d3 contour blob master src contours js  Source    Computes the contours for the given array of  values   returning an array of  GeoJSON  http   geojson org geojson spec html   MultiPolygon  http   geojson org geojson spec html multipolygon   geometry objects  http   geojson org geojson spec html geometry objects   Each geometry object represents the area where the input  i values  i  are greater than or equal to the corresponding  threshold value   contours thresholds   the threshold value for each geometry object is exposed as  i geometry  i  value   The input  values  must be an array of length  i n  i   i m  i  where   i n  i    i m  i   is the contour generator s  size   contours size   furthermore  each  i values  i   i i  i     i jn  i   must represent the value at the position   i i  i    i j  i    For example  to construct a 256 256 grid for the  Goldstein Price function  https   en wikipedia org wiki Test functions for optimization  where  2    i x  i    2 and  2    i y  i    1      js var n   256  m   256  values   new Array n   m   for  var j   0 5  k   0  j   m    j      for  var i   0 5  i   n    i    k        values k    goldsteinPrice i   n   4   2  1   j   m   3          function goldsteinPrice x  y      return  1   Math pow x   y   1  2     19   14   x   3   x   x   14   y   6   x   x   3   y   y            30   Math pow 2   x   3   y  2     18   32   x   12   x   x   48   y   36   x   y   27   y   y           The returned geometry objects are typically passed to  d3 geoPath  https   github com d3 d3 geo blob master README md geoPath  to display  using null or  d3 geoIdentity  https   github com d3 d3 geo blob master README md geoIdentity  as the associated projection    a name  contours contour  href   contours contour     a   i contours  i   b contour  b   i values  i    i threshold  i        https   github com d3 d3 contour blob master src contours js  Source    Computes a single contour  returning a  GeoJSON  http   geojson org geojson spec html   MultiPolygon  http   geojson org geojson spec html multipolygon   geometry object  http   geojson org geojson spec html geometry objects  representing the area where the input  i values  i  are greater than or equal to the given   threshold  value   contours thresholds   the threshold value for each geometry object is exposed as  i geometry  i  value   The input  values  must be an array of length  i n  i   i m  i  where   i n  i    i m  i   is the contour generator s  size   contours size   furthermore  each  i values  i   i i  i     i jn  i   must represent the value at the position   i i  i    i j  i    See   contours     contours  for an example    a name  contours size  href   contours size     a   i contours  i   b size  b    i size  i         https   github com d3 d3 contour blob master src contours js  Source    If  size  is specified  sets the expected size of the input  values  grid to the  contour generator    contour  and returns the contour generator  The  size  is specified as an array    i n  i    i m  i    where  i n  i  is the number of columns in the grid and  i m  i  is the number of rows   n  and  m  must be positive integers  If  size  is not specified  returns the current size which defaults to  1  1     a name  contours smooth  href   contours smooth     a   i contours  i   b smooth  b    i smooth  i         https   github com d3 d3 contour blob master src contours js  Source    If  smooth  is specified  sets whether or not the generated contour polygons are smoothed using linear interpolation  If  smooth  is not specified  returns the current smoothing flag  which defaults to true    a name  contours thresholds  href   contours thresholds     a   i contours  i   b thresholds  b    i thresholds  i         https   github com d3 d3 contour blob master src contours js  Source    If  thresholds  is specified  sets the threshold generator to the specified function or array and returns this contour generator  If  thresholds  is not specified  returns the current threshold generator  which by default implements  Sturges  formula  https   github com d3 d3 array blob master README md thresholdSturges    Thresholds are defined as an array of values   x0    x1       The first  generated contour    contour  corresponds to the area where the input values are greater than or equal to  x0   the second contour corresponds to the area where the input values are greater than or equal to  x1   and so on  Thus  there is exactly one generated MultiPolygon geometry object for each specified threshold value  the threshold value is exposed as  i geometry  i  value   If a  count  is specified instead of an array of  thresholds   then the input values   extent  https   github com d3 d3 array blob master README md extent  will be uniformly divided into approximately  count  bins  see  d3 ticks  https   github com d3 d3 array blob master README md ticks       Density Estimation   a name  contourDensity  href   contourDensity     a  d3  b contourDensity  b         https   github com d3 d3 contour blob master src density js  Source    Constructs a new density estimator with the default settings    a name   density  href    density     a   i density  i   i data  i        https   github com d3 d3 contour blob master src density js  Source    Estimates the density contours for the given array of  data   returning an array of  GeoJSON  http   geojson org geojson spec html   MultiPolygon  http   geojson org geojson spec html multipolygon   geometry objects  http   geojson org geojson spec html geometry objects   Each geometry object represents the area where the estimated number of points per square pixel is greater than or equal to the corresponding  threshold value   density thresholds   the threshold value for each geometry object is exposed as  i geometry  i  value  The returned geometry objects are typically passed to  d3 geoPath  https   github com d3 d3 geo blob master README md geoPath  to display  using null or  d3 geoIdentity  https   github com d3 d3 geo blob master README md geoIdentity  as the associated projection  See also  d3 contours   contours    The  x   and  y  coordinate for each data point are computed using   density  x   density x  and   density  y   density y   In addition    density  weight   density weight  indicates the relative contribution of each data point  default 1   The generated contours are only accurate within the estimator s  defined size   density size     a name  density x  href   density x     a   i density  i   b x  b    i x  i         https   github com d3 d3 contour blob master src density js  Source    If  x  is specified  sets the  x  coordinate accessor  If  x  is not specified  returns the current  x  coordinate accessor  which defaults to      js function x d      return d 0           a name  density y  href   density y     a   i density  i   b y  b    i y  i         https   github com d3 d3 contour blob master src density js  Source    If  y  is specified  sets the  y  coordinate accessor  If  y  is not specified  returns the current  y  coordinate accessor  which defaults to      js function y d      return d 1           a name  density weight  href   density weight     a   i density  i   b weight  b    i weight  i         https   github com d3 d3 contour blob master src density js  Source    If  weight  is specified  sets the accessor for point weights  If  weight  is not specified  returns the current point weight accessor  which defaults to      js function weight       return 1          a name  density size  href   density size     a   i density  i   b size  b    i size  i         https   github com d3 d3 contour blob master src density js  Source    If  size  is specified  sets the size of the density estimator to the specified bounds and returns the estimator  The  size  is specified as an array    i width  i    i height  i     where  i width  i  is the maximum  x  value and  i height  i  is the maximum  y  value  If  size  is not specified  returns the current size which defaults to  960  500   The  estimated density contours    density  are only accurate within the defined size    a name  density cellSize  href   density cellSize     a   i density  i   b cellSize  b    i cellSize  i         https   github com d3 d3 contour blob master src density js  Source    If  cellSize  is specified  sets the size of individual cells in the underlying bin grid to the specified positive integer and returns the estimator  If  cellSize  is not specified  returns the current cell size  which defaults to 4  The cell size is rounded down to the nearest power of two  Smaller cells produce more detailed contour polygons  but are more expensive to compute    a name  density thresholds  href   density thresholds     a   i density  i   b thresholds  b    i thresholds  i         https   github com d3 d3 contour blob master src density js  Source    If  thresholds  is specified  sets the threshold generator to the specified function or array and returns this contour generator  If  thresholds  is not specified  returns the current threshold generator  which by default generates about twenty nicely rounded density thresholds   Thresholds are defined as an array of values   x0    x1       The first  generated density contour    density  corresponds to the area where the estimated density is greater than or equal to  x0   the second contour corresponds to the area where the estimated density is greater than or equal to  x1   and so on  Thus  there is exactly one generated MultiPolygon geometry object for each specified threshold value  the threshold value is exposed as  i geometry  i  value  The first value  x0  should typically be greater than zero   If a  count  is specified instead of an array of  thresholds   then approximately  count  uniformly spaced nicely rounded thresholds will be generated  see  d3 ticks  https   github com d3 d3 array blob master README md ticks     a name  density bandwidth  href   density bandwidth     a   i density  i   b bandwidth  b    i bandwidth  i         https   github com d3 d3 contour blob master src density js  Source    If  bandwidth  is specified  sets the bandwidth  the standard deviation  of the Gaussian kernel and returns the estimate  If  bandwidth  is not specified  returns the current bandwidth  which defaults to 20 4939   The specified  bandwidth  is currently rounded to the nearest supported value by this implementation  and must be nonnegative  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-contour"},{"name":"d3/d3-tile","artist":"return, specifi, sourc, array, valu","id":14,"playcount":6960,"description":"d3/d3-tile return, specifi, sourc, array, valu   d3 tile  A layout for working with image based map tiles  This can be used to create a simple slippy map  or to render standard map tiles   e g    Mapbox  Mapzen  CloudMade  Bing  as a base layer behind a vector layer    table     tr       td         a href  http   bl ocks org mbostock 94b9fd26e12c586f342d  Raster   Vector I        br  img width  230  height  120  src  http   bl ocks org mbostock raw 94b9fd26e12c586f342d thumbnail png    a        td       td         a href  http   bl ocks org mbostock 5342063  Raster   Vector II        br  img width  230  height  120  src  http   bl ocks org mbostock raw 5342063 thumbnail png    a        td       td         a href  http   bl ocks org mbostock 5914438  Raster   Vector III        br  img width  230  height  120  src  http   bl ocks org mbostock raw 5914438 thumbnail png    a        td      tr     tr       td         a href  http   bl ocks org mbostock 9535021  Raster   Vector IV        br  img width  230  height  120  src  http   bl ocks org mbostock raw 9535021 thumbnail png    a        td       td         a href  http   bl ocks org mbostock 5593150  Vector Tiles        br  img width  230  height  120  src  http   bl ocks org mbostock raw 5593150 thumbnail png    a        td       td         a href  http   bl ocks org mbostock eb0c48375fcdcdc00c54a92724733d0d  Tile by Bounding Box        br  img width  230  height  120  src  http   bl ocks org mbostock raw eb0c48375fcdcdc00c54a92724733d0d thumbnail png    a        td      tr     tr       td         a href  http   bl ocks org curran 96823ad84b0415536980b1cbf57b1dcc  Cross Country Trip        br  img width  230  height  120  src  http   bl ocks org curran raw 96823ad84b0415536980b1cbf57b1dcc thumbnail png    a        td       td         a href  http   bl ocks org linusmarco c75b1d8b0e4996c1eb8a7d9d296636e9  Wrapping Example        br  img width  230  height  120  src  http   bl ocks org linusmarco raw c75b1d8b0e4996c1eb8a7d9d296636e9 thumbnail png    a        td       td         a href  http   bl ocks org linusmarco 71f80d7c8a53981f5bbfab8167f32a10  Dynamic tileSize Example        br  img width  230  height  120  src  http   bl ocks org linusmarco raw 71f80d7c8a53981f5bbfab8167f32a10 thumbnail png    a        td      tr    table      Installing  If you use NPM   npm install d3 tile   Otherwise  download the  latest release  https   github com d3 d3 tile releases latest   You can also load directly from  unpkg com  https   unpkg com  as a  standalone library  https   unpkg com d3 tile 0 0   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   unpkg com d3 array 1 0    script   script src  https   unpkg com d3 tile 0 0    script   script   var tile   d3 tile       script        Try d3 tile in your browser   https   tonicdev com npm d3 tile      API Reference   a href   tile  name  tile     a  d3  b tile  b     Constructs a layout for determining which quadtree tiles to display in a rectangular viewport      js var tile   d3 tile          a href    tile  name   tile     a   i tile  i     Computes the set of quadtree tiles to display given the current layout  extent   tile extent    scale   tile scale    translate   tile translate  and  tileSize   tile tileSize   Returns an array of objects with the following properties       x  The integer X coordinate of the tile address  Periodic if  wrap   tile wrap  is set to  true       y  The integer Y coordinate of the tile address      z  The integer Z coordinate of the tile address  zoom level       tx  The X translate to be applied to the tile  This is the  x  value multiplied by  tileSize   tile tileSize   but without wrapping logic applied      ty  The Y translate to be applied to the tile  This is the  y  value multiplied by  tileSize   tile tileSize    The returned array also has properties  scale  and  translate  that can be used to apply the correct transformation to the group of tile images  For example usage  see  Raster   Vector III  http   bl ocks org mbostock 5914438     a href   tile extent  name  tile extent     a   i tile  i   b extent  b    i extent  i     If  extent  is specified  sets this tile layout s extent to the specified array of points    x0    y0      x1    y1     where   x0    y0   is the top left corner and   x1    y1   is the bottom right corner  and returns this tile layout  If  extent  is not specified  returns the current layout extent    a href   tile size  name  tile size     a   i tile  i   b size  b    i size  i     If  size  is specified  sets this tile layout s size to the specified two element array of numbers   width    height   and returns this tile layout  If  size  is not specified  returns the current layout size  This is a convenience method equivalent to setting the  extent   tile extent  to   0  0     width    height       a href   tile scale  name  tile scale     a   i tile  i   b scale  b    i scale  i     If  scale  is specified  sets this tile layout s scale to the specified number  scale  and returns this tile layout  If  scale  is not specified  returns the current layout scale    a href   tile translate  name  tile translate     a   i tile  i   b translate  b    i translate  i     If  translate  is specified  sets this tile layout s translate to the specified two element array of numbers   x    y   and returns this tile layout  If  translate  is not specified  returns the current layout translate    a href   tile wrap  name  tile wrap     a   i tile  i   b wrap  b    i wrap  i     If  wrap  is specified  sets this tile layout s wrapping option to the specified boolean value and returns this tile layout  If  wrap  is not specified  returns the current wrapping option  which defaults to  true       image  https   cloud githubusercontent com assets 68416 16513800 0c158872 3f85 11e6 84c6 e481b7e0af5d png   http   bl ocks org linusmarco c75b1d8b0e4996c1eb8a7d9d296636e9   p align  center   b wrap  b   i true  i    p   If  wrap  is  true   wrapping logic will be applied to tile address  x  values when the layout is evaluated  This will cause map tiles to be displayed in a periodic manner  going beyond longitude values between  180 and 180      image  https   cloud githubusercontent com assets 68416 16513812 2644b43e 3f85 11e6 83fc a34a37c852ab png   http   bl ocks org linusmarco c75b1d8b0e4996c1eb8a7d9d296636e9   p align  center   b wrap  b   i false  i    p   If  wrap  is  false   wrapping logic will be disabled  limiting tiles to be within longitude values between  180 and 180    a href   tile tileSize  name  tile tileSize     a   i tile  i   b tileSize  b    i tileSize  i     If  tileSize  is specified  sets this tile layout s individual tile widths and heights to the specified number  tileSize  and returns this tile layout  If  tileSize  is not specified  returns the current layout tile size  which defaults to 256  the most common tile size among tile service providers  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-tile"},{"name":"d3/d3-quadtree","artist":"return, specifi, sourc, array, valu","id":15,"playcount":11562,"description":"d3/d3-quadtree return, specifi, sourc, array, valu   d3 quadtree  A  quadtree  https   en wikipedia org wiki Quadtree  recursively partitions two dimensional space into squares  dividing each square into four equally sized squares  Each distinct point exists in a unique leaf  node   nodes   coincident points are represented by a linked list  Quadtrees can accelerate various spatial operations  such as the  Barnes Hut approximation  https   en wikipedia org wiki Barnes Hut simulation  for computing many body forces  collision detection  and searching for nearby points    a href  http   bl ocks org mbostock 9078690   img src  http   bl ocks org mbostock raw 9078690 thumbnail png  width  202    a   a href  http   bl ocks org mbostock 4343214   img src  http   bl ocks org mbostock raw 4343214 thumbnail png  width  202    a      Installing  If you use NPM   npm install d3 quadtree   Otherwise  download the  latest release  https   github com d3 d3 quadtree releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 quadtree v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 quadtree v1 min js    script   script   var quadtree   d3 quadtree       script        Try d3 quadtree in your browser   https   tonicdev com npm d3 quadtree      API Reference   a name  quadtree  href   quadtree     a  d3  b quadtree  b    i data  i     i x  i    i y  i           https   github com d3 d3 quadtree blob master src quadtree js L14  Source    Creates a new  empty quadtree with an empty  extent   quadtree extent  and the default   x     quadtree x  and   y     quadtree y accessors  If  data  is specified   adds   quadtree addAll  the specified array of data to the quadtree  This is equivalent to      js var tree   d3 quadtree        addAll data        If  x  and  y  are also specified  sets the   x     quadtree x  and   y     quadtree y  accessors to the specified functions before adding the specified array of data to the quadtree  equivalent to      js var tree   d3 quadtree        x x       y y       addAll data         a name  quadtree x  href   quadtree x     a   i quadtree  i   b x  b    i x  i         https   github com d3 d3 quadtree blob master src x js  Source    If  x  is specified  sets the current  x  coordinate accessor and returns the quadtree  If  x  is not specified  returns the current  x  accessor  which defaults to      js function x d      return d 0          The  x  acccessor is used to derive the  x  coordinate of data when  adding   quadtree add  to and  removing   quadtree remove  from the tree  It is also used when  finding   quadtree find  to re access the coordinates of data previously added to the tree  therefore  the  x   and  y  accessors must be consistent  returning the same value given the same input    a name  quadtree y  href   quadtree y     a   i quadtree  i   b y  b    i y  i          https   github com d3 d3 quadtree blob master src y js  Source    If  y  is specified  sets the current  y  coordinate accessor and returns the quadtree  If  y  is not specified  returns the current  y  accessor  which defaults to      js function y d      return d 1          The  y  acccessor is used to derive the  y  coordinate of data when  adding   quadtree add  to and  removing   quadtree remove  from the tree  It is also used when  finding   quadtree find  to re access the coordinates of data previously added to the tree  therefore  the  x   and  y  accessors must be consistent  returning the same value given the same input    a name  quadtree extent  href   quadtree extent     a   i quadtree  i   b extent  b    extent          https   github com d3 d3 quadtree blob master src extent js  Source    If  extent  is specified  expands the quadtree to  cover   quadtree cover  the specified points    x0    y0      x1    y1    and returns the quadtree  If  extent  is not specified  returns the quadtree s current extent    x0    y0      x1    y1     where  x0  and  y0  are the inclusive lower bounds and  x1  and  y1  are the inclusive upper bounds  or undefined if the quadtree has no extent  The extent may also be expanded by calling   quadtree  cover   quadtree cover  or   quadtree  add   quadtree add     a name  quadtree cover  href   quadtree cover     a   i quadtree  i   b cover  b   i x  i    i y  i         https   github com d3 d3 quadtree blob master src cover js  Source    Expands the quadtree to cover the specified point   x   y    and returns the quadtree  If the quadtree s extent already covers the specified point  this method does nothing  If the quadtree has an extent  the extent is repeatedly doubled to cover the specified point  wrapping the  root   quadtree root   node   nodes  as necessary  if the quadtree is empty  the extent is initialized to the extent     x      y        x      y       Rounding is necessary such that if the extent is later doubled  the boundaries of existing quadrants do not change due to floating point error     a name  quadtree add  href   quadtree add     a   i quadtree  i   b add  b   i datum  i         https   github com d3 d3 quadtree blob master src add js  Source    Adds the specified  datum  to the quadtree  deriving its coordinates   x   y   using the current   x     quadtree x  and   y     quadtree y accessors  and returns the quadtree  If the new point is outside the current  extent   quadtree extent  of the quadtree  the quadtree is automatically expanded to  cover   quadtree cover  the new point    a name  quadtree addAll  href   quadtree addAll     a   i quadtree  i   b addAll  b   i data  i         https   github com d3 d3 quadtree blob master src add js L50  Source    Adds the specified array of  data  to the quadtree  deriving each element s coordinates   x   y   using the current   x     quadtree x  and   y     quadtree y accessors  and return this quadtree  This is approximately equivalent to calling   quadtree  add   quadtree add  repeatedly      js for  var i   0  n   data length  i   n    i      quadtree add data i           However  this method results in a more compact quadtree because the extent of the  data  is computed first before adding the data    a name  quadtree remove  href   quadtree remove     a   i quadtree  i   b remove  b   i datum  i         https   github com d3 d3 quadtree blob master src remove js  Source    Removes the specified  datum  to the quadtree  deriving its coordinates   x   y   using the current   x     quadtree x  and   y     quadtree y accessors  and returns the quadtree  If the specified  datum  does not exist in this quadtree  this method does nothing    a name  quadtree removeAll  href   quadtree removeAll     a   i quadtree  i   b removeAll  b   i data  i         https   github com d3 d3 quadtree blob master src remove js L59  Source        a name  quadtree copy  href   quadtree copy     a   i quadtree  i   b copy  b     Returns a copy of the quadtree  All  nodes   nodes  in the returned quadtree are identical copies of the corresponding node in the quadtree  however  any data in the quadtree is shared by reference and not copied    a name  quadtree root  href   quadtree root     a   i quadtree  i   b root  b          https   github com d3 d3 quadtree blob master src root js  Source    Returns the root  node   nodes  of the quadtree    a name  quadtree data  href   quadtree data     a   i quadtree  i   b data  b          https   github com d3 d3 quadtree blob master src data js  Source    Returns an array of all data in the quadtree    a name  quadtree size  href   quadtree size     a   i quadtree  i   b size  b          https   github com d3 d3 quadtree blob master src size js  Source    Returns the total number of data in the quadtree    a name  quadtree find  href   quadtree find     a   i quadtree  i   b find  b   i x  i    i y  i     i radius  i          https   github com d3 d3 quadtree blob master src find js  Source    Returns the datum closest to the position   x   y   with the given search  radius   If  radius  is not specified  it defaults to infinity  If there is no datum within the search area  returns undefined    a name  quadtree visit  href   quadtree visit     a   i quadtree  i   b visit  b   i callback  i         https   github com d3 d3 quadtree blob master src visit js  Source    Visits each  node   nodes  in the quadtree in pre order traversal  invoking the specified  callback  with arguments  node    x0    y0    x1    y1  for each node  where  node  is the node being visited    x0    y0   are the lower bounds of the node  and   x1    y1   are the upper bounds  and returns the quadtree   Assuming that positive  x  is right and positive  y  is down  as is typically the case in Canvas and SVG    x0    y0   is the top left corner and   x1    y1   is the lower right corner  however  the coordinate system is arbitrary  so more formally  x0      x1  and  y0      y1     If the  callback  returns true for a given node  then the children of that node are not visited  otherwise  all child nodes are visited  This can be used to quickly visit only parts of the tree  for example when using the  Barnes Hut approximation  https   en wikipedia org wiki Barnes Hut simulation   Note  however  that child quadrants are always visited in sibling order  top left  top right  bottom left  bottom right  In cases such as  search   quadtree find   visiting siblings in a specific order may be faster    a name  quadtree visitAfter  href   quadtree visitAfter     a   i quadtree  i   b visitAfter  b   i callback  i         https   github com d3 d3 quadtree blob master src visitAfter js  Source    Visits each  node   nodes  in the quadtree in post order traversal  invoking the specified  callback  with arguments  node    x0    y0    x1    y1  for each node  where  node  is the node being visited    x0    y0   are the lower bounds of the node  and   x1    y1   are the upper bounds  and returns the quadtree   Assuming that positive  x  is right and positive  y  is down  as is typically the case in Canvas and SVG    x0    y0   is the top left corner and   x1    y1   is the lower right corner  however  the coordinate system is arbitrary  so more formally  x0      x1  and  y0      y1    Returns  root        Nodes  Internal nodes of the quadtree are represented as four element arrays in left to right  top to bottom order      0    the top left quadrant  if any     1    the top right quadrant  if any     2    the bottom left quadrant  if any     3    the bottom right quadrant  if any   A child quadrant may be undefined if it is empty   Leaf nodes are represented as objects with the following properties      data    the data associated with this point  as passed to   quadtree  add   quadtree add      next    the next datum in this leaf  if any   The  length  property may be used to distinguish leaf nodes from internal nodes  it is undefined for leaf nodes  and 4 for internal nodes  For example  to iterate over all data in a leaf node      js if   node length  do console log node data   while  node   node next        The point s  x   and  y  coordinates   must not be modified   while the point is in the quadtree  To update a point s position   remove   quadtree remove  the point and then re  add   quadtree add  it to the quadtree at the new position  Alternatively  you may discard the existing quadtree entirely and create a new one from scratch  this may be more efficient if many of the points have moved  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-quadtree"},{"name":"d3/d3-geo-polygon","artist":"project, sourc, img, bra, polygon","id":16,"playcount":7957,"description":"d3/d3-geo-polygon project, sourc, img, bra, polygon   d3 geo polygon  Clipping and geometric operations for spherical polygons      Installing  If you use NPM   npm install d3 geo polygon   Otherwise  download the  latest release  https   github com d3 d3 geo polygon releases latest   You can also load directly from  unpkg  https   unpkg com d3 geo polygon    AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   unpkg com d3 geo 1    script   script src  https   unpkg com d3 geo polygon 1    script   script      new projection var projection   d3 geoDodecahedral        polyhedral projections don t need SVG or canvas clipping anymore var projection   d3 geoPolyhedralCollignon        arbitrary polygon clipping on any projection var projection   d3 geoEquirectangular        preclip d3 geoClipPolygon         type   Polygon         coordinates      10   10     10  10    10  10    10   10     10   10                script          API Reference   a name  geoClipPolygon  href   geoClipPolygon     a  d3  b geoClipPolygon  b   i polygon  i        https   github com d3 d3 geo polygon blob master src clip polygon js  Source    Given a GeoJSON  polygon   returns a clip function suitable for   projection  preclip  https   github com d3 d3 geo preclip      a name  polygon  href   polygon     a  clip  b polygon  b     Given a clipPolygon function  returns the GeoJSON polygon        Projections   d3 geo polygon adds polygon clipping to the polyhedral projections from  d3 geo projection  https   github com d3 d3 geo projection   Thus  it supercedes the following symbols     a href   geoPolyhedral  name  geoPolyhedral     a  d3  b geoPolyhedral  b   i tree  i    i face  i        https   github com d3 d3 geo polygon blob master src polyhedral index js  Source    Defines a new polyhedral projection  The  tree  is a spanning tree of polygon face nodes  each  node  is assigned a  node  transform matrix  The  face  function returns the appropriate  node  for a given  lambda  and  phi  in radians    a href   geoPolyhedral tree  name  geoPolyhedral tree     a   i polyhedral  i   b tree  b    returns the spanning tree of the polyhedron  from which one can infer the faces  centers  polygons  shared edges etc     a href   geoPolyhedralButterfly  name  geoPolyhedralButterfly     a  d3  b geoPolyhedralButterfly  b         https   github com d3 d3 geo polygon blob master src polyhedral butterfly js  Source      img src  https   raw githubusercontent com d3 d3 geo polygon master img polyhedralButterfly png  width  480  height  250    http   bl ocks org mbostock 4458680   The gnomonic butterfly projection    a href   geoPolyhedralCollignon  name  geoPolyhedralCollignon     a  d3  b geoPolyhedralCollignon  b         https   github com d3 d3 geo polygon blob master src polyhedral collignon js  Source      img src  https   raw githubusercontent com d3 d3 geo polygon master img polyhedralCollignon png  width  480  height  250    https   www jasondavies com maps collignon butterfly    The Collignon butterfly projection    a href   geoPolyhedralWaterman  name  geoPolyhedralWaterman     a  d3  b geoPolyhedralWaterman  b         https   github com d3 d3 geo polygon blob master src polyhedral waterman js  Source      img src  https   raw githubusercontent com d3 d3 geo polygon master img polyhedralWaterman png  width  480  height  250    https   www jasondavies com maps waterman butterfly    A butterfly projection inspired by Steve Waterman s design    New projections are introduced    a href   geoPolyhedralVoronoi  name  geoPolyhedralVoronoi     a  d3  b geoPolyhedralVoronoi  b    i parents  i      i polygons  i      i faceProjection  i         https   github com d3 d3 geo polygon blob master src polyhedral voronoi js  Source    Returns a polyhedral projection based on the  polygons   arranged in a tree according to the  parents  list   polygons  are a GeoJSON FeatureCollection of geoVoronoi cells  which should indicate the corresponding sites  see  d3 geo voronoi  https   github com Fil d3 geo voronoi    An optional   faceProjection    geoPolyhedral  is passed to d3 geoPolyhedral      note that the gnomonic projection on the polygons  sites is the only faceProjection that works in the general case   The   b parents  b    i parents  i       b polygons  b    i polygons  i       b faceProjection  b    i faceProjection  i    set and read the corresponding options    a href   geoCubic  name  geoCubic     a  d3  b geoCubic  b         https   github com d3 d3 geo polygon blob master src cubic js  Source      img src  https   raw githubusercontent com d3 d3 geo polygon master img cubic png  width  480  height  250    https   beta observablehq com  fil cubic projections   The cubic projection    a href   geoDodecahedral  name  geoDodecahedral     a  d3  b geoDodecahedral  b         https   github com d3 d3 geo polygon blob master src polyhedral dodecahedral js  Source      img src  https   raw githubusercontent com d3 d3 geo polygon master img dodecahedral png  width  480  height  250    https   beta observablehq com  fil dodecahedral projection   The dodecahedral projection    a href   geoIcosahedral  name  geoIcosahedral     a  d3  b geoIcosahedral  b         https   github com d3 d3 geo polygon blob master src icosahedral js  Source      img src  https   raw githubusercontent com d3 d3 geo polygon master img icosahedral png  width  480  height  250    https   beta observablehq com  fil icosahedral projections   The icosahedral projection    a href   geoAirocean  name  geoAirocean     a  d3  b geoAirocean  b         https   github com d3 d3 geo polygon blob master src airocean js  Source      img src  https   raw githubusercontent com d3 d3 geo polygon master img airocean png  width  480  height  250    https   beta observablehq com  fil airocean projection   Buckminster Fuller s Airocean projection  also known as  Dymaxion    based on a very specific arrangement of the icosahedron which allows continuous continent shapes  Fuller s triangle transformation  as formulated by Robert W  Gray  and implemented by Philippe Rivi re   makes the projection almost equal area    a href   geoCahillKeyes  name  geoCahillKeyes     a  d3  b geoCahillKeyes  b         https   github com d3 d3 geo polygon blob master src cahillKeyes js  Source    br  a href   geoCahillKeyesRaw  name  geoCahillKeyesRaw     a  d3  b geoCahillKeyes  b     img src  https   raw githubusercontent com d3 d3 geo polygon master img cahillKeyes png  width  480  height  250    http   www genekeyes com    The Cahill Keyes projection  designed by Gene Keyes  1975   is built on Bernard J  S  Cahill s 1909 octant design  Implementation by Mary Jo Gra a  2011   ported to D3 by Enrico Spinielli  2013     a href   geoTetrahedralLee  name  geoTetrahedralLee     a  d3  b geoTetrahedralLee  b         https   github com d3 d3 geo polygon blob master src tetrahedralLee js  Source    br  a href   geoLeeRaw  name  geoLeeRaw     a  d3  b geoLeeRaw  b     img src  https   raw githubusercontent com d3 d3 geo polygon master img tetrahedralLee png  width  480  height  250    https   bl ocks org Fil c36ed66a4d50d77150712c80642a78d5   Lee s tetrahedral conformal projection    a href  tetrahedralLee angle  name  polyhedralLee angle     a  Default  i angle  i  is  30   apex up   30  for base up  apex down    Default aspect uses  projection  rotate  30  180   and has the North Pole at the triangle s center    use  projection  rotate   30  0   for the  South aspect  https   beta observablehq com  fil lee projection     a href   geoCox  name  geoCox     a  d3  b geoCox  b         https   github com d3 d3 geo polygon blob master src cox js  Source    br  a href   geoCoxRaw  name  geoCoxRaw     a  d3  b geoCoxRaw  b     img src  https   raw githubusercontent com d3 d3 geo polygon master img cox png  width  480  height  250    https   visionscarto net cox conformal projection   The Cox conformal projection   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-geo-polygon"},{"name":"d3/d3-drag","artist":"specifi, return, select, current, element","id":17,"playcount":19793,"description":"d3/d3-drag specifi, return, select, current, element   d3 drag   Drag and drop  https   en wikipedia org wiki Drag and drop  is a popular and easy to learn pointing gesture  move the pointer to an object  press and hold to grab it   drag  the object to a new location  and release to  drop   D3 s  drag behavior   api reference  provides a convenient but flexible abstraction for enabling drag and drop interaction on  selections  https   github com d3 d3 selection   For example  you can use d3 drag to facilitate interaction with a  force directed graph  https   github com d3 d3 force   or a simulation of colliding circles     img alt  Force Dragging III  src  https   raw githubusercontent com d3 d3 drag master img force graph png  width  420  height  219    http   bl ocks org mbostock ad70335eeef6d167bc36fd3c04378048   img alt  Force Dragging II  src  https   raw githubusercontent com d3 d3 drag master img force collide png  width  420  height  219    http   bl ocks org mbostock 2990a882e007f8384b04827617752738   You can also use d3 drag to implement custom user interface elements  such as a slider  But the drag behavior isn t just for moving elements around  there are a variety of ways to respond to a drag gesture  For example  you can use it to lasso elements in a scatterplot  or to paint lines on a canvas     img alt  Line Drawing  src  https   raw githubusercontent com d3 d3 drag master img drawing png  width  420  height  219    http   bl ocks org mbostock f705fc55e6f26df29354   The drag behavior can be combined with other behaviors  such as  d3 zoom  https   github com d3 d3 zoom  for zooming     img alt  Drag   Zoom II  src  https   raw githubusercontent com d3 d3 drag master img dots png  width  420  height  219    http   bl ocks org mbostock 3127661b6f13f9316be745e77fdfb084   The drag behavior is agnostic about the DOM  so you can use it with SVG  HTML or even Canvas  And you can extend it with advanced selection techniques  such as a Voronoi overlay or a closest target search     img alt  Circle Dragging IV  src  https   raw githubusercontent com d3 d3 drag master img voronoi png  width  420  height  219    http   bl ocks org mbostock ec10387f24c1fad2acac3bc11eb218a5   img alt  Circle Dragging II  src  https   raw githubusercontent com d3 d3 drag master img canvas png  width  420  height  219    http   bl ocks org mbostock c206c20294258c18832ff80d8fd395c3   Best of all  the drag behavior automatically unifies mouse and touch input  and avoids browser idiosyncrasies  When  Pointer Events  https   www w3 org TR pointerevents   are more widely available  the drag behavior will support those  too      Installing  If you use NPM   npm install d3 drag   Otherwise  download the  latest release  https   github com d3 d3 drag releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 drag v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 dispatch v1 min js    script   script src  https   d3js org d3 selection v1 min js    script   script src  https   d3js org d3 drag v1 min js    script   script   var drag   d3 drag       script        Try d3 drag in your browser   https   tonicdev com npm d3 drag      API Reference  This table describes how the drag behavior interprets native events     Event          Listening Element   Drag Event   Default Prevented                                                                             mousedown      selection           start        no                     mousemove      window              drag         yes                    mouseup        window              end          yes                    dragstart      window                           yes                    selectstart    window                           yes                    click          window                           yes                    touchstart     selection           start        no                     touchmove      selection           drag         yes                    touchend       selection           end          no                     touchcancel    selection           end          no                    The propagation of all consumed events is  immediately stopped  https   dom spec whatwg org  dom event stopimmediatepropagation   If you want to prevent some events from initiating a drag gesture  use   drag  filter   drag filter      Necessary to capture events outside an iframe  see   9  https   github com d3 d3 drag issues 9    br   Only applies during an active  mouse based gesture  see   9  https   github com d3 d3 drag issues 9    br   Only applies immediately after some mouse based gestures  see   drag  clickDistance   drag clickDistance    br   Necessary to allow  click emulation  https   developer apple com library ios documentation AppleApplications Reference SafariWebContent HandlingEvents HandlingEvents html   apple ref doc uid TP40006511 SW7  on touch input  see   9  https   github com d3 d3 drag issues 9    br   Ignored if within 500ms of a touch gesture ending  assumes  click emulation  https   developer apple com library ios documentation AppleApplications Reference SafariWebContent HandlingEvents HandlingEvents html   apple ref doc uid TP40006511 SW7     a href   drag  name  drag     a  d3  b drag  b         https   github com d3 d3 drag blob master src drag js  Source    Creates a new drag behavior  The returned behavior    drag     drag   is both an object and a function  and is typically applied to selected elements via   selection  call  https   github com d3 d3 selection selection call     a href    drag  name   drag     a   i drag  i   i selection  i        https   github com d3 d3 drag blob master src drag js L39  Source    Applies this drag behavior to the specified   selection   https   github com d3 d3 selection   This function is typically not invoked directly  and is instead invoked via   selection  call  https   github com d3 d3 selection selection call   For example  to instantiate a drag behavior and apply it to a selection      js d3 selectAll   node   call d3 drag   on  start   started         Internally  the drag behavior uses   selection  on  https   github com d3 d3 selection selection on  to bind the necessary event listeners for dragging  The listeners use the name   drag   so you can subsequently unbind the drag behavior as follows      js selection on   drag   null        Applying the drag behavior also sets the   webkit tap highlight color  https   developer apple com library mac documentation AppleApplications Reference SafariWebContent AdjustingtheTextSize AdjustingtheTextSize html   apple ref doc uid TP40006510 SW5  style to transparent  disabling the tap highlight on iOS  If you want a different tap highlight color  remove or re apply this style after applying the drag behavior    a href   drag container  name  drag container     a   i drag  i   b container  b    i container  i         https   github com d3 d3 drag blob master src drag js L145  Source    If  container  is specified  sets the container accessor to the specified object or function and returns the drag behavior  If  container  is not specified  returns the current container accessor  which defaults to      js function container       return this parentNode         The  container  of a drag gesture determines the coordinate system of subsequent  drag events   drag events   affecting  event  x and  event  y  The element returned by the container accessor is subsequently passed to  d3 mouse  https   github com d3 d3 selection mouse  or  d3 touch  https   github com d3 d3 selection touch   as appropriate  to determine the local coordinates of the pointer   The default container accessor returns the parent node of the element in the originating selection  see   drag     drag   that received the initiating input event  This is often appropriate when dragging SVG or HTML elements  since those elements are typically positioned relative to a parent  For dragging graphical elements with a Canvas  however  you may want to redefine the container as the initiating element itself      js function container       return this         Alternatively  the container may be specified as the element directly  such as  drag container canvas      a href   drag filter  name  drag filter     a   i drag  i   b filter  b    i filter  i         https   github com d3 d3 drag blob master src drag js L141  Source    If  filter  is specified  sets the filter to the specified function and returns the drag behavior  If  filter  is not specified  returns the current filter  which defaults to      js function filter       return  d3 event button         If the filter returns falsey  the initiating event is ignored and no drag gestures are started  Thus  the filter determines which input events are ignored  the default filter ignores mousedown events on secondary buttons  since those buttons are typically intended for other purposes  such as the context menu    a href   drag touchable  name  drag touchable     a   i drag  i   b touchable  b    i touchable  i         https   github com d3 d3 drag blob master src drag js L153  Source    If  touchable  is specified  sets the touch support detector to the specified function and returns the drag behavior  If  touchable  is not specified  returns the current touch support detector  which defaults to      js function touchable       return  ontouchstart  in this         Touch event listeners are only registered if the detector returns truthy for the corresponding element when the drag behavior is  applied    drag   The default detector works well for most browsers that are capable of touch input  but not all  Chrome s mobile device emulator  for example  fails detection    a href   drag subject  name  drag subject     a   i drag  i   b subject  b    i subject  i         https   github com d3 d3 drag blob master src drag js L149  Source    If  subject  is specified  sets the subject accessor to the specified object or function and returns the drag behavior  If  subject  is not specified  returns the current subject accessor  which defaults to      js function subject d      return d    null    x  d3 event x  y  d3 event y    d         The  subject  of a drag gesture represents  the thing being dragged   It is computed when an initiating input event is received  such as a mousedown or touchstart  immediately before the drag gesture starts  The subject is then exposed as  event  subject on subsequent  drag events   drag events  for this gesture   The default subject is the  datum  https   github com d3 d3 selection selection datum  of the element in the originating selection  see   drag     drag   that received the initiating input event  if this datum is undefined  an object representing the coordinates of the pointer is created  When dragging circle elements in SVG  the default subject is thus the datum of the circle being dragged  With  Canvas  https   html spec whatwg org multipage scripting html the canvas element   the default subject is the canvas element s datum  regardless of where on the canvas you click   In this case  a custom subject accessor would be more appropriate  such as one that picks the closest circle to the mouse within a given search  radius       js function subject       var n   circles length        i        dx        dy        d2        s2   radius   radius        circle        subject     for  i   0  i   n    i        circle   circles i       dx   d3 event x   circle x      dy   d3 event y   circle y      d2   dx   dx   dy   dy      if  d2   s2  subject   circle  s2   d2         return subject          If necessary  the above can be accelerated using   quadtree  find  https   github com d3 d3 quadtree quadtree find     The returned subject should be an object that exposes  x  and  y  properties  so that the relative position of the subject and the pointer can be preserved during the drag gesture  If the subject is null or undefined  no drag gesture is started for this pointer  however  other starting touches may yet start drag gestures  See also   drag  filter   drag filter    The subject of a drag gesture may not be changed after the gesture starts  The subject accessor is invoked with the same context and arguments as   selection  on  https   github com d3 d3 selection selection on  listeners  the current datum  d  and index  i   with the  this  context as the current DOM element  During the evaluation of the subject accessor   d3 event  https   github com d3 d3 selection event  is a beforestart  drag event   drag events   Use  event  sourceEvent to access the initiating input event and  event  identifier to access the touch identifier  The  event  x and  event  y are relative to the  container   drag container   and are computed using  d3 mouse  https   github com d3 d3 selection mouse  or  d3 touch  https   github com d3 d3 selection touch  as appropriate    a href   drag clickDistance  name  drag clickDistance     a   i drag  i   b clickDistance  b    i distance  i         https   github com d3 d3 drag blob master src drag js L162  Source    If  distance  is specified  sets the maximum distance that the mouse can move between mousedown and mouseup that will trigger a subsequent click event  If at any point between mousedown and mouseup the mouse is greater than or equal to  distance  from its position on mousedown  the click event following mouseup will be suppressed  If  distance  is not specified  returns the current distance threshold  which defaults to zero  The distance threshold is measured in client coordinates    event  clientX  https   developer mozilla org en US docs Web API MouseEvent clientX  and   event  clientY  https   developer mozilla org en US docs Web API MouseEvent clientY      a href   drag on  name  drag on     a   i drag  i   b on  b   i typenames  i     i listener  i         https   github com d3 d3 drag blob master src drag js L157  Source    If  listener  is specified  sets the event  listener  for the specified  typenames  and returns the drag behavior  If an event listener was already registered for the same type and name  the existing listener is removed before the new listener is added  If  listener  is null  removes the current event listeners for the specified  typenames   if any  If  listener  is not specified  returns the first currently assigned listener matching the specified  typenames   if any  When a specified event is dispatched  each  listener  will be invoked with the same context and arguments as   selection  on  https   github com d3 d3 selection selection on  listeners  the current datum  d  and index  i   with the  this  context as the current DOM element   The  typenames  is a string containing one or more  typename  separated by whitespace  Each  typename  is a  type   optionally followed by a period       and a  name   such as  drag foo  and  drag bar   the name allows multiple listeners to be registered for the same  type   The  type  must be one of the following      start    after a new pointer becomes active  on mousedown or touchstart      drag    after an active pointer moves  on mousemove or touchmove      end    after an active pointer becomes inactive  on mouseup  touchend or touchcancel    See   dispatch  on  https   github com d3 d3 dispatch dispatch on  for more   Changes to registered listeners via  drag  on during a drag gesture  do not affect  the current drag gesture  Instead  you must use   event  on   event on   which also allows you to register temporary event listeners for the current drag gesture    Separate events are dispatched for each active pointer   during a drag gesture  For example  if simultaneously dragging multiple subjects with multiple fingers  a start event is dispatched for each finger  even if both fingers start touching simultaneously  See  Drag Events   drag events  for more    a href   dragDisable  name  dragDisable     a  d3  b dragDisable  b   i window  i        https   github com d3 d3 drag blob master src nodrag js L4  Source    Prevents native drag and drop and text selection on the specified  window   As an alternative to preventing the default action of mousedown events  see   9  https   github com d3 d3 drag issues 9    this method prevents undesirable default actions following mousedown  In supported browsers  this means capturing dragstart and selectstart events  preventing the associated default actions  and immediately stopping their propagation  In browsers that do not support selection events  the user select CSS property is set to none on the document element  This method is intended to be called on mousedown  followed by  d3 dragEnable   dragEnable  on mouseup    a href   dragEnable  name  dragEnable     a  d3  b dragEnable  b   i window  i     i noclick  i         https   github com d3 d3 drag blob master src nodrag js L15  Source    Allows native drag and drop and text selection on the specified  window   undoes the effect of  d3 dragDisable   dragDisable   This method is intended to be called on mouseup  preceded by  d3 dragDisable   dragDisable  on mousedown  If  noclick  is true  this method also temporarily suppresses click events  The suppression of click events expires after a zero millisecond timeout  such that it only suppress the click event that would immediately follow the current mouseup event  if any       Drag Events  When a  drag event listener   drag on  is invoked   d3 event  https   github com d3 d3 selection event  is set to the current drag event  The  event  object exposes several fields      target    the associated  drag behavior   drag      type    the string  start    drag  or  end   see   drag  on   drag on      subject    the drag subject  defined by   drag  subject   drag subject      x    the new  x  coordinate of the subject  see   drag  container   drag container      y    the new  y  coordinate of the subject  see   drag  container   drag container      dx    the change in  x  coordinate since the previous drag event     dy    the change in  y  coordinate since the previous drag event     identifier    the string  mouse   or a numeric  touch identifier  https   www w3 org TR touch events  widl Touch identifier      active    the number of currently active drag gestures  on start and end  not including this one      sourceEvent    the underlying input event  such as mousemove or touchmove   The  event  active field is useful for detecting the first start event and the last end event in a sequence of concurrent drag gestures  it is zero when the first drag gesture starts  and zero when the last drag gesture ends   The  event  object also exposes the   event  on   event on  method    a href   event on  name  event on     a   i event  i   b on  b   i typenames  i     i listener  i         https   github com d3 d3 drag blob master src event js  Source    Equivalent to   drag  on   drag on   but only applies to the current drag gesture  Before the drag gesture starts  a  copy  https   github com d3 d3 dispatch dispatch copy  of the current drag  event listeners   drag on  is made  This copy is bound to the current drag gesture and modified by  event  on  This is useful for temporary listeners that only receive events for the current drag gesture  For example  this start event listener registers temporary drag and end event listeners as closures      js function started       var circle   d3 select this  classed  dragging   true      d3 event on  drag   dragged  on  end   ended      function dragged d        circle raise   attr  cx   d x   d3 event x  attr  cy   d y   d3 event y          function ended         circle classed  dragging   false             ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-drag"},{"name":"d3/d3-cam16","artist":"specifi, return, select, current, element","id":18,"playcount":229,"description":"d3/d3-cam16 specifi, return, select, current, element d3 cam16             d3 cam16   is an under development update to  d3 cam02  https   github com connorgr d3 cam02   It fixes many underlying computational bugs and performance concerns while still preserving perceptual accuracy  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-cam16"},{"name":"d3/d3-bundler","artist":"deprec, voronoi, diagram, type, clip","id":19,"playcount":81,"description":"d3/d3-bundler deprec, voronoi, diagram, type, clip   d3 bundler  DEPRECATED  use  rollup rollup  https   github com rollup rollup   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-bundler"},{"name":"d3/d3-hcg","artist":"color, specifi, return, valu, space","id":20,"playcount":1620,"description":"d3/d3-hcg color, specifi, return, valu, space   d3 hcg  This module implements the  HCG  https   github com acterhd hcg color   Hue  Chroma  Grayness  color space      Installing  If you use NPM   npm install d3 hcg   Otherwise  download the  latest release  https   github com d3 d3 hcg releases latest   You can also load directly from  d3js org  https   d3js org  as a  standalone library  https   d3js org d3 hcg v0 0 min js   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   unpkg com d3 hcg 0 0    script   script   var yellow   d3 hcg  yellow        h  60  c  1  g  0  opacity  1     script        Try d3 hcg in your browser   https   tonicdev com npm d3 hcg      API Reference   a name  hcg  href   hcg     a  d3  b hcg  b   i h  i    i c  i    i g  i     i opacity  i    br   a href   hcg     a  d3  b hcg  b   i specifier  i   br   a href   hcg     a  d3  b hcg  b   i color  i   br   Constructs a new HCG color  The channel values are exposed as  h    c  and  g  properties on the returned instance   If  h    c  and  g  are specified  these represent the channel values of the returned color  an  opacity  may also be specified  If a CSS Color Module Level 3  specifier  string is specified  it is parsed and then converted to the HCG color space  See  d3 color  https   github com d3 d3 color color  for examples  If a   color   https   github com d3 d3 color color  instance is specified  it is converted to the RGB color space using   color  rgb  https   github com d3 d3 color color rgb  and then converted to HCG  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-hcg"},{"name":"d3/d3-delaunay","artist":"return, specifi, sourc, array, valu","id":21,"playcount":15493,"description":"d3/d3-delaunay return, specifi, sourc, array, valu   d3 delaunay   p align  center   img src  https   raw githubusercontent com d3 d3 delaunay master img voronator jpg  width  300    p align  center  Georgy  The Voronator  Voronoy  This is a fast  no dependency library for computing the  Voronoi diagram  https   en wikipedia org wiki Voronoi diagram  of a set of two dimensional points  It is based on  Delaunator  https   github com mapbox delaunator   a fast library for computing the  Delaunay triangulation  https   en wikipedia org wiki Delaunay triangulation  using  sweep algorithms  https   github com mapbox delaunator blob master README md papers   The Voronoi diagram is constructed by connecting the circumcenters of adjacent triangles in the Delaunay triangulation   For an interactive explanation of how this library works  see  The Delaunay s Dual  https   beta observablehq com  mbostock the delaunays dual       Installing  To install   npm install d3 delaunay  or  yarn add d3 delaunay   You can also download the  latest release  https   github com d3 d3 delaunay releases latest  or load directly from  unpkg  https   unpkg com d3 delaunay    AMD  CommonJS  ES5 and ES6  environments are supported  In vanilla  a  d3  global is exported      js import  Delaunay  from  d3 delaunay    const points     0  0    0  1    1  0    1  1    const delaunay   Delaunay from points   const voronoi   delaunay voronoi  0  0  960  500            API Reference      Delaunay   a href   new Delaunay  name  new Delaunay     a  new  b Delaunay  b   i points  i        https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns the Delaunay triangulation for the given flat array   x0    y0    x1    y1      of  points       js const delaunay   new Delaunay Float64Array of 0  0  0  1  1  0  1  1          a href   delaunay from  name  delaunay from     a  Delaunay  b from  b   i points  i     i fx  i     i fy  i     i that  i           https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns the Delaunay triangulation for the given array or iterable of  points   If  fx  and  fy  are not specified  then  points  is assumed to be an array of two element arrays of numbers     x0    y0      x1    y1        Otherwise   fx  and  fy  are functions that are invoked for each element in the  points  array in order  and must return the respective  x   and  y  coordinate for each point  If  that  is specified  the functions  fx  and  fy  are invoked with  that  as  this    See  Array from  https   developer mozilla org docs Web JavaScript Reference Global Objects Array from  for reference       js const delaunay   Delaunay from   0  0    0  1    1  0    1  1           a href   delaunay points  name  delaunay points     a   i delaunay  i   b points  b   The coordinates of the points as an array   x0    y0    x1    y1       Typically  this is a Float64Array  however you can use any array like type in the  constructor   new Delaunay     a href   delaunay halfedges  name  delaunay halfedges     a   i delaunay  i   b halfedges  b   The halfedge indexes as an Int32Array   j0    j1       For each index 0    i     halfedges  length  there is a halfedge from triangle vertex  j     halfedges   i   to triangle vertex  i   Equivalently  this means that triangle   i    3  is adjacent to triangle   j    3   If  j  is negative  then triangle   i    3  is an exterior triangle on the  convex hull   delaunay hull   For example  to render the internal edges of the Delaunay triangulation      js const  points  halfedges  triangles    delaunay  for  let i   0  n   halfedges length  i   n    i      const j   halfedges i     if  j   i  continue    const ti   triangles i     const tj   triangles j     context moveTo points ti   2   points ti   2   1      context lineTo points tj   2   points tj   2   1           See also   delaunay  render   delaunay render     a href   delaunay hull  name  delaunay hull     a   i delaunay  i   b hull  b   An arbitrary  node  on the convex hull  The convex hull is represented as a linked list of nodes  which each  node  being an object with the following properties      node  i   the index of the associated point    node  x   the  x  coordinate of the associated point    node  y   the  y  coordinate of the associated point    node  t   the index of the  incoming or outgoing   associated halfedge    node  next   the next  node  on the hull    node  prev   the previous  node  on the hull  See also   delaunay  renderHull   delaunay renderHull     a href   delaunay triangles  name  delaunay triangles     a   i delaunay  i   b triangles  b   The triangle vertex indexes as an Uint32Array   i0    j0    k0    i1    j1    k1       Each contiguous triplet of indexes  i    j    k  forms a counterclockwise triangle  The coordinates of the triangle s points can be found by going through   delaunay  points   delaunay points   For example  to render triangle  i       js const  points  triangles    delaunay  const t0   triangles i   3   0   const t1   triangles i   3   1   const t2   triangles i   3   2   context moveTo points t0   2   points t0   2   1    context lineTo points t1   2   points t1   2   1    context lineTo points t2   2   points t2   2   1    context closePath         See also   delaunay  renderTriangle   delaunay renderTriangle     a href   delaunay inedges  name  delaunay inedges     a   i delaunay  i   b inedges  b   The incoming halfedge indexes as a Int32Array   e0    e1    e2       For each point  i    inedges   i   is the halfedge index  e  of an incoming halfedge  For coincident points  the halfedge index is  1  for points on the convex hull  the incoming halfedge is on the convex hull  for other points  the choice of incoming halfedge is arbitrary  The  inedges  table can be used to traverse the Delaunay triangulation  see also   delaunay  neighbors   delaunay neighbors     a href   delaunay outedges  name  delaunay outedges     a   i delaunay  i   b outedges  b   The outgoing halfedge indexes as a Int32Array   e0    e1    e2       For each point  i  on the convex hull   outedges   i   is the halfedge index  e  of the corresponding outgoing halfedge  for other points  the halfedge index is  1  The  outedges  table can be used to traverse the Delaunay triangulation  see also   delaunay  neighbors   delaunay neighbors     a href   delaunay find  name  delaunay find     a   i delaunay  i   b find  b   i x  i    i y  i     i i  i         https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns the index of the input point that is closest to the specified point   x    y    The search is started at the specified point  i   If  i  is not specified  it defaults to zero    a href   delaunay neighbors  name  delaunay neighbors     a   i delaunay  i   b neighbors  b   i i  i        https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns an iterable over the indexes of the neighboring points to the specified point  i   The iterable is empty if  i  is a coincident point    a href   delaunay render  name  delaunay render     a   i delaunay  i   b render  b    i context  i         https   github com d3 d3 delaunay blob master src delaunay js  Source     img alt  delaunay render  src  https   raw githubusercontent com d3 d3 delaunay master img delaunay mesh png    Renders the edges of the Delaunay triangulation to the specified  context   The specified  context  must implement the  context  moveTo and  context  lineTo methods from the  CanvasPathMethods API  https   www w3 org TR 2dcontext  canvaspathmethods   If a  context  is not specified  an SVG path string is returned instead    a href   delaunay renderHull  name  delaunay renderHull     a   i delaunay  i   b renderHull  b    i context  i         https   github com d3 d3 delaunay blob master src delaunay js  Source     img alt  delaunay renderHull  src  https   raw githubusercontent com d3 d3 delaunay master img delaunay hull png    Renders the convex hull of the Delaunay triangulation to the specified  context   The specified  context  must implement the  context  moveTo and  context  lineTo methods from the  CanvasPathMethods API  https   www w3 org TR 2dcontext  canvaspathmethods   If a  context  is not specified  an SVG path string is returned instead    a href   delaunay renderTriangle  name  delaunay renderTriangle     a   i delaunay  i   b renderTriangle  b   i i  i     i context  i         https   github com d3 d3 delaunay blob master src delaunay js  Source     img alt  delaunay renderTriangle  src  https   raw githubusercontent com d3 d3 delaunay master img delaunay triangle png    Renders triangle  i  of the Delaunay triangulation to the specified  context   The specified  context  must implement the  context  moveTo   context  lineTo and  context  closePath methods from the  CanvasPathMethods API  https   www w3 org TR 2dcontext  canvaspathmethods   If a  context  is not specified  an SVG path string is returned instead    a href   delaunay renderPoints  name  delaunay renderPoints     a   i delaunay  i   b renderPoints  b     i context  i        i radius  i          https   github com d3 d3 delaunay blob master src delaunay js  Source    Renders the input points of the Delaunay triangulation to the specified  context  as circles with the specified  radius   If  radius  is not specified  it defaults to 2  The specified  context  must implement the  context  moveTo and  context  arc methods from the  CanvasPathMethods API  https   www w3 org TR 2dcontext  canvaspathmethods   If a  context  is not specified  an SVG path string is returned instead    a href   delaunay hullPolygon  name  delaunay hullPolygon     a   i delaunay  i   b hullPolygon    b       https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns the closed polygon    x0    y0      x1    y1         x0    y0    representing the convex hull    a href   delaunay trianglePolygons  name  delaunay trianglePolygons     a   i delaunay  i   b trianglePolygons    b       https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns an iterable over the  polygons for each triangle   delaunay trianglePolygon   in order    a href   delaunay trianglePolygon  name  delaunay trianglePolygon     a   i delaunay  i   b trianglePolygon  i i  i    b       https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns the closed polygon    x0    y0      x1    y1      x2    y2      x0    y0    representing the triangle  i     a href   delaunay voronoi  name  delaunay voronoi     a   i delaunay  i   b voronoi  b    i bounds  i         https   github com d3 d3 delaunay blob master src delaunay js  Source    Returns the  Voronoi diagram   voronoi  for the associated  points   delaunay points   When rendering  the diagram will be clipped to the specified  bounds      xmin    ymin    xmax    ymax    If  bounds  is not specified  it defaults to  0  0  960  500   See  To Infinity and Back Again  https   beta observablehq com  mbostock to infinity and back again  for an interactive explanation of Voronoi cell clipping       Voronoi   a href   voronoi delaunay  name  voronoi delaunay     a   i voronoi  i   b delaunay  b   The Voronoi diagram s associated  Delaunay triangulation   delaunay     a href   voronoi circumcenters  name  voronoi circumcenters     a   i voronoi  i   b circumcenters  b   The  circumcenters  http   mathworld wolfram com Circumcenter html  of the Delaunay triangles as a Float64Array   cx0    cy0    cx1    cy1       Each contiguous pair of coordinates  cx    cy  is the circumcenter for the corresponding triangle  These circumcenters form the coordinates of the Voronoi cell polygons    a href   voronoi vectors  name  voronoi vectors     a   i voronoi  i   b vectors  b   An Uint64Array   vx0    vy0    wx0    wy0      where each non zero quadruple describes an open  infinite  cell on the outer hull  giving the directions of two open half lines    a href   voronoi xmin  name  voronoi xmin     a   i voronoi  i   b xmin  b  br   a href   voronoi ymin  name  voronoi ymin     a   i voronoi  i   b ymin  b  br   a href   voronoi xmax  name  voronoi xmax     a   i voronoi  i   b xmax  b  br   a href   voronoi ymax  name  voronoi ymax     a   i voronoi  i   b ymax  b  br   The bounds of the viewport   xmin    ymin    xmax    ymax   for rendering the Voronoi diagram  These values only affect the rendering methods    voronoi  render   voronoi render     voronoi  renderBounds   voronoi renderBounds     cell  render   cell render      a href   voronoi contains  name  voronoi contains     a   i voronoi  i   b contains  b   i i  i    i x  i    i y  i        https   github com d3 d3 delaunay blob master src cell js  Source    Returns true if the cell with the specified index  i  contains the specified point   x    y     This method is not affected by the associated Voronoi diagram s viewport  bounds   voronoi xmin      a href   voronoi render  name  voronoi render     a   i voronoi  i   b render  b    i context  i         https   github com d3 d3 delaunay blob master src voronoi js  Source     img alt  voronoi render  src  https   raw githubusercontent com d3 d3 delaunay master img voronoi mesh png    Renders the mesh of Voronoi cells to the specified  context   The specified  context  must implement the  context  moveTo and  context  lineTo methods from the  CanvasPathMethods API  https   www w3 org TR 2dcontext  canvaspathmethods   If a  context  is not specified  an SVG path string is returned instead    a href   voronoi renderBounds  name  voronoi renderBounds     a   i voronoi  i   b renderBounds  b    i context  i         https   github com d3 d3 delaunay blob master src voronoi js  Source     img alt  voronoi renderBounds  src  https   raw githubusercontent com d3 d3 delaunay master img voronoi bounds png    Renders the viewport extent to the specified  context   The specified  context  must implement the  context  rect method from the  CanvasPathMethods API  https   www w3 org TR 2dcontext  canvaspathmethods   Equivalent to  context  rect  voronoi  xmin   voronoi  ymin   voronoi  xmax    voronoi  xmin   voronoi  ymax    voronoi  ymin   If a  context  is not specified  an SVG path string is returned instead    a href   voronoi renderCell  name  voronoi renderCell     a   i voronoi  i   b renderCell  b   i i  i     i context  i         https   github com d3 d3 delaunay blob master src voronoi js  Source     img alt  cell render  src  https   raw githubusercontent com d3 d3 delaunay master img spectral png    Renders the cell with the specified index  i  to the specified  context   The specified  context  must implement the  context  moveTo    context  lineTo and  context  closePath methods from the  CanvasPathMethods API  https   www w3 org TR 2dcontext  canvaspathmethods   If a  context  is not specified  an SVG path string is returned instead    a href   voronoi cellPolygons  name  voronoi cellPolygons     a   i voronoi  i   b cellPolygons  b         https   github com d3 d3 delaunay blob master src voronoi js  Source    Returns an iterable over the  polygons for each cell   voronoi cellPolygon   in order    a href   voronoi cellPolygon  name  voronoi cellPolygon     a   i voronoi  i   b cellPolygon  b   i i  i        https   github com d3 d3 delaunay blob master src voronoi js  Source    Returns the convex  closed polygon    x0    y0      x1    y1         x0    y0    representing the cell for the specified point  i   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-delaunay"},{"name":"d3/d3-hull","artist":"deprec, voronoi, diagram, type, clip","id":22,"playcount":132,"description":"d3/d3-hull deprec, voronoi, diagram, type, clip   d3 hull  DEPRECATED  See  d3 polygon  https   github com d3 d3 polygon  s  hull  https   github com d3 d3 polygon hull  function  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-hull"},{"name":"d3/d3-queue","artist":"return, specifi, sourc, array, valu","id":23,"playcount":10338,"description":"d3/d3-queue return, specifi, sourc, array, valu   d3 queue  A   queue   evaluates zero or more  deferred  asynchronous tasks with configurable concurrency  you control how many tasks run at the same time  When all the tasks complete  or an error occurs  the queue passes the results to your  await  callback  This library is similar to  Async js  https   github com caolan async  s  parallel  https   github com caolan async paralleltasks callback   when  concurrency  is infinite    series  https   github com caolan async seriestasks callback   when  concurrency  is 1   and  queue  https   github com caolan async queue   but features a much smaller footprint  as of release 2  d3 queue is about 700 bytes gzipped  compared to 4 300 for Async   Each task is defined as a function that takes a callback as its last argument  For example  here s a task that says hello after a short delay      js function delayedHello callback      setTimeout function         console log  Hello         callback null        250          When a task completes  it must call the provided callback  The first argument to the callback should be null if the task is successful  or the error if the task failed  The optional second argument to the callback is the return value of the task   To return multiple values from a single callback  wrap the results in an object or array    To run multiple tasks simultaneously  create a queue   defer  your tasks  and then register an  await  callback to be called when all of the tasks complete  or an error occurs       js var q   d3 queue    q defer delayedHello   q defer delayedHello   q await function error      if  error  throw error    console log  Goodbye              Of course  you can also use a  for  loop to defer many tasks      js var q   d3 queue     for  var i   0  i   1000    i      q defer delayedHello      q awaitAll function error      if  error  throw error    console log  Goodbye              Tasks can take optional arguments  For example  here s how to configure the delay before hello and provide a name      js function delayedHello name  delay  callback      setTimeout function         console log  Hello      name             callback null        delay          Any additional arguments provided to   queue  defer   queue defer  are automatically passed along to the task function before the callback argument  You can also use method chaining for conciseness  avoiding the need for a local variable      js d3 queue        defer delayedHello   Alice   250       defer delayedHello   Bob   500       defer delayedHello   Carol   750       await function error          if  error  throw error        console log  Goodbye                  The  asynchronous callback pattern  https   github com maxogden art of node callbacks  is very common in Node js  so Queue works directly with many Node APIs  For example  to  stat two files  https   nodejs org dist latest docs api fs html fs fs stat path callback  concurrently      js d3 queue        defer fs stat    dirname        Makefile        defer fs stat    dirname        package json        await function error  file1  file2          if  error  throw error        console log file1  file2                You can also make abortable tasks  these tasks return an object with an  abort  method which terminates the task  So  if a task calls  setTimeout  https   developer mozilla org en US docs Web API WindowTimers setTimeout  on start  it can call  clearTimeout  https   developer mozilla org en US docs Web API WindowTimers clearTimeout  on abort  For example      js function delayedHello name  delay  callback      var id   setTimeout function         console log  Hello      name             callback null        delay     return       abort  function           clearTimeout id                     When you call   queue  abort   queue abort   any in progress tasks will be immediately aborted  in addition  any pending  not yet started  tasks will not be started  Note that you can also use  queue  abort  without  abortable tasks  in which case pending tasks will be cancelled  though active tasks will continue to run  Conveniently  the  d3 request  https   github com d3 d3 request  library implements abort atop XMLHttpRequest  For example      js var q   d3 queue        defer d3 request   http   www google com 81        defer d3 request   http   www google com 81        defer d3 request   http   www google com 81        awaitAll function error  results          if  error  throw error        console log results                To abort these requests  call  q abort         Installing  If you use NPM   npm install d3 queue   If you use Bower   bower install d3 queue   Otherwise  download the  latest release  https   github com d3 d3 queue releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 queue v3 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 queue v3 min js    script   script   var q   d3 queue       script        Try d3 queue in your browser   https   tonicdev com npm d3 queue      API Reference   a href   queue  name  queue     a  d3  b queue  b    i concurrency  i         https   github com d3 d3 queue blob master src queue js  Source    Constructs a new queue with the specified  concurrency   If  concurrency  is not specified  the queue has infinite concurrency  Otherwise   concurrency  is a positive integer  For example  if  concurrency  is 1  then all tasks will be run in series  If  concurrency  is 3  then at most three tasks will be allowed to proceed concurrently  this is useful  for example  when loading resources in a web browser    a href   queue defer  name  queue defer     a   i queue  i   b defer  b   i task  i     i arguments  i          https   github com d3 d3 queue blob master src queue js L20  Source    Adds the specified asynchronous  task  callback to the queue  with any optional  arguments   The  task  is a function that will be called when the task should start  It is passed the specified optional  arguments  and an additional  callback  as the last argument  the callback must be invoked by the task when it finishes  The task must invoke the callback with two arguments  the  error   if any  and the  result  of the task  To return multiple results from a single callback  wrap the results in an object or array   For example  here s a task which computes the answer to the ultimate question of life  the universe  and everything after a short delay      js function simpleTask callback      setTimeout function         callback null   answer  42         250          If the task calls back with an error  any tasks that were scheduled  but not yet started  will not run  For a serial queue  of  concurrency  1   this means that a task will only run if all previous tasks succeed  For a queue with higher concurrency  only the first error that occurs is reported to the await callback  and tasks that were started before the error occurred will continue to run  note  however  that their results will not be reported to the await callback   Tasks can only be deferred before   queue  await   queue await  or   queue  awaitAll   queue awaitAll  is called  If a task is deferred after then  an error is thrown  If the  task  is not a function  an error is thrown    a href   queue abort  name  queue abort     a   i queue  i   b abort  b         https   github com d3 d3 queue blob master src queue js L29  Source    Aborts any active tasks  invoking each active task s  task  abort function  if any  Also prevents any new tasks from starting  and immediately invokes the   queue  await   queue await  or   queue  awaitAll   queue awaitAll  callback with an error indicating that the queue was aborted  See the  introduction   d3 queue  for an example implementation of an abortable task  Note that if your tasks are not abortable  any running tasks will continue to run  even after the await callback has been invoked with the abort error  The await callback is invoked exactly once on abort  and so is not called when any running tasks subsequently succeed or fail    a href   queue await  name  queue await     a   i queue  i   b await  b   i callback  i        https   github com d3 d3 queue blob master src queue js L33  Source    Sets the  callback  to be invoked when all deferred tasks have finished  The first argument to the  callback  is the first error that occurred  or null if no error occurred  If an error occurred  there are no additional arguments to the callback  Otherwise  the  callback  is passed each result as an additional argument  For example      js d3 queue        defer fs stat    dirname        Makefile        defer fs stat    dirname        package json        await function error  file1  file2    console log file1  file2            If all  deferred   queue defer  tasks have already completed  the callback will be invoked immediately  This method may only be called once  after any tasks have been deferred  If this method is called multiple times  or if it is called after   queue  awaitAll   queue awaitAll   an error is thrown  If the  callback  is not a function  an error is thrown    a href   queue awaitAll  name  queue awaitAll     a   i queue  i   b awaitAll  b   i callback  i        https   github com d3 d3 queue blob master src queue js L39  Source    Sets the  callback  to be invoked when all deferred tasks have finished  The first argument to the  callback  is the first error that occurred  or null if no error occurred  If an error occurred  there are no additional arguments to the callback  Otherwise  the  callback  is also passed an array of results as the second argument  For example      js d3 queue        defer fs stat    dirname        Makefile        defer fs stat    dirname        package json        awaitAll function error  files    console log files            If all  deferred   queue defer  tasks have already completed  the callback will be invoked immediately  This method may only be called once  after any tasks have been deferred  If this method is called multiple times  or if it is called after   queue  await   queue await   an error is thrown  If the  callback  is not a function  an error is thrown  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-queue"},{"name":"d3/d3-request","artist":"return, specifi, sourc, array, valu","id":24,"playcount":16925,"description":"d3/d3-request return, specifi, sourc, array, valu   d3 request    This module is deprecated as of D3 5 0  please use  d3 fetch  https   github com d3 d3 fetch  instead     This module provides a convenient alternative to XMLHttpRequest  For example  to load a text file      js d3 text   path to file txt   function error  text      if  error  throw error    console log text      Hello  world           To load and parse a CSV file      js d3 csv   path to file csv   function error  data      if  error  throw error    console log data         Hello    world                To post some query parameters      js d3 request   path to resource        header  X Requested With    XMLHttpRequest        header  Content Type    application x www form urlencoded        post  a 2 b 3   callback        This module has built in support for parsing  JSON   json    CSV   csv  and  TSV   tsv   in browsers  but not in Node   HTML   html  and  XML   xml  are also supported  You can parse additional formats by using  request   request  or  text   text  directly      Installing  If you use NPM   npm install d3 request   Otherwise  download the  latest release  https   github com d3 d3 request releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 request v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 collection v1 min js    script   script src  https   d3js org d3 dispatch v1 min js    script   script src  https   d3js org d3 dsv v1 min js    script   script src  https   d3js org d3 request v1 min js    script   script   d3 csv   path to file csv   callback      script          API Reference   a name  request  href   request     a  d3  b request  b   i url  i     i callback  i         https   github com d3 d3 request blob master src request js L4  Source    Returns a new  request  for specified  url   If no  callback  is specified  the returned  request  is not yet  sent   request send  and can be further configured  If a  callback  is specified  it is equivalent to calling   request  get   request get  immediately after construction      js d3 request url       get callback        If you wish to specify a request header or a mime type  you must  not  specify a callback to the constructor  Use   request  header   request header  or   request  mimeType   request mimeType  followed by   request  get   request get  instead  See  d3 json   json    d3 csv   csv    d3 tsv   tsv    d3 html   html  and  d3 xml   xml  for content specific convenience constructors    a name  request header  href   request header     a   i request  i   b header  b   i name  i     i value  i         https   github com d3 d3 request blob master src request js L51  Source    If  value  is specified  sets the request header with the specified  name  to the specified value and returns this request instance  If  value  is null  removes the request header with the specified  name  instead  If  value  is not specified  returns the current value of the request header with the specified  name   Header names are case insensitive   Request headers can only be modified before the request is  sent   request send   Therefore  you cannot pass a callback to the  request constructor   request  if you wish to specify a header  use   request  get   request get  or similar instead  For example      js d3 request url       header  Accept Language    en US        header  X Requested With    XMLHttpRequest        get callback        Note  this library does not set the X Requested With header to  XMLHttpRequest  by default  Some servers require this header to mitigate unwanted requests  but the presence of the header triggers CORS preflight checks  if necessary  set this header before sending the request    a name  request mimeType  href   request mimeType     a   i request  i   b mimeType  b    i type  i         https   github com d3 d3 request blob master src request js L60  Source    If  type  is specified  sets the request mime type to the specified value and returns this request instance  If  type  is null  clears the current mime type  if any  instead  If  type  is not specified  returns the current mime type  which defaults to null  The mime type is used to both set the   Accept  request header  http   www w3 org Protocols rfc2616 rfc2616 sec14 html  and for  overrideMimeType  http   www w3 org TR XMLHttpRequest  the overridemimetype 28 29 method   where supported   The request mime type can only be modified before the request is  sent   request send   Therefore  you cannot pass a callback to the  request constructor   request  if you wish to override the mime type  use   request  get   request get  or similar instead  For example      js d3 request url       mimeType  text csv        get callback         a name  request user  href   request user     a   i request  i   b user  b    i value  i         https   github com d3 d3 request blob master src request js L80  Source    If  value  is specified  sets the user name for authentication to the specified string and returns this request instance  If  value  is not specified  returns the current user name  which defaults to null    a name  request password  href   request password     a   i request  i   b password  b    i value  i         https   github com d3 d3 request blob master src request js L84  Source    If  value  is specified  sets the password for authentication to the specified string and returns this request instance  If  value  is not specified  returns the current password  which defaults to null    a name  request timeout  href   request timeout     a   i request  i   b timeout  b    i timeout  i         https   github com d3 d3 request blob master src request js L74  Source    If  timeout  is specified  sets the  timeout  http   www w3 org TR XMLHttpRequest  the timeout attribute  attribute of the request to the specified number of milliseconds and returns this request instance  If  timeout  is not specified  returns the current response timeout  which defaults to 0    a name  request responseType  href   request responseType     a   i request  i   b responseType  b    i type  i         https   github com d3 d3 request blob master src request js L68  Source    If  type  is specified  sets the  response type  http   www w3 org TR XMLHttpRequest  the responsetype attribute  attribute of the request and returns this request instance  Typical values are       the empty string    arraybuffer    blob    document   and  text   If  type  is not specified  returns the current response type  which defaults to        a name  request response  href   request response     a   i request  i   b response  b   i value  i        https   github com d3 d3 request blob master src request js L90  Source    Sets the response value function to the specified function and returns this request instance  The response value function is used to map the response XMLHttpRequest object to a useful data value  See the convenience methods  json   json  and  text   text  for examples    a name  request get  href   request get     a   i request  i   b get  b    i data  i      i callback  i         https   github com d3 d3 request blob master src request js L96  Source    Equivalent to   request  send   request send  with the GET method      js request send  GET   data  callback         a name  request post  href   request post     a   i request  i   b post  b    i data  i      i callback  i         https   github com d3 d3 request blob master src request js L101  Source    Equivalent to   request  send   request send  with the POST method      js request send  POST   data  callback         a name  request send  href   request send     a   i request  i   b send  b   i method  i     i data  i      i callback  i         https   github com d3 d3 request blob master src request js L106  Source    Issues this request using the specified  method   such as  GET  or  POST    optionally posting the specified  data  in the request body  and returns this request instance  If a  callback  is specified  the callback will be invoked asynchronously when the request succeeds or fails  The callback is invoked with two arguments  the error  if any  and the  response value   request response   The response value is undefined if an error occurs  This is equivalent to      js request      on  error   function error    callback error           on  load   function xhr    callback null  xhr           send method  data        If no  callback  is specified  then  load  and  error  listeners should be registered via   request  on   request on     a name  request abort  href   request abort     a   i request  i   b abort  b         https   github com d3 d3 request blob master src request js L121  Source    Aborts this request  if it is currently in flight  and returns this request instance  See  XMLHttpRequest s abort  http   www w3 org TR XMLHttpRequest  the abort 28 29 method     a name  request on  href   request on     a   i request  i   b on  b   i type  i     i listener  i         https   github com d3 d3 request blob master src request js L126  Source    If  listener  is specified  sets the event  listener  for the specified  type  and returns this request instance  If an event listener was already registered for the same type  the existing listener is removed before the new listener is added  If  listener  is null  removes the current event  listener  for the specified  type   if any  instead  If  listener  is not specified  returns the currently assigned listener for the specified type  if any   The type must be one of the following      beforesend    to allow custom headers and the like to be set before the request is  sent   request send      progress    to monitor the  progress of the request  http   www w3 org TR progress events       load    when the request completes successfully     error    when the request completes unsuccessfully  this includes 4xx and 5xx response codes   To register multiple listeners for the same  type   the type may be followed by an optional name  such as  load foo  and  load bar   See  d3 dispatch  https   github com d3 d3 dispatch  for details    a name  csv  href   csv     a  d3  b csv  b   i url  i      i row  i     i callback  i         https   github com d3 d3 request blob master src csv js  Source    Returns a new   request    request  for the  CSV  https   github com d3 d3 dsv csvParse  file at the specified  url  with the default mime type  text csv   If no  callback  is specified  this is equivalent to      js d3 request url       mimeType  text csv        response function xhr    return d3 csvParse xhr responseText  row            If a  callback  is specified  a  GET   request get  request is sent  making it equivalent to      js d3 request url       mimeType  text csv        response function xhr    return d3 csvParse xhr responseText  row           get callback        An optional  row  conversion function may be specified to map and filter row objects to a more specific representation  see   dsv  parse  https   github com d3 d3 dsv dsv parse  for details  For example      js function row d      return       year  new Date  d Year  0  1      convert  Year  column to Date     make  d Make      model  d Model      length   d Length    convert  Length  column to number             The returned  request  exposes an additional  request  row method as an alternative to passing the  row  conversion function to d3 csv  allowing you to configure the request before sending it  For example  this      js d3 csv url  row  callback        Is equivalent to this      js d3 csv url       row row       get callback         a name  html  href   html     a  d3  b html  b   i url  i     i callback  i         https   github com d3 d3 request blob master src html js  Source    Returns a new   request    request  for the HTML file at the specified  url  with the default mime type  text html   The HTML file is returned as a  document fragment  https   developer mozilla org en US docs DOM range createContextualFragment   If no  callback  is specified  this is equivalent to      js d3 request url       mimeType  text html        response function xhr    return document createRange   createContextualFragment xhr responseText            If a  callback  is specified  a  GET   request get  request is sent  making it equivalent to      js d3 request url       mimeType  text html        response function xhr    return document createRange   createContextualFragment xhr responseText           get callback        HTML parsing requires a global document and relies on  DOM Ranges  https   dom spec whatwg org  ranges   which are  not supported by JSDOM  https   github com tmpvar jsdom issues 317  as of version 8 3  thus  this method is supported in browsers but not in Node    a name  json  href   json     a  d3  b json  b   i url  i     i callback  i         https   github com d3 d3 request blob master src json js  Source    Returns a new   request    request  to  get   request get  the  JSON  http   json org  file at the specified  url  with the default mime type  application json   If no  callback  is specified  this is equivalent to      js d3 request url       mimeType  application json        response function xhr    return JSON parse xhr responseText            If a  callback  is specified  a  GET   request get  request is sent  making it equivalent to      js d3 request url       mimeType  application json        response function xhr    return JSON parse xhr responseText           get callback         a name  text  href   text     a  d3  b text  b   i url  i     i callback  i         https   github com d3 d3 request blob master src text js  Source    Returns a new   request    request  to  get   request get  the text file at the specified  url  with the default mime type  text plain   If no  callback  is specified  this is equivalent to      js d3 request url       mimeType  text plain        response function xhr    return xhr responseText           If a  callback  is specified  a  GET   request get  request is sent  making it equivalent to      js d3 request url       mimeType  text plain        response function xhr    return xhr responseText          get callback         a name  tsv  href   tsv     a  d3  b tsv  b   i url  i      i row  i     i callback  i         https   github com d3 d3 request blob master src tsv js  Source    Returns a new   request    request  for a  TSV  https   github com d3 d3 dsv tsvParse  file at the specified  url  with the default mime type  text tab separated values   If no  callback  is specified  this is equivalent to      js d3 request url       mimeType  text tab separated values        response function xhr    return d3 tsvParse xhr responseText  row            If a  callback  is specified  a  GET   request get  request is sent  making it equivalent to      js d3 request url       mimeType  text tab separated values        response function xhr    return d3 tsvParse xhr responseText  row           get callback        An optional  row  conversion function may be specified to map and filter row objects to a more specific representation  see   dsv  parse  https   github com d3 d3 dsv dsv parse  for details  For example      js function row d      return       year  new Date  d Year  0  1      convert  Year  column to Date     make  d Make      model  d Model      length   d Length    convert  Length  column to number             The returned  request  exposes an additional  request  row method as an alternative to passing the  row  conversion function to d3 tsv  allowing you to configure the request before sending it  For example  this      js d3 tsv url  row  callback        Is equivalent to this      js d3 tsv url       row row       get callback         a name  xml  href   xml     a  d3  b xml  b   i url  i     i callback  i         https   github com d3 d3 request blob master src xml js  Source    Returns a new   request    request  to  get   request get  the XML file at the specified  url  with the default mime type  application xml   If no  callback  is specified  this is equivalent to      js d3 request url       mimeType  application xml        response function xhr    return xhr responseXML           If a  callback  is specified  a  GET   request get  request is sent  making it equivalent to      js d3 request url       mimeType  application xml        response function xhr    return xhr responseXML          get callback        XML parsing relies on   xhr  responseXML  https   developer mozilla org en US docs Web API XMLHttpRequest responseXML  which is not supported by  node XMLHttpRequest  https   github com driverdan node XMLHttpRequest issues 8  as of version 1 8  thus  this method is supported in browsers but not in Node  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-request"},{"name":"d3/d3-hsv","artist":"color, specifi, return, valu, space","id":25,"playcount":2805,"description":"d3/d3-hsv color, specifi, return, valu, space   d3 hsv  This module implements the  HSV  https   en wikipedia org wiki HSL and HSV   Hue  Saturation  Value  color space   For example  to recreate R s terrain colors      js var i0   d3 interpolateHsvLong d3 hsv 120  1  0 65   d3 hsv 60  1  0 90        i1   d3 interpolateHsvLong d3 hsv 60  1  0 90   d3 hsv 0  0  0 95     function interpolateTerrain t      return t   0 5   i0 t   2    i1  t   0 5    2             Installing  If you use NPM   npm install d3 hsv   Otherwise  download the  latest release  https   github com d3 d3 hsv releases latest   You can also load directly from  d3js org  https   d3js org  as a  standalone library  https   d3js org d3 hsv v0 1 min js   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 hsv v0 1 min js    script   script   var yellow   d3 hsv  yellow        h  60  s  1  v  1  opacity  1     script        Try d3 hsv in your browser   https   tonicdev com npm d3 hsv      API Reference   a name  hsv  href   hsv     a  d3  b hsv  b   i h  i    i s  i    i v  i     i opacity  i         https   github com d3 d3 hsv blob master src hsv js  Source   br   a href   hsv     a  d3  b hsv  b   i specifier  i   br   a href   hsv     a  d3  b hsv  b   i color  i   br   Constructs a new  HSV  https   en wikipedia org wiki HSL and HSV  color  The channel values are exposed as  h    s  and  v  properties on the returned instance   If  h    s  and  v  are specified  these represent the channel values of the returned color  an  opacity  may also be specified  If a CSS Color Module Level 3  specifier  string is specified  it is parsed and then converted to the HSV color space  See  d3 color  https   github com d3 d3 color color  for examples  If a   color   https   github com d3 d3 color color  instance is specified  it is converted to the RGB color space using   color  rgb  https   github com d3 d3 color color rgb  and then converted to HSV    a href   interpolateHsv     a  d3  b interpolateHsv  b   i a  i    i b  i        https   github com d3 d3 hsv blob master src interpolateHsv js  Source   br   Returns an HSV color space interpolator between the two colors  a  and  b   The colors  a  and  b  need not be in HSV  they will be converted to HSV using  d3 hsv   hsv   If either color s hue or chroma is NaN  the opposing color s channel value is used  The shortest path between hues is used  The return value of the interpolator is an RGB string    a href   interpolateHsvLong     a  d3  b interpolateHsvLong  b   i a  i    i b  i        https   github com d3 d3 hsv blob master src interpolateHsv js  Source   br   Like  interpolateHsv   interpolateHsv   but does not use the shortest path between hues  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-hsv"},{"name":"d3/d3-scale-chromatic","artist":"color, specifi, return, valu, space","id":26,"playcount":27563,"description":"d3/d3-scale-chromatic color, specifi, return, valu, space   d3 scale chromatic  This module provides sequential  diverging and categorical color schemes designed to work with  d3 scale  https   github com d3 d3 scale  s  d3 scaleOrdinal  https   github com d3 d3 scale ordinal scales  and  d3 scaleSequential  https   github com d3 d3 scale sequential scales   Most of these schemes are derived from Cynthia A  Brewer s  ColorBrewer  http   colorbrewer2 org   Since ColorBrewer publishes only discrete color schemes  the sequential and diverging scales are interpolated using  uniform B splines  https   bl ocks org mbostock 048d21cf747371b11884f75ad896e5a5    For example  to create a categorical color scale using the  Accent   schemeAccent  color scheme      js var accent   d3 scaleOrdinal d3 schemeAccent        To create a sequential discrete nine color scale using the  Blues   schemeBlues  color scheme      js var blues   d3 scaleOrdinal d3 schemeBlues 9         To create a diverging  continuous color scale using the  PiYG   interpolatePiYG  color scheme      js var piyg   d3 scaleSequential d3 interpolatePiYG           Installing  If you use NPM   npm install d3 scale chromatic   Otherwise  download the  latest release  https   github com d3 d3 scale chromatic releases latest  or load directly from  d3js org  https   d3js org  as a  standalone library  https   d3js org d3 scale chromatic v1 min js   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 interpolate v1 min js    script   script src  https   d3js org d3 scale chromatic v1 min js    script   script   var yellow   d3 interpolateYlGn 0       rgb 255  255  229       yellowGreen   d3 interpolateYlGn 0 5       rgb 120  197  120       green   d3 interpolateYlGn 1       rgb 0  69  41      script       Or  as part of the  D3 default bundle  https   github com d3 d3       html  script src  https   d3js org d3 v5 min js    script   script   var yellow   d3 interpolateYlGn 0       rgb 255  255  229       yellowGreen   d3 interpolateYlGn 0 5       rgb 120  197  120       green   d3 interpolateYlGn 1       rgb 0  69  41      script        Try d3 scale chromatic in your browser   https   tonicdev com npm d3 scale chromatic      API Reference      Categorical   a name  schemeCategory10  href   schemeCategory10     a  d3  b schemeCategory10  b       https   github com d3 d3 scale chromatic blob master src categorical category10 js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img category10 png  width  100   height  40  alt  category10    An array of ten categorical colors represented as RGB hexadecimal strings    a href   schemeAccent  name  schemeAccent     a  d3  b schemeAccent  b       https   github com d3 d3 scale chromatic blob master src categorical Accent js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Accent png  width  100   height  40  alt  Accent    An array of eight categorical colors represented as RGB hexadecimal strings    a href   schemeDark2  name  schemeDark2     a  d3  b schemeDark2  b       https   github com d3 d3 scale chromatic blob master src categorical Dark2 js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Dark2 png  width  100   height  40  alt  Dark2    An array of eight categorical colors represented as RGB hexadecimal strings    a href   schemePaired  name  schemePaired     a  d3  b schemePaired  b       https   github com d3 d3 scale chromatic blob master src categorical Paired js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Paired png  width  100   height  40  alt  Paired    An array of twelve categorical colors represented as RGB hexadecimal strings    a href   schemePastel1  name  schemePastel1     a  d3  b schemePastel1  b       https   github com d3 d3 scale chromatic blob master src categorical Pastel1 js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Pastel1 png  width  100   height  40  alt  Pastel1    An array of nine categorical colors represented as RGB hexadecimal strings    a href   schemePastel2  name  schemePastel2     a  d3  b schemePastel2  b       https   github com d3 d3 scale chromatic blob master src categorical Pastel2 js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Pastel2 png  width  100   height  40  alt  Pastel2    An array of eight categorical colors represented as RGB hexadecimal strings    a href   schemeSet1  name  schemeSet1     a  d3  b schemeSet1  b       https   github com d3 d3 scale chromatic blob master src categorical Set1 js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Set1 png  width  100   height  40  alt  Set1    An array of nine categorical colors represented as RGB hexadecimal strings    a href   schemeSet2  name  schemeSet2     a  d3  b schemeSet2  b       https   github com d3 d3 scale chromatic blob master src categorical Set2 js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Set2 png  width  100   height  40  alt  Set2    An array of eight categorical colors represented as RGB hexadecimal strings    a href   schemeSet3  name  schemeSet3     a  d3  b schemeSet3  b       https   github com d3 d3 scale chromatic blob master src categorical Set3 js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Set3 png  width  100   height  40  alt  Set3    An array of twelve categorical colors represented as RGB hexadecimal strings       Diverging  Diverging color schemes are available as continuous interpolators  often used with  d3 scaleSequential  https   github com d3 d3 scale blob master README md sequential scales   and as discrete schemes  often used with  d3 scaleOrdinal  https   github com d3 d3 scale blob master README md ordinal scales    Each discrete scheme  such as  d3 schemeBrBG   schemeBrBG   is represented as an array of arrays of hexadecimal color strings  The  k th element of this array contains the color scheme of size  k   for example   d3 schemeBrBG 9   contains an array of nine strings representing the nine colors of the brown blue green diverging color scheme  Diverging color schemes support a size  k  ranging from 3 to 11    a href   interpolateBrBG  name  interpolateBrBG     a  d3  b interpolateBrBG  b   t        https   github com d3 d3 scale chromatic blob master src diverging BrBG js  Source    br  a href   schemeBrBG  name  schemeBrBG     a  d3  b schemeBrBG  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img BrBG png  width  100   height  40  alt  BrBG    Given a number  t  in the range  0 1   returns the corresponding color from the  BrBG  diverging color scheme represented as an RGB string    a href   interpolatePRGn  name  interpolatePRGn     a  d3  b interpolatePRGn  b   t        https   github com d3 d3 scale chromatic blob master src diverging PRGn js  Source    br  a href   schemePRGn  name  schemePRGn     a  d3  b schemePRGn  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img PRGn png  width  100   height  40  alt  PRGn    Given a number  t  in the range  0 1   returns the corresponding color from the  PRGn  diverging color scheme represented as an RGB string    a href   interpolatePiYG  name  interpolatePiYG     a  d3  b interpolatePiYG  b   t        https   github com d3 d3 scale chromatic blob master src diverging PiYG js  Source    br  a href   schemePiYG  name  schemePiYG     a  d3  b schemePiYG  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img PiYG png  width  100   height  40  alt  PiYG    Given a number  t  in the range  0 1   returns the corresponding color from the  PiYG  diverging color scheme represented as an RGB string    a href   interpolatePuOr  name  interpolatePuOr     a  d3  b interpolatePuOr  b   t        https   github com d3 d3 scale chromatic blob master src diverging PuOr js  Source    br  a href   schemePuOr  name  schemePuOr     a  d3  b schemePuOr  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img PuOr png  width  100   height  40  alt  PuOr    Given a number  t  in the range  0 1   returns the corresponding color from the  PuOr  diverging color scheme represented as an RGB string    a href   interpolateRdBu  name  interpolateRdBu     a  d3  b interpolateRdBu  b   t        https   github com d3 d3 scale chromatic blob master src diverging RdBu js  Source    br  a href   schemeRdBu  name  schemeRdBu     a  d3  b schemeRdBu  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img RdBu png  width  100   height  40  alt  RdBu    Given a number  t  in the range  0 1   returns the corresponding color from the  RdBu  diverging color scheme represented as an RGB string    a href   interpolateRdGy  name  interpolateRdGy     a  d3  b interpolateRdGy  b   t        https   github com d3 d3 scale chromatic blob master src diverging RdGy js  Source    br  a href   schemeRdGy  name  schemeRdGy     a  d3  b schemeRdGy  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img RdGy png  width  100   height  40  alt  RdGy    Given a number  t  in the range  0 1   returns the corresponding color from the  RdGy  diverging color scheme represented as an RGB string    a href   interpolateRdYlBu  name  interpolateRdYlBu     a  d3  b interpolateRdYlBu  b   t        https   github com d3 d3 scale chromatic blob master src diverging RdYlBu js  Source    br  a href   schemeRdYlBu  name  schemeRdYlBu     a  d3  b schemeRdYlBu  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img RdYlBu png  width  100   height  40  alt  RdYlBu    Given a number  t  in the range  0 1   returns the corresponding color from the  RdYlBu  diverging color scheme represented as an RGB string    a href   interpolateRdYlGn  name  interpolateRdYlGn     a  d3  b interpolateRdYlGn  b   t        https   github com d3 d3 scale chromatic blob master src diverging RdYlGn js  Source    br  a href   schemeRdYlGn  name  schemeRdYlGn     a  d3  b schemeRdYlGn  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img RdYlGn png  width  100   height  40  alt  RdYlGn    Given a number  t  in the range  0 1   returns the corresponding color from the  RdYlGn  diverging color scheme represented as an RGB string    a href   interpolateSpectral  name  interpolateSpectral     a  d3  b interpolateSpectral  b   t        https   github com d3 d3 scale chromatic blob master src diverging Spectral js  Source    br  a href   schemeSpectral  name  schemeSpectral     a  d3  b schemeSpectral  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Spectral png  width  100   height  40  alt  Spectral    Given a number  t  in the range  0 1   returns the corresponding color from the  Spectral  diverging color scheme represented as an RGB string       Sequential  Single Hue   Sequential  single hue color schemes are available as continuous interpolators  often used with  d3 scaleSequential  https   github com d3 d3 scale blob master README md sequential scales   and as discrete schemes  often used with  d3 scaleOrdinal  https   github com d3 d3 scale blob master README md ordinal scales    Each discrete scheme  such as  d3 schemeBlues   schemeBlues   is represented as an array of arrays of hexadecimal color strings  The  k th element of this array contains the color scheme of size  k   for example   d3 schemeBlues 9   contains an array of nine strings representing the nine colors of the blue sequential color scheme  Sequential  single hue color schemes support a size  k  ranging from 3 to 9    a href   interpolateBlues  name  interpolateBlues     a  d3  b interpolateBlues  b   t        https   github com d3 d3 scale chromatic blob master src sequential single Blues js  Source    br  a href   schemeBlues  name  schemeBlues     a  d3  b schemeBlues  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Blues png  width  100   height  40  alt  Blues    Given a number  t  in the range  0 1   returns the corresponding color from the  Blues  sequential color scheme represented as an RGB string    a href   interpolateGreens  name  interpolateGreens     a  d3  b interpolateGreens  b   t        https   github com d3 d3 scale chromatic blob master src sequential single Greens js  Source    br  a href   schemeGreens  name  schemeGreens     a  d3  b schemeGreens  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Greens png  width  100   height  40  alt  Greens    Given a number  t  in the range  0 1   returns the corresponding color from the  Greens  sequential color scheme represented as an RGB string    a href   interpolateGreys  name  interpolateGreys     a  d3  b interpolateGreys  b   t        https   github com d3 d3 scale chromatic blob master src sequential single Greys js  Source    br  a href   schemeGreys  name  schemeGreys     a  d3  b schemeGreys  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Greys png  width  100   height  40  alt  Greys    Given a number  t  in the range  0 1   returns the corresponding color from the  Greys  sequential color scheme represented as an RGB string    a href   interpolateOranges  name  interpolateOranges     a  d3  b interpolateOranges  b   t        https   github com d3 d3 scale chromatic blob master src sequential single Oranges js  Source    br  a href   schemeOranges  name  schemeOranges     a  d3  b schemeOranges  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Oranges png  width  100   height  40  alt  Oranges    Given a number  t  in the range  0 1   returns the corresponding color from the  Oranges  sequential color scheme represented as an RGB string    a href   interpolatePurples  name  interpolatePurples     a  d3  b interpolatePurples  b   t        https   github com d3 d3 scale chromatic blob master src sequential single Purples js  Source    br  a href   schemePurples  name  schemePurples     a  d3  b schemePurples  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Purples png  width  100   height  40  alt  Purples    Given a number  t  in the range  0 1   returns the corresponding color from the  Purples  sequential color scheme represented as an RGB string    a href   interpolateReds  name  interpolateReds     a  d3  b interpolateReds  b   t        https   github com d3 d3 scale chromatic blob master src sequential single Reds js  Source    br  a href   schemeReds  name  schemeReds     a  d3  b schemeReds  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img Reds png  width  100   height  40  alt  Reds    Given a number  t  in the range  0 1   returns the corresponding color from the  Reds  sequential color scheme represented as an RGB string       Sequential  Multi Hue   Sequential  multi hue color schemes are available as continuous interpolators  often used with  d3 scaleSequential  https   github com d3 d3 scale blob master README md sequential scales   and as discrete schemes  often used with  d3 scaleOrdinal  https   github com d3 d3 scale blob master README md ordinal scales    Each discrete scheme  such as  d3 schemeBuGn   schemeBuGn   is represented as an array of arrays of hexadecimal color strings  The  k th element of this array contains the color scheme of size  k   for example   d3 schemeBuGn 9   contains an array of nine strings representing the nine colors of the blue green sequential color scheme  Sequential  multi hue color schemes support a size  k  ranging from 3 to 9    a name  interpolateViridis  href   interpolateViridis     a  d3  b interpolateViridis  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi viridis js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img viridis png  width  100   height  40  alt  viridis    Given a number  t  in the range  0 1   returns the corresponding color from the  viridis  perceptually uniform color scheme designed by  van der Walt  Smith and Firing  https   bids github io colormap   for matplotlib  represented as an RGB string    a name  interpolateInferno  href   interpolateInferno     a  d3  b interpolateInferno  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi viridis js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img inferno png  width  100   height  40  alt  inferno    Given a number  t  in the range  0 1   returns the corresponding color from the  inferno  perceptually uniform color scheme designed by  van der Walt and Smith  https   bids github io colormap   for matplotlib  represented as an RGB string    a name  interpolateMagma  href   interpolateMagma     a  d3  b interpolateMagma  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi viridis js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img magma png  width  100   height  40  alt  magma    Given a number  t  in the range  0 1   returns the corresponding color from the  magma  perceptually uniform color scheme designed by  van der Walt and Smith  https   bids github io colormap   for matplotlib  represented as an RGB string    a name  interpolatePlasma  href   interpolatePlasma     a  d3  b interpolatePlasma  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi viridis js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img plasma png  width  100   height  40  alt  plasma    Given a number  t  in the range  0 1   returns the corresponding color from the  plasma  perceptually uniform color scheme designed by  van der Walt and Smith  https   bids github io colormap   for matplotlib  represented as an RGB string    a name  interpolateWarm  href   interpolateWarm     a  d3  b interpolateWarm  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi rainbow js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img warm png  width  100   height  40  alt  warm    Given a number  t  in the range  0 1   returns the corresponding color from a 180  rotation of  Niccoli s perceptual rainbow  https   mycarta wordpress com 2013 02 21 perceptual rainbow palette the method    represented as an RGB string    a name  interpolateCool  href   interpolateCool     a  d3  b interpolateCool  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi rainbow js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img cool png  width  100   height  40  alt  cool    Given a number  t  in the range  0 1   returns the corresponding color from  Niccoli s perceptual rainbow  https   mycarta wordpress com 2013 02 21 perceptual rainbow palette the method    represented as an RGB string    a name  interpolateCubehelixDefault  href   interpolateCubehelixDefault     a  d3  b interpolateCubehelixDefault  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi cubehelix js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img cubehelix png  width  100   height  40  alt  cubehelix    Given a number  t  in the range  0 1   returns the corresponding color from  Green s default Cubehelix  https   www mrao cam ac uk  dag CUBEHELIX   represented as an RGB string    a href   interpolateBuGn  name  interpolateBuGn     a  d3  b interpolateBuGn  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi BuGn js  Source    br  a href   schemeBuGn  name  schemeBuGn     a  d3  b schemeBuGn  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img BuGn png  width  100   height  40  alt  BuGn    Given a number  t  in the range  0 1   returns the corresponding color from the  BuGn  sequential color scheme represented as an RGB string    a href   interpolateBuPu  name  interpolateBuPu     a  d3  b interpolateBuPu  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi BuPu js  Source    br  a href   schemeBuPu  name  schemeBuPu     a  d3  b schemeBuPu  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img BuPu png  width  100   height  40  alt  BuPu    Given a number  t  in the range  0 1   returns the corresponding color from the  BuPu  sequential color scheme represented as an RGB string    a href   interpolateGnBu  name  interpolateGnBu     a  d3  b interpolateGnBu  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi GnBu js  Source    br  a href   schemeGnBu  name  schemeGnBu     a  d3  b schemeGnBu  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img GnBu png  width  100   height  40  alt  GnBu    Given a number  t  in the range  0 1   returns the corresponding color from the  GnBu  sequential color scheme represented as an RGB string    a href   interpolateOrRd  name  interpolateOrRd     a  d3  b interpolateOrRd  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi OrRd js  Source    br  a href   schemeOrRd  name  schemeOrRd     a  d3  b schemeOrRd  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img OrRd png  width  100   height  40  alt  OrRd    Given a number  t  in the range  0 1   returns the corresponding color from the  OrRd  sequential color scheme represented as an RGB string    a href   interpolatePuBuGn  name  interpolatePuBuGn     a  d3  b interpolatePuBuGn  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi PuBuGn js  Source    br  a href   schemePuBuGn  name  schemePuBuGn     a  d3  b schemePuBuGn  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img PuBuGn png  width  100   height  40  alt  PuBuGn    Given a number  t  in the range  0 1   returns the corresponding color from the  PuBuGn  sequential color scheme represented as an RGB string    a href   interpolatePuBu  name  interpolatePuBu     a  d3  b interpolatePuBu  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi PuBu js  Source    br  a href   schemePuBu  name  schemePuBu     a  d3  b schemePuBu  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img PuBu png  width  100   height  40  alt  PuBu    Given a number  t  in the range  0 1   returns the corresponding color from the  PuBu  sequential color scheme represented as an RGB string    a href   interpolatePuRd  name  interpolatePuRd     a  d3  b interpolatePuRd  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi PuRd js  Source    br  a href   schemePuRd  name  schemePuRd     a  d3  b schemePuRd  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img PuRd png  width  100   height  40  alt  PuRd    Given a number  t  in the range  0 1   returns the corresponding color from the  PuRd  sequential color scheme represented as an RGB string    a href   interpolateRdPu  name  interpolateRdPu     a  d3  b interpolateRdPu  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi RdPu js  Source    br  a href   schemeRdPu  name  schemeRdPu     a  d3  b schemeRdPu  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img RdPu png  width  100   height  40  alt  RdPu    Given a number  t  in the range  0 1   returns the corresponding color from the  RdPu  sequential color scheme represented as an RGB string    a href   interpolateYlGnBu  name  interpolateYlGnBu     a  d3  b interpolateYlGnBu  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi YlGnBu js  Source    br  a href   schemeYlGnBu  name  schemeYlGnBu     a  d3  b schemeYlGnBu  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img YlGnBu png  width  100   height  40  alt  YlGnBu    Given a number  t  in the range  0 1   returns the corresponding color from the  YlGnBu  sequential color scheme represented as an RGB string    a href   interpolateYlGn  name  interpolateYlGn     a  d3  b interpolateYlGn  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi YlGn js  Source    br  a href   schemeYlGn  name  schemeYlGn     a  d3  b schemeYlGn  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img YlGn png  width  100   height  40  alt  YlGn    Given a number  t  in the range  0 1   returns the corresponding color from the  YlGn  sequential color scheme represented as an RGB string    a href   interpolateYlOrBr  name  interpolateYlOrBr     a  d3  b interpolateYlOrBr  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi YlOrBr js  Source    br  a href   schemeYlOrBr  name  schemeYlOrBr     a  d3  b schemeYlOrBr  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img YlOrBr png  width  100   height  40  alt  YlOrBr    Given a number  t  in the range  0 1   returns the corresponding color from the  YlOrBr  sequential color scheme represented as an RGB string    a href   interpolateYlOrRd  name  interpolateYlOrRd     a  d3  b interpolateYlOrRd  b   t        https   github com d3 d3 scale chromatic blob master src sequential multi YlOrRd js  Source    br  a href   schemeYlOrRd  name  schemeYlOrRd     a  d3  b schemeYlOrRd  b   k     img src  https   raw githubusercontent com d3 d3 scale chromatic master img YlOrRd png  width  100   height  40  alt  YlOrRd    Given a number  t  in the range  0 1   returns the corresponding color from the  YlOrRd  sequential color scheme represented as an RGB string       Cyclical   a name  interpolateRainbow  href   interpolateRainbow     a  d3  b interpolateRainbow  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi rainbow js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img rainbow png  width  100   height  40  alt  rainbow    Given a number  t  in the range  0 1   returns the corresponding color from  d3 interpolateWarm   interpolateWarm  scale from  0 0  0 5  followed by the  d3 interpolateCool   interpolateCool  scale from  0 5  1 0   thus implementing the cyclical  less angry rainbow  http   bl ocks org mbostock 310c99e53880faec2434  color scheme    a name  interpolateSinebow  href   interpolateSinebow     a  d3  b interpolateSinebow  b   i t  i        https   github com d3 d3 scale chromatic blob master src sequential multi sinebow js  Source     img src  https   raw githubusercontent com d3 d3 scale chromatic master img sinebow png  width  100   height  40  alt  sinebow    Given a number  t  in the range  0 1   returns the corresponding color from the  sinebow  color scheme by  Jim Bumgardner  https   krazydad com tutorials makecolors php  and  Charlie Loyd  http   basecase org env on rainbows   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-scale-chromatic"},{"name":"d3/d3-array","artist":"return, specifi, sourc, array, valu","id":27,"playcount":31960,"description":"d3/d3-array return, specifi, sourc, array, valu   d3 array  Data in JavaScript is often represented by an array  and so one tends to manipulate arrays when visualizing or analyzing data  Some common forms of manipulation include taking a contiguous slice  subset  of an array  filtering an array using a predicate function  and mapping an array to a parallel set of values using a transform function  Before looking at the set of utilities that this module provides  familiarize yourself with the powerful  array methods built in to JavaScript  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array prototype    JavaScript includes   mutation methods   that modify the array       array  pop  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array pop    Remove the last element from the array      array  push  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array push    Add one or more elements to the end of the array      array  reverse  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array reverse    Reverse the order of the elements of the array      array  shift  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array shift    Remove the first element from the array      array  sort  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array sort    Sort the elements of the array      array  splice  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array splice    Add or remove elements from the array      array  unshift  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array unshift    Add one or more elements to the front of the array   There are also   access methods   that return some representation of the array       array  concat  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array concat    Join the array with other array s  or value s       array  join  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array join    Join all elements of the array into a string      array  slice  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array slice    Extract a section of the array      array  indexOf  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array indexOf    Find the first occurrence of a value within the array      array  lastIndexOf  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array lastIndexOf    Find the last occurrence of a value within the array   And finally   iteration methods   that apply functions to elements in the array       array  filter  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array filter    Create a new array with only the elements for which a predicate is true      array  forEach  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array forEach    Call a function for each element in the array      array  every  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array every    See if every element in the array satisfies a predicate      array  map  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array map    Create a new array with the result of calling a function on every element in the array      array  some  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array some    See if at least one element in the array satisfies a predicate      array  reduce  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array reduce    Apply a function to reduce the array to a single value  from left to right       array  reduceRight  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array reduceRight    Apply a function to reduce the array to a single value  from right to left       Installing  If you use NPM   npm install d3 array   Otherwise  download the  latest release  https   github com d3 d3 array releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 array v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 array v1 min js    script   script   var min   d3 min array      script        Try d3 array in your browser   https   tonicdev com npm d3 array      API Reference     Statistics   statistics     Search   search     Transformations   transformations     Histograms   histograms     Histogram Thresholds   histogram thresholds       Statistics  Methods for computing basic summary statistics    a name  min  href   min     a  d3  b min  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src min js  Source    Returns the minimum value in the given  array  using natural order  If the array is empty  returns undefined  An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the minimum value   Unlike the built in  Math min  https   developer mozilla org en JavaScript Reference Global Objects Math min   this method ignores undefined  null and NaN values  this is useful for ignoring missing data  In addition  elements are compared using natural order rather than numeric order  For example  the minimum of the strings   20    3   is  20   while the minimum of the numbers  20  3  is 3   See also  scan   scan  and  extent   extent     a name  max  href   max     a  d3  b max  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src max js  Source    Returns the maximum value in the given  array  using natural order  If the array is empty  returns undefined  An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the maximum value   Unlike the built in  Math max  https   developer mozilla org en JavaScript Reference Global Objects Math max   this method ignores undefined values  this is useful for ignoring missing data  In addition  elements are compared using natural order rather than numeric order  For example  the maximum of the strings   20    3   is  3   while the maximum of the numbers  20  3  is 20   See also  scan   scan  and  extent   extent     a name  extent  href   extent     a  d3  b extent  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src extent js  Source    Returns the  minimum   min  and  maximum   max  value in the given  array  using natural order  If the array is empty  returns  undefined  undefined   An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the extent    a name  sum  href   sum     a  d3  b sum  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src sum js  Source    Returns the sum of the given  array  of numbers  If the array is empty  returns 0  An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the sum  This method ignores undefined and NaN values  this is useful for ignoring missing data    a name  mean  href   mean     a  d3  b mean  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src mean js  Source    Returns the mean of the given  array  of numbers  If the array is empty  returns undefined  An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the mean  This method ignores undefined and NaN values  this is useful for ignoring missing data    a name  median  href   median     a  d3  b median  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src median js  Source    Returns the median of the given  array  of numbers using the  R 7 method  https   en wikipedia org wiki Quantile Estimating quantiles from a sample   If the array is empty  returns undefined  An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the median  This method ignores undefined and NaN values  this is useful for ignoring missing data    a name  quantile  href   quantile     a  d3  b quantile  b   i array  i    i p  i     i accessor  i         https   github com d3 d3 array blob master src quantile js  Source    Returns the  p  quantile of the given   sorted    array  of numbers  where  p  is a number in the range  0  1   For example  the median can be computed using  p    0 5  the first quartile at  p    0 25  and the third quartile at  p    0 75  This particular implementation uses the  R 7 method  http   en wikipedia org wiki Quantile Quantiles of a population   which is the default for the R programming language and Excel  For example      js var a    0  10  30   d3 quantile a  0      0 d3 quantile a  0 5      10 d3 quantile a  1      30 d3 quantile a  0 25      5 d3 quantile a  0 75      20 d3 quantile a  0 1      2      An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the quantile    a name  variance  href   variance     a  d3  b variance  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src variance js  Source    Returns an  unbiased estimator of the population variance  http   mathworld wolfram com SampleVariance html  of the given  array  of numbers  If the array has fewer than two values  returns undefined  An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the variance  This method ignores undefined and NaN values  this is useful for ignoring missing data    a name  deviation  href   deviation     a  d3  b deviation  b   i array  i     i accessor  i         https   github com d3 d3 array blob master src deviation js  Source    Returns the standard deviation  defined as the square root of the  bias corrected variance   variance   of the given  array  of numbers  If the array has fewer than two values  returns undefined  An optional  accessor  function may be specified  which is equivalent to calling  array  map  accessor   before computing the standard deviation  This method ignores undefined and NaN values  this is useful for ignoring missing data       Search  Methods for searching arrays for a specific element    a name  scan  href   scan     a  d3  b scan  b   i array  i     i comparator  i         https   github com d3 d3 array blob master src scan js  Source    Performs a linear scan of the specified  array   returning the index of the least element according to the specified  comparator   If the given  array  contains no comparable elements   i e    the comparator returns NaN when comparing each element to itself   returns undefined  If  comparator  is not specified  it defaults to  ascending   ascending   For example      js var array     foo  42    foo  91    d3 scan array  function a  b    return a foo   b foo         0 d3 scan array  function a  b    return b foo   a foo         1      This function is similar to  min   min   except it allows the use of a comparator rather than an accessor and it returns the index instead of the accessed value  See also  bisect   bisect     a name  bisectLeft  href   bisectLeft     a  d3  b bisectLeft  b   i array  i    i x  i     i lo  i     i hi  i          https   github com d3 d3 array blob master src bisect js L6  Source    Returns the insertion point for  x  in  array  to maintain sorted order  The arguments  lo  and  hi  may be used to specify a subset of the array which should be considered  by default the entire array is used  If  x  is already present in  array   the insertion point will be before  to the left of  any existing entries  The return value is suitable for use as the first argument to  splice  https   developer mozilla org en JavaScript Reference Global Objects Array splice  assuming that  array  is already sorted  The returned insertion point  i  partitions the  array  into two halves so that all  v     x  for  v  in  array  slice  lo    i   for the left side and all  v      x  for  v  in  array  slice  i    hi   for the right side    a name  bisect  href   bisect     a  d3  b bisect  b   i array  i    i x  i     i lo  i     i hi  i          https   github com d3 d3 array blob master src bisect js  Source   br   a name  bisectRight  href   bisectRight     a  d3  b bisectRight  b   i array  i    i x  i     i lo  i     i hi  i          https   github com d3 d3 array blob master src bisect js L6  Source    Similar to  bisectLeft   bisectLeft   but returns an insertion point which comes after  to the right of  any existing entries of  x  in  array   The returned insertion point  i  partitions the  array  into two halves so that all  v      x  for  v  in  array  slice  lo    i   for the left side and all  v     x  for  v  in  array  slice  i    hi   for the right side    a name  bisector  href   bisector     a  d3  b bisector  b   i accessor  i        https   github com d3 d3 array blob master src bisector js  Source    br  a name  bisector  href   bisector     a  d3  b bisector  b   i comparator  i        https   github com d3 d3 array blob master src bisector js  Source    Returns a new bisector using the specified  accessor  or  comparator  function  This method can be used to bisect arrays of objects instead of being limited to simple arrays of primitives  For example  given the following array of objects      js var data        date  new Date 2011  1  1   value  0 5      date  new Date 2011  2  1   value  0 6      date  new Date 2011  3  1   value  0 7      date  new Date 2011  4  1   value  0 8          A suitable bisect function could be constructed as      js var bisectDate   d3 bisector function d    return d date     right       This is equivalent to specifying a comparator      js var bisectDate   d3 bisector function d  x    return d date   x     right       And then applied as  bisectDate   array    date    returning an index  Note that the comparator is always passed the search value  x  as the second argument  Use a comparator rather than an accessor if you want values to be sorted in an order different than natural order  such as in descending rather than ascending order    a name  bisector left  href   bisector left     a   i bisector  i   b left  b   i array  i    i x  i     i lo  i     i hi  i          https   github com d3 d3 array blob master src bisector js L6  Source    Equivalent to  bisectLeft   bisectLeft   but uses this bisector s associated comparator    a name  bisector right  href   bisector right     a   i bisector  i   b right  b   i array  i    i x  i     i lo  i     i hi  i          https   github com d3 d3 array blob master src bisector js L16  Source    Equivalent to  bisectRight   bisectRight   but uses this bisector s associated comparator    a name  ascending  href   ascending     a  d3  b ascending  b   i a  i    i b  i        https   github com d3 d3 array blob master src ascending js  Source    Returns  1 if  a  is less than  b   or 1 if  a  is greater than  b   or 0  This is the comparator function for natural order  and can be used in conjunction with the built in   array  sort  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array sort  method to arrange elements in ascending order  It is implemented as      js function ascending a  b      return a   b    1   a   b   1   a    b   0   NaN         Note that if no comparator function is specified to the built in sort method  the default order is lexicographic  alphabetical   not natural  This can lead to surprising behavior when sorting an array of numbers    a name  descending  href   descending     a  d3  b descending  b   i a  i    i b  i        https   github com d3 d3 array blob master src descending js  Source    Returns  1 if  a  is greater than  b   or 1 if  a  is less than  b   or 0  This is the comparator function for reverse natural order  and can be used in conjunction with the built in array sort method to arrange elements in descending order   It is implemented as      js function descending a  b      return b   a    1   b   a   1   b    a   0   NaN         Note that if no comparator function is specified to the built in sort method  the default order is lexicographic  alphabetical   not natural  This can lead to surprising behavior when sorting an array of numbers       Transformations  Methods for transforming arrays and for generating new arrays    a name  cross  href   cross     a  d3  b cross  b   i a  i    i b  i     i reducer  i         https   github com d3 d3 array blob master src cross js  Source    Returns the  Cartesian product  https   en wikipedia org wiki Cartesian product  of the two arrays  a  and  b   For each element  i  in the specified array  a  and each element  j  in the specified array  b   in order  invokes the specified  reducer  function passing the element  i  and element  j   If a  reducer  is not specified  it defaults to a function which creates a two element array for each pair      js function pair a  b      return  a  b          For example      js d3 cross  1  2     x    y        returns   1   x     1   y     2   x     2   y    d3 cross  1  2     x    y     a  b     a   b      returns   1x    1y    2x    2y         a name  merge  href   merge     a  d3  b merge  b   i arrays  i        https   github com d3 d3 array blob master src merge js  Source    Merges the specified  arrays  into a single array  This method is similar to the built in array concat method  the only difference is that it is more convenient when you have an array of arrays      js d3 merge   1    2  3        returns  1  2  3        a name  pairs  href   pairs     a  d3  b pairs  b   i array  i     i reducer  i         https   github com d3 d3 array blob master src pairs js  Source    For each adjacent pair of elements in the specified  array   in order  invokes the specified  reducer  function passing the element  i  and element  i    1  If a  reducer  is not specified  it defaults to a function which creates a two element array for each pair      js function pair a  b      return  a  b          For example      js d3 pairs  1  2  3  4       returns   1  2    2  3    3  4   d3 pairs  1  2  3  4    a  b     b   a      returns  1  1  1        If the specified array has fewer than two elements  returns the empty array    a name  permute  href   permute     a  d3  b permute  b   i array  i    i indexes  i        https   github com d3 d3 array blob master src permute js  Source    Returns a permutation of the specified  array  using the specified array of  indexes   The returned array contains the corresponding element in array for each index in indexes  in order  For example  permute   a    b    c     1  2  0   returns   b    c    a    It is acceptable for the array of indexes to be a different length from the array of elements  and for indexes to be duplicated or omitted   This method can also be used to extract the values from an object into an array with a stable order  Extracting keyed values in order can be useful for generating data arrays in nested selections  For example      js var object    yield  27  variety   Manchuria   year  1931  site   University Farm        fields     site    variety    yield     d3 permute object  fields      returns   University Farm    Manchuria   27        a name  shuffle  href   shuffle     a  d3  b shuffle  b   i array  i     i start  i     i stop  i          https   github com d3 d3 array blob master src shuffle js  Source    Randomizes the order of the specified  array  in place using the  Fisher Yates shuffle  https   bost ocks org mike shuffle   and returns the  array   If  start  is specified  it is the starting index  inclusive  of the  array  to shuffle  if  start  is not specified  it defaults to zero  If  stop  is specified  it is the ending index  exclusive  of the  array  to shuffle  if  stop  is not specified  it defaults to  array  length  For example  to shuffle the first ten elements of the  array   shuffle  array   0  10     a name  ticks  href   ticks     a  d3  b ticks  b   i start  i    i stop  i    i count  i        https   github com d3 d3 array blob master src ticks js  Source    Returns an array of approximately  count    1 uniformly spaced  nicely rounded values between  start  and  stop   inclusive   Each value is a power of ten multiplied by 1  2 or 5  See also  d3 tickIncrement   tickIncrement    d3 tickStep   tickStep  and   linear  ticks  https   github com d3 d3 scale blob master README md linear ticks    Ticks are inclusive in the sense that they may include the specified  start  and  stop  values if  and only if  they are exact  nicely rounded values consistent with the inferred  step   tickStep   More formally  each returned tick  t  satisfies  start     t  and  t     stop     a name  tickIncrement  href   tickIncrement     a  d3  b tickIncrement  b   i start  i    i stop  i    i count  i        https   github com d3 d3 array blob master src ticks js L16  Source    Like  d3 tickStep   tickStep   except requires that  start  is always less than or equal to  step   and if the tick step for the given  start    stop  and  count  would be less than one  returns the negative inverse tick step instead  This method is always guaranteed to return an integer  and is used by  d3 ticks   ticks  to avoid guarantee that the returned tick values are represented as precisely as possible in IEEE 754 floating point    a name  tickStep  href   tickStep     a  d3  b tickStep  b   i start  i    i stop  i    i count  i        https   github com d3 d3 array blob master src ticks js L16  Source    Returns the difference between adjacent tick values if the same arguments were passed to  d3 ticks   ticks   a nicely rounded value that is a power of ten multiplied by 1  2 or 5  Note that due to the limited precision of IEEE 754 floating point  the returned value may not be exact decimals  use  d3 format  https   github com d3 d3 format  to format numbers for human consumption    a name  range  href   range     a  d3  b range  b    i start  i     i stop  i     i step  i         https   github com d3 d3 array blob master src range js  Source    Returns an array containing an arithmetic progression  similar to the Python built in  range  http   docs python org library functions html range   This method is often used to iterate over a sequence of uniformly spaced numeric values  such as the indexes of an array or the ticks of a linear scale   See also  d3 ticks   ticks  for nicely rounded values    If  step  is omitted  it defaults to 1  If  start  is omitted  it defaults to 0  The  stop  value is exclusive  it is not included in the result  If  step  is positive  the last element is the largest  start     i      step  less than  stop   if  step  is negative  the last element is the smallest  start     i      step  greater than  stop   If the returned array would contain an infinite number of values  an empty range is returned   The arguments are not required to be integers  however  the results are more predictable if they are  The values in the returned array are defined as  start     i      step   where  i  is an integer from zero to one minus the total number of elements in the returned array  For example      js d3 range 0  1  0 2      0  0 2  0 4  0 6000000000000001  0 8       This unexpected behavior is due to IEEE 754 double precision floating point  which defines 0 2   3   0 6000000000000001  Use  d3 format  https   github com d3 d3 format  to format numbers for human consumption with appropriate rounding  see also  linear tickFormat  https   github com d3 d3 scale blob master README md linear tickFormat  in  d3 scale  https   github com d3 d3 scale    Likewise  if the returned array should have a specific length  consider using  array map  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array map  on an integer range  For example      js d3 range 0  1  1   49      BAD  returns 50 elements  d3 range 49  map function d    return d   49         GOOD  returns 49 elements        a name  transpose  href   transpose     a  d3  b transpose  b   i matrix  i        https   github com d3 d3 array blob master src transpose js  Source    Uses the  zip   zip  operator as a two dimensional  matrix transpose  http   en wikipedia org wiki Transpose     a name  zip  href   zip     a  d3  b zip  b   i arrays   i        https   github com d3 d3 array blob master src zip js  Source    Returns an array of arrays  where the  i th array contains the  i th element from each of the argument  arrays   The returned array is truncated in length to the shortest array in  arrays   If  arrays  contains only a single array  the returned array contains one element arrays  With no arguments  the returned array is empty      js d3 zip  1  2    3  4       returns   1  3    2  4            Histograms    img src  https   raw githubusercontent com d3 d3 array master img histogram png  width  480  height  250  alt  Histogram    http   bl ocks org mbostock 3048450   Histograms bin many discrete samples into a smaller number of consecutive  non overlapping intervals  They are often used to visualize the distribution of numerical data    a name  histogram  href   histogram     a  d3  b histogram  b         https   github com d3 d3 array blob master src histogram js  Source    Constructs a new histogram generator with the default settings    a name   histogram  href    histogram     a   i histogram  i   i data  i        https   github com d3 d3 array blob master src histogram js L14  Source    Computes the histogram for the given array of  data  samples  Returns an array of bins  where each bin is an array containing the associated elements from the input  data   Thus  the  length  of the bin is the number of elements in that bin  Each bin has two additional attributes      x0    the lower bound of the bin  inclusive      x1    the upper bound of the bin  exclusive  except for the last bin     a name  histogram value  href   histogram value     a   i histogram  i   b value  b    i value  i         https   github com d3 d3 array blob master src histogram js L58  Source    If  value  is specified  sets the value accessor to the specified function or constant and returns this histogram generator  If  value  is not specified  returns the current value accessor  which defaults to the identity function   When a histogram is  generated    histogram   the value accessor will be invoked for each element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  The default value accessor assumes that the input data are orderable  comparable   such as numbers or dates  If your data are not  then you should specify an accessor that returns the corresponding orderable value for a given datum   This is similar to mapping your data to values before invoking the histogram generator  but has the benefit that the input data remains associated with the returned bins  thereby making it easier to access other fields of the data    a name  histogram domain  href   histogram domain     a   i histogram  i   b domain  b    i domain  i         https   github com d3 d3 array blob master src histogram js L62  Source    If  domain  is specified  sets the domain accessor to the specified function or array and returns this histogram generator  If  domain  is not specified  returns the current domain accessor  which defaults to  extent   extent   The histogram domain is defined as an array   min    max    where  min  is the minimum observable value and  max  is the maximum observable value  both values are inclusive  Any value outside of this domain will be ignored when the histogram is  generated    histogram    For example  if you are using the the histogram in conjunction with a  linear scale  https   github com d3 d3 scale blob master README md linear scales   x   you might say      js var histogram   d3 histogram        domain x domain         thresholds x ticks 20         You can then compute the bins from an array of numbers like so      js var bins   histogram numbers        Note that the domain accessor is invoked on the materialized array of  values   histogram value   not on the input data array    a name  histogram thresholds  href   histogram thresholds     a   i histogram  i   b thresholds  b    i count  i         https   github com d3 d3 array blob master src histogram js L66  Source    br  a name  histogram thresholds  href   histogram thresholds     a   i histogram  i   b thresholds  b    i thresholds  i          https   github com d3 d3 array blob master src histogram js L66  Source    If  thresholds  is specified  sets the  threshold generator   histogram thresholds  to the specified function or array and returns this histogram generator  If  thresholds  is not specified  returns the current threshold generator  which by default implements  Sturges  formula   thresholdSturges    Thus by default  the histogram values must be numbers   Thresholds are defined as an array of values   x0    x1       Any value less than  x0  will be placed in the first bin  any value greater than or equal to  x0  but less than  x1  will be placed in the second bin  and so on  Thus  the  generated histogram    histogram  will have  thresholds  length   1 bins  See  histogram thresholds   histogram thresholds  for more information   Any threshold values outside the  domain   histogram domain  are ignored  The first  bin  x0 is always equal to the minimum domain value  and the last  bin  x1 is always equal to the maximum domain value   If a  count  is specified instead of an array of  thresholds   then the  domain   histogram domain  will be uniformly divided into approximately  count  bins  see  ticks   ticks        Histogram Thresholds  These functions are typically not used directly  instead  pass them to   histogram  thresholds   histogram thresholds   You may also implement your own threshold generator taking three arguments  the array of input   values    histogram value  derived from the data  and the  observable domain   histogram domain  represented as  min  and  max   The generator may then return either the array of numeric thresholds or the  count  of bins  in the latter case the domain is divided uniformly into approximately  count  bins  see  ticks   ticks     a name  thresholdFreedmanDiaconis  href   thresholdFreedmanDiaconis     a  d3  b thresholdFreedmanDiaconis  b   i values  i    i min  i    i max  i        https   github com d3 d3 array blob master src threshold freedmanDiaconis js  Source    Returns the number of bins according to the  Freedman Diaconis rule  https   en wikipedia org wiki Histogram Mathematical definition   the input  values  must be numbers    a name  thresholdScott  href   thresholdScott     a  d3  b thresholdScott  b   i values  i    i min  i    i max  i        https   github com d3 d3 array blob master src threshold scott js  Source    Returns the number of bins according to  Scott s normal reference rule  https   en wikipedia org wiki Histogram Mathematical definition   the input  values  must be numbers    a name  thresholdSturges  href   thresholdSturges     a  d3  b thresholdSturges  b   i values  i        https   github com d3 d3 array blob master src threshold sturges js  Source    Returns the number of bins according to  Sturges  formula  https   en wikipedia org wiki Histogram Mathematical definition   the input  values  must be numbers  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-array"},{"name":"d3/d3-collection","artist":"return, specifi, sourc, array, valu","id":28,"playcount":18527,"description":"d3/d3-collection return, specifi, sourc, array, valu   d3 collection  Handy data structures for elements keyed by string      Installing  If you use NPM   npm install d3 collection   Otherwise  download the  latest release  https   github com d3 d3 collection releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 collection v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 collection v1 min js    script   script   var map   d3 map        set  foo   1       set  bar   2      script        Try d3 collection in your browser   https   tonicdev com npm d3 collection      API Reference     Objects   objects     Maps   maps     Sets   sets     Nests   nests       Objects  A common data type in JavaScript is the  associative array   or more simply the  object   which has a set of named properties  The standard mechanism for iterating over the keys  or property names  in an associative array is the  for in loop  https   developer mozilla org en JavaScript Reference Statements for   in   However  note that the iteration order is undefined  D3 provides several methods for converting associative arrays to standard arrays with numeric indexes   A word of caution  it is tempting to use plain objects as maps  but this causes  unexpected behavior  http   www devthought com 2012 01 18 an object is not a hash   when built in property names are used as keys  such as  object    proto       42  and   hasOwnProperty  in object   If you cannot guarantee that map keys and set values will be safe  use  maps   maps  and  sets   sets   or their ES6 equivalents  instead of plain objects    a name  keys  href   keys     a  d3  b keys  b   i object  i        https   github com d3 d3 collection blob master src keys js  Source    Returns an array containing the property names of the specified object  an associative array   The order of the returned array is undefined    a name  values  href   values     a  d3  b values  b   i object  i        https   github com d3 d3 collection blob master src values js  Source    Returns an array containing the property values of the specified object  an associative array   The order of the returned array is undefined    a name  entries  href   entries     a  d3  b entries  b   i object  i        https   github com d3 d3 collection blob master src entries js  Source    Returns an array containing the property keys and values of the specified object  an associative array   Each entry is an object with a key and value attribute  such as   key   foo   value  42    The order of the returned array is undefined      js d3 entries  foo  42  bar  true         key   foo   value  42    key   bar   value  true            Maps  Like  ES6 Maps  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Map   but with a few differences     Keys are coerced to strings     map each   map each   not  map forEach  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Map forEach    Also  no  thisArg       map remove   map remove   not  map delete  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Map delete      map entries   map entries  returns an array of  key  value  objects  not an iterator of  key  value      map size   map size  is a method  not a  property  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Map size   also  there s  map empty   map empty     a name  map  href   map     a  d3  b map  b    i object  i     i key  i          https   github com d3 d3 collection blob master src map js  Source    Constructs a new map  If  object  is specified  copies all enumerable properties from the specified object into this map  The specified object may also be an array or another map  An optional  key  function may be specified to compute the key for each value in the array  For example      js var map   d3 map   name   foo     name   bar     function d    return d name      map get  foo         name    foo   map get  bar         name    bar   map get  baz       undefined      See also  nests   nests     a name  map has  href   map has     a   i map  i   b has  b   i key  i        https   github com d3 d3 collection blob master src map js L7  Source    Returns true if and only if this map has an entry for the specified  key  string  Note  the value may be  null  or  undefined     a name  map get  href   map get     a   i map  i   b get  b   i key  i        https   github com d3 d3 collection blob master src map js L10  Source    Returns the value for the specified  key  string  If the map does not have an entry for the specified  key   returns  undefined     a name  map set  href   map set     a   i map  i   b set  b   i key  i    i value  i        https   github com d3 d3 collection blob master src map js L13  Source    Sets the  value  for the specified  key  string  If the map previously had an entry for the same  key  string  the old entry is replaced with the new value  Returns the map  allowing chaining  For example      js var map   d3 map        set  foo   1       set  bar   2       set  baz   3    map get  foo       1       a name  map remove  href   map remove     a   i map  i   b remove  b   i key  i        https   github com d3 d3 collection blob master src map js L17  Source    If the map has an entry for the specified  key  string  removes the entry and returns true  Otherwise  this method does nothing and returns false    a name  map clear  href   map clear     a   i map  i   b clear  b         https   github com d3 d3 collection blob master src map js L21  Source    Removes all entries from this map    a name  map keys  href   map keys     a   i map  i   b keys  b         https   github com d3 d3 collection blob master src map js L24  Source    Returns an array of string keys for every entry in this map  The order of the returned keys is arbitrary    a name  map values  href   map values     a   i map  i   b values  b         https   github com d3 d3 collection blob master src map js L29  Source    Returns an array of values for every entry in this map  The order of the returned values is arbitrary    a name  map entries  href   map entries     a   i map  i   b entries  b         https   github com d3 d3 collection blob master src map js L34  Source    Returns an array of key value objects for each entry in this map  The order of the returned entries is arbitrary  Each entry s key is a string  but the value has arbitrary type    a name  map each  href   map each     a   i map  i   b each  b   i function  i        https   github com d3 d3 collection blob master src map js L48  Source    Calls the specified  function  for each entry in this map  passing the entry s value and key as arguments  followed by the map itself  Returns undefined  The iteration order is arbitrary    a name  map empty  href   map empty     a   i map  i   b empty  b         https   github com d3 d3 collection blob master src map js L44  Source    Returns true if and only if this map has zero entries    a name  map size  href   map size     a   i map  i   b size  b         https   github com d3 d3 collection blob master src map js L39  Source    Returns the number of entries in this map       Sets  Like  ES6 Sets  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Set   but with a few differences     Values are coerced to strings     set each   set each   not  set forEach  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Set forEach    Also  no  thisArg       set remove   set remove   not  set delete  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Set delete      set size   set size  is a method  not a  property  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Set size   also  there s  set empty   set empty     a name  set  href   set     a  d3  b set  b    i array  i     i accessor  i          https   github com d3 d3 collection blob master src set js  Source    Constructs a new set  If  array  is specified  adds the given  array  of string values to the returned set  The specified array may also be another set  An optional  accessor  function may be specified  which is equivalent to calling  array map accessor   before constructing the set    a name  set has  href   set has     a   i set  i   b has  b   i value  i        https   github com d3 d3 collection blob master src set js L9  Source    Returns true if and only if this set has an entry for the specified  value  string    a name  set add  href   set add     a   i set  i   b add  b   i value  i        https   github com d3 d3 collection blob master src set js L10  Source    Adds the specified  value  string to this set  Returns the set  allowing chaining  For example      js var set   d3 set        add  foo        add  bar        add  baz     set has  foo       true       a name  set remove  href   set remove     a   i set  i   b remove  b   i value  i        https   github com d3 d3 collection blob master src set js L15  Source    If the set contains the specified  value  string  removes it and returns true  Otherwise  this method does nothing and returns false    a name  set clear  href   set clear     a   i set  i   b clear  b         https   github com d3 d3 collection blob master src set js L16  Source    Removes all values from this set    a name  set values  href   set values     a   i set  i   b values  b         https   github com d3 d3 collection blob master src set js L17  Source    Returns an array of the string values in this set  The order of the returned values is arbitrary  Can be used as a convenient way of computing the unique values for a set of strings  For example      js d3 set   foo    bar    foo    baz    values        foo    bar    baz        a name  set each  href   set each     a   i set  i   b each  b   i function  i        https   github com d3 d3 collection blob master src set js L20  Source    Calls the specified  function  for each value in this set  passing the value as the first two arguments  for symmetry with   map  each   map each    followed by the set itself  Returns undefined  The iteration order is arbitrary    a name  set empty  href   set empty     a   i set  i   b empty  b         https   github com d3 d3 collection blob master src set js L19  Source    Returns true if and only if this set has zero values    a name  set size  href   set size     a   i set  i   b size  b         https   github com d3 d3 collection blob master src set js L18  Source    Returns the number of values in this set       Nests  Nesting allows elements in an array to be grouped into a hierarchical tree structure  think of it like the GROUP BY operator in SQL  except you can have multiple levels of grouping  and the resulting output is a tree rather than a flat table  The levels in the tree are specified by key functions  The leaf nodes of the tree can be sorted by value  while the internal nodes can be sorted by key  An optional rollup function will collapse the elements in each leaf node using a summary function  The nest operator  the object returned by  nest   nest   is reusable  and does not retain any references to the data that is nested   For example  consider the following tabular data structure of Barley yields  from various sites in Minnesota during 1931 2      js var yields        yield  27 00  variety   Manchuria   year  1931  site   University Farm       yield  48 87  variety   Manchuria   year  1931  site   Waseca       yield  27 43  variety   Manchuria   year  1931  site   Morris                  To facilitate visualization  it may be useful to nest the elements first by year  and then by variety  as follows      js var entries   d3 nest        key function d    return d year          key function d    return d variety          entries yields        This returns a nested array  Each element of the outer array is a key values pair  listing the values for each distinct key      js   key   1931   values        key   Manchuria   values          yield  27 00  variety   Manchuria   year  1931  site   University Farm          yield  48 87  variety   Manchuria   year  1931  site   Waseca          yield  27 43  variety   Manchuria   year  1931  site   Morris               key   Glabron   values          yield  43 07  variety   Glabron   year  1931  site   University Farm          yield  55 20  variety   Glabron   year  1931  site   Waseca                    key   1932   values             The nested form allows easy iteration and generation of hierarchical structures in SVG or HTML   For a longer introduction to nesting  see     Phoebe Bright s  D3 Nest Tutorial and examples  http   bl ocks org phoebebright raw 3176159     Shan Carter s  Mister Nester  http   bl ocks org shancarter raw 4748131     a name  nest  href   nest     a  d3  b nest  b         https   github com d3 d3 collection blob master src nest js  Source    Creates a new nest operator  The set of keys is initially empty    a name  nest key  href   nest key     a   i nest  i   b key  b   i key  i        https   github com d3 d3 collection blob master src nest js L4  Source    Registers a new  key  function  The  key  function will be invoked for each element in the input array and must return a string identifier to assign the element to its group  Most often  the function is a simple accessor  such as the year and variety accessors above   Keys functions are  not  passed the input array index   Each time a key is registered  it is pushed onto the end of the internal array of keys  and the nest operator applies an additional level of nesting    a name  nest sortKeys  href   nest sortKeys     a   i nest  i   b sortKeys  b   i comparator  i        https   github com d3 d3 collection blob master src nest js L5  Source    Sorts key values for the  current key   nest key  using the specified  comparator  function  such as  d3 ascending  https   github com d3 d3 array ascending  or  d3 descending  https   github com d3 d3 array descending   If no comparator is specified for the current key  the order in which keys will be returned is undefined  For example  to sort years in ascending order and varieties in descending order      js var entries   d3 nest        key function d    return d year     sortKeys d3 ascending       key function d    return d variety     sortKeys d3 descending       entries yields        Note that this only affects the result of   nest  entries   nest entries   the order of keys returned by   nest  map   nest map  and   nest  object   nest object  is always undefined  regardless of comparator    a name  nest sortValues  href   nest sortValues     a   i nest  i   b sortValues  b   i comparator  i        https   github com d3 d3 collection blob master src nest js L6  Source    Sorts leaf elements using the specified  comparator  function  such as  d3 ascending  https   github com d3 d3 array ascending  or  d3 descending  https   github com d3 d3 array descending   This is roughly equivalent to sorting the input array before applying the nest operator  however it is typically more efficient as the size of each group is smaller  If no value comparator is specified  elements will be returned in the order they appeared in the input array  This applies to   nest  map   nest map     nest  entries   nest entries  and   nest  object   nest object     a name  nest rollup  href   nest rollup     a   i nest  i   b rollup  b   i function  i        https   github com d3 d3 collection blob master src nest js L7  Source    Specifies a rollup  function  to be applied on each group of leaf elements  The return value of the rollup function will replace the array of leaf values in either the associative array returned by   nest  map   nest map  or   nest  object   nest object   for   nest  entries   nest entries   it replaces the leaf  entry  values with  entry  value  If a  leaf comparator   nest sortValues  is specified  the leaf elements are sorted prior to invoking the rollup function    a name  nest map  href   nest map     a   i nest  i   b map  b   i array  i        https   github com d3 d3 collection blob master src nest js L50  Source    Applies the nest operator to the specified  array   returning a nested  map   map   Each entry in the returned map corresponds to a distinct key value returned by the first key function  The entry value depends on the number of registered key functions  if there is an additional key  the value is another map  otherwise  the value is the array of elements filtered from the input  array  that have the given key value  If no keys are defined  returns the input  array     a name  nest object  href   nest object     a   i nest  i   b object  b   i array  i        https   github com d3 d3 collection blob master src nest js L49  Source    Applies the nest operator to the specified  array   returning a nested object  Each entry in the returned associative array corresponds to a distinct key value returned by the first key function  The entry value depends on the number of registered key functions  if there is an additional key  the value is another associative array  otherwise  the value is the array of elements filtered from the input  array  that have the given key value   Note  this method is unsafe if any of the keys conflict with built in JavaScript properties  such as    proto     If you cannot guarantee that the keys will be safe  you should use  nest map   nest map  instead    a name  nest entries  href   nest entries     a   i nest  i   b entries  b   i array  i        https   github com d3 d3 collection blob master src nest js L51  Source    Applies the nest operator to the specified  array   returning an array of key values entries  Conceptually  this is similar to applying   map  entries   map entries  to the associative array returned by   nest  map   nest map   but it applies to every level of the hierarchy rather than just the first  outermost  level  Each entry in the returned array corresponds to a distinct key value returned by the first key function  The entry value depends on the number of registered key functions  if there is an additional key  the value is another nested array of entries  otherwise  the value is the array of elements filtered from the input  array  that have the given key value  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-collection"},{"name":"d3/d3-transition","artist":"specifi, return, select, current, element","id":29,"playcount":36598,"description":"d3/d3-transition specifi, return, select, current, element   d3 transition  A transition is a  selection  https   github com d3 d3 selection  like interface for animating changes to the DOM  Instead of applying changes instantaneously  transitions smoothly interpolate the DOM from its current state to the desired target state over a given duration   To apply a transition  select elements  call   selection  transition   selection transition   and then make the desired changes  For example      js d3 select  body      transition        style  background color    red         Transitions support most selection methods  such as   transition  attr   transition attr  and   transition  style   transition style  in place of   selection  attr  https   github com d3 d3 selection selection attr  and   selection  style  https   github com d3 d3 selection selection style    but not all methods are supported  for example  you must  append  https   github com d3 d3 selection selection append  elements or  bind data  https   github com d3 d3 selection joining data  before a transition starts  A   transition  remove   transition remove  operator is provided for convenient removal of elements when the transition ends   To compute intermediate state  transitions leverage a variety of  built in interpolators  https   github com d3 d3 interpolate    Colors  https   github com d3 d3 interpolate interpolateRgb    numbers  https   github com d3 d3 interpolate interpolateNumber   and  transforms  https   github com d3 d3 interpolate interpolateTransform  are automatically detected   Strings  https   github com d3 d3 interpolate interpolateString  with embedded numbers are also detected  as is common with many styles  such as padding or font sizes  and paths  To specify a custom interpolator  use   transition  attrTween   transition attrTween     transition  styleTween   transition styleTween  or   transition  tween   transition tween       Installing  If you use NPM   npm install d3 transition   Otherwise  download the  latest release  https   github com d3 d3 transition releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 transition v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 dispatch v1 min js    script   script src  https   d3js org d3 ease v1 min js    script   script src  https   d3js org d3 interpolate v1 min js    script   script src  https   d3js org d3 selection v1 min js    script   script src  https   d3js org d3 timer v1 min js    script   script src  https   d3js org d3 transition v1 min js    script   script   var transition   d3 transition       script        Try d3 transition in your browser   https   tonicdev com npm d3 transition      API Reference     Selecting Elements   selecting elements     Modifying Elements   modifying elements     Timing   timing     Control Flow   control flow     The Life of a Transition   the life of a transition       Selecting Elements  Transitions are derived from  selections  https   github com d3 d3 selection  via   selection  transition   selection transition   You can also create a transition on the document root element using  d3 transition   transition     a name  selection transition  href   selection transition     a   i selection  i   b transition  b    i name  i         https   github com d3 d3 transition blob master src selection transition js  Source    Returns a new transition on the given  selection  with the specified  name   If a  name  is not specified  null is used  The new transition is only exclusive with other transitions of the same name   If the  name  is a  transition   transition  instance  the returned transition has the same id and name as the specified transition  If a transition with the same id already exists on a selected element  the existing transition is returned for that element  Otherwise  the timing of the returned transition is inherited from the existing transition of the same id on the nearest ancestor of each selected element  Thus  this method can be used to synchronize a transition across multiple selections  or to re select a transition for specific elements and modify its configuration  For example      js var t   d3 transition        duration 750       ease d3 easeLinear    d3 selectAll   apple   transition t       style  fill    red     d3 selectAll   orange   transition t       style  fill    orange         If the specified  transition  is not found on a selected node or its ancestors  such as if the transition  already ended   the life of a transition    the default timing parameters are used  however  in a future release  this will likely be changed to throw an error  See   59  https   github com d3 d3 transition issues 59     a name  selection interrupt  href   selection interrupt     a   i selection  i   b interrupt  b    i name  i         https   github com d3 d3 transition blob master src selection interrupt js  Source    Interrupts the active transition of the specified  name  on the selected elements  and cancels any pending transitions with the specified  name   if any  If a name is not specified  null is used   Interrupting a transition on an element has no effect on any transitions on any descendant elements  For example  an  axis transition  https   github com d3 d3 axis  consists of multiple independent  synchronized transitions on the descendants of the axis  G element  https   www w3 org TR SVG struct html Groups   the tick lines  the tick labels  the domain path   etc     To interrupt the axis transition  you must therefore interrupt the descendants      js selection selectAll      interrupt         The  universal selector  https   developer mozilla org en US docs Web CSS Universal selectors        selects all descendant elements  If you also want to interrupt the G element itself      js selection interrupt   selectAll      interrupt          a name  interrupt  href   interrupt     a  d3  b interrupt  b   i node  i     i name  i         https   github com d3 d3 transition blob master src interrupt js  Source    Interrupts the active transition of the specified  name  on the specified  node   and cancels any pending transitions with the specified  name   if any  If a name is not specified  null is used  See also   selection  interrupt   selection interrupt     a name  transition  href   transition     a  d3  b transition  b    i name  i         https   github com d3 d3 transition blob master src transition index js L29  Source    Returns a new transition on the root element   document documentElement   with the specified  name   If a  name  is not specified  null is used  The new transition is only exclusive with other transitions of the same name  The  name  may also be a  transition   transition  instance  see   selection  transition   selection transition   This method is equivalent to      js d3 selection      transition name       This function can also be used to test for transitions   instanceof d3 transition   or to extend the transition prototype    a name  transition select  href   transition select     a   i transition  i   b select  b   i selector  i        https   github com d3 d3 transition blob master src transition select js  Source    For each selected element  selects the first descendant element that matches the specified  selector  string  if any  and returns a transition on the resulting selection  The  selector  may be specified either as a selector string or a function  If a function  it is evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The new transition has the same id  name and timing as this transition  however  if a transition with the same id already exists on a selected element  the existing transition is returned for that element   This method is equivalent to deriving the selection for this transition via   transition  selection   transition selection   creating a subselection via   selection  select  https   github com d3 d3 selection selection select   and then creating a new transition via   selection  transition   selection transition       js transition    selection      select selector     transition transition        a name  transition selectAll  href   transition selectAll     a   i transition  i   b selectAll  b   i selector  i        https   github com d3 d3 transition blob master src transition selectAll js  Source    For each selected element  selects all descendant elements that match the specified  selector  string  if any  and returns a transition on the resulting selection  The  selector  may be specified either as a selector string or a function  If a function  it is evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The new transition has the same id  name and timing as this transition  however  if a transition with the same id already exists on a selected element  the existing transition is returned for that element   This method is equivalent to deriving the selection for this transition via   transition  selection   transition selection   creating a subselection via   selection  selectAll  https   github com d3 d3 selection selection selectAll   and then creating a new transition via   selection  transition   selection transition       js transition    selection      selectAll selector     transition transition        a name  transition filter  href   transition filter     a   i transition  i   b filter  b   i filter  i        https   github com d3 d3 transition blob master src transition filter js  Source    For each selected element  selects only the elements that match the specified  filter   and returns a transition on the resulting selection  The  filter  may be specified either as a selector string or a function  If a function  it is evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The new transition has the same id  name and timing as this transition  however  if a transition with the same id already exists on a selected element  the existing transition is returned for that element   This method is equivalent to deriving the selection for this transition via   transition  selection   transition selection   creating a subselection via   selection  filter  https   github com d3 d3 selection selection filter   and then creating a new transition via   selection  transition   selection transition       js transition    selection      filter filter     transition transition        a name  transition merge  href   transition merge     a   i transition  i   b merge  b   i other  i        https   github com d3 d3 transition blob master src transition merge js  Source    Returns a new transition merging this transition with the specified  other  transition  which must have the same id as this transition  The returned transition has the same number of groups  the same parents  the same name and the same id as this transition  Any missing  null  elements in this transition are filled with the corresponding element  if present  not null   from the  other  transition   This method is equivalent to deriving the selection for this transition via   transition  selection   transition selection   merging with the selection likewise derived from the  other  transition via   selection  merge  https   github com d3 d3 selection selection merge   and then creating a new transition via   selection  transition   selection transition       js transition    selection      merge other selection       transition transition        a name  transition transition  href   transition transition     a   i transition  i   b transition  b         https   github com d3 d3 transition blob master src transition transition js  Source    Returns a new transition on the same selected elements as this transition  scheduled to start when this transition ends  The new transition inherits a reference time equal to this transition s time plus its  delay   transition delay  and  duration   transition duration   The new transition also inherits this transition s name  duration  and  easing   transition ease   This method can be used to schedule a sequence of chained transitions  For example      js d3 selectAll   apple      transition      First fade to green       style  fill    green      transition      Then red       style  fill    red      transition      Wait one second  Then brown  and remove       delay 1000       style  fill    brown        remove         The delay for each transition is relative to its previous transition  Thus  in the above example  apples will stay red for one second before the last transition to brown starts    a name  transition selection  href   transition selection     a   i transition  i   b selection  b         https   github com d3 d3 transition blob master src transition selection js  Source    Returns the  selection  https   github com d3 d3 selection selection  corresponding to this transition    a name  active  href   active     a  d3  b active  b   i node  i     i name  i         https   github com d3 d3 transition blob master src active js  Source    Returns the active transition on the specified  node  with the specified  name   if any  If no  name  is specified  null is used  Returns null if there is no such active transition on the specified node  This method is useful for creating chained transitions  For example  to initiate disco mode      js d3 selectAll  circle   transition        delay function d  i    return i   50          on  start   function repeat             d3 active this               style  fill    red              transition                style  fill    green              transition                style  fill    blue              transition                on  start   repeat                  See  chained transitions  http   bl ocks org mbostock 70d5541b547cc222aa02  for an example       Modifying Elements  After selecting elements and creating a transition with   selection  transition   selection transition   use the transition s transformation methods to affect document content    a name  transition attr  href   transition attr     a   i transition  i   b attr  b   i name  i    i value  i        https   github com d3 d3 transition blob master src transition attr js  Source    For each selected element  assigns the  attribute tween   transition attrTween  for the attribute with the specified  name  to the specified target  value   The starting value of the tween is the attribute s value when the transition starts  The target  value  may be specified either as a constant or a function  If a function  it is immediately evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element   If the target value is null  the attribute is removed when the transition starts  Otherwise  an interpolator is chosen based on the type of the target value  using the following algorithm   1  If  value  is a number  use  interpolateNumber  https   github com d3 d3 interpolate interpolateNumber   2  If  value  is a  color  https   github com d3 d3 color color  or a string coercible to a color  use  interpolateRgb  https   github com d3 d3 interpolate interpolateRgb   3  Use  interpolateString  https   github com d3 d3 interpolate interpolateString    To apply a different interpolator  use   transition  attrTween   transition attrTween     a name  transition attrTween  href   transition attrTween     a   i transition  i   b attrTween  b   i name  i     i factory  i         https   github com d3 d3 transition blob master src transition attrTween js  Source    If  factory  is specified and not null  assigns the attribute  tween   transition tween  for the attribute with the specified  name  to the specified interpolator  factory   An interpolator factory is a function that returns an  interpolator  https   github com d3 d3 interpolate   when the transition starts  the  factory  is evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The returned interpolator will then be invoked for each frame of the transition  in order  being passed the  eased   transition ease  time  t   typically in the range  0  1   Lastly  the return value of the interpolator will be used to set the attribute value  The interpolator must return a string   To remove an attribute at the start of a transition  use   transition  attr   transition attr   to remove an attribute at the end of a transition  use   transition  on   transition on  to listen for the  end  event    If the specified  factory  is null  removes the previously assigned attribute tween of the specified  name   if any  If  factory  is not specified  returns the current interpolator factory for attribute with the specified  name   or undefined if no such tween exists   For example  to interpolate the fill attribute from red to blue      js transition attrTween  fill   function       return d3 interpolateRgb  red    blue             Or to interpolate from the current fill to blue  like   transition  attr   transition attr       js transition attrTween  fill   function       return d3 interpolateRgb this getAttribute  fill     blue             Or to apply a custom rainbow interpolator      js transition attrTween  fill   function       return function t        return  hsl     t   360     100  50                   This method is useful to specify a custom interpolator  such as one that understands  SVG paths  http   bl ocks org mbostock 3916621   A useful technique is  data interpolation   where  d3 interpolateObject  https   github com d3 d3 interpolate interpolateObject  is used to interpolate two data values  and the resulting value is then used  say  with a  shape  https   github com d3 d3 shape   to compute the new attribute value    a name  transition style  href   transition style     a   i transition  i   b style  b   i name  i    i value  i     i priority  i         https   github com d3 d3 transition blob master src transition style js  Source    For each selected element  assigns the  style tween   transition styleTween  for the style with the specified  name  to the specified target  value  with the specified  priority   The starting value of the tween is the style s inline value if present  and otherwise its computed value  when the transition starts  The target  value  may be specified either as a constant or a function  If a function  it is immediately evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element   If the target value is null  the style is removed when the transition starts  Otherwise  an interpolator is chosen based on the type of the target value  using the following algorithm   1  If  value  is a number  use  interpolateNumber  https   github com d3 d3 interpolate interpolateNumber   2  If  value  is a  color  https   github com d3 d3 color color  or a string coercible to a color  use  interpolateRgb  https   github com d3 d3 interpolate interpolateRgb   3  Use  interpolateString  https   github com d3 d3 interpolate interpolateString    To apply a different interpolator  use   transition  styleTween   transition styleTween     a name  transition styleTween  href   transition styleTween     a   i transition  i   b styleTween  b   i name  i     i factory  i     i priority  i           https   github com d3 d3 transition blob master src transition styleTween js  Source    If  factory  is specified and not null  assigns the style  tween   transition tween  for the style with the specified  name  to the specified interpolator  factory   An interpolator factory is a function that returns an  interpolator  https   github com d3 d3 interpolate   when the transition starts  the  factory  is evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The returned interpolator will then be invoked for each frame of the transition  in order  being passed the  eased   transition ease  time  t   typically in the range  0  1   Lastly  the return value of the interpolator will be used to set the style value with the specified  priority   The interpolator must return a string   To remove an style at the start of a transition  use   transition  style   transition style   to remove an style at the end of a transition  use   transition  on   transition on  to listen for the  end  event    If the specified  factory  is null  removes the previously assigned style tween of the specified  name   if any  If  factory  is not specified  returns the current interpolator factory for style with the specified  name   or undefined if no such tween exists   For example  to interpolate the fill style from red to blue      js transition styleTween  fill   function       return d3 interpolateRgb  red    blue             Or to interpolate from the current fill to blue  like   transition  style   transition style       js transition styleTween  fill   function       return d3 interpolateRgb this style fill   blue             Or to apply a custom rainbow interpolator      js transition styleTween  fill   function       return function t        return  hsl     t   360     100  50                   This method is useful to specify a custom interpolator  such as with  data interpolation   where  d3 interpolateObject  https   github com d3 d3 interpolate interpolateObject  is used to interpolate two data values  and the resulting value is then used to compute the new style value    a name  transition text  href   transition text     a   i transition  i   b text  b   i value  i        https   github com d3 d3 transition blob master src transition text js  Source    For each selected element  sets the  text content  http   www w3 org TR DOM Level 3 Core core html Node3 textContent  to the specified target  value  when the transition starts  The  value  may be specified either as a constant or a function  If a function  it is immediately evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The function s return value is then used to set each element s text content  A null value will clear the content   To interpolate text rather than to set it on start  use   transition  tween   transition tween    for example  http   bl ocks org mbostock 7004f92cac972edef365   or append a replacement element and cross fade opacity   for example  http   bl ocks org mbostock f7dcecb19c4af317e464    Text is not interpolated by default because it is usually undesirable    a name  transition remove  href   transition remove     a   i transition  i   b remove  b         https   github com d3 d3 transition blob master src transition remove js  Source    For each selected element   removes  https   github com d3 d3 selection selection remove  the element when the transition ends  as long as the element has no other active or pending transitions  If the element has other active or pending transitions  does nothing    a name  transition tween  href   transition tween     a   i transition  i   b tween  b   i name  i     i value  i         https   github com d3 d3 transition blob master src transition tween js  Source    For each selected element  assigns the tween with the specified  name  with the specified  value  function  The  value  must be specified as a function that returns a function  When the transition starts  the  value  function is evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The returned function is then invoked for each frame of the transition  in order  being passed the  eased   transition ease  time  t   typically in the range  0  1   If the specified  value  is null  removes the previously assigned tween of the specified  name   if any   For example  to interpolate the fill attribute to blue  like   transition  attr   transition attr       js transition tween  attr fill   function       var node   this  i   d3 interpolateRgb node getAttribute  fill     blue      return function t        node setAttribute  fill   i t                  This method is useful to specify a custom interpolator  or to perform side effects  say to animate the  scroll offset  http   bl ocks org mbostock 1649463        Timing  The  easing   transition ease    delay   transition delay  and  duration   transition duration  of a transition is configurable  For example  a per element delay can be used to  stagger the reordering  http   bl ocks org mbostock 3885705  of elements  improving perception  See  Animated Transitions in Statistical Data Graphics  http   vis berkeley edu papers animated transitions   for recommendations    a name  transition delay  href   transition delay     a   i transition  i   b delay  b    i value  i         https   github com d3 d3 transition blob master src transition delay js  Source    For each selected element  sets the transition delay to the specified  value  in milliseconds  The  value  may be specified either as a constant or a function  If a function  it is immediately evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The function s return value is then used to set each element s transition delay  If a delay is not specified  it defaults to zero   If a  value  is not specified  returns the current value of the delay for the first  non null  element in the transition  This is generally useful only if you know that the transition contains exactly one element   Setting the delay to a multiple of the index  i  is a convenient way to stagger transitions across a set of elements  For example      js transition delay function d  i    return i   10           Of course  you can also compute the delay as a function of the data  or  sort the selection  https   github com d3 d3 selection selection sort  before computed an index based delay    a name  transition duration  href   transition duration     a   i transition  i   b duration  b    i value  i         https   github com d3 d3 transition blob master src transition duration js  Source    For each selected element  sets the transition duration to the specified  value  in milliseconds  The  value  may be specified either as a constant or a function  If a function  it is immediately evaluated for each selected element  in order  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  The function s return value is then used to set each element s transition duration  If a duration is not specified  it defaults to 250ms   If a  value  is not specified  returns the current value of the duration for the first  non null  element in the transition  This is generally useful only if you know that the transition contains exactly one element    a name  transition ease  href   transition ease     a   i transition  i   b ease  b    i value  i         https   github com d3 d3 transition blob master src transition ease js  Source    Specifies the transition  easing function  https   github com d3 d3 ease  for all selected elements  The  value  must be specified as a function  The easing function is invoked for each frame of the animation  being passed the normalized time  t  in the range  0  1   it must then return the eased time  t   which is typically also in the range  0  1   A good easing function should return 0 if  t    0 and 1 if  t    1  If an easing function is not specified  it defaults to  d3 easeCubic  https   github com d3 d3 ease easeCubic    If a  value  is not specified  returns the current easing function for the first  non null  element in the transition  This is generally useful only if you know that the transition contains exactly one element       Control Flow  For advanced usage  transitions provide methods for custom control flow    a name  transition on  href   transition on     a   i transition  i   b on  b   i typenames  i     i listener  i         https   github com d3 d3 transition blob master src transition on js  Source    Adds or removes a  listener  to each selected element for the specified event  typenames   The  typenames  is one of the following string event types      start    when the transition starts     end    when the transition ends     interrupt    when the transition is interrupted   See  The Life of a Transition   the life of a transition  for more  Note that these are  not  native DOM events as implemented by   selection  on  https   github com d3 d3 selection selection on  and   selection  dispatch  https   github com d3 d3 selection selection dispatch   but transition events   The type may be optionally followed by a period       and a name  the optional name allows multiple callbacks to be registered to receive events of the same type  such as  start foo  and  start bar   To specify multiple typenames  separate typenames with spaces  such as  interrupt end  or  start foo start bar    When a specified transition event is dispatched on a selected node  the specified  listener  will be invoked for the transitioning element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element  Listeners always see the latest datum for their element  but the index is a property of the selection and is fixed when the listener is assigned  to update the index  re assign the listener   If an event listener was previously registered for the same  typename  on a selected element  the old listener is removed before the new listener is added  To remove a listener  pass null as the  listener   To remove all listeners for a given name  pass null as the  listener  and   foo  as the  typename   where  foo  is the name  to remove all listeners with no name  specify     as the  typename    If a  listener  is not specified  returns the currently assigned listener for the specified event  typename  on the first  non null  selected element  if any  If multiple typenames are specified  the first matching listener is returned    a name  transition each  href   transition each     a   i transition  i   b each  b   i function  i        https   github com d3 d3 selection blob master src selection each js  Source    Invokes the specified  function  for each selected element  passing in the current datum  d  and index  i   with the  this  context of the current DOM element  This method can be used to invoke arbitrary code for each selected element  and is useful for creating a context to access parent and child data simultaneously  Equivalent to   selection  each  https   github com d3 d3 selection selection each     a name  transition call  href   transition call     a   i transition  i   b call  b   i function  i     i arguments   i         https   github com d3 d3 selection blob master src selection call js  Source    Invokes the specified  function  exactly once  passing in this transition along with any optional  arguments   Returns this transition  This is equivalent to invoking the function by hand but facilitates method chaining  For example  to set several attributes in a reusable function      js function color transition  fill  stroke      transition        style  fill   fill         style  stroke   stroke          Now say      js d3 selectAll  div   transition   call color   red    blue         This is equivalent to      js color d3 selectAll  div   transition     red    blue         Equivalent to   selection  call  https   github com d3 d3 selection selection call     a name  transition empty  href   transition empty     a   i transition  i   b empty  b         https   github com d3 d3 selection blob master src selection empty js  Source    Returns true if this transition contains no  non null  elements  Equivalent to   selection  empty  https   github com d3 d3 selection selection empty     a name  transition nodes  href   transition nodes     a   i transition  i   b nodes  b         https   github com d3 d3 selection blob master src selection nodes js  Source    Returns an array of all  non null  elements in this transition  Equivalent to   selection  nodes  https   github com d3 d3 selection selection nodes     a name  transition node  href   transition node     a   i transition  i   b node  b         https   github com d3 d3 selection blob master src selection node js  Source    Returns the first  non null  element in this transition  If the transition is empty  returns null  Equivalent to   selection  node  https   github com d3 d3 selection selection node     a name  transition size  href   transition size     a   i transition  i   b size  b         https   github com d3 d3 selection blob master src selection size js  Source    Returns the total number of elements in this transition  Equivalent to   selection  size  https   github com d3 d3 selection selection size        The Life of a Transition  Immediately after creating a transition  such as by   selection  transition   selection transition  or   transition  transition   transition transition   you may configure the transition using methods such as   transition  delay   transition delay     transition  duration   transition duration     transition  attr   transition attr  and   transition  style   transition style   Methods that specify target values  such as  transition  attr  are evaluated synchronously  however  methods that require the starting value for interpolation  such as   transition  attrTween   transition attrTween  and   transition  styleTween   transition styleTween   must be deferred until the transition starts   Shortly after creation  either at the end of the current frame or during the next frame  the transition is scheduled  At this point  the delay and  start  event listeners may no longer be changed  attempting to do so throws an error with the message  too late  already scheduled   or if the transition has ended   transition not found     When the transition subsequently starts  it interrupts the active transition of the same name on the same element  if any  dispatching an  interrupt  event to registered listeners   Note that interrupts happen on start  not creation  and thus even a zero delay transition will not immediately interrupt the active transition  the old transition is given a final frame  Use   selection  interrupt   selection interrupt  to interrupt immediately   The starting transition also cancels any pending transitions of the same name on the same element that were created before the starting transition  The transition then dispatches a  start  event to registered listeners  This is the last moment at which the transition may be modified  after starting  the transition s timing  tweens  and listeners may no longer be changed  attempting to do so throws an error with the message  too late  already started   or if the transition has ended   transition not found    The transition initializes its tweens immediately after starting   During the frame the transition starts  but  after  all transitions starting this frame have been started  the transition invokes its tweens for the first time  Batching tween initialization  which typically involves reading from the DOM  improves performance by avoiding interleaved DOM reads and writes   For each frame that a transition is active  it invokes its tweens with an  eased   transition ease   t  value ranging from 0 to 1  Within each frame  the transition invokes its tweens in the order they were registered   When a transition ends  it invokes its tweens a final time with a  non eased   t  value of 1  It then dispatches an  end  event to registered listeners  This is the last moment at which the transition may be inspected  after ending  the transition is deleted from the element  and its configuration is destroyed   A transition s configuration is also destroyed on interrupt or cancel   Attempting to inspect a transition after it is destroyed throws an error with the message  transition not found   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-transition"},{"name":"d3/d3-fetch","artist":"return, specifi, sourc, array, valu","id":30,"playcount":6581,"description":"d3/d3-fetch return, specifi, sourc, array, valu   d3 fetch  This module provides convenient parsing on top of  Fetch  https   fetch spec whatwg org    For example  to load a text file      js d3 text   path to file txt   then function text      console log text      Hello  world           To load and parse a CSV file      js d3 csv   path to file csv   then function data      console log data         Hello    world                This module has built in support for parsing  JSON   json    CSV   csv   and  TSV   tsv   You can parse additional formats by using  text   text  directly   This module replaced  d3 request  https   github com d3 d3 request        Installing  If you use NPM   npm install d3 fetch   Otherwise  download the  latest release  https   github com d3 d3 fetch releases latest   You can also load directly from  d3js org  https   d3js org  as a  standalone library  https   d3js org d3 fetch v1 min js   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 dsv v1 min js    script   script src  https   d3js org d3 fetch v1 min js    script   script   d3 csv   path to file csv   then function data      console log data         Hello    world              script          API Reference   a name  blob  href   blob     a  d3  b blob  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src blob js  Source    Fetches the binary file at the specified  input  URL as a Blob  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields    a name  buffer  href   buffer     a  d3  b buffer  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src buffer js  Source    Fetches the binary file at the specified  input  URL as an ArrayBuffer  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields    a name  csv  href   csv     a  d3  b csv  b   i input  i     i init  i      i row  i         https   github com d3 d3 fetch blob master src dsv js  Source    Equivalent to  d3 dsv   dsv  with the comma character as the delimiter    a name  dsv  href   dsv     a  d3  b dsv  b   i delimiter  i    i input  i     i init  i      i row  i         https   github com d3 d3 fetch blob master src dsv js  Source    Fetches the  DSV  https   github com d3 d3 dsv  file at the specified  input  URL  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields  An optional  row  conversion function may be specified to map and filter row objects to a more specific representation  see   dsv  parse  https   github com d3 d3 dsv dsv parse  for details  For example      js d3 dsv       test csv   function d      return       year  new Date  d Year  0  1      convert  Year  column to Date     make  d Make      model  d Model      length   d Length    convert  Length  column to number         then function data      console log data            If only one of  init  and  row  is specified  it is interpreted as the  row  conversion function if it is a function  and otherwise an  init  object   See also  d3 csv   csv  and  d3 tsv   tsv     a name  html  href   html     a  d3  b html  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src xml js  Source    Fetches the file at the specified  input  URL as  text   text  and then  parses it  https   developer mozilla org docs Web API DOMParser  as HTML  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields    a name  image  href   image     a  d3  b image  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src image js  Source    Fetches the image at the specified  input  URL  If  init  is specified  sets any additional properties on the image before loading  For example  to enable an anonymous  cross origin request  https   developer mozilla org en US docs Web HTML CORS enabled image       js d3 image  https   example com test png    crossOrigin   anonymous    then function img      console log img             a name  json  href   json     a  d3  b json  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src json js  Source    Fetches the  JSON  http   json org  file at the specified  input  URL  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields    a name  svg  href   svg     a  d3  b svg  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src xml js  Source    Fetches the file at the specified  input  URL as  text   text  and then  parses it  https   developer mozilla org docs Web API DOMParser  as SVG  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields    a name  text  href   text     a  d3  b text  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src text js  Source    Fetches the text file at the specified  input  URL  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields    a name  tsv  href   tsv     a  d3  b tsv  b   i input  i     i init  i      i row  i         https   github com d3 d3 fetch blob master src dsv js  Source    Equivalent to  d3 dsv   dsv  with the tab character as the delimiter    a name  xml  href   xml     a  d3  b xml  b   i input  i     i init  i         https   github com d3 d3 fetch blob master src xml js  Source    Fetches the file at the specified  input  URL as  text   text  and then  parses it  https   developer mozilla org docs Web API DOMParser  as XML  If  init  is specified  it is passed along to the underlying call to  fetch  https   fetch spec whatwg org  fetch method   see  RequestInit  https   fetch spec whatwg org  requestinit  for allowed fields  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-fetch"},{"name":"d3/d3-3.x-api-reference","artist":"specifi, return, select, current, element","id":31,"playcount":428,"description":"d3/d3-3.x-api-reference specifi, return, select, current, element   D3 3 x API Reference  This is an archive of the  D3 3 x API Reference  https   github com d3 d3 3 x api reference blob master API Reference md  from the  D3 wiki  https   github com d3 d3 wiki   It also includes the guide to  Upgrading to 3 0  https   github com d3 d3 3 x api reference blob master Upgrading to 3 0 md    For the current version of D3  see the  D3 API Reference  https   github com d3 d3 blob master API md   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-3.x-api-reference"},{"name":"d3/d3-timer","artist":"specifi, return, select, current, element","id":32,"playcount":6005,"description":"d3/d3-timer specifi, return, select, current, element   d3 timer  This module provides an efficient queue capable of managing thousands of concurrent animations  while guaranteeing consistent  synchronized timing with concurrent or staged animations  Internally  it uses  requestAnimationFrame  https   developer mozilla org en US docs Web API window requestAnimationFrame  for fluid animation  if available   switching to  setTimeout  https   developer mozilla org en US docs Web API WindowTimers setTimeout  for delays longer than 24ms      Installing  If you use NPM   npm install d3 timer   Otherwise  download the  latest release  https   github com d3 d3 timer releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 timer v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 timer v1 min js    script   script   var timer   d3 timer callback      script        Try d3 timer in your browser   https   tonicdev com npm d3 timer      API Reference   a name  now  href   now     a  d3  b now  b         https   github com d3 d3 timer blob master src timer js L15  Source    Returns the current time as defined by  performance now  https   developer mozilla org en US docs Web API Performance now  if available  and  Date now  https   developer mozilla org en US docs JavaScript Reference Global Objects Date now  if not  The current time is updated at the start of a frame  it is thus consistent during the frame  and any timers scheduled during the same frame will be synchronized  If this method is called outside of a frame  such as in response to a user event  the current time is calculated and then fixed until the next frame  again ensuring consistent timing during event handling    a name  timer  href   timer     a  d3  b timer  b   i callback  i     i delay  i     i time  i          https   github com d3 d3 timer blob master src timer js L52  Source    Schedules a new timer  invoking the specified  callback  repeatedly until the timer is  stopped   timer stop   An optional numeric  delay  in milliseconds may be specified to invoke the given  callback  after a delay  if  delay  is not specified  it defaults to zero  The delay is relative to the specified  time  in milliseconds  if  time  is not specified  it defaults to  now   now    The  callback  is passed the  apparent   elapsed  time since the timer became active  For example      js var t   d3 timer function elapsed      console log elapsed     if  elapsed   200  t stop       150        This produces roughly the following console output       3 25 48 65 85 106 125 146 167 189 209       The exact values may vary depending on your JavaScript runtime and what else your computer is doing   Note that the first  elapsed  time is 3ms  this is the elapsed time since the timer started  not since the timer was scheduled  Here the timer started 150ms after it was scheduled due to the specified delay  The apparent  elapsed  time may be less than the true  elapsed  time if the page is backgrounded and  requestAnimationFrame  https   developer mozilla org en US docs Web API window requestAnimationFrame  is paused  in the background  apparent time is frozen   If  timer   timer  is called within the callback of another timer  the new timer callback  if eligible as determined by the specified  delay  and  time   will be invoked immediately at the end of the current frame  rather than waiting until the next frame  Within a frame  timer callbacks are guaranteed to be invoked in the order they were scheduled  regardless of their start time    a name  timer restart  href   timer restart     a   i timer  i   b restart  b   i callback  i     i delay  i     i time  i          https   github com d3 d3 timer blob master src timer js L31  Source    Restart a timer with the specified  callback  and optional  delay  and  time   This is equivalent to stopping this timer and creating a new timer with the specified arguments  although this timer retains the original invocation priority    a name  timer stop  href   timer stop     a   i timer  i   b stop  b         https   github com d3 d3 timer blob master src timer js L43  Source    Stops this timer  preventing subsequent callbacks  This method has no effect if the timer has already stopped    a name  timerFlush  href   timerFlush     a  d3  b timerFlush  b         https   github com d3 d3 timer blob master src timer js L58  Source    Immediately invoke any eligible timer callbacks  Note that zero delay timers are normally first executed after one frame   17ms   This can cause a brief flicker because the browser renders the page twice  once at the end of the first event loop  then again immediately on the first timer callback  By flushing the timer queue at the end of the first event loop  you can run any zero delay timers immediately and avoid the flicker    a name  timeout  href   timeout     a  d3  b timeout  b   i callback  i     i delay  i     i time  i          https   github com d3 d3 timer blob master src timeout js  Source    Like  timer   timer   except the timer automatically  stops   timer stop  on its first callback  A suitable replacement for  setTimeout  https   developer mozilla org en US docs Web API WindowTimers setTimeout  that is guaranteed to not run in the background  The  callback  is passed the elapsed time    a name  interval  href   interval     a  d3  b interval  b   i callback  i     i delay  i     i time  i          https   github com d3 d3 timer blob master src interval js  Source    Like  timer   timer   except the  callback  is invoked only every  delay  milliseconds  if  delay  is not specified  this is equivalent to  timer   timer   A suitable replacement for  setInterval  https   developer mozilla org en US docs Web API WindowTimers setInterval  that is guaranteed to not run in the background  The  callback  is passed the elapsed time  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-timer"},{"name":"d3/d3","artist":"color, specifi, return, valu, space","id":33,"playcount":2293,"description":"d3/d3 color, specifi, return, valu, space   D3  Data Driven Documents   a href  https   d3js org   img src  https   d3js org logo svg  align  left  hspace  10  vspace  6    a     D3    or   D3 js    is a JavaScript library for visualizing data using web standards  D3 helps you bring data to life using SVG  Canvas and HTML  D3 combines powerful visualization and interaction techniques with a data driven approach to DOM manipulation  giving you the full capabilities of modern browsers and the freedom to design the right visual interface for your data      Resources     API Reference  https   github com d3 d3 blob master API md     Release Notes  https   github com d3 d3 releases     Gallery  https   github com d3 d3 wiki Gallery     Examples  https   bl ocks org mbostock     Wiki  https   github com d3 d3 wiki      Installing  If you use npm   npm install d3   Otherwise  download the  latest release  https   github com d3 d3 releases latest   The released bundle supports anonymous AMD  CommonJS  and vanilla environments  You can load directly from  d3js org  https   d3js org    CDNJS  https   cdnjs com libraries d3   or  unpkg  https   unpkg com d3    For example      html  script src  https   d3js org d3 v5 js    script       For the minified version      html  script src  https   d3js org d3 v5 min js    script       You can also use the standalone D3 microlibraries  For example   d3 selection  https   github com d3 d3 selection       html  script src  https   d3js org d3 selection v1 js    script       D3 is written using  ES2015 modules  http   www 2ality com 2014 09 es6 modules final html   Create a  custom bundle using Rollup  https   bl ocks org mbostock bb09af4c39c79cffcde4   Webpack  or your preferred bundler  To import D3 into an ES2015 application  either import specific symbols from specific D3 modules      js import  scaleLinear  from  d3 scale        Or import everything into a namespace  here   d3        js import   as d3 from  d3        In Node      js var d3   require  d3         You can also require individual modules and combine them into a  d3  object using  Object assign  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Object assign       js var d3   Object assign     require  d3 format    require  d3 geo    require  d3 geo projection         ","software":"md","book":"d3","full_link":"https://github.com/d3/d3"},{"name":"d3/d3-selection-multi","artist":"specifi, return, select, current, element","id":34,"playcount":8196,"description":"d3/d3-selection-multi specifi, return, select, current, element   d3 selection multi  This module adds multi value syntax to  selections  https   github com d3 d3 selection  and  transitions  https   github com d3 d3 transition   allowing you to set multiple attributes  styles or properties simultaneously with more concise syntax  For example      js d3 select  body   append  div        attrs         title   A cheery  timeless greeting          class   greeting              text  Hello  world          This is equivalent to      js d3 select  body   append  div        attr  title    A cheery  timeless greeting         attr  class    greeting        text  Hello  world          Like   selection  attr  https   github com d3 d3 selection selection attr   the values in the multi value object can be functions of data      js d3 select  body   append  div        attrs         title  function d    return d title           id  function d  i    return  id     i                  Alternatively  you can pass a function which returns an object  allowing you to share some computational effort across multiple attributes  or to determine which attribute to set dynamically      js d3 select  body   append  div        attrs function d  i    return  title  d title  id   id     i            This module is not included in the  default D3 bundle  https   github com d3 d3  for parsimony s sake  the single value methods such as   selection  attr  https   github com d3 d3 selection selection attr  are recommended for most users  as there is little benefit to the shorter syntax provided by these convenience method      Installing  If you use NPM   npm install d3 selection multi   Otherwise  download the  latest release  https   github com d3 d3 selection multi releases latest  or load directly from  d3js org  https   d3js org  as a  standalone library  https   d3js org d3 selection multi v1 min js   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 dispatch v1 min js    script   script src  https   d3js org d3 ease v1 min js    script   script src  https   d3js org d3 interpolate v1 min js    script   script src  https   d3js org d3 selection v1 min js    script   script src  https   d3js org d3 timer v1 min js    script   script src  https   d3js org d3 transition v1 min js    script   script src  https   d3js org d3 selection multi v1 min js    script   script   var div   d3 selectAll  div        attrs  title   Hello  world          styles   color    red        script       Or  in combination with the  D3 default bundle  https   github com d3 d3       html  script src  https   d3js org d3 v4 min js    script   script src  https   d3js org d3 selection multi v1 min js    script   script   var div   d3 selectAll  div        attrs  title   Hello  world          styles   color    red        script        Try d3 selection multi in your browser   https   tonicdev com npm d3 selection multi      API Reference   a name  selection attrs  href   selection attrs     a   i selection  i   b attrs  b   i values  i    A convenience method on top of   selection  attr  https   github com d3 d3 selection selection attr  for setting multiple attributes  If the specified  values  is an object  the values may be specified either as strings or functions  For example      js selection attrs  foo   foo value   bar  function d    return d bar            If a value is a constant  all elements are given the same attribute value  otherwise  if a value is a function  the function is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element  The function s return value is then used to set each element s attribute  A null value will remove the specified attribute   If the specified  values  is a function  the function is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element  The function s return value must be an object with string values  which are then used to set attributes on the current element  For example      js selection attrs function d    return  foo   foo value   bar  d bar            Passing a function to  selection  attrs is convenient for sharing some computational effort or state across multiple attributes  or for specifying dynamically which attributes to set    a name  selection styles  href   selection styles     a   i selection  i   b styles  b   i values  i     i priority  i     A convenience method on top of   selection  style  https   github com d3 d3 selection selection style  for setting multiple style properties  If the specified  values  is an object  the values may be specified either as strings or functions  For example      js selection styles  fill   red   stroke  function d    return d stroke            If a value is a constant  all elements are given the same style property value  otherwise  if a value is a function  the function is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element  The function s return value is then used to set each element s style properties  A null value will remove the specified style properties   If the specified  values  is a function  the function is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element  The function s return value must be an object with string values  which are then used to set style properties on the current element  For example      js selection styles function d    return  fill   red   stroke  d stroke            Passing a function to  selection  styles is convenient for sharing some computational effort or state across multiple style properties  or for specifying dynamically which style properties to set    a name  selection properties  href   selection properties     a   i selection  i   b properties  b   i values  i    A convenience method on top of   selection  property  https   github com d3 d3 selection selection property  for setting multiple element properties  If the specified  values  is an object  the values may be specified either as strings or functions  For example      js selection properties  foo   foo value   id  function d  i    return  id     i            If a value is a constant  all elements are given the same property value  otherwise  if a value is a function  the function is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element  The function s return value is then used to set each element s properties  A null value will remove the specified properties   If the specified  values  is a function  the function is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element  The function s return value must be an object with string values  which are then used to set properties on the current element  For example      js selection properties function d  i    return  foo   foo value   id   id     i            Passing a function to  selection  properties is convenient for sharing some computational effort or state across multiple properties  or for specifying dynamically which properties to set    a name  transition attrs  href   transition attrs     a   i transition  i   b attrs  b   i values  i    Like   selection  attrs   selection attrs   but for   transition  attr  https   github com d3 d3 transition transition attr     a name  transition styles  href   transition styles     a   i transition  i   b styles  b   i values  i     i priority  i     Like   selection  styles   selection styles   but for   transition  style  https   github com d3 d3 transition transition style   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-selection-multi"},{"name":"d3/d3-chord","artist":"return, specifi, sourc, array, valu","id":35,"playcount":11185,"description":"d3/d3-chord return, specifi, sourc, array, valu   d3 chord  Visualize relationships or network flow with an aesthetically pleasing circular layout     img alt  Chord Diagram  src  https   raw githubusercontent com d3 d3 chord master img chord png  width  480  height  480    http   bl ocks org mbostock 4062006      Installing  If you use NPM   npm install d3 chord   Otherwise  download the  latest release  https   github com d3 d3 chord releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 chord v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 array v1 min js    script   script src  https   d3js org d3 path v1 min js    script   script src  https   d3js org d3 chord v1 min js    script   script   var chord   d3 chord       script        Try d3 chord in your browser   https   tonicdev com npm d3 chord      API Reference   a href   chord  name  chord     a  d3  b chord  b         https   github com d3 d3 chord blob master src chord js  Source    Constructs a new chord layout with the default settings    a href    chord  name   chord     a   i chord  i   i matrix  i        https   github com d3 d3 chord blob master src chord js L19  Source    Computes the chord layout for the specified square  matrix  of size  n   n   where the  matrix  represents the directed flow amongst a network  a complete digraph  of  n  nodes  The given  matrix  must be an array of length  n   where each element  matrix   i   is an array of  n  numbers  where each  matrix   i    j   represents the flow from the  i th node in the network to the  j th node  Each number  matrix   i    j   must be nonnegative  though it can be zero if there is no flow from node  i  to node  j   From the  Circos tableviewer example  http   mkweb bcgsc ca circos guide tables        js var matrix        11975   5871  8916  2868       1951  10048  2060  6171       8010  16145  8090  8045       1013    990   940  6907          The return value of  chord   matrix   is an array of  chords   where each chord represents the combined bidirectional flow between two nodes  i  and  j   where  i  may be equal to  j   and is an object with the following properties      source    the source subgroup    target    the target subgroup  Each source and target subgroup is also an object with the following properties      startAngle    the start angle in radians    endAngle    the end angle in radians    value    the flow value  matrix   i    j      index    the node index  i     subindex    the node index  j   The chords are typically passed to  d3 ribbon   ribbon  to display the network relationships  The returned array includes only chord objects for which the value  matrix   i    j   or  matrix   j    i   is non zero  Furthermore  the returned array only contains unique chords  a given chord  ij  represents the bidirectional flow from  i  to  j   and  from  j  to  i   and does not contain a duplicate chord  ji    i  and  j  are chosen such that the chord s source always represents the larger of  matrix   i    j   and  matrix   j    i    In other words   chord  source index equals  chord  target subindex   chord  source subindex equals  chord  target index   chord  source value is greater than or equal to  chord  target value  and  chord  source value is always greater than zero   The  chords  array also defines a secondary array of length  n    chords  groups  where each group represents the combined outflow for node  i   corresponding to the elements  matrix   i   0    n    1   and is an object with the following properties      startAngle    the start angle in radians    endAngle    the end angle in radians    value    the total outgoing flow value for node  i     index    the node index  i   The groups are typically passed to  d3 arc  https   github com d3 d3 shape arc  to produce a donut chart around the circumference of the chord layout    a href   chord padAngle  name   chord padAngle     a   i chord  i   b padAngle  b    i angle  i         https   github com d3 d3 chord blob master src chord js L104  Source    If  angle  is specified  sets the pad angle between adjacent groups to the specified number in radians and returns this chord layout  If  angle  is not specified  returns the current pad angle  which defaults to zero    a href   chord sortGroups  name   chord sortGroups     a   i chord  i   b sortGroups  b    i compare  i         https   github com d3 d3 chord blob master src chord js L108  Source    If  compare  is specified  sets the group comparator to the specified function or null and returns this chord layout  If  compare  is not specified  returns the current group comparator  which defaults to null  If the group comparator is non null  it is used to sort the groups by their total outflow  See also  d3 ascending  https   github com d3 d3 array ascending  and  d3 descending  https   github com d3 d3 array descending     a href   chord sortSubgroups  name   chord sortSubgroups     a   i chord  i   b sortSubgroups  b    i compare  i         https   github com d3 d3 chord blob master src chord js L112  Source    If  compare  is specified  sets the subgroup comparator to the specified function or null and returns this chord layout  If  compare  is not specified  returns the current subgroup comparator  which defaults to null  If the subgroup comparator is non null  it is used to sort the subgroups corresponding to  matrix   i   0    n    1  for a given group  i  by their total outflow  See also  d3 ascending  https   github com d3 d3 array ascending  and  d3 descending  https   github com d3 d3 array descending     a href   chord sortChords  name   chord sortChords     a   i chord  i   b sortChords  b    i compare  i         https   github com d3 d3 chord blob master src chord js L116  Source    If  compare  is specified  sets the chord comparator to the specified function or null and returns this chord layout  If  compare  is not specified  returns the current chord comparator  which defaults to null  If the chord comparator is non null  it is used to sort the  chords    chord  by their combined flow  this only affects the  z  order of the chords  See also  d3 ascending  https   github com d3 d3 array ascending  and  d3 descending  https   github com d3 d3 array descending     a href   ribbon  name  ribbon     a  d3  b ribbon  b         https   github com d3 d3 chord blob master src ribbon js  Source    Creates a new ribbon generator with the default settings    a href    ribbon  name   ribbon     a   i ribbon  i   i arguments   i        https   github com d3 d3 chord blob master src ribbon js L34  Source    Generates a ribbon for the given  arguments   The  arguments  are arbitrary  they are simply propagated to the ribbon generator s accessor functions along with the  this  object  For example  with the default settings  a  chord object    chord  expected      js var ribbon   d3 ribbon     ribbon     source   startAngle  0 7524114  endAngle  1 1212972  radius  240     target   startAngle  1 8617078  endAngle  1 9842927  radius  240          M164 0162810494058  175 21032946354026A240 240 0 0 1 216 1595644740915  104 28347273835429Q0 0 229 9158815306728 68 8381247563705A240 240 0 0 1 219 77316791012538 96 43523560788266Q0 0 164 0162810494058  175 21032946354026Z       Or equivalently if the radius is instead defined as a constant      js var ribbon   d3 ribbon        radius 240    ribbon     source   startAngle  0 7524114  endAngle  1 1212972     target   startAngle  1 8617078  endAngle  1 9842927          M164 0162810494058  175 21032946354026A240 240 0 0 1 216 1595644740915  104 28347273835429Q0 0 229 9158815306728 68 8381247563705A240 240 0 0 1 219 77316791012538 96 43523560788266Q0 0 164 0162810494058  175 21032946354026Z       If the ribbon generator has a context  then the ribbon is rendered to this context as a sequence of path method calls and this function returns void  Otherwise  a path data string is returned    a href   ribbon source  name  ribbon source     a   i ribbon  i   b source  b    i source  i         https   github com d3 d3 chord blob master src ribbon js L74  Source    If  source  is specified  sets the source accessor to the specified function and returns this ribbon generator  If  source  is not specified  returns the current source accessor  which defaults to      js function source d      return d source          a href   ribbon target  name  ribbon target     a   i ribbon  i   b target  b    i target  i         https   github com d3 d3 chord blob master src ribbon js L78  Source    If  target  is specified  sets the target accessor to the specified function and returns this ribbon generator  If  target  is not specified  returns the current target accessor  which defaults to      js function target d      return d target          a href   ribbon radius  name  ribbon radius     a   i ribbon  i   b radius  b    i radius  i         https   github com d3 d3 chord blob master src ribbon js L62  Source    If  radius  is specified  sets the radius accessor to the specified function and returns this ribbon generator  If  radius  is not specified  returns the current radius accessor  which defaults to      js function radius d      return d radius          a href   ribbon startAngle  name  ribbon startAngle     a   i ribbon  i   b startAngle  b    i angle  i         https   github com d3 d3 chord blob master src ribbon js L66  Source    If  angle  is specified  sets the start angle accessor to the specified function and returns this ribbon generator  If  angle  is not specified  returns the current start angle accessor  which defaults to      js function startAngle d      return d startAngle         The  angle  is specified in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise    a href   ribbon endAngle  name  ribbon endAngle     a   i ribbon  i   b endAngle  b    i angle  i         https   github com d3 d3 chord blob master src ribbon js L70  Source    If  angle  is specified  sets the end angle accessor to the specified function and returns this ribbon generator  If  angle  is not specified  returns the current end angle accessor  which defaults to      js function endAngle d      return d endAngle         The  angle  is specified in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise    a href   ribbon context  name  ribbon context     a   i ribbon  i   b context  b    i context  i         https   github com d3 d3 chord blob master src ribbon js L82  Source    If  context  is specified  sets the context and returns this ribbon generator  If  context  is not specified  returns the current context  which defaults to null  If the context is not null  then the  generated ribbon    ribbon  is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string representing the generated ribbon is returned  See also  d3 path  https   github com d3 d3 path   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-chord"},{"name":"d3/d3-hexbin","artist":"return, specifi, sourc, array, valu","id":36,"playcount":6997,"description":"d3/d3-hexbin return, specifi, sourc, array, valu   d3 hexbin  Hexagonal binning is useful for aggregating data into a coarser representation for display  For example  rather than rendering a scatterplot of tens of thousands of points  bin the points into a few hundred hexagons to show the distribution  Hexbins can support a color encoding  area encoding  or both     img alt  Hexagonal Binning  Color   src  https   raw githubusercontent com d3 d3 hexbin master img color jpg  width  420  height  219    https   bl ocks org mbostock 4248145   img alt  Hexagonal Binning  Area   src  https   raw githubusercontent com d3 d3 hexbin master img area jpg  width  420  height  219    https   bl ocks org mbostock 4248146   img alt  Bivariate Hexbin Map  src  https   raw githubusercontent com d3 d3 hexbin master img bivariate jpg  width  420  height  219    https   bl ocks org mbostock 4330486   img alt  Dynamic Hexbin  src  https   raw githubusercontent com d3 d3 hexbin master img dynamic jpg  width  420  height  219    https   bl ocks org mbostock 7833311      Installing  If you use NPM   npm install d3 hexbin   Otherwise  download the  latest release  https   github com d3 d3 hexbin releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 hexbin v0 2 min js   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3 hexbin  global is exported      html  script src  https   d3js org d3 hexbin v0 2 min js    script   script   var hexbin   d3 hexbin       script        Try d3 hexbin in your browser   https   tonicdev com npm d3 hexbin      API Reference   a name  hexbin  href   hexbin     a  d3  b hexbin  b     Constructs a new default  hexbin generator    hexbin     a name   hexbin  href    hexbin     a   i hexbin  i   i points  i    Bins the specified array of  points   returning an array of hexagonal  bins   For each point in the specified  points  array  the   x     hexbin x  and   y     hexbin y accessors are invoked to compute the  x   and  y  coordinates of the point  which is then used to assign the point to a hexagonal bin  If either the  x   or  y  coordinate is NaN  the point is ignored and will not be in any of the returned bins   Each bin in the returned array is an array containing the bin s points  Only non empty bins are returned  empty bins without points are not included in the returned array  Each bin has these additional properties      x    the  x  coordinate of the center of the associated bin s hexagon    y    the  y  coordinate of the center of the associated bin s hexagon  These  x   and  y  coordinates of the hexagon center can be used to render the hexagon at the appropriate location in conjunction with   hexbin  hexagon   hexbin hexagon   For example  given a hexbin generator      js var hexbin   d3 hexbin         You could display a hexagon for each non empty bin as follows      js svg selectAll  path      data hexbin points      enter   append  path        attr  d   function d    return  M    d x         d y   hexbin hexagon             Alternatively  using a transform      js svg selectAll  path      data hexbin points      enter   append  path        attr  transform   function d    return  translate     d x         d y                attr  d   hexbin hexagon          This method ignores the hexbin s  extent   hexbin extent   it may return bins outside the extent if necessary to contain the specified points    a name  hexbin hexagon  href   hexbin hexagon     a   i hexbin  i   b hexagon  b    i radius  i     Returns the SVG path string for the hexagon centered at the origin  0 0   The path string is defined with relative coordinates such that you can easily translate the hexagon to the desired position  If  radius  is not specified  the hexbin s  current radius   hexbin radius  is used  If  radius  is specified  a hexagon with the specified radius is returned  this is useful for area encoded bivariate hexbins    a name  hexbin centers  href   hexbin centers     a   i hexbin  i   b centers  b     Returns an array of   x    y   points representing the centers of every hexagon in the  extent   hexagon extent     a name  hexbin mesh  href   hexbin mesh     a   i hexbin  i   b mesh  b     Returns an SVG path string representing the hexagonal mesh that covers the  extent   hexagon extent   the returned path is intended to be stroked  The mesh may extend slightly beyond the extent and may need to be clipped    a name  hexbin x  href   hexbin x     a   i hexbin  i   b x  b    i x  i     If  x  is specified  sets the  x  coordinate accessor to the specified function and returns this hexbin generator  If  x  is not specified  returns the current  x  coordinate accessor  which defaults to      js function x d      return d 0          The  x  coordinate accessor is used by   hexbin     hexbin  to compute the  x  coordinate of each point  The default value assumes each point is specified as a two element array of numbers   x    y      a name  hexbin y  href   hexbin y     a   i hexbin  i   b y  b    i x  i     If  y  is specified  sets the  y  coordinate accessor to the specified function and returns this hexbin generator  If  y  is not specified  returns the current  y  coordinate accessor  which defaults to      js function y d      return d 1          The  y  coordinate accessor is used by   hexbin     hexbin  to compute the  y  coordinate of each point  The default value assumes each point is specified as a two element array of numbers   x    y      a name  hexbin radius  href   hexbin radius     a   i hexbin  i   b radius  b    i radius  i     If  radius  is specified  sets the radius of the hexagon to the specified number  If  radius  is not specified  returns the current radius  which defaults to 1  The hexagons are pointy topped  rather than flat topped   the width of each hexagon is  radius    2   sin     3  and the height of each hexagon is  radius    3   2    a name  hexbin extent  href   hexbin extent     a  hexbin  b extent  b    i extent  i     If  extent  is specified  sets the hexbin generator s extent to the specified bounds    x0    y0      x1    y1    and returns the hexbin generator  If  extent  is not specified  returns the generator s current extent    x0    y0      x1    y1     where  x0  and  y0  are the lower bounds and  x1  and  y1  are the upper bounds  The extent defaults to   0  0    1  1      a name  hexbin size  href   hexbin size     a  hexbin  b size  b    i size  i     If  size  is specified  sets the  extent   hexbin extent  to the specified bounds   0  0     dx    dy    and returns the hexbin generator  If  size  is not specified  returns the generator s current size   x1     x0    y1     y0    where  x0  and  y0  are the lower bounds and  x1  and  y1  are the upper bounds  The size defaults to  1  1   This is a convenience method for setting the extent  For example  these two statements are equivalent      js hexbin extent   0  0    width  height     hexbin size  width  height        ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-hexbin"},{"name":"d3/d3-format","artist":"return, specifi, sourc, array, valu","id":37,"playcount":15121,"description":"d3/d3-format return, specifi, sourc, array, valu   d3 format  Ever noticed how sometimes JavaScript doesn t display numbers the way you expect  Like  you tried to print tenths with a simple loop      js for  var i   0  i   10  i        console log 0 1   i          And you got this      js 0 0 1 0 2 0 30000000000000004 0 4 0 5 0 6000000000000001 0 7000000000000001 0 8 0 9      Welcome to  binary floating point  https   en wikipedia org wiki Double precision floating point format        Yet rounding error is not the only reason to customize number formatting  A table of numbers should be formatted consistently for comparison  above  0 0 would be better than 0  Large numbers should have grouped digits  e g   42 000  or be in scientific or metric notation  4 2e 4  42k   Currencies should have fixed precision   3 50   Reported numerical results should be rounded to significant digits  4021 becomes 4000   Number formats should appropriate to the reader s locale  42 000 00 or 42 000 00   The list goes on   Formatting numbers for human consumption is the purpose of d3 format  which is modeled after Python 3 s  format specification mini language  https   docs python org 3 library string html format specification mini language    PEP 3101  https   www python org dev peps pep 3101     Revisiting the example above      js var f   d3 format   1f    for  var i   0  i   10  i        console log f 0 1   i           Now you get this      js 0 0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9      But d3 format is much more than an alias for  number toFixed  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Number toFixed   A few more examples      js d3 format   0    0 123       rounded percentage   12   d3 format     2f    3 5      localized fixed point currency     3 50   d3 format   20   42          space filled and signed                     42  d3 format    20   42         dot filled and centered            42           d3 format   2s   42e6        SI prefix with two significant digits   42M  d3 format   x   48879        prefixed lowercase hexadecimal   0xbeef  d3 format    2r   4223       grouped thousands with two significant digits   4 200       See   locale  format   locale format  for a detailed specification  and try running  d3 formatSpecifier   formatSpecifier  on the above formats to decode their meaning      Installing  If you use NPM   npm install d3 format   Otherwise  download the  latest release  https   github com d3 d3 format releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 format v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 format v1 min js    script   script   var format   d3 format   2s       script       Locale files are hosted on  unpkg  https   unpkg com   and can be loaded using  d3 json  https   github com d3 d3 request blob master README md json   For example  to set Russian as the default locale      js d3 json  https   unpkg com d3 format 1 locale ru RU json   function error  locale      if  error  throw error     d3 formatDefaultLocale locale      var format   d3 format           console log format 1234 56       1 234 56                Try d3 format in your browser   https   tonicdev com npm d3 format      API Reference   a name  format  href   format     a  d3  b format  b   i specifier  i        https   github com d3 d3 format blob master src defaultLocale js L4  Source    An alias for   locale  format   locale format  on the  default locale   formatDefaultLocale     a name  formatPrefix  href   formatPrefix     a  d3  b formatPrefix  b   i specifier  i    i value  i        https   github com d3 d3 format blob master src defaultLocale js L5  Source    An alias for   locale  formatPrefix   locale formatPrefix  on the  default locale   formatDefaultLocale     a name  locale format  href   locale format     a   i locale  i   b format  b   i specifier  i        https   github com d3 d3 format blob master src locale js L18  Source    Returns a new format function for the given string  specifier   The returned function takes a number as the only argument  and returns a string representing the formatted number  The general form of a specifier is          fill align  sign  symbol  0  width      precision     type       The  fill  can be any character  The presence of a fill character is signaled by the  align  character following it  which must be one of the following           Forces the field to be right aligned within the available space   Default behavior           Forces the field to be left aligned within the available space          Forces the field to be centered within the available space          like      but with any sign and symbol to the left of any padding   The  sign  can be           nothing for zero or positive and a minus sign for negative   Default behavior           a plus sign for zero or positive and a minus sign for negative          nothing for zero or positive and parentheses for negative         space    a space for zero or positive and a minus sign for negative   The  symbol  can be           apply currency symbols per the locale definition          for binary  octal  or hexadecimal notation  prefix by  0b    0o   or  0x   respectively   The  zero    0   option enables zero padding  this implicitly sets  fill  to  0  and  align  to      The  width  defines the minimum field width  if not specified  then the width will be determined by the content  The  comma        option enables the use of a group separator  such as a comma for thousands   Depending on the  type   the  precision  either indicates the number of digits that follow the decimal point  types  f  and       or the number of significant digits  types       e    g    r    s  and  p    If the precision is not specified  it defaults to 6 for all types except      none   which defaults to 12  Precision is ignored for integer formats  types  b    o    d    x    X  and  c    See  precisionFixed   precisionFixed  and  precisionRound   precisionRound  for help picking an appropriate precision   The     option trims insignificant trailing zeros across all format types  This is most commonly used in conjunction with types  r    e    s  and      For example      js d3 format  s   1500        1 50000k  d3 format   s   1500       1 5k       The available  type  values are      e    exponent notation     f    fixed point notation     g    either decimal or exponent notation  rounded to significant digits     r    decimal notation  rounded to significant digits     s    decimal notation with an  SI prefix   locale formatPrefix   rounded to significant digits          multiply by 100  and then decimal notation with a percent sign     p    multiply by 100  round to significant digits  and then decimal notation with a percent sign     b    binary notation  rounded to integer     o    octal notation  rounded to integer     d    decimal notation  rounded to integer     x    hexadecimal notation  using lower case letters  rounded to integer     X    hexadecimal notation  using upper case letters  rounded to integer     c    converts the integer to the corresponding unicode character before printing   The type      none  is also supported as shorthand for   g   with a default precision of 12 instead of 6   and the type  n  is shorthand for   g   For the  g    n  and      none  types  decimal notation is used if the resulting string would have  precision  or fewer digits  otherwise  exponent notation is used  For example      js d3 format   2   42        42  d3 format   2   4 2       4 2  d3 format   1   42        4e 1  d3 format   1   4 2       4        a name  locale formatPrefix  href   locale formatPrefix     a   i locale  i   b formatPrefix  b   i specifier  i    i value  i        https   github com d3 d3 format blob master src locale js L127  Source    Equivalent to   locale  format   locale format   except the returned function will convert values to the units of the appropriate  SI prefix  https   en wikipedia org wiki Metric prefix List of SI prefixes  for the specified numeric reference  value  before formatting in fixed point notation  The following prefixes are supported      y    yocto  10       z    zepto  10       a    atto  10       f    femto  10       p    pico  10       n    nano  10           micro  10      m    milli  10          none    10     k    kilo  10     M    mega  10     G    giga  10     T    tera  10      P    peta  10      E    exa  10      Z    zetta  10      Y    yotta  10    Unlike   locale  format   locale format  with the  s  format type  this method returns a formatter with a consistent SI prefix  rather than computing the prefix dynamically for each number  In addition  the  precision  for the given  specifier  represents the number of digits past the decimal point  as with  f  fixed point notation   not the number of significant digits  For example      js var f   d3 formatPrefix    0   1e 6   f 0 00042       420   f 0 0042       4 200        This method is useful when formatting multiple numbers in the same units for easy comparison  See  precisionPrefix   precisionPrefix  for help picking an appropriate precision  and  bl ocks org 9764126  http   bl ocks org mbostock 9764126  for an example    a name  formatSpecifier  href   formatSpecifier     a  d3  b formatSpecifier  b   i specifier  i        https   github com d3 d3 format blob master src formatSpecifier js  Source    Parses the specified  specifier   returning an object with exposed fields that correspond to the  format specification mini language   locale format  and a toString method that reconstructs the specifier  For example   formatSpecifier  s    returns      js      fill           align           sign           symbol          zero   false     width   undefined     comma   false     precision   undefined     trim   false     type    s         This method is useful for understanding how format specifiers are parsed and for deriving new specifiers  For example  you might compute an appropriate precision based on the numbers you want to format using  precisionFixed   precisionFixed  and then create a new format      js var s   d3 formatSpecifier  f    s precision   d3 precisionFixed 0 01   var f   d3 format s   f 42       42 00         a name  precisionFixed  href   precisionFixed     a  d3  b precisionFixed  b   i step  i        https   github com d3 d3 format blob master src precisionFixed js  Source    Returns a suggested decimal precision for fixed point notation given the specified numeric  step  value  The  step  represents the minimum absolute difference between values that will be formatted   This assumes that the values to be formatted are also multiples of  step    For example  given the numbers 1  1 5  and 2  the  step  should be 0 5 and the suggested precision is 1      js var p   d3 precisionFixed 0 5       f   d3 format       p    f    f 1         1 0  f 1 5       1 5  f 2         2 0       Whereas for the numbers 1  2 and 3  the  step  should be 1 and the suggested precision is 0      js var p   d3 precisionFixed 1       f   d3 format       p    f    f 1       1  f 2       2  f 3       3       Note  for the     format type  subtract two      js var p   Math max 0  d3 precisionFixed 0 05    2       f   d3 format       p         f 0 45       45   f 0 50       50   f 0 55       55         a name  precisionPrefix  href   precisionPrefix     a  d3  b precisionPrefix  b   i step  i    i value  i        https   github com d3 d3 format blob master src precisionPrefix js  Source    Returns a suggested decimal precision for use with   locale  formatPrefix   locale formatPrefix  given the specified numeric  step  and reference  value   The  step  represents the minimum absolute difference between values that will be formatted  and  value  determines which SI prefix will be used   This assumes that the values to be formatted are also multiples of  step    For example  given the numbers 1 1e6  1 2e6  and 1 3e6  the  step  should be 1e5  the  value  could be 1 3e6  and the suggested precision is 1      js var p   d3 precisionPrefix 1e5  1 3e6       f   d3 formatPrefix       p  1 3e6   f 1 1e6       1 1M  f 1 2e6       1 2M  f 1 3e6       1 3M        a name  precisionRound  href   precisionRound     a  d3  b precisionRound  b   i step  i    i max  i        https   github com d3 d3 format blob master src precisionRound js  Source    Returns a suggested decimal precision for format types that round to significant digits given the specified numeric  step  and  max  values  The  step  represents the minimum absolute difference between values that will be formatted  and the  max  represents the largest absolute value that will be formatted   This assumes that the values to be formatted are also multiples of  step    For example  given the numbers 0 99  1 0  and 1 01  the  step  should be 0 01  the  max  should be 1 01  and the suggested precision is 3      js var p   d3 precisionRound 0 01  1 01       f   d3 format       p    r    f 0 99       0 990  f 1 0        1 00  f 1 01       1 01       Whereas for the numbers 0 9  1 0  and 1 1  the  step  should be 0 1  the  max  should be 1 1  and the suggested precision is 2      js var p   d3 precisionRound 0 1  1 1       f   d3 format       p    r    f 0 9       0 90  f 1 0       1 0  f 1 1       1 1       Note  for the  e  format type  subtract one      js var p   Math max 0  d3 precisionRound 0 01  1 01    1       f   d3 format       p    e    f 0 01       1 00e 2  f 1 01       1 01e 0           Locales   a name  formatLocale  href   formatLocale     a  d3  b formatLocale  b   i definition  i        https   github com d3 d3 format blob master src locale js  Source    Returns a  locale  object for the specified  definition  with   locale  format   locale format  and   locale  formatPrefix   locale formatPrefix  methods  The  definition  must include the following properties      decimal    the decimal point  e g              thousands    the group separator  e g              grouping    the array of group sizes  e g     3     cycled as needed     currency    the currency prefix and suffix  e g                    numerals    optional  an array of ten strings to replace the numerals 0 9     percent    optional  the percent suffix  defaults to          Note that the  thousands  property is a misnomer  as the grouping definition allows groups other than thousands    a name  formatDefaultLocale  href   formatDefaultLocale     a  d3  b formatDefaultLocale  b   i definition  i        https   github com d3 d3 format blob master src defaultLocale js  Source    Equivalent to  d3 formatLocale   formatLocale   except it also redefines  d3 format   format  and  d3 formatPrefix   formatPrefix  to the new locale s   locale  format   locale format  and   locale  formatPrefix   locale formatPrefix   If you do not set a default locale  it defaults to  U S  English  https   github com d3 d3 format blob master locale en US json   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-format"},{"name":"d3/d3-random","artist":"return, specifi, sourc, array, valu","id":38,"playcount":4702,"description":"d3/d3-random return, specifi, sourc, array, valu   d3 random  Generate random numbers from various distributions      Installing  If you use NPM   npm install d3 random   Otherwise  download the  latest release  https   github com d3 d3 random releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 random v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 random v1 min js    script   script   var random   d3 randomUniform 1  10      script        Try d3 random in your browser   https   runkit com npm d3 random      API Reference   a name  randomUniform  href   randomUniform     a  d3  b randomUniform  b    i min  i      i max  i         https   github com d3 d3 random blob master src uniform js  Source    Returns a function for generating random numbers with a  uniform distribution  https   en wikipedia org wiki Uniform distribution   continuous     The minimum allowed value of a returned number is  min   and the maximum is  max   If  min  is not specified  it defaults to 0  if  max  is not specified  it defaults to 1  For example      js d3 randomUniform 6        Returns a number greater than or equal to 0 and less than 6  d3 randomUniform 1  5        Returns a number greater than or equal to 1 and less than 5       Note that you can also use the built in  Math random  https   developer mozilla org en US docs JavaScript Reference Global Objects Math random  to generate uniform distributions directly  For example  to generate a random integer between 0 and 99  inclusive   you can say  Math random     100   0     a name  randomNormal  href   randomNormal     a  d3  b randomNormal  b    i mu  i      i sigma  i         https   github com d3 d3 random blob master src normal js  Source    Returns a function for generating random numbers with a  normal  Gaussian  distribution  https   en wikipedia org wiki Normal distribution   The expected value of the generated numbers is  mu   with the given standard deviation  sigma   If  mu  is not specified  it defaults to 0  if  sigma  is not specified  it defaults to 1    a name  randomLogNormal  href   randomLogNormal     a  d3  b randomLogNormal  b    i mu  i      i sigma  i         https   github com d3 d3 random blob master src logNormal js  Source    Returns a function for generating random numbers with a  log normal distribution  https   en wikipedia org wiki Log normal distribution   The expected value of the random variable s natural logarithm is  mu   with the given standard deviation  sigma   If  mu  is not specified  it defaults to 0  if  sigma  is not specified  it defaults to 1    a name  randomBates  href   randomBates     a  d3  b randomBates  b   i n  i        https   github com d3 d3 random blob master src bates js  Source    Returns a function for generating random numbers with a  Bates distribution  https   en wikipedia org wiki Bates distribution  with  n  independent variables    a name  randomIrwinHall  href   randomIrwinHall     a  d3  b randomIrwinHall  b   i n  i        https   github com d3 d3 random blob master src irwinHall js  Source    Returns a function for generating random numbers with an  Irwin Hall distribution  https   en wikipedia org wiki Irwin Hall distribution  with  n  independent variables    a name  randomExponential  href   randomExponential     a  d3  b randomExponential  b   i lambda  i        https   github com d3 d3 random blob master src exponential js  Source    Returns a function for generating random numbers with an  exponential distribution  https   en wikipedia org wiki Exponential distribution  with the rate  lambda   equivalent to time between events in a  Poisson process  https   en wikipedia org wiki Poisson point process  with a mean of 1    lambda   For example  exponential 1 40  generates random times between events where  on average  one event occurs every 40 units of time    a name  random source  href   random source     a   i random  i   b source  b   i source  i    Returns the same type of function for generating random numbers but where the given random number generator  source  is used as the source of randomness instead of Math random  The given random number generator must implement the same interface as Math random and only return values in the range  0  1   This is useful when a seeded random number generator is preferable to Math random  For example      js var d3   require  d3 random        seedrandom   require  seedrandom        random   d3 randomNormal source seedrandom  a22ebc7c488a3a47    0  1    random       0 9744193494813501     ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-random"},{"name":"d3/d3-selection","artist":"specifi, return, select, current, element","id":39,"playcount":59721,"description":"d3/d3-selection specifi, return, select, current, element   d3 selection  Selections allow powerful data driven transformation of the document object model  DOM   set  attributes   selection attr    styles   selection style    properties   selection property    HTML   selection html  or  text   selection text  content  and more  Using the  data join   joining data  s  enter   selection enter  and  exit   selection enter  selections  you can also  add   selection append  or  remove   selection remove  elements to correspond to data   Selection methods typically return the current selection  or a new selection  allowing the concise application of multiple operations on a given selection via method chaining  For example  to set the class and color style of all paragraph elements in the current document      js d3 selectAll  p        attr  class    graf        style  color    red         This is equivalent to      js var p   d3 selectAll  p    p attr  class    graf    p style  color    red         By convention  selection methods that return the current selection use  four  spaces of indent  while methods that return a new selection use only  two   This helps reveal changes of context by making them stick out of the chain      js d3 select  body      append  svg        attr  width   960       attr  height   500     append  g        attr  transform    translate 20 20       append  rect        attr  width   920       attr  height   460        Selections are immutable  All selection methods that affect which elements are selected  or their order  return a new selection rather than modifying the current selection  However  note that elements are necessarily mutable  as selections drive transformations of the document      Installing  If you use NPM   npm install d3 selection   Otherwise  download the  latest release  https   github com d3 d3 selection releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 selection v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 selection v1 min js    script   script   var div   d3 selectAll  div       script        Try d3 selection in your browser   https   tonicdev com npm d3 selection      API Reference     Selecting Elements   selecting elements     Modifying Elements   modifying elements     Joining Data   joining data     Handling Events   handling events     Control Flow   control flow     Local Variables   local variables     Namespaces   namespaces       Selecting Elements  Selection methods accept  W3C selector strings  http   www w3 org TR selectors api   such as   fancy  to select elements with the class  fancy   or  div  to select DIV elements  Selection methods come in two forms  select and selectAll  the former selects only the first matching element  while the latter selects all matching elements in document order  The top level selection methods   d3 select   select  and  d3 selectAll   selectAll   query the entire document  the subselection methods    selection  select   selection select  and   selection  selectAll   selection selectAll   restrict selection to descendants of the selected elements    a name  selection  href   selection     a  d3  b selection  b         https   github com d3 d3 selection blob master src selection index js L38  Source     Selects   select  the root element   document documentElement   This function can also be used to test for selections   instanceof d3 selection   or to extend the selection prototype  For example  to add a method to check checkboxes      js d3 selection prototype checked   function value      return arguments length   1         this property  checked           this property  checked     value           And then to use      js d3 selectAll  input type checkbox    checked true         a name  select  href   select     a  d3  b select  b   i selector  i        https   github com d3 d3 selection blob master src select js L3  Source    Selects the first element that matches the specified  selector  string  If no elements match the  selector   returns an empty selection  If multiple elements match the  selector   only the first matching element  in document order  will be selected  For example  to select the first anchor element      js var anchor   d3 select  a         If the  selector  is not a string  instead selects the specified node  this is useful if you already have a reference to a node  such as  this  within an event listener or a global such as  document body   For example  to make a clicked paragraph red      js d3 selectAll  p   on  click   function       d3 select this  style  color    red              a name  selectAll  href   selectAll     a  d3  b selectAll  b   i selector  i        https   github com d3 d3 selection blob master src selectAll js L3  Source    Selects all elements that match the specified  selector  string  The elements will be selected in document order  top to bottom   If no elements in the document match the  selector   or if the  selector  is null or undefined  returns an empty selection  For example  to select all paragraphs      js var paragraph   d3 selectAll  p         If the  selector  is not a string  instead selects the specified array of nodes  this is useful if you already have a reference to nodes  such as  this childNodes  within an event listener or a global such as  document links   The nodes may instead be a pseudo array such as a  NodeList  or  arguments   For example  to color all links red      js d3 selectAll document links  style  color    red          a name  selection select  href   selection select     a   i selection  i   b select  b   i selector  i        https   github com d3 d3 selection blob master src selection select js  Source    For each selected element  selects the first descendant element that matches the specified  selector  string  If no element matches the specified selector for the current element  the element at the current index will be null in the returned selection   If the  selector  is null  every element in the returned selection will be null  resulting in an empty selection   If the current element has associated data  this data is propagated to the corresponding selected element  If multiple elements match the selector  only the first matching element in document order is selected  For example  to select the first bold element in every paragraph      js var b   d3 selectAll  p   select  b         If the  selector  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     It must return an element  or null if there is no matching element  For example  to select the previous sibling of each paragraph      js var previous   d3 selectAll  p   select function       return this previousElementSibling           Unlike   selection  selectAll   selection selectAll    selection  select does not affect grouping  it preserves the existing group structure and indexes  and propagates data  if any  to selected children  Grouping plays an important role in the  data join   joining data   See  Nested Selections  http   bost ocks org mike nest   and  How Selections Work  http   bost ocks org mike selection   for more on this topic    a name  selection selectAll  href   selection selectAll     a   i selection  i   b selectAll  b   i selector  i        https   github com d3 d3 selection blob master src selection selectAll js  Source    For each selected element  selects the descendant elements that match the specified  selector  string  The elements in the returned selection are grouped by their corresponding parent node in this selection  If no element matches the specified selector for the current element  or if the  selector  is null  the group at the current index will be empty  The selected elements do not inherit data from this selection  use   selection  data   selection data  to propagate data to children  For example  to select the bold elements in every paragraph      js var b   d3 selectAll  p   selectAll  b         If the  selector  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     It must return an array of elements  or a pseudo array  such as a NodeList   or the empty array if there are no matching elements  For example  to select the previous and next siblings of each paragraph      js var sibling   d3 selectAll  p   selectAll function       return       this previousElementSibling      this nextElementSibling               Unlike   selection  select   selection select    selection  selectAll does affect grouping  each selected descendant is grouped by the parent element in the originating selection  Grouping plays an important role in the  data join   joining data   See  Nested Selections  http   bost ocks org mike nest   and  How Selections Work  http   bost ocks org mike selection   for more on this topic    a name  selection filter  href   selection filter     a   i selection  i   b filter  b   i filter  i        https   github com d3 d3 selection blob master src selection filter js  Source    Filters the selection  returning a new selection that contains only the elements for which the specified  filter  is true  The  filter  may be specified either as a selector string or a function  If the  filter  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i      For example  to filter a selection of table rows to contain only even rows      js var even   d3 selectAll  tr   filter   nth child even          This is approximately equivalent to using  d3 selectAll   selectAll  directly  although the indexes may be different      js var even   d3 selectAll  tr nth child even          Similarly  using a function      js var even   d3 selectAll  tr   filter function d  i    return i   1           Or using   selection  select   selection select       js var even   d3 selectAll  tr   select function d  i    return i   1   this   null           Note that the   nth child  pseudo class is a one based index rather than a zero based index  Also  the above filter functions do not have precisely the same meaning as   nth child   they rely on the selection index rather than the number of preceding sibling elements in the DOM   The returned filtered selection preserves the parents of this selection  but like   array  filter  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array filter   it does not preserve indexes as some elements may be removed  use   selection  select   selection select  to preserve the index  if needed    a name  selection merge  href   selection merge     a   i selection  i   b merge  b   i other  i        https   github com d3 d3 selection blob master src selection merge js  Source    Returns a new selection merging this selection with the specified  other  selection  The returned selection has the same number of groups and the same parents as this selection  Any missing  null  elements in this selection are filled with the corresponding element  if present  not null   from the specified  selection    If the  other  selection has additional groups or parents  they are ignored    This method is commonly used to merge the  enter   selection enter  and  update   selection data  selections after a  data join   joining data   After modifying the entering and updating elements separately  you can merge the two selections and perform operations on both without duplicate code  For example      js var circle   svg selectAll  circle   data data     UPDATE      style  fill    blue     circle exit   remove       EXIT  circle   circle enter   append  circle      ENTER      style  fill    green      merge circle     ENTER   UPDATE      style  stroke    black         See   selection  data   selection data  for a more complete explanation of this code  which is known as the general update pattern   This method is not intended for concatenating arbitrary selections  however  if both this selection and the specified  other  selection have  non null  elements at the same index  this selection s element is returned in the merge and the  other  selection s element is ignored    a name  matcher  href   matcher     a  d3  b matcher  b   i selector  i        https   github com d3 d3 selection blob master src matcher js  Source    Given the specified  selector   returns a function which returns true if  this  element  matches  https   developer mozilla org en US docs Web API Element matches  the specified selector  This method is used internally by   selection  filter   selection filter   For example  this      js var div   selection filter  div         Is equivalent to      js var div   selection filter d3 matcher  div           Although D3 is not a compatibility layer  this implementation does support vendor prefixed implementations due to the recent standardization of  element  matches     a name  selector  href   selector     a  d3  b selector  b   i selector  i        https   github com d3 d3 selection blob master src selector js  Source    Given the specified  selector   returns a function which returns the first descendant of  this  element that matches the specified selector  This method is used internally by   selection  select   selection select   For example  this      js var div   selection select  div         Is equivalent to      js var div   selection select d3 selector  div           a name  selectorAll  href   selectorAll     a  d3  b selectorAll  b   i selector  i        https   github com d3 d3 selection blob master src selectAll js  Source    Given the specified  selector   returns a function which returns all descendants of  this  element that match the specified selector  This method is used internally by   selection  selectAll   selection selectAll   For example  this      js var div   selection selectAll  div         Is equivalent to      js var div   selection selectAll d3 selectorAll  div           a name  window  href   window     a  d3  b window  b   i node  i        https   github com d3 d3 selection blob master src window js  Source    Returns the owner window for the specified  node   If  node  is a node  returns the owner document s default view  if  node  is a document  returns its default view  otherwise returns the  node     a name  style  href   style     a  d3  b style  b   i node  i    i name  i        https   github com d3 d3 selection blob master src selection style js L32  Source    Returns the value of the style property with the specified  name  for the specified  node   If the  node  has an inline style with the specified  name   its value is returned  otherwise  the  computed property value  https   developer mozilla org en US docs Web CSS computed value  is returned  See also   selection  style   selection style        Modifying Elements  After selecting elements  use the selection s transformation methods to affect document content  For example  to set the name attribute and color style of an anchor element      js d3 select  a        attr  name    fred        style  color    red         To experiment with selections  visit  d3js org  https   d3js org  and open your browser s developer console   In Chrome  open the console with   J   Select elements and then inspect the returned selection to see which elements are selected and how they are grouped  Call selection methods and see how the page content changes    a name  selection attr  href   selection attr     a   i selection  i   b attr  b   i name  i     i value  i         https   github com d3 d3 selection blob master src selection attr js  Source    If a  value  is specified  sets the attribute with the specified  name  to the specified value on the selected elements and returns this selection  If the  value  is a constant  all elements are given the same attribute value  otherwise  if the  value  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The function s return value is then used to set each element s attribute  A null value will remove the specified attribute   If a  value  is not specified  returns the current value of the specified attribute for the first  non null  element in the selection  This is generally useful only if you know that the selection contains exactly one element   The specified  name  may have a namespace prefix  such as  xlink href  to specify the  href  attribute in the XLink namespace  See  namespaces   namespaces  for the map of supported namespaces  additional namespaces can be registered by adding to the map    a name  selection classed  href   selection classed     a   i selection  i   b classed  b   i names  i     i value  i         https   github com d3 d3 selection blob master src selection classed js  Source    If a  value  is specified  assigns or unassigns the specified CSS class  names  on the selected elements by setting the  class  attribute or modifying the  classList  property and returns this selection  The specified  names  is a string of space separated class names  For example  to assign the classes  foo  and  bar  to the selected elements      js selection classed  foo bar   true        If the  value  is truthy  then all elements are assigned the specified classes  otherwise  the classes are unassigned  If the  value  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The function s return value is then used to assign or unassign classes on each element  For example  to randomly associate the class  foo  with on average half the selected elements      js selection classed  foo   function     return Math random     0 5           If a  value  is not specified  returns true if and only if the first  non null  selected element has the specified  classes   This is generally useful only if you know the selection contains exactly one element    a name  selection style  href   selection style     a   i selection  i   b style  b   i name  i     i value  i     i priority  i          https   github com d3 d3 selection blob master src selection style js  Source    If a  value  is specified  sets the style property with the specified  name  to the specified value on the selected elements and returns this selection  If the  value  is a constant  then all elements are given the same style property value  otherwise  if the  value  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The function s return value is then used to set each element s style property  A null value will remove the style property  An optional  priority  may also be specified  either as null or the string  important   without the exclamation point    If a  value  is not specified  returns the current value of the specified style property for the first  non null  element in the selection  The current value is defined as the element s inline value  if present  and otherwise its  computed value  https   developer mozilla org en US docs Web CSS computed value   Accessing the current style value is generally useful only if you know the selection contains exactly one element   Caution  unlike many SVG attributes  CSS styles typically have associated units  For example   3px  is a valid stroke width property value  while  3  is not  Some browsers implicitly assign the  px   pixel  unit to numeric values  but not all browsers do  IE  for example  throws an  invalid arguments  error    a name  selection property  href   selection property     a   i selection  i   b property  b   i name  i     i value  i         https   github com d3 d3 selection blob master src selection property js  Source    Some HTML elements have special properties that are not addressable using attributes or styles  such as a form field s text  value  and a checkbox s  checked  boolean  Use this method to get or set these properties   If a  value  is specified  sets the property with the specified  name  to the specified value on selected elements  If the  value  is a constant  then all elements are given the same property value  otherwise  if the  value  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The function s return value is then used to set each element s property  A null value will delete the specified property   If a  value  is not specified  returns the value of the specified property for the first  non null  element in the selection  This is generally useful only if you know the selection contains exactly one element    a name  selection text  href   selection text     a   i selection  i   b text  b    i value  i         https   github com d3 d3 selection blob master src selection text js  Source    If a  value  is specified  sets the  text content  http   www w3 org TR DOM Level 3 Core core html Node3 textContent  to the specified value on all selected elements  replacing any existing child elements  If the  value  is a constant  then all elements are given the same text content  otherwise  if the  value  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The function s return value is then used to set each element s text content  A null value will clear the content   If a  value  is not specified  returns the text content for the first  non null  element in the selection  This is generally useful only if you know the selection contains exactly one element    a name  selection html  href   selection html     a   i selection  i   b html  b    i value  i         https   github com d3 d3 selection blob master src selection html js  Source    If a  value  is specified  sets the  inner HTML  http   dev w3 org html5 spec LC apis in html documents html innerhtml  to the specified value on all selected elements  replacing any existing child elements  If the  value  is a constant  then all elements are given the same inner HTML  otherwise  if the  value  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The function s return value is then used to set each element s inner HTML  A null value will clear the content   If a  value  is not specified  returns the inner HTML for the first  non null  element in the selection  This is generally useful only if you know the selection contains exactly one element   Use   selection  append   selection append  or   selection  insert   selection insert  instead to create data driven content  this method is intended for when you want a little bit of HTML  say for rich formatting  Also   selection  html is only supported on HTML elements  SVG elements and other non HTML elements do not support the innerHTML property  and thus are incompatible with  selection  html  Consider using  XMLSerializer  https   developer mozilla org en US docs XMLSerializer  to convert a DOM subtree to text  See also the  innersvg polyfill  https   code google com p innersvg    which provides a shim to support the innerHTML property on SVG elements    a name  selection append  href   selection append     a   i selection  i   b append  b   i type  i        https   github com d3 d3 selection blob master src selection append js  Source    If the specified  type  is a string  appends a new element of this type  tag name  as the last child of each selected element  or before the next following sibling in the update selection if this is an  enter selection   selection enter   The latter behavior for enter selections allows you to insert elements into the DOM in an order consistent with the new bound data  however  note that   selection  order   selection order  may still be required if updating elements change order   i e    if the order of new data is inconsistent with old data    If the specified  type  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     This function should return an element to be appended   The function typically creates a new element  but it may instead return an existing element   For example  to append a DIV element to each paragraph      js d3 selectAll  p   append  div         This is equivalent to      js d3 selectAll  p   append function       return document createElement  div             Which is equivalent to      js d3 selectAll  p   select function       return this appendChild document createElement  div              In both cases  this method returns a new selection containing the appended elements  Each new element inherits the data of the current elements  if any  in the same manner as   selection  select   selection select    The specified  name  may have a namespace prefix  such as  svg text  to specify a  text  attribute in the SVG namespace  See  namespaces   namespaces  for the map of supported namespaces  additional namespaces can be registered by adding to the map  If no namespace is specified  the namespace will be inherited from the parent element  or  if the name is one of the known prefixes  the corresponding namespace will be used  for example   svg  implies  svg svg      a name  selection insert  href   selection insert     a   i selection  i   b insert  b   i type  i     i before  i         https   github com d3 d3 selection blob master src selection insert js  Source    If the specified  type  is a string  inserts a new element of this type  tag name  before the first element matching the specified  before  selector for each selected element  For example  a  before  selector   first child  will prepend nodes before the first child  If  before  is not specified  it defaults to null   To append elements in an order consistent with  bound data   joining data   use   selection  append   selection append     Both  type  and  before  may instead be specified as functions which are evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The  type  function should return an element to be inserted  the  before  function should return the child element before which the element should be inserted  For example  to append a DIV element to each paragraph      js d3 selectAll  p   insert  div         This is equivalent to      js d3 selectAll  p   insert function       return document createElement  div             Which is equivalent to      js d3 selectAll  p   select function       return this insertBefore document createElement  div    null            In both cases  this method returns a new selection containing the appended elements  Each new element inherits the data of the current elements  if any  in the same manner as   selection  select   selection select    The specified  name  may have a namespace prefix  such as  svg text  to specify a  text  attribute in the SVG namespace  See  namespaces   namespaces  for the map of supported namespaces  additional namespaces can be registered by adding to the map  If no namespace is specified  the namespace will be inherited from the parent element  or  if the name is one of the known prefixes  the corresponding namespace will be used  for example   svg  implies  svg svg      a name  selection remove  href   selection remove     a   i selection  i   b remove  b         https   github com d3 d3 selection blob master src selection remove js  Source    Removes the selected elements from the document  Returns this selection  the removed elements  which are now detached from the DOM  There is not currently a dedicated API to add removed elements back to the document  however  you can pass a function to   selection  append   selection append  or   selection  insert   selection insert  to re add elements    a name  selection clone  href   selection clone     a   i selection  i   b clone  b    i deep  i         https   github com d3 d3 selection blob master src selection clone js  Source    Inserts clones of the selected elements immediately following the selected elements and returns a selection of the newly added clones  If  deep  is truthy  the descendant nodes of the selected elements will be cloned as well  Otherwise  only the elements themselves will be cloned  Equivalent to      js selection select function       return this parentNode insertBefore this cloneNode deep   this nextSibling             a name  selection sort  href   selection sort     a   i selection  i   b sort  b   i compare  i        https   github com d3 d3 selection blob master src selection sort js  Source    Returns a new selection that contains a copy of each group in this selection sorted according to the  compare  function  After sorting  re inserts elements to match the resulting order  per   selection  order   selection order     The compare function  which defaults to  ascending  https   github com d3 d3 array ascending   is passed two elements  data  a  and  b  to compare  It should return either a negative  positive  or zero value  If negative  then  a  should be before  b   if positive  then  a  should be after  b   otherwise   a  and  b  are considered equal and the order is arbitrary   Note that sorting is not guaranteed to be stable  however  it is guaranteed to have the same behavior as your browser s built in  sort  https   developer mozilla org en JavaScript Reference Global Objects Array sort  method on arrays    a name  selection order  href   selection order     a   i selection  i   b order  b         https   github com d3 d3 selection blob master src selection order js  Source    Re inserts elements into the document such that the document order of each group matches the selection order  This is equivalent to calling   selection  sort   selection sort  if the data is already sorted  but much faster    a name  selection raise  href   selection raise     a   i selection  i   b raise  b         https   github com d3 d3 selection blob master src selection raise js  Source    Re inserts each selected element  in order  as the last child of its parent  Equivalent to      js selection each function       this parentNode appendChild this             a name  selection lower  href   selection lower     a   i selection  i   b lower  b         https   github com d3 d3 selection blob master src selection lower js  Source    Re inserts each selected element  in order  as the first child of its parent  Equivalent to      js selection each function       this parentNode insertBefore this  this parentNode firstChild             a name  create  href   create     a  d3  b create  b   i name  i        https   github com d3 d3 selection blob master src create js  Source    Given the specified element  name   returns a single element selection containing a detached element of the given name in the current document    a name  creator  href   creator     a  d3  b creator  b   i name  i        https   github com d3 d3 selection blob master src creator js  Source    Given the specified element  name   returns a function which creates an element of the given name  assuming that  this  is the parent element  This method is used internally by   selection  append   selection append  and   selection  insert   selection insert  to create new elements  For example  this      js selection append  div         Is equivalent to      js selection append d3 creator  div          See  namespace   namespace  for details on supported namespace prefixes  such as for SVG elements       Joining Data  For an introduction to D3 s data joins  see  Thinking With Joins  http   bost ocks org mike join    Also see the  General Update Pattern  http   bl ocks org mbostock 3808218  examples    a name  selection data  href   selection data     a   i selection  i   b data  b    i data  i     i key  i          https   github com d3 d3 selection blob master src selection data js  Source    Joins the specified array of  data  with the selected elements  returning a new selection that represents the  update  selection  the elements successfully bound to data  Also defines the  enter   selection enter  and  exit   selection exit  selections on the returned selection  which can be used to add or remove elements to correspond to the new data  The specified  data  is an array of arbitrary values   e g    numbers or objects   or a function that returns an array of values for each group  When data is assigned to an element  it is stored in the property    data     thus making the data  sticky  and available on re selection   The  data  is specified   for each group   in the selection  If the selection has multiple groups  such as  d3 selectAll   selectAll  followed by   selection  selectAll   selection selectAll    then  data  should typically be specified as a function  This function will be evaluated for each group in order  being passed the group s parent datum   d   which may be undefined   the group index   i    and the selection s parent nodes   nodes    with  this  as the group s parent element  For example  to create an HTML table from a matrix of numbers      js var matrix        11975   5871  8916  2868       1951  10048  2060  6171       8010  16145  8090  8045       1013    990   940  6907      var tr   d3 select  body      append  table      selectAll  tr      data matrix     enter   append  tr     var td   tr selectAll  td      data function d    return d        enter   append  td        text function d    return d           In this example the  data  function is the identity function  for each table row  it returns the corresponding row from the data matrix   If a  key  function is not specified  then the first datum in  data  is assigned to the first selected element  the second datum to the second selected element  and so on  A  key  function may be specified to control which datum is assigned to which element  replacing the default join by index  by computing a string identifier for each datum and element  This key function is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     the returned string is the element s key  The key function is then also evaluated for each new datum in  data   being passed the current datum   d    the current index   i    and the group s new  data   with  this  as the group s parent DOM element  the returned string is the datum s key  The datum for a given key is assigned to the element with the matching key  If multiple elements have the same key  the duplicate elements are put into the exit selection  if multiple data have the same key  the duplicate data are put into the enter selection   For example  given this document      html  div id  Ford    div   div id  Jarrah    div   div id  Kwon    div   div id  Locke    div   div id  Reyes    div   div id  Shephard    div       You could join data by key as follows       js var data        name   Locke   number  4      name   Reyes   number  8      name   Ford   number  15      name   Jarrah   number  16      name   Shephard   number  31      name   Kwon   number  34      d3 selectAll  div      data data  function d    return d   d name   this id          text function d    return d number           This example key function uses the datum  d  if present  and otherwise falls back to the element s id property  Since these elements were not previously bound to data  the datum  d  is null when the key function is evaluated on selected elements  and non null when the key function is evaluated on the new data   The  update  and  enter  selections are returned in data order  while the  exit  selection preserves the selection order prior to the join  If a key function is specified  the order of elements in the selection may not match their order in the document  use   selection  order   order  or   selection  sort   sort  as needed  For more on how the key function affects the join  see  A Bar Chart  Part 2  http   bost ocks org mike bar 2   and  Object Constancy  http   bost ocks org mike constancy     Although the data join can be used simply to create  to  enter   a set of elements corresponding to data  more generally the data join is designed to let you create  destroy or update elements as needed so that the resulting DOM corresponds to the new data  The data join lets you do this efficiently by executing only the minimum necessary operations on each state of element  entering  updating  or exiting   and allows you to declare concise animated transitions between states as well  Here is a simple example of the  General Update Pattern  http   bl ocks org mbostock 3808218       js var circle   svg selectAll  circle      1    data data     2      style  fill    blue       3  circle exit   remove       4  circle   circle enter   append  circle      5  9      style  fill    green      6    merge circle     7      style  stroke    black       8      Breaking this down into discrete steps   1  Any existing circles  that are descendants of the  svg  selection  are  selected   selection selectAll   2  These circles are  joined to new  data    selection data   returning the matching circles  the  update  selection  3  These updating circles are given a blue fill  4  Any existing circles that do  not  match new data the  exit  selection are removed  5  New circles are  appended   selection append  for any new data that do  not  match any existing circle  the  enter  selection  6  These entering circles are given a green fill  7  A new selection representing the  union   selection merge  of entering and updating circles is created  8  These entering and updating circles are given a black stroke  9  These circles are stored in the variable  circle    As described in the preceding paragraphs  the  matching  logic is determined by the key function passed to  selection  data  since no key function is used in the above code sample  the elements and data are joined by index   If  data  is not specified  this method returns the array of data for the selected elements   This method cannot be used to clear bound data  use   selection  datum   selection datum  instead    a name  selection enter  href   selection enter     a   i selection  i   b enter  b         https   github com d3 d3 selection blob master src selection enter js  Source    Returns the enter selection  placeholder nodes for each datum that had no corresponding DOM element in the selection   The enter selection is empty for selections not returned by   selection  data   selection data     The enter selection is typically used to create  missing  elements corresponding to new data  For example  to create DIV elements from an array of numbers      js var div   d3 select  body      selectAll  div      data  4  8  15  16  23  42      enter   append  div        text function d    return d           If the body is initially empty  the above code will create six new DIV elements  append them to the body in order  and assign their text content as the associated  string coerced  number      html  div 4  div   div 8  div   div 15  div   div 16  div   div 23  div   div 42  div       Conceptually  the enter selection s placeholders are pointers to the parent element  in this example  the document body   The enter selection is typically only used transiently to append elements  and is often  merged   selection merge  with the update selection after appending  such that modifications can be applied to both entering and updating elements    a name  selection exit  href   selection exit     a   i selection  i   b exit  b         https   github com d3 d3 selection blob master src selection exit js  Source    Returns the exit selection  existing DOM elements in the selection for which no new datum was found   The exit selection is empty for selections not returned by   selection  data   selection data     The exit selection is typically used to remove  superfluous  elements corresponding to old data  For example  to update the DIV elements created previously with a new array of numbers      js div   div data  1  2  4  8  16  32   function d    return d           Since a key function was specified  as the identity function   and the new data contains the numbers  4  8  16  which match existing elements in the document  the update selection contains three DIV elements  Leaving those elements as is  we can append new elements for  1  2  32  using the enter selection      js div enter   append  div   text function d    return d           Likewise  to remove the exiting elements  15  23  42       js div exit   remove         Now the document body looks like this      html  div 1  div   div 2  div   div 4  div   div 8  div   div 16  div   div 32  div       The order of the DOM elements matches the order of the data because the old data s order and the new data s order were consistent  If the new data s order is different  use   selection  order   selection order  to reorder the elements in the DOM  See the  General Update Pattern  http   bl ocks org mbostock 3808218  example thread for more on data joins    a name  selection datum  href   selection datum     a   i selection  i   b datum  b    i value  i         https   github com d3 d3 selection blob master src selection datum js  Source    Gets or sets the bound data for each selected element  Unlike   selection  data   selection data   this method does not compute a join and does not affect indexes or the enter and exit selections   If a  value  is specified  sets the element s bound data to the specified value on all selected elements  If the  value  is a constant  all elements are given the same datum  otherwise  if the  value  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     The function is then used to set each element s new data  A null value will delete the bound data   If a  value  is not specified  returns the bound datum for the first  non null  element in the selection  This is generally useful only if you know the selection contains exactly one element   This method is useful for accessing HTML5  custom data attributes  http   www w3 org TR html5 dom html custom data attribute   For example  given the following elements      html  ul id  list      li data username  shawnbot  Shawn Allen  li     li data username  mbostock  Mike Bostock  li    ul       You can expose the custom data attributes by setting each element s data as the built in  dataset  http   www w3 org TR html5 dom html dom dataset  property      js selection datum function     return this dataset              Handling Events  For interaction  selections allow listening for and dispatching of events    a name  selection on  href   selection on     a   i selection  i   b on  b   i typenames  i     i listener  i     i capture  i          https   github com d3 d3 selection blob master src selection on js  Source    Adds or removes a  listener  to each selected element for the specified event  typenames   The  typenames  is a string event type  such as  click    mouseover   or  submit   any  DOM event type  https   developer mozilla org en US docs Web Events Standard events  supported by your browser may be used  The type may be optionally followed by a period       and a name  the optional name allows multiple callbacks to be registered to receive events of the same type  such as  click foo  and  click bar   To specify multiple typenames  separate typenames with spaces  such as  input change  or  click foo click bar    When a specified event is dispatched on a selected element  the specified  listener  will be evaluated for the element  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     Listeners always see the latest datum for their element  but the index is a property of the selection and is fixed when the listener is assigned  to update the index  re assign the listener  To access the current event within a listener  use  d3 event   event    If an event listener was previously registered for the same  typename  on a selected element  the old listener is removed before the new listener is added  To remove a listener  pass null as the  listener   To remove all listeners for a given name  pass null as the  listener  and   foo  as the  typename   where  foo  is the name  to remove all listeners with no name  specify     as the  typename    An optional  capture  flag may be specified which corresponds to the W3C  useCapture flag  http   www w3 org TR DOM Level 2 Events events html Events registration    After initiating capture  all events of the specified type will be dispatched to the registered EventListener before being dispatched to any EventTargets beneath them in the tree  Events which are bubbling upward through the tree will not trigger an EventListener designated to use capture    If a  listener  is not specified  returns the currently assigned listener for the specified event  typename  on the first  non null  selected element  if any  If multiple typenames are specified  the first matching listener is returned    a name  selection dispatch  href   selection dispatch     a   i selection  i   b dispatch  b   i type  i     i parameters  i         https   github com d3 d3 selection blob master src selection dispatch js  Source    Dispatches a  custom event  http   www w3 org TR dom  interface customevent  of the specified  type  to each selected element  in order  An optional  parameters  map may be specified to set additional properties of the event  It may contain the following fields       bubbles   https   www w3 org TR dom  dom event bubbles    if true  the event is dispatched to ancestors in reverse tree order      cancelable   https   www w3 org TR dom  dom event cancelable    if true   event  preventDefault is allowed      detail   https   www w3 org TR dom  dom customevent detail    any custom data associated with the event   If  parameters  is a function  it is evaluated for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     It must return the parameters map for the current element    a name  event  href   event     a  d3  b event  b   The current  event  https   developer mozilla org en US docs DOM event   if any  This is set during the invocation of an event listener  and is reset after the listener terminates  Use this to access standard event fields such as   event  timeStamp  https   www w3 org TR dom  dom event timestamp  and methods such as   event  preventDefault  https   www w3 org TR dom  dom event preventdefault   While you can use the native   event  pageX  https   developer mozilla org en DOM event pageX  and   event  pageY  https   developer mozilla org en DOM event pageY   it is often more convenient to transform the event position to the local coordinate system of the container that received the event using  d3 mouse   mouse    d3 touch   touch  or  d3 touches   touches    If you use Babel  Webpack  or another ES6 to ES5 bundler  be aware that the value of d3 event changes during an event  An import of d3 event must be a  live binding  http   www 2ality com 2015 07 es6 module exports html   so you may need to configure the bundler to import from D3 s ES6 modules rather than from the generated UMD bundle  not all bundlers observe  jsnext main  https   github com rollup rollup wiki jsnext main   Also beware of conflicts with the   window  event  https   developer mozilla org en US docs Web API Window event  global    a name  customEvent  href   customEvent     a  d3  b customEvent  b   i event  i    i listener  i     i that  i     i arguments  i          https   github com d3 d3 selection blob master src selection on js L98  Source    Invokes the specified  listener   using the specified  that   this  context and passing the specified  arguments   if any  During the invocation   d3 event   event  is set to the specified  event   after the listener returns  or throws an error   d3 event is restored to its previous value  In addition  sets  event  sourceEvent to the prior value of d3 event  allowing custom events to retain a reference to the originating native event  Returns the value returned by the  listener     a name  mouse  href   mouse     a  d3  b mouse  b   i container  i        https   github com d3 d3 selection blob master src mouse js  Source    Returns the  x  and  y  coordinates of the  current event   event  relative to the specified  container   The container may be an HTML or SVG container element  such as a  G element  http   www w3 org TR SVG struct html Groups  or an  SVG element  http   www w3 org TR SVG struct html SVGElement   The coordinates are returned as a two element array of numbers   x    y      a name  touch  href   touch     a  d3  b touch  b   i container  i     i touches  i     i identifier  i        https   github com d3 d3 selection blob master src touch js  Source    Returns the  x  and  y  coordinates of the touch with the specified  identifier  associated with the  current event   event  relative to the specified  container   The container may be an HTML or SVG container element  such as a  G element  http   www w3 org TR SVG struct html Groups  or an  SVG element  http   www w3 org TR SVG struct html SVGElement   The coordinates are returned as a two element array of numbers   x    y    If there is no touch with the specified identifier in  touches   returns null  this can be useful for ignoring touchmove events where the only some touches have moved  If  touches  is not specified  it defaults to the current event s  changedTouches  http   developer apple com library safari documentation UserExperience Reference TouchEventClassReference TouchEvent TouchEvent html   apple ref javascript instp TouchEvent changedTouches  property    a name  touches  href   touches     a  d3  b touches  b   i container  i     i touches  i         https   github com d3 d3 selection blob master src touches js  Source    Returns the  x  and  y  coordinates of the touches associated with the  current event   event  relative to the specified  container   The container may be an HTML or SVG container element  such as a  G element  http   www w3 org TR SVG struct html Groups  or an  SVG element  http   www w3 org TR SVG struct html SVGElement   The coordinates are returned as an array of two element arrays of numbers      x1    y1      x2    y2         If  touches  is not specified  it defaults to the current event s  touches  http   developer apple com library safari documentation UserExperience Reference TouchEventClassReference TouchEvent TouchEvent html   apple ref javascript instp TouchEvent touches  property    a name  clientPoint  href   clientPoint     a  d3  b clientPoint  b   i container  i    i event  i        https   github com d3 d3 selection blob master src point js  Source    Returns the  x  and  y  coordinates of the specified  event  relative to the specified  container    The  event  may also be a  touch  https   www w3 org TR touch events  touch interface    The container may be an HTML or SVG container element  such as a  G element  http   www w3 org TR SVG struct html Groups  or an  SVG element  http   www w3 org TR SVG struct html SVGElement   The coordinates are returned as a two element array of numbers   x    y         Control Flow  For advanced usage  selections provide methods for custom control flow    a name  selection each  href   selection each     a   i selection  i   b each  b   i function  i        https   github com d3 d3 selection blob master src selection each js  Source    Invokes the specified  function  for each selected element  in order  being passed the current datum   d    the current index   i    and the current group   nodes    with  this  as the current DOM element   nodes   i     This method can be used to invoke arbitrary code for each selected element  and is useful for creating a context to access parent and child data simultaneously  such as      js parent each function p  j      d3 select this       selectAll   child          text function d  i    return  child     d name     of     p name               See  Sized Donut Multiples  http   bl ocks org mbostock 4c5fad723c87d2fd8273  for an example    a name  selection call  href   selection call     a   i selection  i   b call  b   i function  i     i arguments   i         https   github com d3 d3 selection blob master src selection call js  Source    Invokes the specified  function  exactly once  passing in this selection along with any optional  arguments   Returns this selection  This is equivalent to invoking the function by hand but facilitates method chaining  For example  to set several styles in a reusable function      js function name selection  first  last      selection        attr  first name   first         attr  last name   last          Now say      js d3 selectAll  div   call name   John    Snow         This is roughly equivalent to      js name d3 selectAll  div     John    Snow         The only difference is that  selection  call always returns the  selection  and not the return value of the called  function    name     a name  selection empty  href   selection empty     a   i selection  i   b empty  b         https   github com d3 d3 selection blob master src selection empty js  Source    Returns true if this selection contains no  non null  elements    a name  selection nodes  href   selection nodes     a   i selection  i   b nodes  b         https   github com d3 d3 selection blob master src selection nodes js  Source    Returns an array of all  non null  elements in this selection    a name  selection node  href   selection node     a   i selection  i   b node  b         https   github com d3 d3 selection blob master src selection node js  Source    Returns the first  non null  element in this selection  If the selection is empty  returns null    a name  selection size  href   selection size     a   i selection  i   b size  b         https   github com d3 d3 selection blob master src selection size js  Source    Returns the total number of elements in this selection       Local Variables  D3 locals allow you to define local state independent of data  For instance  when rendering  small multiples  http   bl ocks org mbostock e1192fe405703d8321a5187350910e08  of time series data  you might want the same  x  scale for all charts but distinct  y  scales to compare the relative performance of each metric  D3 locals are scoped by DOM elements  on set  the value is stored on the given element  on get  the value is retrieved from given element or the nearest ancestor that defines it    a name  local  href   local     a  d3  b local  b         https   github com d3 d3 selection blob master src local js  Source    Declares a new local variable  For example      js var foo   d3 local         Like  var   each local is a distinct symbolic reference  unlike  var   the value of each local is also scoped by the DOM    a name  local set  href   local set     a   i local  i   b set  b   i node  i    i value  i        https   github com d3 d3 selection blob master src local js L18  Source    Sets the value of this local on the specified  node  to the  value   and returns the specified  value   This is often performed using   selection  each   selection each       js selection each function d    foo set this  d value            If you are just setting a single variable  consider using   selection  property   selection property       js selection property foo  function d    return d value            a name  local get  href   local get     a   i local  i   b get  b   i node  i        https   github com d3 d3 selection blob master src local js L13  Source    Returns the value of this local on the specified  node   If the  node  does not define this local  returns the value from the nearest ancestor that defines it  Returns undefined if no ancestor defines this local    a name  local remove  href   local remove     a   i local  i   b remove  b   i node  i        https   github com d3 d3 selection blob master src local js L21  Source    Deletes this local s value from the specified  node   Returns true if the  node  defined this local prior to removal  and false otherwise  If ancestors also define this local  those definitions are unaffected  and thus   local  get   local get  will still return the inherited value    a name  local toString  href   local toString     a   i local  i   b toString  b         https   github com d3 d3 selection blob master src local js L24  Source    Returns the automatically generated identifier for this local  This is the name of the property that is used to store the local s value on elements  and thus you can also set or get the local s value using  element   local   or by using   selection  property   selection property        Namespaces  XML namespaces are fun  Right  Fortunately you can mostly ignore them    a name  namespace  href   namespace     a  d3  b namespace  b   i name  i        https   github com d3 d3 selection blob master src namespace js  Source    Qualifies the specified  name   which may or may not have a namespace prefix  If the name contains a colon        the substring before the colon is interpreted as the namespace prefix  which must be registered in  d3 namespaces   namespaces   Returns an object  space  and  local  attributes describing the full namespace URL and the local name  For example      js d3 namespace  svg text        space   http   www w3 org 2000 svg   local   text        If the name does not contain a colon  this function merely returns the input name    a name  namespaces  href   namespaces     a  d3  b namespaces  b       https   github com d3 d3 selection blob master src namespaces js  Source    The map of registered namespace prefixes  The initial value is      js     svg   http   www w3 org 2000 svg     xhtml   http   www w3 org 1999 xhtml     xlink   http   www w3 org 1999 xlink     xml   http   www w3 org XML 1998 namespace     xmlns   http   www w3 org 2000 xmlns          Additional prefixes may be assigned as needed to create elements or attributes in other namespaces  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-selection"},{"name":"d3/d3-plugins","artist":"return, specifi, sourc, array, valu","id":40,"playcount":479,"description":"d3/d3-plugins return, specifi, sourc, array, valu   D3 Plugins  These plugins are not compatible with the latest version of D3  V4  For the latest versions  see      d3 hexbin  https   github com d3 d3 hexbin     d3 sankey  https   github com d3 d3 sankey   Please note  the plugins in this repository will soon be broken up into separate repositories for easier distributed ownership  If you have a new plugin you d like to share  please add a link to it from the  D3 plugins wiki  https   github com mbostock d3 wiki Plugins   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-plugins"},{"name":"d3/d3-shape","artist":"return, specifi, sourc, array, valu","id":41,"playcount":89816,"description":"d3/d3-shape return, specifi, sourc, array, valu   d3 shape  Visualizations typically consist of discrete graphical marks  such as  symbols   symbols    arcs   arcs    lines   lines  and  areas   areas   While the rectangles of a bar chart may be easy enough to generate directly using  SVG  http   www w3 org TR SVG paths html PathData  or  Canvas  http   www w3 org TR 2dcontext  canvaspathmethods   other shapes are complex  such as rounded annular sectors and centripetal Catmull Rom splines  This module provides a variety of shape generators for your convenience   As with other aspects of D3  these shapes are driven by data  each shape generator exposes accessors that control how the input data are mapped to a visual representation  For example  you might define a line generator for a time series by  scaling  https   github com d3 d3 scale  fields of your data to fit the chart      js var line   d3 line        x function d    return x d date           y function d    return y d value            This line generator can then be used to compute the  d  attribute of an SVG path element      js path datum data  attr  d   line        Or you can use it to render to a Canvas 2D context      js line context context  data        For more  read  Introducing d3 shape  https   medium com  mbostock introducing d3 shape 73f8367e6d12       Installing  If you use NPM   npm install d3 shape   Otherwise  download the  latest release  https   github com d3 d3 shape releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 shape v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 path v1 min js    script   script src  https   d3js org d3 shape v1 min js    script   script   var line   d3 line       script        Try d3 shape in your browser   https   tonicdev com npm d3 shape      API Reference     Arcs   arcs     Pies   pies     Lines   lines     Areas   areas     Curves   curves     Custom Curves   custom curves     Links   links     Symbols   symbols     Custom Symbol Types   custom symbol types     Stacks   stacks       Arcs    img alt  Pie Chart  src  https   raw githubusercontent com d3 d3 shape master img pie png  width  295  height  295    http   bl ocks org mbostock 8878e7fd82034f1d63cf   img alt  Donut Chart  src  https   raw githubusercontent com d3 d3 shape master img donut png  width  295  height  295    http   bl ocks org mbostock 2394b23da1994fc202e1   The arc generator produces a  circular  https   en wikipedia org wiki Circular sector  or  annular  https   en wikipedia org wiki Annulus   mathematics    sector  as in a pie or donut chart  If the difference between the  start   arc startAngle  and  end   arc endAngle  angles  the  angular span   is greater than     https   en wikipedia org wiki Turn   geometry   Tau proposal   the arc generator will produce a complete circle or annulus  If it is less than    arcs may have  rounded corners   arc cornerRadius  and  angular padding   arc padAngle   Arcs are always centered at  0 0   use a transform  see   SVG  http   www w3 org TR SVG coords html TransformAttribute    Canvas  http   www w3 org TR 2dcontext  transformations   to move the arc to a different position   See also the  pie generator   pies   which computes the necessary angles to represent an array of data as a pie or donut chart  these angles can then be passed to an arc generator    a name  arc  href   arc     a  d3  b arc  b         https   github com d3 d3 shape blob master src arc js  Source    Constructs a new arc generator with the default settings    a name   arc  href    arc     a   i arc  i   i arguments   i        https   github com d3 d3 shape blob master src arc js L89  Source    Generates an arc for the given  arguments   The  arguments  are arbitrary  they are simply propagated to the arc generator s accessor functions along with the  this  object  For example  with the default settings  an object with radii and angles is expected      js var arc   d3 arc     arc     innerRadius  0    outerRadius  100    startAngle  0    endAngle  Math PI   2         M0  100A100 100 0 0 1 100 0L0 0Z       If the radii and angles are instead defined as constants  you can generate an arc without any arguments      js var arc   d3 arc        innerRadius 0       outerRadius 100       startAngle 0       endAngle Math PI   2    arc        M0  100A100 100 0 0 1 100 0L0 0Z       If the arc generator has a  context   arc context   then the arc is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls and this function returns void  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string is returned    a name  arc centroid  href   arc centroid     a   i arc  i   b centroid  b   i arguments   i        https   github com d3 d3 shape blob master src arc js L224  Source    Computes the midpoint   x    y   of the center line of the arc that would be  generated    arc  by the given  arguments   The  arguments  are arbitrary  they are simply propagated to the arc generator s accessor functions along with the  this  object  To be consistent with the generated arc  the accessors must be deterministic   i e    return the same value given the same arguments  The midpoint is defined as   startAngle   arc startAngle     endAngle   arc endAngle     2 and   innerRadius   arc innerRadius     outerRadius   arc outerRadius     2  For example     img alt  Circular Sector Centroids  src  https   raw githubusercontent com d3 d3 shape master img centroid circular sector png  width  250  height  250    http   bl ocks org mbostock 9b5a2fd1ce1a146f27e4   img alt  Annular Sector Centroids  src  https   raw githubusercontent com d3 d3 shape master img centroid annular sector png  width  250  height  250    http   bl ocks org mbostock c274877f647361f3df7d   Note that this is   not the geometric center   of the arc  which may be outside the arc  this method is merely a convenience for positioning labels    a name  arc innerRadius  href   arc innerRadius     a   i arc  i   b innerRadius  b    i radius  i         https   github com d3 d3 shape blob master src arc js L230  Source    If  radius  is specified  sets the inner radius to the specified function or number and returns this arc generator  If  radius  is not specified  returns the current inner radius accessor  which defaults to      js function innerRadius d      return d innerRadius         Specifying the inner radius as a function is useful for constructing a stacked polar bar chart  often in conjunction with a  sqrt scale  https   github com d3 d3 scale sqrt   More commonly  a constant inner radius is used for a donut or pie chart  If the outer radius is smaller than the inner radius  the inner and outer radii are swapped  A negative value is treated as zero    a name  arc outerRadius  href   arc outerRadius     a   i arc  i   b outerRadius  b    i radius  i         https   github com d3 d3 shape blob master src arc js L234  Source    If  radius  is specified  sets the outer radius to the specified function or number and returns this arc generator  If  radius  is not specified  returns the current outer radius accessor  which defaults to      js function outerRadius d      return d outerRadius         Specifying the outer radius as a function is useful for constructing a coxcomb or polar bar chart  often in conjunction with a  sqrt scale  https   github com d3 d3 scale sqrt   More commonly  a constant outer radius is used for a pie or donut chart  If the outer radius is smaller than the inner radius  the inner and outer radii are swapped  A negative value is treated as zero    a name  arc cornerRadius  href   arc cornerRadius     a   i arc  i   b cornerRadius  b    i radius  i         https   github com d3 d3 shape blob master src arc js L238  Source    If  radius  is specified  sets the corner radius to the specified function or number and returns this arc generator  If  radius  is not specified  returns the current corner radius accessor  which defaults to      js function cornerRadius       return 0         If the corner radius is greater than zero  the corners of the arc are rounded using circles of the given radius  For a circular sector  the two outer corners are rounded  for an annular sector  all four corners are rounded  The corner circles are shown in this diagram     img alt  Rounded Circular Sectors  src  https   raw githubusercontent com d3 d3 shape master img rounded circular sector png  width  250  height  250    http   bl ocks org mbostock e5e3680f3079cf5c3437   img alt  Rounded Annular Sectors  src  https   raw githubusercontent com d3 d3 shape master img rounded annular sector png  width  250  height  250    http   bl ocks org mbostock f41f50e06a6c04828b6e   The corner radius may not be larger than   outerRadius   arc outerRadius     innerRadius   arc innerRadius     2  In addition  for arcs whose angular span is less than    the corner radius may be reduced as two adjacent rounded corners intersect  This is occurs more often with the inner corners  See the  arc corners animation  http   bl ocks org mbostock b7671cb38efdfa5da3af  for illustration    a name  arc startAngle  href   arc startAngle     a   i arc  i   b startAngle  b    i angle  i         https   github com d3 d3 shape blob master src arc js L246  Source    If  angle  is specified  sets the start angle to the specified function or number and returns this arc generator  If  angle  is not specified  returns the current start angle accessor  which defaults to      js function startAngle d      return d startAngle         The  angle  is specified in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise  If  endAngle   startAngle       a complete circle or annulus is generated rather than a sector    a name  arc endAngle  href   arc endAngle     a   i arc  i   b endAngle  b    i angle  i         https   github com d3 d3 shape blob master src arc js L250  Source    If  angle  is specified  sets the end angle to the specified function or number and returns this arc generator  If  angle  is not specified  returns the current end angle accessor  which defaults to      js function endAngle d      return d endAngle         The  angle  is specified in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise  If  endAngle   startAngle       a complete circle or annulus is generated rather than a sector    a name  arc padAngle  href   arc padAngle     a   i arc  i   b padAngle  b    i angle  i         https   github com d3 d3 shape blob master src arc js L254  Source    If  angle  is specified  sets the pad angle to the specified function or number and returns this arc generator  If  angle  is not specified  returns the current pad angle accessor  which defaults to      js function padAngle       return d    d padAngle         The pad angle is converted to a fixed linear distance separating adjacent arcs  defined as  padRadius   arc padRadius    padAngle  This distance is subtracted equally from the  start   arc startAngle  and  end   arc endAngle  of the arc  If the arc forms a complete circle or annulus  as when  endAngle   startAngle       the pad angle is ignored   If the  inner radius   arc innerRadius  or angular span is small relative to the pad angle  it may not be possible to maintain parallel edges between adjacent arcs  In this case  the inner edge of the arc may collapse to a point  similar to a circular sector  For this reason  padding is typically only applied to annular sectors   i e    when innerRadius is positive   as shown in this diagram     img alt  Padded Circular Sectors  src  https   raw githubusercontent com d3 d3 shape master img padded circular sector png  width  250  height  250    http   bl ocks org mbostock f37b07b92633781a46f7   img alt  Padded Annular Sectors  src  https   raw githubusercontent com d3 d3 shape master img padded annular sector png  width  250  height  250    http   bl ocks org mbostock 99f0a6533f7c949cf8b8   The recommended minimum inner radius when using padding is outerRadius    padAngle   sin     where   is the angular span of the smallest arc before padding  For example  if the outer radius is 200 pixels and the pad angle is 0 02 radians  a reasonable   is 0 04 radians  and a reasonable inner radius is 100 pixels  See the  arc padding animation  http   bl ocks org mbostock 053fcc2295a445afab07  for illustration   Often  the pad angle is not set directly on the arc generator  but is instead computed by the  pie generator   pies  so as to ensure that the area of padded arcs is proportional to their value  see   pie  padAngle   pie padAngle   See the  pie padding animation  http   bl ocks org mbostock 3e961b4c97a1b543fff2  for illustration  If you apply a constant pad angle to the arc generator directly  it tends to subtract disproportionately from smaller arcs  introducing distortion    a name  arc padRadius  href   arc padRadius     a   i arc  i   b padRadius  b    i radius  i         https   github com d3 d3 shape blob master src arc js L242  Source    If  radius  is specified  sets the pad radius to the specified function or number and returns this arc generator  If  radius  is not specified  returns the current pad radius accessor  which defaults to null  indicating that the pad radius should be automatically computed as sqrt  innerRadius   arc innerRadius    innerRadius    outerRadius   arc outerRadius    outerRadius   The pad radius determines the fixed linear distance separating adjacent arcs  defined as padRadius    padAngle   arc padAngle     a name  arc context  href   arc context     a   i arc  i   b context  b    i context  i         https   github com d3 d3 shape blob master src arc js L258  Source    If  context  is specified  sets the context and returns this arc generator  If  context  is not specified  returns the current context  which defaults to null  If the context is not null  then the  generated arc    arc  is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string representing the generated arc is returned       Pies  The pie generator does not produce a shape directly  but instead computes the necessary angles to represent a tabular dataset as a pie or donut chart  these angles can then be passed to an  arc generator   arcs     a name  pie  href   pie     a  d3  b pie  b         https   github com d3 d3 shape blob master src pie js  Source    Constructs a new pie generator with the default settings    a name   pie  href    pie     a   i pie  i   i data  i     i arguments   i         https   github com d3 d3 shape blob master src pie js L14  Source    Generates a pie for the given array of  data   returning an array of objects representing each datum s arc angles  Any additional  arguments  are arbitrary  they are simply propagated to the pie generator s accessor functions along with the  this  object  The length of the returned array is the same as  data   and each element  i  in the returned array corresponds to the element  i  in the input data  Each object in the returned array has the following properties      data    the input datum  the corresponding element in the input data array     value    the numeric  value   pie value  of the arc     index    the zero based  sorted index   pie sort  of the arc     startAngle    the  start angle   pie startAngle  of the arc     endAngle    the  end angle   pie endAngle  of the arc     padAngle    the  pad angle   pie padAngle  of the arc   This representation is designed to work with the arc generator s default  startAngle   arc startAngle    endAngle   arc endAngle  and  padAngle   arc padAngle  accessors  The angular units are arbitrary  but if you plan to use the pie generator in conjunction with an  arc generator   arcs   you should specify angles in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise   Given a small dataset of numbers  here is how to compute the arc angles to render this data as a pie chart      js var data    1  1  2  3  5  8  13  21   var arcs   d3 pie   data        The first pair of parens   pie      constructs   pie  a default pie generator  The second   pie   data     invokes    pie  this generator on the dataset  returning an array of objects      json       data    1   value    1   index   6   startAngle   6 050474740247008   endAngle   6 166830023713296   padAngle   0       data    1   value    1   index   7   startAngle   6 166830023713296   endAngle   6 283185307179584   padAngle   0       data    2   value    2   index   5   startAngle   5 817764173314431   endAngle   6 050474740247008   padAngle   0       data    3   value    3   index   4   startAngle   5 468698322915565   endAngle   5 817764173314431   padAngle   0       data    5   value    5   index   3   startAngle   4 886921905584122   endAngle   5 468698322915565   padAngle   0       data    8   value    8   index   2   startAngle   3 956079637853813   endAngle   4 886921905584122   padAngle   0       data   13   value   13   index   1   startAngle   2 443460952792061   endAngle   3 956079637853813   padAngle   0       data   21   value   21   index   0   startAngle   0 000000000000000   endAngle   2 443460952792061   padAngle   0         Note that the returned array is in the same order as the data  even though this pie chart is  sorted   pie sortValues  by descending value  starting with the arc for the last datum  value 21  at 12 o clock    a name  pie value  href   pie value     a   i pie  i   b value  b    i value  i         https   github com d3 d3 shape blob master src pie js L54  Source    If  value  is specified  sets the value accessor to the specified function or number and returns this pie generator  If  value  is not specified  returns the current value accessor  which defaults to      js function value d      return d         When a pie is  generated    pie   the value accessor will be invoked for each element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  The default value accessor assumes that the input data are numbers  or that they are coercible to numbers using  valueOf  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Object valueOf   If your data are not simply numbers  then you should specify an accessor that returns the corresponding numeric value for a given datum  For example      js var data         number    4   name    Locke        number    8   name    Reyes        number   15   name    Ford        number   16   name    Jarrah        number   23   name    Shephard        number   42   name    Kwon       var arcs   d3 pie        value function d    return d number          data        This is similar to  mapping  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Array map  your data to values before invoking the pie generator      js var arcs   d3 pie   data map function d    return d number            The benefit of an accessor is that the input data remains associated with the returned objects  thereby making it easier to access other fields of the data  for example to set the color or to add text labels    a name  pie sort  href   pie sort     a   i pie  i   b sort  b    i compare  i         https   github com d3 d3 shape blob master src pie js L62  Source    If  compare  is specified  sets the data comparator to the specified function and returns this pie generator  If  compare  is not specified  returns the current data comparator  which defaults to null  If both the data comparator and the value comparator are null  then arcs are positioned in the original input order  Otherwise  the data is sorted according to the data comparator  and the resulting order is used  Setting the data comparator implicitly sets the  value comparator   pie sortValues  to null   The  compare  function takes two arguments  a  and  b   each elements from the input data array  If the arc for  a  should be before the arc for  b   then the comparator must return a number less than zero  if the arc for  a  should be after the arc for  b   then the comparator must return a number greater than zero  returning zero means that the relative order of  a  and  b  is unspecified  For example  to sort arcs by their associated name      js pie sort function a  b    return a name localeCompare b name            Sorting does not affect the order of the  generated arc array    pie  which is always in the same order as the input data array  it merely affects the computed angles of each arc  The first arc starts at the  start angle   pie startAngle  and the last arc ends at the  end angle   pie endAngle     a name  pie sortValues  href   pie sortValues     a   i pie  i   b sortValues  b    i compare  i         https   github com d3 d3 shape blob master src pie js L58  Source    If  compare  is specified  sets the value comparator to the specified function and returns this pie generator  If  compare  is not specified  returns the current value comparator  which defaults to descending value  The default value comparator is implemented as      js function compare a  b      return b   a         If both the data comparator and the value comparator are null  then arcs are positioned in the original input order  Otherwise  the data is sorted according to the data comparator  and the resulting order is used  Setting the value comparator implicitly sets the  data comparator   pie sort  to null   The value comparator is similar to the  data comparator   pie sort   except the two arguments  a  and  b  are values derived from the input data array using the  value accessor   pie value   not the data elements  If the arc for  a  should be before the arc for  b   then the comparator must return a number less than zero  if the arc for  a  should be after the arc for  b   then the comparator must return a number greater than zero  returning zero means that the relative order of  a  and  b  is unspecified  For example  to sort arcs by ascending value      js pie sortValues function a  b    return a   b           Sorting does not affect the order of the  generated arc array    pie  which is always in the same order as the input data array  it merely affects the computed angles of each arc  The first arc starts at the  start angle   pie startAngle  and the last arc ends at the  end angle   pie endAngle     a name  pie startAngle  href   pie startAngle     a   i pie  i   b startAngle  b    i angle  i         https   github com d3 d3 shape blob master src pie js L66  Source    If  angle  is specified  sets the overall start angle of the pie to the specified function or number and returns this pie generator  If  angle  is not specified  returns the current start angle accessor  which defaults to      js function startAngle       return 0         The start angle here means the  overall  start angle of the pie   i e    the start angle of the first arc  The start angle accessor is invoked once  being passed the same arguments and  this  context as the  pie generator    pie   The units of  angle  are arbitrary  but if you plan to use the pie generator in conjunction with an  arc generator   arcs   you should specify an angle in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise    a name  pie endAngle  href   pie endAngle     a   i pie  i   b endAngle  b    i angle  i         https   github com d3 d3 shape blob master src pie js L70  Source    If  angle  is specified  sets the overall end angle of the pie to the specified function or number and returns this pie generator  If  angle  is not specified  returns the current end angle accessor  which defaults to      js function endAngle       return 2   Math PI         The end angle here means the  overall  end angle of the pie   i e    the end angle of the last arc  The end angle accessor is invoked once  being passed the same arguments and  this  context as the  pie generator    pie   The units of  angle  are arbitrary  but if you plan to use the pie generator in conjunction with an  arc generator   arcs   you should specify an angle in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise   The value of the end angle is constrained to  startAngle   pie startAngle       such that  endAngle   startAngle         a name  pie padAngle  href   pie padAngle     a   i pie  i   b padAngle  b    i angle  i         https   github com d3 d3 shape blob master src pie js L74  Source    If  angle  is specified  sets the pad angle to the specified function or number and returns this pie generator  If  angle  is not specified  returns the current pad angle accessor  which defaults to      js function padAngle       return 0         The pad angle here means the angular separation between each adjacent arc  The total amount of padding reserved is the specified  angle  times the number of elements in the input data array  and at most  endAngle   startAngle   the remaining space is then divided proportionally by  value   pie value  such that the relative area of each arc is preserved  See the  pie padding animation  http   bl ocks org mbostock 3e961b4c97a1b543fff2  for illustration  The pad angle accessor is invoked once  being passed the same arguments and  this  context as the  pie generator    pie   The units of  angle  are arbitrary  but if you plan to use the pie generator in conjunction with an  arc generator   arcs   you should specify an angle in radians       Lines    img width  295  height  154  alt  Line Chart  src  https   raw githubusercontent com d3 d3 shape master img line png    http   bl ocks org mbostock 1550e57e12e73b86ad9e   The line generator produces a  spline  https   en wikipedia org wiki Spline   mathematics    or  polyline  https   en wikipedia org wiki Polygonal chain   as in a line chart  Lines also appear in many other visualization types  such as the links in  hierarchical edge bundling  http   bl ocks org mbostock 7607999     a name  line  href   line     a  d3  b line  b         https   github com d3 d3 shape blob master src line js  Source    Constructs a new line generator with the default settings    a name   line  href    line     a   i line  i   i data  i        https   github com d3 d3 shape blob master src line js L14  Source    Generates a line for the given array of  data   Depending on this line generator s associated  curve   line curve   the given input  data  may need to be sorted by  x  value before being passed to the line generator  If the line generator has a  context   line context   then the line is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls and this function returns void  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string is returned    a name  line x  href   line x     a   i line  i   b x  b    i x  i         https   github com d3 d3 shape blob master src line js L34  Source    If  x  is specified  sets the x accessor to the specified function or number and returns this line generator  If  x  is not specified  returns the current x accessor  which defaults to      js function x d      return d 0          When a line is  generated    line   the x accessor will be invoked for each  defined   line defined  element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  The default x accessor assumes that the input data are two element arrays of numbers  If your data are in a different format  or if you wish to transform the data before rendering  then you should specify a custom accessor  For example  if  x  is a  time scale  https   github com d3 d3 scale time scales  and  y  is a  linear scale  https   github com d3 d3 scale linear scales       js var data        date  new Date 2007  3  24   value  93 24      date  new Date 2007  3  25   value  95 35      date  new Date 2007  3  26   value  98 84      date  new Date 2007  3  27   value  99 92      date  new Date 2007  3  30   value  99 80      date  new Date 2007  4   1   value  99 47           var line   d3 line        x function d    return x d date           y function d    return y d value             a name  line y  href   line y     a   i line  i   b y  b    i y  i         https   github com d3 d3 shape blob master src line js L38  Source    If  y  is specified  sets the y accessor to the specified function or number and returns this line generator  If  y  is not specified  returns the current y accessor  which defaults to      js function y d      return d 1          When a line is  generated    line   the y accessor will be invoked for each  defined   line defined  element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  The default y accessor assumes that the input data are two element arrays of numbers  See   line  x   line x  for more information    a name  line defined  href   line defined     a   i line  i   b defined  b    i defined  i         https   github com d3 d3 shape blob master src line js L42  Source    If  defined  is specified  sets the defined accessor to the specified function or boolean and returns this line generator  If  defined  is not specified  returns the current defined accessor  which defaults to      js function defined       return true         The default accessor thus assumes that the input data is always defined  When a line is  generated    line   the defined accessor will be invoked for each element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  If the given element is defined   i e    if the defined accessor returns a truthy value for this element   the  x   line x  and  y   line y  accessors will subsequently be evaluated and the point will be added to the current line segment  Otherwise  the element will be skipped  the current line segment will be ended  and a new line segment will be generated for the next defined point  As a result  the generated line may have several discrete segments  For example     img src  https   raw githubusercontent com d3 d3 shape master img line defined png  width  480  height  250  alt  Line with Missing Data    http   bl ocks org mbostock 0533f44f2cfabecc5e3a   Note that if a line segment consists of only a single point  it may appear invisible unless rendered with rounded or square  line caps  https   developer mozilla org en US docs Web SVG Attribute stroke linecap   In addition  some curves such as  curveCardinalOpen   curveCardinalOpen  only render a visible segment if it contains multiple points    a name  line curve  href   line curve     a   i line  i   b curve  b    i curve  i         https   github com d3 d3 shape blob master src line js L46  Source    If  curve  is specified  sets the  curve factory   curves  and returns this line generator  If  curve  is not specified  returns the current curve factory  which defaults to  curveLinear   curveLinear     a name  line context  href   line context     a   i line  i   b context  b    i context  i         https   github com d3 d3 shape blob master src line js L50  Source    If  context  is specified  sets the context and returns this line generator  If  context  is not specified  returns the current context  which defaults to null  If the context is not null  then the  generated line    line  is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string representing the generated line is returned    a name  lineRadial  href   lineRadial     a  d3  b lineRadial  b         https   github com d3 d3 shape blob master src lineRadial js  Source     img alt  Radial Line  width  250  height  250  src  https   raw githubusercontent com d3 d3 shape master img line radial png    Constructs a new radial line generator with the default settings  A radial line generator is equivalent to the standard Cartesian  line generator   line   except the  x   line x  and  y   line y  accessors are replaced with  angle   lineRadial angle  and  radius   lineRadial radius  accessors  Radial lines are always positioned relative to  0 0   use a transform  see   SVG  http   www w3 org TR SVG coords html TransformAttribute    Canvas  http   www w3 org TR 2dcontext  transformations   to change the origin    a name   lineRadial  href    lineRadial     a   i lineRadial  i   i data  i        https   github com d3 d3 shape blob master src lineRadial js L4  Source    Equivalent to   line     line     a name  lineRadial angle  href   lineRadial angle     a   i lineRadial  i   b angle  b    i angle  i         https   github com d3 d3 shape blob master src lineRadial js L7  Source    Equivalent to   line  x   line x   except the accessor returns the angle in radians  with 0 at   y   12 o clock     a name  lineRadial radius  href   lineRadial radius     a   i lineRadial  i   b radius  b    i radius  i         https   github com d3 d3 shape blob master src lineRadial js L8  Source    Equivalent to   line  y   line y   except the accessor returns the radius  the distance from the origin  0 0     a name  lineRadial defined  href   lineRadial defined     a   i lineRadial  i   b defined  b    i defined  i     Equivalent to   line  defined   line defined     a name  lineRadial curve  href   lineRadial curve     a   i lineRadial  i   b curve  b    i curve  i         https   github com d3 d3 shape blob master src lineRadial js L10  Source    Equivalent to   line  curve   line curve   Note that  curveMonotoneX   curveMonotoneX  or  curveMonotoneY   curveMonotoneY  are not recommended for radial lines because they assume that the data is monotonic in  x  or  y   which is typically untrue of radial lines    a name  lineRadial context  href   lineRadial context     a   i lineRadial  i   b context  b    i context  i     Equivalent to   line  context   line context        Areas    img alt  Area Chart  width  295  height  154  src  https   raw githubusercontent com d3 d3 shape master img area png    http   bl ocks org mbostock 3883195   img alt  Stacked Area Chart  width  295  height  154  src  https   raw githubusercontent com d3 d3 shape master img area stacked png    http   bl ocks org mbostock 3885211   img alt  Difference Chart  width  295  height  154  src  https   raw githubusercontent com d3 d3 shape master img area difference png    http   bl ocks org mbostock 3894205   The area generator produces an area  as in an area chart  An area is defined by two bounding  lines   lines   either splines or polylines  Typically  the two lines share the same   x  values   area x    x0   area x0     x1   area x1    differing only in  y  value   y0   area y0  and  y1   area y1    most commonly  y0 is defined as a constant representing  zero  http   www vox com 2015 11 19 9758062 y axis zero chart   The first line  the  i topline  i   is defined by x1 and y1 and is rendered first  the second line  the  i baseline  i   is defined by x0 and y0 and is rendered second  with the points in reverse order  With a  curveLinear   curveLinear   curve   area curve   this produces a clockwise polygon    a name  area  href   area     a  d3  b area  b         https   github com d3 d3 shape blob master src area js  Source    Constructs a new area generator with the default settings    a name   area  href    area     a   i area  i   i data  i        https   github com d3 d3 shape blob master src area js L17  Source    Generates an area for the given array of  data   Depending on this area generator s associated  curve   area curve   the given input  data  may need to be sorted by  x  value before being passed to the area generator  If the area generator has a  context   line context   then the area is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls and this function returns void  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string is returned    a name  area x  href   area x     a   i area  i   b x  b    i x  i         https   github com d3 d3 shape blob master src area js L59  Source    If  x  is specified  sets  x0   area x0  to  x  and  x1   area x1  to null and returns this area generator  If  x  is not specified  returns the current x0 accessor    a name  area x0  href   area x0     a   i area  i   b x0  b    i x  i         https   github com d3 d3 shape blob master src area js L63  Source    If  x  is specified  sets the x0 accessor to the specified function or number and returns this area generator  If  x  is not specified  returns the current x0 accessor  which defaults to      js function x d      return d 0          When an area is  generated    area   the x0 accessor will be invoked for each  defined   area defined  element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  The default x0 accessor assumes that the input data are two element arrays of numbers  If your data are in a different format  or if you wish to transform the data before rendering  then you should specify a custom accessor  For example  if  x  is a  time scale  https   github com d3 d3 scale time scales  and  y  is a  linear scale  https   github com d3 d3 scale linear scales       js var data        date  new Date 2007  3  24   value  93 24      date  new Date 2007  3  25   value  95 35      date  new Date 2007  3  26   value  98 84      date  new Date 2007  3  27   value  99 92      date  new Date 2007  3  30   value  99 80      date  new Date 2007  4   1   value  99 47           var area   d3 area        x function d    return x d date           y1 function d    return y d value           y0 y 0          a name  area x1  href   area x1     a   i area  i   b x1  b    i x  i         https   github com d3 d3 shape blob master src area js L67  Source    If  x  is specified  sets the x1 accessor to the specified function or number and returns this area generator  If  x  is not specified  returns the current x1 accessor  which defaults to null  indicating that the previously computed  x0   area x0  value should be reused for the x1 value   When an area is  generated    area   the x1 accessor will be invoked for each  defined   area defined  element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  See   area  x0   area x0  for more information    a name  area y  href   area y     a   i area  i   b y  b    i y  i         https   github com d3 d3 shape blob master src area js L71  Source    If  y  is specified  sets  y0   area y0  to  y  and  y1   area y1  to null and returns this area generator  If  y  is not specified  returns the current y0 accessor    a name  area y0  href   area y0     a   i area  i   b y0  b    i y  i         https   github com d3 d3 shape blob master src area js L75  Source    If  y  is specified  sets the y0 accessor to the specified function or number and returns this area generator  If  y  is not specified  returns the current y0 accessor  which defaults to      js function y       return 0         When an area is  generated    area   the y0 accessor will be invoked for each  defined   area defined  element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  See   area  x0   area x0  for more information    a name  area y1  href   area y1     a   i area  i   b y1  b    i y  i         https   github com d3 d3 shape blob master src area js L79  Source    If  y  is specified  sets the y1 accessor to the specified function or number and returns this area generator  If  y  is not specified  returns the current y1 accessor  which defaults to      js function y d      return d 1          A null accessor is also allowed  indicating that the previously computed  y0   area y0  value should be reused for the y1 value  When an area is  generated    area   the y1 accessor will be invoked for each  defined   area defined  element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  See   area  x0   area x0  for more information    a name  area defined  href   area defined     a   i area  i   b defined  b    i defined  i         https   github com d3 d3 shape blob master src area js L96  Source    If  defined  is specified  sets the defined accessor to the specified function or boolean and returns this area generator  If  defined  is not specified  returns the current defined accessor  which defaults to      js function defined       return true         The default accessor thus assumes that the input data is always defined  When an area is  generated    area   the defined accessor will be invoked for each element in the input data array  being passed the element  d   the index  i   and the array  data  as three arguments  If the given element is defined   i e    if the defined accessor returns a truthy value for this element   the  x0   area x0    x1   area x1    y0   area y0  and  y1   area y1  accessors will subsequently be evaluated and the point will be added to the current area segment  Otherwise  the element will be skipped  the current area segment will be ended  and a new area segment will be generated for the next defined point  As a result  the generated area may have several discrete segments  For example     img src  https   raw githubusercontent com d3 d3 shape master img area defined png  width  480  height  250  alt  Area with Missing Data    http   bl ocks org mbostock 3035090   Note that if an area segment consists of only a single point  it may appear invisible unless rendered with rounded or square  line caps  https   developer mozilla org en US docs Web SVG Attribute stroke linecap   In addition  some curves such as  curveCardinalOpen   curveCardinalOpen  only render a visible segment if it contains multiple points    a name  area curve  href   area curve     a   i area  i   b curve  b    i curve  i         https   github com d3 d3 shape blob master src area js L100  Source    If  curve  is specified  sets the  curve factory   curves  and returns this area generator  If  curve  is not specified  returns the current curve factory  which defaults to  curveLinear   curveLinear     a name  area context  href   area context     a   i area  i   b context  b    i context  i         https   github com d3 d3 shape blob master src area js L104  Source    If  context  is specified  sets the context and returns this area generator  If  context  is not specified  returns the current context  which defaults to null  If the context is not null  then the  generated area    area  is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string representing the generated area is returned    a name  area lineX0  href   area lineX0     a   i area  i   b lineX0  b         https   github com d3 d3 shape blob master src area js L83  Source    br  a name  area lineY0  href   area lineY0     a   i area  i   b lineY0  b         https   github com d3 d3 shape blob master src area js L84  Source    Returns a new  line generator   lines  that has this area generator s current  defined accessor   area defined    curve   area curve  and  context   area context   The line s   x  accessor   line x  is this area s   x0  accessor   area x0   and the line s   y  accessor   line y  is this area s   y0  accessor   area y0     a name  area lineX1  href   area lineX1     a   i area  i   b lineX1  b         https   github com d3 d3 shape blob master src area js L92  Source    Returns a new  line generator   lines  that has this area generator s current  defined accessor   area defined    curve   area curve  and  context   area context   The line s   x  accessor   line x  is this area s   x1  accessor   area x1   and the line s   y  accessor   line y  is this area s   y0  accessor   area y0     a name  area lineY1  href   area lineY1     a   i area  i   b lineY1  b         https   github com d3 d3 shape blob master src area js L88  Source    Returns a new  line generator   lines  that has this area generator s current  defined accessor   area defined    curve   area curve  and  context   area context   The line s   x  accessor   line x  is this area s   x0  accessor   area x0   and the line s   y  accessor   line y  is this area s   y1  accessor   area y1     a name  areaRadial  href   areaRadial     a  d3  b areaRadial  b         https   github com d3 d3 shape blob master src areaRadial js  Source     img alt  Radial Area  width  250  height  250  src  https   raw githubusercontent com d3 d3 shape master img area radial png    Constructs a new radial area generator with the default settings  A radial area generator is equivalent to the standard Cartesian  area generator   area   except the  x   area x  and  y   area y  accessors are replaced with  angle   areaRadial angle  and  radius   areaRadial radius  accessors  Radial areas are always positioned relative to  0 0   use a transform  see   SVG  http   www w3 org TR SVG coords html TransformAttribute    Canvas  http   www w3 org TR 2dcontext  transformations   to change the origin    a name   areaRadial  href    areaRadial     a   i areaRadial  i   i data  i    Equivalent to   area     area     a name  areaRadial angle  href   areaRadial angle     a   i areaRadial  i   b angle  b    i angle  i         https   github com d3 d3 shape blob master src areaRadial js L13  Source    Equivalent to   area  x   area x   except the accessor returns the angle in radians  with 0 at   y   12 o clock     a name  areaRadial startAngle  href   areaRadial startAngle     a   i areaRadial  i   b startAngle  b    i angle  i         https   github com d3 d3 shape blob master src areaRadial js L14  Source    Equivalent to   area  x0   area x0   except the accessor returns the angle in radians  with 0 at   y   12 o clock   Note  typically  angle   areaRadial angle  is used instead of setting separate start and end angles    a name  areaRadial endAngle  href   areaRadial endAngle     a   i areaRadial  i   b endAngle  b    i angle  i         https   github com d3 d3 shape blob master src areaRadial js L15  Source    Equivalent to   area  x1   area x1   except the accessor returns the angle in radians  with 0 at   y   12 o clock   Note  typically  angle   areaRadial angle  is used instead of setting separate start and end angles    a name  areaRadial radius  href   areaRadial radius     a   i areaRadial  i   b radius  b    i radius  i         https   github com d3 d3 shape blob master src areaRadial js L16  Source    Equivalent to   area  y   area y   except the accessor returns the radius  the distance from the origin  0 0     a name  areaRadial innerRadius  href   areaRadial innerRadius     a   i areaRadial  i   b innerRadius  b    i radius  i         https   github com d3 d3 shape blob master src areaRadial js L17  Source    Equivalent to   area  y0   area y0   except the accessor returns the radius  the distance from the origin  0 0     a name  areaRadial outerRadius  href   areaRadial outerRadius     a   i areaRadial  i   b outerRadius  b    i radius  i         https   github com d3 d3 shape blob master src areaRadial js L18  Source    Equivalent to   area  y1   area y1   except the accessor returns the radius  the distance from the origin  0 0     a name  areaRadial defined  href   areaRadial defined     a   i areaRadial  i   b defined  b    i defined  i     Equivalent to   area  defined   area defined     a name  areaRadial curve  href   areaRadial curve     a   i areaRadial  i   b curve  b    i curve  i         https   github com d3 d3 shape blob master src areaRadial js L24  Source    Equivalent to   area  curve   area curve   Note that  curveMonotoneX   curveMonotoneX  or  curveMonotoneY   curveMonotoneY  are not recommended for radial areas because they assume that the data is monotonic in  x  or  y   which is typically untrue of radial areas    a name  areaRadial context  href   areaRadial context     a   i areaRadial  i   b context  b    i context  i     Equivalent to   line  context   line context     a name  areaRadial lineStartAngle  href   areaRadial lineStartAngle     a   i areaRadial  i   b lineStartAngle  b         https   github com d3 d3 shape blob master src areaRadial js L19  Source    br  a name  areaRadial lineInnerRadius  href   areaRadial lineInnerRadius     a   i areaRadial  i   b lineInnerRadius  b         https   github com d3 d3 shape blob master src areaRadial js L21  Source    Returns a new  radial line generator   lineRadial  that has this radial area generator s current  defined accessor   areaRadial defined    curve   areaRadial curve  and  context   areaRadial context   The line s  angle accessor   lineRadial angle  is this area s  start angle accessor   areaRadial startAngle   and the line s  radius accessor   lineRadial radius  is this area s  inner radius accessor   areaRadial innerRadius     a name  areaRadial lineEndAngle  href   areaRadial lineEndAngle     a   i areaRadial  i   b lineEndAngle  b         https   github com d3 d3 shape blob master src areaRadial js L20  Source    Returns a new  radial line generator   lineRadial  that has this radial area generator s current  defined accessor   areaRadial defined    curve   areaRadial curve  and  context   areaRadial context   The line s  angle accessor   lineRadial angle  is this area s  end angle accessor   areaRadial endAngle   and the line s  radius accessor   lineRadial radius  is this area s  inner radius accessor   areaRadial innerRadius     a name  areaRadial lineOuterRadius  href   areaRadial lineOuterRadius     a   i areaRadial  i   b lineOuterRadius  b         https   github com d3 d3 shape blob master src areaRadial js L22  Source    Returns a new  radial line generator   lineRadial  that has this radial area generator s current  defined accessor   areaRadial defined    curve   areaRadial curve  and  context   areaRadial context   The line s  angle accessor   lineRadial angle  is this area s  start angle accessor   areaRadial startAngle   and the line s  radius accessor   lineRadial radius  is this area s  outer radius accessor   areaRadial outerRadius        Curves  While  lines   lines  are defined as a sequence of two dimensional   x    y   points  and  areas   areas  are similarly defined by a topline and a baseline  there remains the task of transforming this discrete representation into a continuous shape   i e    how to interpolate between the points  A variety of curves are provided for this purpose   Curves are typically not constructed or used directly  instead being passed to   line  curve   line curve  and   area  curve   area curve   For example      js var line   d3 line        x function d    return x d date           y function d    return y d value           curve d3 curveCatmullRom alpha 0 5          a name  curveBasis  href   curveBasis     a  d3  b curveBasis  b   i context  i        https   github com d3 d3 shape blob master src curve basis js L12  Source     img src  https   raw githubusercontent com d3 d3 shape master img basis png  width  888  height  240  alt  basis    Produces a cubic  basis spline  https   en wikipedia org wiki B spline  using the specified control points  The first and last points are triplicated such that the spline starts at the first point and ends at the last point  and is tangent to the line between the first and second points  and to the line between the penultimate and last points    a name  curveBasisClosed  href   curveBasisClosed     a  d3  b curveBasisClosed  b   i context  i        https   github com d3 d3 shape blob master src curve basisClosed js  Source     img src  https   raw githubusercontent com d3 d3 shape master img basisClosed png  width  888  height  240  alt  basisClosed    Produces a closed cubic  basis spline  https   en wikipedia org wiki B spline  using the specified control points  When a line segment ends  the first three control points are repeated  producing a closed loop with C2 continuity    a name  curveBasisOpen  href   curveBasisOpen     a  d3  b curveBasisOpen  b   i context  i        https   github com d3 d3 shape blob master src curve basisOpen js  Source     img src  https   raw githubusercontent com d3 d3 shape master img basisOpen png  width  888  height  240  alt  basisOpen    Produces a cubic  basis spline  https   en wikipedia org wiki B spline  using the specified control points  Unlike  basis   basis   the first and last points are not repeated  and thus the curve typically does not intersect these points    a name  curveBundle  href   curveBundle     a  d3  b curveBundle  b   i context  i        https   github com d3 d3 shape blob master src curve bundle js  Source     img src  https   raw githubusercontent com d3 d3 shape master img bundle png  width  888  height  240  alt  bundle    Produces a straightened cubic  basis spline  https   en wikipedia org wiki B spline  using the specified control points  with the spline straightened according to the curve s   beta    curveBundle beta   which defaults to 0 85  This curve is typically used in  hierarchical edge bundling  http   bl ocks org mbostock 7607999  to disambiguate connections  as proposed by  Danny Holten  https   www win tue nl vis1 home dholten   in  Hierarchical Edge Bundles  Visualization of Adjacency Relations in Hierarchical Data  https   www win tue nl vis1 home dholten papers bundles infovis pdf   This curve does not implement   curve  areaStart   curve areaStart  and   curve  areaEnd   curve areaEnd   it is intended to work with  d3 line   lines   not  d3 area   areas     a name  curveBundle beta  href   curveBundle beta     a   i bundle  i   b beta  b   i beta  i        https   github com d3 d3 shape blob master src curve bundle js L51  Source    Returns a bundle curve with the specified  beta  in the range  0  1   representing the bundle strength  If  beta  equals zero  a straight line between the first and last point is produced  if  beta  equals one  a standard  basis   basis  spline is produced  For example      js var line   d3 line   curve d3 curveBundle beta 0 5          a name  curveCardinal  href   curveCardinal     a  d3  b curveCardinal  b   i context  i        https   github com d3 d3 shape blob master src curve cardinal js  Source     img src  https   raw githubusercontent com d3 d3 shape master img cardinal png  width  888  height  240  alt  cardinal    Produces a cubic  cardinal spline  https   en wikipedia org wiki Cubic Hermite spline Cardinal spline  using the specified control points  with one sided differences used for the first and last piece  The default  tension   curveCardinal tension  is 0    a name  curveCardinalClosed  href   curveCardinalClosed     a  d3  b curveCardinalClosed  b   i context  i        https   github com d3 d3 shape blob master src curve cardinalClosed js  Source     img src  https   raw githubusercontent com d3 d3 shape master img cardinalClosed png  width  888  height  240  alt  cardinalClosed    Produces a closed cubic  cardinal spline  https   en wikipedia org wiki Cubic Hermite spline Cardinal spline  using the specified control points  When a line segment ends  the first three control points are repeated  producing a closed loop  The default  tension   curveCardinal tension  is 0    a name  curveCardinalOpen  href   curveCardinalOpen     a  d3  b curveCardinalOpen  b   i context  i        https   github com d3 d3 shape blob master src curve cardinalOpen js  Source     img src  https   raw githubusercontent com d3 d3 shape master img cardinalOpen png  width  888  height  240  alt  cardinalOpen    Produces a cubic  cardinal spline  https   en wikipedia org wiki Cubic Hermite spline Cardinal spline  using the specified control points  Unlike  curveCardinal   curveCardinal   one sided differences are not used for the first and last piece  and thus the curve starts at the second point and ends at the penultimate point  The default  tension   curveCardinal tension  is 0    a name  curveCardinal tension  href   curveCardinal tension     a   i cardinal  i   b tension  b   i tension  i        https   github com d3 d3 shape blob master src curve cardinalOpen js L44  Source    Returns a cardinal curve with the specified  tension  in the range  0  1   The  tension  determines the length of the tangents  a  tension  of one yields all zero tangents  equivalent to  curveLinear   curveLinear   a  tension  of zero produces a uniform  Catmull Rom   curveCatmullRom  spline  For example      js var line   d3 line   curve d3 curveCardinal tension 0 5          a name  curveCatmullRom  href   curveCatmullRom     a  d3  b curveCatmullRom  b   i context  i        https   github com d3 d3 shape blob master src curve catmullRom js  Source     img src  https   raw githubusercontent com d3 d3 shape master img catmullRom png  width  888  height  240  alt  catmullRom    Produces a cubic Catmull Rom spline using the specified control points and the parameter   alpha    catmullRom alpha   which defaults to 0 5  as proposed by Yuksel et al  in  On the Parameterization of Catmull Rom Curves  http   www cemyuksel com research catmullrom param    with one sided differences used for the first and last piece    a name  curveCatmullRomClosed  href   curveCatmullRomClosed     a  d3  b curveCatmullRomClosed  b   i context  i        https   github com d3 d3 shape blob master src curve catmullRomClosed js  Source     img src  https   raw githubusercontent com d3 d3 shape master img catmullRomClosed png  width  888  height  330  alt  catmullRomClosed    Produces a closed cubic Catmull Rom spline using the specified control points and the parameter   alpha    catmullRom alpha   which defaults to 0 5  as proposed by Yuksel et al  When a line segment ends  the first three control points are repeated  producing a closed loop    a name  curveCatmullRomOpen  href   curveCatmullRomOpen     a  d3  b curveCatmullRomOpen  b   i context  i        https   github com d3 d3 shape blob master src curve catmullRomOpen js  Source     img src  https   raw githubusercontent com d3 d3 shape master img catmullRomOpen png  width  888  height  240  alt  catmullRomOpen    Produces a cubic Catmull Rom spline using the specified control points and the parameter   alpha    catmullRom alpha   which defaults to 0 5  as proposed by Yuksel et al  Unlike  curveCatmullRom   curveCatmullRom   one sided differences are not used for the first and last piece  and thus the curve starts at the second point and ends at the penultimate point    a name  curveCatmullRom alpha  href   curveCatmullRom alpha     a   i catmullRom  i   b alpha  b   i alpha  i        https   github com d3 d3 shape blob master src curve catmullRom js L83  Source    Returns a cubic Catmull Rom curve with the specified  alpha  in the range  0  1   If  alpha  is zero  produces a uniform spline  equivalent to  curveCardinal   curveCardinal  with a tension of zero  if  alpha  is one  produces a chordal spline  if  alpha  is 0 5  produces a  centripetal spline  https   en wikipedia org wiki Centripetal Catmull Rom spline   Centripetal splines are recommended to avoid self intersections and overshoot  For example      js var line   d3 line   curve d3 curveCatmullRom alpha 0 5          a name  curveLinear  href   curveLinear     a  d3  b curveLinear  b   i context  i        https   github com d3 d3 shape blob master src curve linear js  Source     img src  https   raw githubusercontent com d3 d3 shape master img linear png  width  888  height  240  alt  linear    Produces a polyline through the specified points    a name  curveLinearClosed  href   curveLinearClosed     a  d3  b curveLinearClosed  b   i context  i        https   github com d3 d3 shape blob master src curve linearClosed js  Source     img src  https   raw githubusercontent com d3 d3 shape master img linearClosed png  width  888  height  240  alt  linearClosed    Produces a closed polyline through the specified points by repeating the first point when the line segment ends    a name  curveMonotoneX  href   curveMonotoneX     a  d3  b curveMonotoneX  b   i context  i        https   github com d3 d3 shape blob master src curve monotone js L98  Source     img src  https   raw githubusercontent com d3 d3 shape master img monotoneX png  width  888  height  240  alt  monotoneX    Produces a cubic spline that  preserves monotonicity  https   en wikipedia org wiki Monotone cubic interpolation  in  y   assuming monotonicity in  x   as proposed by Steffen in  A simple method for monotonic interpolation in one dimension  http   adsabs harvard edu full 1990A 26A   239  443S    a smooth curve with continuous first order derivatives that passes through any given set of data points without spurious oscillations  Local extrema can occur only at grid points where they are given by the data  but not in between two adjacent grid points     a name  curveMonotoneY  href   curveMonotoneY     a  d3  b curveMonotoneY  b   i context  i        https   github com d3 d3 shape blob master src curve monotone js L102  Source     img src  https   raw githubusercontent com d3 d3 shape master img monotoneY png  width  888  height  240  alt  monotoneY    Produces a cubic spline that  preserves monotonicity  https   en wikipedia org wiki Monotone cubic interpolation  in  x   assuming monotonicity in  y   as proposed by Steffen in  A simple method for monotonic interpolation in one dimension  http   adsabs harvard edu full 1990A 26A   239  443S    a smooth curve with continuous first order derivatives that passes through any given set of data points without spurious oscillations  Local extrema can occur only at grid points where they are given by the data  but not in between two adjacent grid points     a name  curveNatural  href   curveNatural     a  d3  b curveNatural  b   i context  i        https   github com d3 d3 shape blob master src curve natural js  Source     img src  https   raw githubusercontent com d3 d3 shape master img natural png  width  888  height  240  alt  natural    Produces a  natural  https   en wikipedia org wiki Spline interpolation   cubic spline  http   mathworld wolfram com CubicSpline html  with the second derivative of the spline set to zero at the endpoints    a name  curveStep  href   curveStep     a  d3  b curveStep  b   i context  i        https   github com d3 d3 shape blob master src curve step js  Source     img src  https   raw githubusercontent com d3 d3 shape master img step png  width  888  height  240  alt  step    Produces a piecewise constant function  a  step function  https   en wikipedia org wiki Step function   consisting of alternating horizontal and vertical lines  The  y  value changes at the midpoint of each pair of adjacent  x  values    a name  curveStepAfter  href   curveStepAfter     a  d3  b curveStepAfter  b   i context  i        https   github com d3 d3 shape blob master src curve step js L51  Source     img src  https   raw githubusercontent com d3 d3 shape master img stepAfter png  width  888  height  240  alt  stepAfter    Produces a piecewise constant function  a  step function  https   en wikipedia org wiki Step function   consisting of alternating horizontal and vertical lines  The  y  value changes after the  x  value    a name  curveStepBefore  href   curveStepBefore     a  d3  b curveStepBefore  b   i context  i        https   github com d3 d3 shape blob master src curve step js L47  Source     img src  https   raw githubusercontent com d3 d3 shape master img stepBefore png  width  888  height  240  alt  stepBefore    Produces a piecewise constant function  a  step function  https   en wikipedia org wiki Step function   consisting of alternating horizontal and vertical lines  The  y  value changes before the  x  value       Custom Curves  Curves are typically not used directly  instead being passed to   line  curve   line curve  and   area  curve   area curve   However  you can define your own curve implementation should none of the built in curves satisfy your needs using the following interface  You can also use this low level interface with a built in curve type as an alternative to the line and area generators    a name  curve areaStart  href   curve areaStart     a   i curve  i   b areaStart  b         https   github com d3 d3 shape blob master src curve step js L7  Source    Indicates the start of a new area segment  Each area segment consists of exactly two  line segments   curve lineStart   the topline  followed by the baseline  with the baseline points in reverse order    a name  curve areaEnd  href   curve areaEnd     a   i curve  i   b areaEnd  b         https   github com d3 d3 shape blob master src curve step js L10  Source    Indicates the end of the current area segment    a name  curve lineStart  href   curve lineStart     a   i curve  i   b lineStart  b         https   github com d3 d3 shape blob master src curve step js L13  Source    Indicates the start of a new line segment  Zero or more  points   curve point  will follow    a name  curve lineEnd  href   curve lineEnd     a   i curve  i   b lineEnd  b         https   github com d3 d3 shape blob master src curve step js L17  Source    Indicates the end of the current line segment    a name  curve point  href   curve point     a   i curve  i   b point  b   i x  i    i y  i        https   github com d3 d3 shape blob master src curve step js L22  Source    Indicates a new point in the current line segment with the given  x   and  y  values       Links    img alt  Tidy Tree  src  https   raw githubusercontent com d3 d3 hierarchy master img tree png    http   bl ocks org mbostock 9d0899acb5d3b8d839d9d613a9e1fe04   The   link   shape generates a smooth cubic B zier curve from a source point to a target point  The tangents of the curve at the start and end are either  vertical   linkVertical    horizontal   linkHorizontal  or  radial   linkRadial     a name  linkVertical  href   linkVertical     a  d3  b linkVertical  b         https   github com d3 d3 shape blob master src link index js L74  Source    Returns a new  link generator    link  with vertical tangents  For example  to visualize  links  https   github com d3 d3 hierarchy blob master README md node links  in a  tree diagram  https   github com d3 d3 hierarchy blob master README md tree  rooted on the top edge of the display  you might say      js var link   d3 linkVertical        x function d    return d x          y function d    return d y            a name  linkHorizontal  href   linkHorizontal     a  d3  b linkHorizontal  b         https   github com d3 d3 shape blob master src link index js L70  Source    Returns a new  link generator    link  with horizontal tangents  For example  to visualize  links  https   github com d3 d3 hierarchy blob master README md node links  in a  tree diagram  https   github com d3 d3 hierarchy blob master README md tree  rooted on the left edge of the display  you might say      js var link   d3 linkHorizontal        x function d    return d y          y function d    return d x            a href    link  name   link     a   i link  i   i arguments   i        https   github com d3 d3 shape blob master src link index js L21  Source    Generates a link for the given  arguments   The  arguments  are arbitrary  they are simply propagated to the link generator s accessor functions along with the  this  object  For example  with the default settings  an object expected      js link     source   100  100     target   300  300            a name  link source  href   link source     a   i link  i   b source  b    i source  i         https   github com d3 d3 shape blob master src link index js L28  Source    If  source  is specified  sets the source accessor to the specified function and returns this link generator  If  source  is not specified  returns the current source accessor  which defaults to      js function source d      return d source          a name  link target  href   link target     a   i link  i   b target  b    i target  i         https   github com d3 d3 shape blob master src link index js L32  Source    If  target  is specified  sets the target accessor to the specified function and returns this link generator  If  target  is not specified  returns the current target accessor  which defaults to      js function target d      return d target          a name  link x  href   link x     a   i link  i   b x  b    i x  i         https   github com d3 d3 shape blob master src link index js L36  Source    If  x  is specified  sets the  x  accessor to the specified function or number and returns this link generator  If  x  is not specified  returns the current  x  accessor  which defaults to      js function x d      return d 0           a name  link y  href   link y     a   i link  i   b y  b    i y  i         https   github com d3 d3 shape blob master src link index js L40  Source    If  y  is specified  sets the  y  accessor to the specified function or number and returns this link generator  If  y  is not specified  returns the current  y  accessor  which defaults to      js function y d      return d 1           a name  link context  href   link context     a   i link  i   b context  b    i context  i         https   github com d3 d3 shape blob master src link index js L44  Source    If  context  is specified  sets the context and returns this link generator  If  context  is not specified  returns the current context  which defaults to null  If the context is not null  then the  generated link    link  is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string representing the generated link is returned  See also  d3 path  https   github com d3 d3 path     a name  linkRadial  href   linkRadial     a  d3  b linkRadial  b         https   github com d3 d3 shape blob master src link index js L78  Source    Returns a new  link generator    link  with radial tangents  For example  to visualize  links  https   github com d3 d3 hierarchy blob master README md node links  in a  tree diagram  https   github com d3 d3 hierarchy blob master README md tree  rooted in the center of the display  you might say      js var link   d3 linkRadial        angle function d    return d x          radius function d    return d y            a name  linkRadial angle  href   linkRadial angle     a   i linkRadial  i   b angle  b    i angle  i         https   github com d3 d3 shape blob master src link index js L80  Source    Equivalent to   link  x   link x   except the accessor returns the angle in radians  with 0 at   y   12 o clock     a name  linkRadial radius  href   linkRadial radius     a   i linkRadial  i   b radius  b    i radius  i         https   github com d3 d3 shape blob master src link index js L81  Source    Equivalent to   link  y   link y   except the accessor returns the radius  the distance from the origin  0 0        Symbols   a href   symbolCircle   img src  https   raw githubusercontent com d3 d3 shape master img circle png  width  100  height  100    a  a href   symbolCross   img src  https   raw githubusercontent com d3 d3 shape master img cross png  width  100  height  100    a  a href   symbolDiamond   img src  https   raw githubusercontent com d3 d3 shape master img diamond png  width  100  height  100    a  a href   symbolSquare   img src  https   raw githubusercontent com d3 d3 shape master img square png  width  100  height  100    a  a href   symbolStar   img src  https   raw githubusercontent com d3 d3 shape master img star png  width  100  height  100    a  a href   symbolTriangle   img src  https   raw githubusercontent com d3 d3 shape master img triangle png  width  100  height  100   a href   symbolWye   img src  https   raw githubusercontent com d3 d3 shape master img wye png  width  100  height  100    a   Symbols provide a categorical shape encoding as is commonly used in scatterplots  Symbols are always centered at  0 0   use a transform  see   SVG  http   www w3 org TR SVG coords html TransformAttribute    Canvas  http   www w3 org TR 2dcontext  transformations   to move the symbol to a different position    a name  symbol  href   symbol     a  d3  b symbol  b         https   github com d3 d3 shape blob master src symbol js  Source    Constructs a new symbol generator with the default settings    a name   symbol  href    symbol     a   i symbol  i   i arguments  i         https   github com d3 d3 shape blob master src symbol js L11  Source    Generates a symbol for the given  arguments   The  arguments  are arbitrary  they are simply propagated to the symbol generator s accessor functions along with the  this  object  For example  with the default settings  no arguments are needed to produce a circle with area 64 square pixels  If the symbol generator has a  context   symbol context   then the symbol is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls and this function returns void  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string is returned    a name  symbol type  href   symbol type     a   i symbol  i   b type  b    i type  i         https   github com d3 d3 shape blob master src symbol js L33  Source    If  type  is specified  sets the symbol type to the specified function or symbol type and returns this line generator  If  type  is not specified  returns the current symbol type accessor  which defaults to      js function type       return circle         See  symbols   symbols  for the set of built in symbol types  To implement a custom symbol type  pass an object that implements   symbolType  draw   symbolType draw     a name  symbol size  href   symbol size     a   i symbol  i   b size  b    i size  i         https   github com d3 d3 shape blob master src symbol js L37  Source    If  size  is specified  sets the size to the specified function or number and returns this symbol generator  If  size  is not specified  returns the current size accessor  which defaults to      js function size       return 64         Specifying the size as a function is useful for constructing a scatterplot with a size encoding  If you wish to scale the symbol to fit a given bounding box  rather than by area  try  SVG s getBBox  http   bl ocks org mbostock 3dd515e692504c92ab65     a name  symbol context  href   symbol context     a   i symbol  i   b context  b    i context  i         https   github com d3 d3 shape blob master src symbol js L41  Source    If  context  is specified  sets the context and returns this symbol generator  If  context  is not specified  returns the current context  which defaults to null  If the context is not null  then the  generated symbol    symbol  is rendered to this context as a sequence of  path method  http   www w3 org TR 2dcontext  canvaspathmethods  calls  Otherwise  a  path data  http   www w3 org TR SVG paths html PathData  string representing the generated symbol is returned    a name  symbols  href   symbols     a  d3  b symbols  b   An array containing the set of all built in symbol types   circle   symbolCircle    cross   symbolCross    diamond   symbolDiamond    square   symbolSquare    star   symbolStar    triangle   symbolTriangle   and  wye   symbolWye   Useful for constructing the range of an  ordinal scale  https   github com d3 d3 scale ordinal scales  should you wish to use a shape encoding for categorical data    a name  symbolCircle  href   symbolCircle     a  d3  b symbolCircle  b       https   github com d3 d3 shape blob master src symbol circle js  Source    The circle symbol type    a name  symbolCross  href   symbolCross     a  d3  b symbolCross  b       https   github com d3 d3 shape blob master src symbol cross js  Source    The Greek cross symbol type  with arms of equal length    a name  symbolDiamond  href   symbolDiamond     a  d3  b symbolDiamond  b       https   github com d3 d3 shape blob master src symbol diamond js  Source    The rhombus symbol type    a name  symbolSquare  href   symbolSquare     a  d3  b symbolSquare  b       https   github com d3 d3 shape blob master src symbol square js  Source    The square symbol type    a name  symbolStar  href   symbolStar     a  d3  b symbolStar  b       https   github com d3 d3 shape blob master src symbol star js  Source    The pentagonal star  pentagram  symbol type    a name  symbolTriangle  href   symbolTriangle     a  d3  b symbolTriangle  b       https   github com d3 d3 shape blob master src symbol triangle js  Source    The up pointing triangle symbol type    a name  symbolWye  href   symbolWye     a  d3  b symbolWye  b       https   github com d3 d3 shape blob master src symbol wye js  Source    The Y shape symbol type    a name  pointRadial  href   pointRadial     a  d3  b pointRadial  b   i angle  i    i radius  i        https   github com d3 d3 shape blob master src pointRadial js  Source    Returns the point   i x  i    i y  i   for the given  angle  in radians  with 0 at   y   12 o clock  and positive angles proceeding clockwise  and the given  radius        Custom Symbol Types  Symbol types are typically not used directly  instead being passed to   symbol  type   symbol type   However  you can define your own symbol type implementation should none of the built in types satisfy your needs using the following interface  You can also use this low level interface with a built in symbol type as an alternative to the symbol generator    a name  symbolType draw  href   symbolType draw     a   i symbolType  i   b draw  b   i context  i    i size  i    Renders this symbol type to the specified  context  with the specified  size  in square pixels  The  context  implements the  CanvasPathMethods  http   www w3 org TR 2dcontext  canvaspathmethods  interface   Note that this is a subset of the CanvasRenderingContext2D interface        Stacks    img alt  Stacked Bar Chart  src  https   raw githubusercontent com d3 d3 shape master img stacked bar png  width  295  height  154    http   bl ocks org mbostock 3886208   img alt  Streamgraph  src  https   raw githubusercontent com d3 d3 shape master img stacked stream png  width  295  height  154    http   bl ocks org mbostock 4060954   Some shape types can be stacked  placing one shape adjacent to another  For example  a bar chart of monthly sales might be broken down into a multi series bar chart by product category  stacking bars vertically  This is equivalent to subdividing a bar chart by an ordinal dimension  such as product category  and applying a color encoding   Stacked charts can show overall value and per category value simultaneously  however  it is typically harder to compare across categories  as only the bottom layer of the stack is aligned  So  chose the  stack order   stack order  carefully  and consider a  streamgraph   stackOffsetWiggle    See also  grouped charts  http   bl ocks org mbostock 3887051     Like the  pie generator   pies   the stack generator does not produce a shape directly  Instead it computes positions which you can then pass to an  area generator   areas  or use directly  say to position bars    a name  stack  href   stack     a  d3  b stack  b         https   github com d3 d3 shape blob master src stack js  Source    Constructs a new stack generator with the default settings    a name   stack  href    stack     a   i stack  i   i data  i     i arguments   i         https   github com d3 d3 shape blob master src stack js L16  Source    Generates a stack for the given array of  data   returning an array representing each series  Any additional  arguments  are arbitrary  they are simply propagated to accessors along with the  this  object   The series are determined by the  keys accessor   stack keys   each series  i  in the returned array corresponds to the  i th key  Each series is an array of points  where each point  j  corresponds to the  j th element in the input  data   Lastly  each point is represented as an array   y0    y1   where  y0  is the lower value  baseline  and  y1  is the upper value  topline   the difference between  y0  and  y1  corresponds to the computed  value   stack value  for this point  The key for each series is available as  series  key  and the  index   stack order  as  series  index  The input data element for each point is available as  point  data   For example  consider the following table representing monthly sales of fruits   Month     Apples   Bananas   Cherries   Dates                                                 1 2015     3840      1920        960     400  2 2015     1600      1440        960     400  3 2015      640       960        640     400  4 2015      320       480        640     400  This might be represented in JavaScript as an array of objects      js var data        month  new Date 2015  0  1   apples  3840  bananas  1920  cherries  960  dates  400      month  new Date 2015  1  1   apples  1600  bananas  1440  cherries  960  dates  400      month  new Date 2015  2  1   apples   640  bananas   960  cherries  640  dates  400      month  new Date 2015  3  1   apples   320  bananas   480  cherries  640  dates  400          To produce a stack for this data      js var stack   d3 stack        keys   apples    bananas    cherries    dates         order d3 stackOrderNone       offset d3 stackOffsetNone    var series   stack data        The resulting array has one element per  series   Each series has one point per month  and each point has a lower and upper value defining the baseline and topline      js          0  3840       0  1600       0   640       0   320       apples     3840  5760    1600  3040     640  1600     320   800       bananas     5760  6720    3040  4000    1600  2240     800  1440       cherries     6720  7120    4000  4400    2240  2640    1440  1840       dates        Each series in then typically passed to an  area generator   areas  to render an area chart  or used to construct rectangles for a bar chart    a name  stack keys  href   stack keys     a   i stack  i   b keys  b    i keys  i         https   github com d3 d3 shape blob master src stack js L40  Source    If  keys  is specified  sets the keys accessor to the specified function or array and returns this stack generator  If  keys  is not specified  returns the current keys accessor  which defaults to the empty array  A series  layer  is  generated    stack  for each key  Keys are typically strings  but they may be arbitrary values  The series  key is passed to the  value accessor   stack value   along with each data point  to compute the point s value    a name  stack value  href   stack value     a   i stack  i   b value  b    i value  i         https   github com d3 d3 shape blob master src stack js L44  Source    If  value  is specified  sets the value accessor to the specified function or number and returns this stack generator  If  value  is not specified  returns the current value accessor  which defaults to      js function value d  key      return d key          Thus  by default the stack generator assumes that the input data is an array of objects  with each object exposing named properties with numeric values  see   stack     stack  for an example    a name  stack order  href   stack order     a   i stack  i   b order  b    i order  i         https   github com d3 d3 shape blob master src stack js L48  Source    If  order  is specified  sets the order accessor to the specified function or array and returns this stack generator  If  order  is not specified  returns the current order acccesor  which defaults to  stackOrderNone   stackOrderNone   this uses the order given by the  key accessor   stack key   See  stack orders   stack orders  for the built in orders   If  order  is a function  it is passed the generated series array and must return an array of numeric indexes representing the stack order  For example  the default order is defined as      js function orderNone series      var n   series length  o   new Array n     while    n    0  o n    n    return o         The stack order is computed prior to the  offset   stack offset   thus  the lower value for all points is zero at the time the order is computed  The index attribute for each series is also not set until after the order is computed    a name  stack offset  href   stack offset     a   i stack  i   b offset  b    i offset  i         https   github com d3 d3 shape blob master src stack js L52  Source    If  offset  is specified  sets the offset accessor to the specified function or array and returns this stack generator  If  offset  is not specified  returns the current offset acccesor  which defaults to  stackOffsetNone   stackOffsetNone   this uses a zero baseline  See  stack offsets   stack offsets  for the built in offsets   If  offset  is a function  it is passed the generated series array and the order index array  The offset function is then responsible for updating the lower and upper values in the series array to layout the stack  For example  the default offset is defined as      js function offsetNone series  order      if     n   series length    1   return    for  var i   1  s0  s1   series order 0    n  m   s1 length  i   n    i        s0   s1  s1   series order i        for  var j   0  j   m    j          s1 j  1     s1 j  0    s0 j  1                        Stack Orders  Stack orders are typically not used directly  but are instead passed to   stack  order   stack order     a name  stackOrderAscending  href   stackOrderAscending     a  d3  b stackOrderAscending  b   i series  i        https   github com d3 d3 shape blob master src order ascending js  Source    Returns a series order such that the smallest series  according to the sum of values  is at the bottom    a name  stackOrderDescending  href   stackOrderDescending     a  d3  b stackOrderDescending  b   i series  i        https   github com d3 d3 shape blob master src order descending js  Source    Returns a series order such that the largest series  according to the sum of values  is at the bottom    a name  stackOrderInsideOut  href   stackOrderInsideOut     a  d3  b stackOrderInsideOut  b   i series  i        https   github com d3 d3 shape blob master src order insideOut js  Source    Returns a series order such that the larger series  according to the sum of values  are on the inside and the smaller series are on the outside  This order is recommended for streamgraphs in conjunction with the  wiggle offset   stackOffsetWiggle   See  Stacked Graphs Geometry   Aesthetics  http   leebyron com streamgraph   by Byron   Wattenberg for more information    a name  stackOrderNone  href   stackOrderNone     a  d3  b stackOrderNone  b   i series  i        https   github com d3 d3 shape blob master src order none js  Source    Returns the given series order  0  1     n    1  where  n  is the number of elements in  series   Thus  the stack order is given by the  key accessor   stack keys     a name  stackOrderReverse  href   stackOrderReverse     a  d3  b stackOrderReverse  b   i series  i        https   github com d3 d3 shape blob master src order reverse js  Source    Returns the reverse of the given series order   n    1   n    2    0  where  n  is the number of elements in  series   Thus  the stack order is given by the reverse of the  key accessor   stack keys        Stack Offsets  Stack offsets are typically not used directly  but are instead passed to   stack  offset   stack offset     a name  stackOffsetExpand  href   stackOffsetExpand     a  d3  b stackOffsetExpand  b   i series  i    i order  i        https   github com d3 d3 shape blob master src offset expand js  Source    Applies a zero baseline and normalizes the values for each point such that the topline is always one    a name  stackOffsetDiverging  href   stackOffsetDiverging     a  d3  b stackOffsetDiverging  b   i series  i    i order  i        https   github com d3 d3 shape blob master src offset diverging js  Source    Positive values are stacked above zero  while negative values are  stacked below zero  https   bl ocks org mbostock b5935342c6d21928111928401e2c8608     a name  stackOffsetNone  href   stackOffsetNone     a  d3  b stackOffsetNone  b   i series  i    i order  i        https   github com d3 d3 shape blob master src offset none js  Source    Applies a zero baseline    a name  stackOffsetSilhouette  href   stackOffsetSilhouette     a  d3  b stackOffsetSilhouette  b   i series  i    i order  i        https   github com d3 d3 shape blob master src offset silhouette js  Source    Shifts the baseline down such that the center of the streamgraph is always at zero    a name  stackOffsetWiggle  href   stackOffsetWiggle     a  d3  b stackOffsetWiggle  b   i series  i    i order  i        https   github com d3 d3 shape blob master src offset wiggle js  Source    Shifts the baseline so as to minimize the weighted wiggle of layers  This offset is recommended for streamgraphs in conjunction with the  inside out order   stackOrderInsideOut   See  Stacked Graphs Geometry   Aesthetics  http   leebyron com streamgraph   by Bryon   Wattenberg for more information  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-shape"},{"name":"d3/d3-scale","artist":"return, specifi, sourc, array, valu","id":42,"playcount":70120,"description":"d3/d3-scale return, specifi, sourc, array, valu   d3 scale  Scales are a convenient abstraction for a fundamental task in visualization  mapping a dimension of abstract data to a visual representation  Although most often used for position encoding quantitative data  such as mapping a measurement in meters to a position in pixels for dots in a scatterplot  scales can represent virtually any visual encoding  such as diverging colors  stroke widths  or symbol size  Scales can also be used with virtually any type of data  such as named categorical data or discrete data that requires sensible breaks   For  continuous   continuous scales  quantitative data  you typically want a  linear scale   linear scales    For time series data  a  time scale   time scales    If the distribution calls for it  consider transforming data using a  power   power scales  or  log   log scales  scale  A  quantize scale   quantize scales  may aid differentiation by rounding continuous data to a fixed set of discrete values  similarly  a  quantile scale   quantile scales  computes quantiles from a sample population  and a  threshold scale   threshold scales  allows you to specify arbitrary breaks in continuous data   For discrete ordinal  ordered  or categorical  unordered  data  an  ordinal scale   ordinal scales  specifies an explicit mapping from a set of data values to a corresponding set of visual attributes  such as colors   The related  band   band scales  and  point   point scales  scales are useful for position encoding ordinal data  such as bars in a bar chart or dots in an categorical scatterplot   This repository does not provide color schemes  see  d3 scale chromatic  https   github com d3 d3 scale chromatic  for color schemes designed to work with d3 scale   Scales have no intrinsic visual representation  However  most scales can  generate   continuous ticks  and  format   continuous tickFormat  ticks for reference marks to aid in the construction of axes   For a longer introduction  see these recommended tutorials      Introducing d3 scale  https   medium com  mbostock introducing d3 scale 61980c51545f  by Mike Bostock    Chapter 7  Scales of   Interactive Data Visualization for the Web   http   alignedleft com work d3 book  by Scott Murray     d3  scales  and color   http   www jeromecukier net 2011 08 11 d3 scales and color   by J r me Cukier     Installing  If you use NPM   npm install d3 scale   Otherwise  download the  latest release  https   github com d3 d3 scale releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 scale v2 min js  or as part of  D3  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 array v1 min js    script   script src  https   d3js org d3 collection v1 min js    script   script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 format v1 min js    script   script src  https   d3js org d3 interpolate v1 min js    script   script src  https   d3js org d3 time v1 min js    script   script src  https   d3js org d3 time format v2 min js    script   script src  https   d3js org d3 scale v2 min js    script   script   var x   d3 scaleLinear       script        You can omit d3 time and d3 time format if you re not using  d3 scaleTime   scaleTime  or  d3 scaleUtc   scaleUtc        API Reference     Continuous   continuous scales    Linear   linear scales    Power   power scales    Log   log scales    Identity   identity scales    Time   time scales      Sequential   sequential scales     Diverging   diverging scales     Quantize   quantize scales     Quantile   quantile scales     Threshold   threshold scales     Ordinal   ordinal scales    Band   band scales    Point   point scales        Continuous Scales  Continuous scales map a continuous  quantitative input  domain   continuous domain  to a continuous output  range   continuous range   If the range is also numeric  the mapping may be  inverted   continuous invert   A continuous scale is not constructed directly  instead  try a  linear   linear scales    power   power scales    log   log scales    identity   identity scales    time   time scales  or  sequential color   sequential scales  scale    a name   continuous  href    continuous     a   i continuous  i   i value  i        https   github com d3 d3 scale blob master src continuous js  Source    Given a  value  from the  domain   continuous domain   returns the corresponding value from the  range   continuous range   If the given  value  is outside the domain  and  clamping   continuous clamp  is not enabled  the mapping may be extrapolated such that the returned value is outside the range  For example  to apply a position encoding      js var x   d3 scaleLinear        domain  10  130        range  0  960     x 20      80 x 50      320      Or to apply a color encoding      js var color   d3 scaleLinear        domain  10  100        range   brown    steelblue      color 20        9a3439  color 50        7b5167        a name  continuous invert  href   continuous invert     a   i continuous  i   b invert  b   i value  i        https   github com d3 d3 scale blob master src continuous js  Source    Given a  value  from the  range   continuous range   returns the corresponding value from the  domain   continuous domain   Inversion is useful for interaction  say to determine the data value corresponding to the position of the mouse  For example  to invert a position encoding      js var x   d3 scaleLinear        domain  10  130        range  0  960     x invert 80      20 x invert 320      50      If the given  value  is outside the range  and  clamping   continuous clamp  is not enabled  the mapping may be extrapolated such that the returned value is outside the domain  This method is only supported if the range is numeric  If the range is not numeric  returns NaN   For a valid value  y  in the range   i continuous  i   i continuous  i  invert  i y  i    approximately equals  y   similarly  for a valid value  x  in the domain   i continuous  i  invert  i continuous  i   i x  i    approximately equals  x   The scale and its inverse may not be exact due to the limitations of floating point precision    a name  continuous domain  href   continuous domain     a   i continuous  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src continuous js  Source    If  domain  is specified  sets the scale s domain to the specified array of numbers  The array must contain two or more elements  If the elements in the given array are not numbers  they will be coerced to numbers  If  domain  is not specified  returns a copy of the scale s current domain   Although continuous scales typically have two values each in their domain and range  specifying more than two values produces a piecewise scale  For example  to create a  diverging color scale   diverging scales  that interpolates between white and red for negative values  and white and green for positive values  say      js var color   d3 scaleLinear        domain   1  0  1        range   red    white    green      color  0 5       rgb 255  128  128   color  0 5       rgb 128  192  128        Internally  a piecewise scale performs a  binary search  https   github com d3 d3 array bisect  for the range interpolator corresponding to the given domain value  Thus  the domain must be in ascending or descending order  If the domain and range have different lengths  N  and  M   only the first  min N M   elements in each are observed    a name  continuous range  href   continuous range     a   i continuous  i   b range  b    i range  i         https   github com d3 d3 scale blob master src continuous js  Source    If  range  is specified  sets the scale s range to the specified array of values  The array must contain two or more elements  Unlike the  domain   continuous domain   elements in the given array need not be numbers  any value that is supported by the underlying  interpolator   continuous interpolate  will work  though note that numeric ranges are required for  invert   continuous invert   If  range  is not specified  returns a copy of the scale s current range  See   continuous  interpolate   continuous interpolate  for more examples    a name  continuous rangeRound  href   continuous rangeRound     a   i continuous  i   b rangeRound  b    i range  i         https   github com d3 d3 scale blob master src continuous js  Source    Sets the scale s   range    continuous range  to the specified array of values while also setting the scale s  interpolator   continuous interpolate  to  interpolateRound  https   github com d3 d3 interpolate interpolateRound   This is a convenience method equivalent to      js continuous      range range       interpolate d3 interpolateRound        The rounding interpolator is sometimes useful for avoiding antialiasing artifacts  though also consider the  shape rendering  https   developer mozilla org en US docs Web SVG Attribute shape rendering   crispEdges  styles  Note that this interpolator can only be used with numeric ranges    a name  continuous clamp  href   continuous clamp     a   i continuous  i   b clamp  b   i clamp  i        https   github com d3 d3 scale blob master src continuous js  Source    If  clamp  is specified  enables or disables clamping accordingly  If clamping is disabled and the scale is passed a value outside the  domain   continuous domain   the scale may return a value outside the  range   continuous range  through extrapolation  If clamping is enabled  the return value of the scale is always within the scale s range  Clamping similarly applies to   continuous  invert   continuous invert   For example      js var x   d3 scaleLinear        domain  10  130        range  0  960     x  10       160  outside range x invert  160       10  outside domain  x clamp true   x  10      0  clamped to range x invert  160      10  clamped to domain      If  clamp  is not specified  returns whether or not the scale currently clamps values to within the range    a name  continuous interpolate  href   continuous interpolate     a   i continuous  i   b interpolate  b   i interpolate  i        https   github com d3 d3 scale blob master src continuous js  Source    If  interpolate  is specified  sets the scale s  range   continuous range  interpolator factory  This interpolator factory is used to create interpolators for each adjacent pair of values from the range  these interpolators then map a normalized domain parameter  t  in  0  1  to the corresponding value in the range  If  factory  is not specified  returns the scale s current interpolator factory  which defaults to  interpolate  https   github com d3 d3 interpolate interpolate   See  d3 interpolate  https   github com d3 d3 interpolate  for more interpolators   For example  consider a diverging color scale with three colors in the range      js var color   d3 scaleLinear        domain   100  0   100        range   red    white    green          Two interpolators are created internally by the scale  equivalent to      js var i0   d3 interpolate  red    white        i1   d3 interpolate  white    green         A common reason to specify a custom interpolator is to change the color space of interpolation  For example  to use  HCL  https   github com d3 d3 interpolate interpolateHcl       js var color   d3 scaleLinear        domain  10  100        range   brown    steelblue         interpolate d3 interpolateHcl        Or for  Cubehelix  https   github com d3 d3 interpolate interpolateCubehelix  with a custom gamma      js var color   d3 scaleLinear        domain  10  100        range   brown    steelblue         interpolate d3 interpolateCubehelix gamma 3         Note  the  default interpolator  https   github com d3 d3 interpolate interpolate    may reuse return values    For example  if the range values are objects  then the value interpolator always returns the same object  modifying it in place  If the scale is used to set an attribute or style  this is typically acceptable  and desirable for performance   however  if you need to store the scale s return value  you must specify your own interpolator or make a copy as appropriate    a name  continuous ticks  href   continuous ticks     a   i continuous  i   b ticks  b    i count  i     Returns approximately  count  representative values from the scale s  domain   continuous domain   If  count  is not specified  it defaults to 10  The returned tick values are uniformly spaced  have human readable values  such as multiples of powers of 10   and are guaranteed to be within the extent of the domain  Ticks are often used to display reference lines  or tick marks  in conjunction with the visualized data  The specified  count  is only a hint  the scale may return more or fewer values depending on the domain  See also d3 array s  ticks  https   github com d3 d3 array ticks     a name  continuous tickFormat  href   continuous tickFormat     a   i continuous  i   b tickFormat  b    i count  i     i specifier  i          https   github com d3 d3 scale blob master src tickFormat js  Source    Returns a  number format  https   github com d3 d3 format  function suitable for displaying a tick value  automatically computing the appropriate precision based on the fixed interval between tick values  The specified  count  should have the same value as the count that is used to generate the  tick values   continuous ticks    An optional  specifier  allows a  custom format  https   github com d3 d3 format locale format  where the precision of the format is automatically set by the scale as appropriate for the tick interval  For example  to format percentage change  you might say      js var x   d3 scaleLinear        domain   1  1        range  0  960     var ticks   x ticks 5       tickFormat   x tickFormat 5          ticks map tickFormat         100      50      0      50      100         If  specifier  uses the format type  s   the scale will return a  SI prefix format  https   github com d3 d3 format locale formatPrefix  based on the largest value in the domain  If the  specifier  already specifies a precision  this method is equivalent to   locale  format  https   github com d3 d3 format locale format     a name  continuous nice  href   continuous nice     a   i continuous  i   b nice  b    i count  i         https   github com d3 d3 scale blob master src nice js  Source    Extends the  domain   continuous domain  so that it starts and ends on nice round values  This method typically modifies the scale s domain  and may only extend the bounds to the nearest round value  An optional tick  count  argument allows greater control over the step size used to extend the bounds  guaranteeing that the returned  ticks   continuous ticks  will exactly cover the domain  Nicing is useful if the domain is computed from data  say using  extent  https   github com d3 d3 array extent   and may be irregular  For example  for a domain of  0 201479   0 996679    a nice domain might be  0 2  1 0   If the domain has more than two values  nicing the domain only affects the first and last value  See also d3 array s  tickStep  https   github com d3 d3 array tickStep    Nicing a scale only modifies the current domain  it does not automatically nice domains that are subsequently set using   continuous  domain   continuous domain   You must re nice the scale after setting the new domain  if desired    a name  continuous copy  href   continuous copy     a   i continuous  i   b copy  b         https   github com d3 d3 scale blob master src continuous js  Source    Returns an exact copy of this scale  Changes to this scale will not affect the returned scale  and vice versa        Linear Scales   a name  scaleLinear  href   scaleLinear     a  d3  b scaleLinear  b         https   github com d3 d3 scale blob master src linear js  Source    Constructs a new  continuous scale   continuous scales  with the unit  domain   continuous domain   0  1   the unit  range   continuous range   0  1   the  default  https   github com d3 d3 interpolate interpolate   interpolator   continuous interpolate  and  clamping   continuous clamp  disabled  Linear scales are a good default choice for continuous quantitative data because they preserve proportional differences  Each range value  y  can be expressed as a function of the domain value  x    y     mx     b         Power Scales  Power scales are similar to  linear scales   linear scales   except an exponential transform is applied to the input domain value before the output range value is computed  Each range value  y  can be expressed as a function of the domain value  x    y     mx k     b   where  k  is the  exponent   pow exponent  value  Power scales also support negative domain values  in which case the input value and the resulting output value are multiplied by  1    a name  scalePow  href   scalePow     a  d3  b scalePow  b         https   github com d3 d3 scale blob master src pow js  Source    Constructs a new  continuous scale   continuous scales  with the unit  domain   continuous domain   0  1   the unit  range   continuous range   0  1   the  exponent   pow exponent  1  the  default  https   github com d3 d3 interpolate interpolate   interpolator   continuous interpolate  and  clamping   continuous clamp  disabled   Note that this is effectively a  linear   linear scales  scale until you set a different exponent     a name  pow  href    pow     a   i pow  i   i value  i        https   github com d3 d3 scale blob master src pow js  Source    See   continuous     continuous     a name  pow invert  href   pow invert     a   i pow  i   b invert  b   i value  i        https   github com d3 d3 scale blob master src pow js  Source    See   continuous  invert   continuous invert     a name  pow exponent  href   pow exponent     a   i pow  i   b exponent  b    i exponent  i         https   github com d3 d3 scale blob master src pow js  Source    If  exponent  is specified  sets the current exponent to the given numeric value  If  exponent  is not specified  returns the current exponent  which defaults to 1   Note that this is effectively a  linear   linear scales  scale until you set a different exponent     a name  pow domain  href   pow domain     a   i pow  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src pow js  Source    See   continuous  domain   continuous domain     a name  pow range  href   pow range     a   i pow  i   b range  b    i range  i         https   github com d3 d3 scale blob master src pow js  Source    See   continuous  range   continuous range     a name  pow rangeRound  href   pow rangeRound     a   i pow  i   b rangeRound  b    i range  i         https   github com d3 d3 scale blob master src pow js  Source    See   continuous  rangeRound   continuous rangeRound     a name  pow clamp  href   pow clamp     a   i pow  i   b clamp  b   i clamp  i        https   github com d3 d3 scale blob master src pow js  Source    See   continuous  clamp   continuous clamp     a name  pow interpolate  href   pow interpolate     a   i pow  i   b interpolate  b   i interpolate  i        https   github com d3 d3 scale blob master src pow js  Source    See   continuous  interpolate   continuous interpolate     a name  pow ticks  href   pow ticks     a   i pow  i   b ticks  b    i count  i         https   github com d3 d3 scale blob master src pow js  Source    See   continuous  ticks   continuous ticks     a name  pow tickFormat  href   pow tickFormat     a   i pow  i   b tickFormat  b    i count  i     i specifier  i          https   github com d3 d3 scale blob master src pow js  Source    See   continuous  tickFormat   continuous tickFormat     a name  pow nice  href   pow nice     a   i pow  i   b nice  b    i count  i         https   github com d3 d3 scale blob master src pow js  Source    See   continuous  nice   continuous nice     a name  pow copy  href   pow copy     a   i pow  i   b copy  b         https   github com d3 d3 scale blob master src pow js  Source    See   continuous  copy   continuous copy     a name  scaleSqrt  href   scaleSqrt     a  d3  b scaleSqrt  b         https   github com d3 d3 scale blob master src pow js  Source    Constructs a new  continuous   continuous scales   power scale   power scales  with the unit  domain   continuous domain   0  1   the unit  range   continuous range   0  1   the  exponent   pow exponent  0 5  the  default  https   github com d3 d3 interpolate interpolate   interpolator   continuous interpolate  and  clamping   continuous clamp  disabled  This is a convenience method equivalent to  d3 scalePow   exponent 0 5          Log Scales  Log scales are similar to  linear scales   linear scales   except a logarithmic transform is applied to the input domain value before the output range value is computed  The mapping to the range value  y  can be expressed as a function of the domain value  x    y     m  log  i x  i      b    As log 0        a log scale domain must be   strictly positive or strictly negative    the domain must not include or cross zero  A log scale with a positive domain has a well defined behavior for positive values  and a log scale with a negative domain has a well defined behavior for negative values   For a negative domain  input and output values are implicitly multiplied by  1   The behavior of the scale is undefined if you pass a negative value to a log scale with a positive domain or vice versa    a name  scaleLog  href   scaleLog     a  d3  b scaleLog  b         https   github com d3 d3 scale blob master src log js  Source    Constructs a new  continuous scale   continuous scales  with the  domain   log domain   1  10   the unit  range   log range   0  1   the  base   log base  10  the  default  https   github com d3 d3 interpolate interpolate   interpolator   log interpolate  and  clamping   log clamp  disabled    a name  log  href    log     a   i log  i   i value  i        https   github com d3 d3 scale blob master src log js  Source    See   continuous     continuous     a name  log invert  href   log invert     a   i log  i   b invert  b   i value  i        https   github com d3 d3 scale blob master src log js  Source    See   continuous  invert   continuous invert     a name  log base  href   log base     a   i log  i   b base  b    i base  i         https   github com d3 d3 scale blob master src log js  Source    If  base  is specified  sets the base for this logarithmic scale to the specified value  If  base  is not specified  returns the current base  which defaults to 10    a name  log domain  href   log domain     a   i log  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src log js  Source    See   continuous  domain   continuous domain     a name  log range  href   log range     a   i log  i   b range  b    i range  i         https   github com d3 d3 scale blob master src continuous js  Source    See   continuous  range   continuous range     a name  log rangeRound  href   log rangeRound     a   i log  i   b rangeRound  b    i range  i         https   github com d3 d3 scale blob master src log js  Source    See   continuous  rangeRound   continuous rangeRound     a name  log clamp  href   log clamp     a   i log  i   b clamp  b   i clamp  i        https   github com d3 d3 scale blob master src log js  Source    See   continuous  clamp   continuous clamp     a name  log interpolate  href   log interpolate     a   i log  i   b interpolate  b   i interpolate  i        https   github com d3 d3 scale blob master src log js  Source    See   continuous  interpolate   continuous interpolate     a name  log ticks  href   log ticks     a   i log  i   b ticks  b    i count  i         https   github com d3 d3 scale blob master src log js  Source    Like   continuous  ticks   continuous ticks   but customized for a log scale  If the  base   log base  is an integer  the returned ticks are uniformly spaced within each integer power of base  otherwise  one tick per power of base is returned  The returned ticks are guaranteed to be within the extent of the domain  If the orders of magnitude in the  domain   log domain  is greater than  count   then at most one tick per power is returned  Otherwise  the tick values are unfiltered  but note that you can use   log  tickFormat   log tickFormat  to filter the display of tick labels  If  count  is not specified  it defaults to 10    a name  log tickFormat  href   log tickFormat     a   i log  i   b tickFormat  b    i count  i     i specifier  i          https   github com d3 d3 scale blob master src log js  Source    Like   continuous  tickFormat   continuous tickFormat   but customized for a log scale  The specified  count  typically has the same value as the count that is used to generate the  tick values   continuous ticks   If there are too many ticks  the formatter may return the empty string for some of the tick labels  however  note that the ticks are still shown  To disable filtering  specify a  count  of Infinity  When specifying a count  you may also provide a format  specifier  or format function  For example  to get a tick formatter that will display 20 ticks of a currency  say  log tickFormat 20     f     If the specifier does not have a defined precision  the precision will be set automatically by the scale  returning the appropriate format  This provides a convenient way of specifying a format whose precision will be automatically set by the scale    a name  log nice  href   log nice     a   i log  i   b nice  b         https   github com d3 d3 scale blob master src log js  Source    Like   continuous  nice   continuous nice   except extends the domain to integer powers of  base   log base   For example  for a domain of  0 201479   0 996679    and base 10  the nice domain is  0 1  1   If the domain has more than two values  nicing the domain only affects the first and last value    a name  log copy  href   log copy     a   i log  i   b copy  b         https   github com d3 d3 scale blob master src log js  Source    See   continuous  copy   continuous copy         Identity Scales  Identity scales are a special case of  linear scales   linear scales  where the domain and range are identical  the scale and its invert method are thus the identity function  These scales are occasionally useful when working with pixel coordinates  say in conjunction with an axis or brush  Identity scales do not support  rangeRound   continuous rangeRound    clamp   continuous clamp  or  interpolate   continuous interpolate     a name  scaleIdentity  href   scaleIdentity     a  d3  b scaleIdentity  b         https   github com d3 d3 scale blob master src identity js  Source    Constructs a new identity scale with the unit  domain   continuous domain   0  1  and the unit  range   continuous range   0  1         Time Scales  Time scales are a variant of  linear scales   linear scales  that have a temporal domain  domain values are coerced to  dates  https   developer mozilla org en JavaScript Reference Global Objects Date  rather than numbers  and  invert   continuous invert  likewise returns a date  Time scales implement  ticks   time ticks  based on  calendar intervals  https   github com d3 d3 time   taking the pain out of generating axes for temporal domains   For example  to create a position encoding      js var x   d3 scaleTime        domain  new Date 2000  0  1   new Date 2000  0  2         range  0  960     x new Date 2000  0  1   5       200 x new Date 2000  0  1  16       640 x invert 200      Sat Jan 01 2000 05 00 00 GMT 0800  PST  x invert 640      Sat Jan 01 2000 16 00 00 GMT 0800  PST       For a valid value  y  in the range   i time  i   i time  i  invert  i y  i    equals  y   similarly  for a valid value  x  in the domain   i time  i  invert  i time  i   i x  i    equals  x   The invert method is useful for interaction  say to determine the value in the domain that corresponds to the pixel location under the mouse    a name  scaleTime  href   scaleTime     a  d3  b scaleTime  b         https   github com d3 d3 scale blob master src time js  Source    Constructs a new time scale with the  domain   time domain   2000 01 01  2000 01 02   the unit  range   time range   0  1   the  default  https   github com d3 d3 interpolate interpolate   interpolator   time interpolate  and  clamping   time clamp  disabled    a name  time  href    time     a   i time  i   i value  i        https   github com d3 d3 scale blob master src time js  Source    See   continuous     continuous     a name  time invert  href   time invert     a   i time  i   b invert  b   i value  i        https   github com d3 d3 scale blob master src time js  Source    See   continuous  invert   continuous invert     a name  time domain  href   time domain     a   i time  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src time js  Source    See   continuous  domain   continuous domain     a name  time range  href   time range     a   i time  i   b range  b    i range  i         https   github com d3 d3 scale blob master src time js  Source    See   continuous  range   continuous range     a name  time rangeRound  href   time rangeRound     a   i time  i   b rangeRound  b    i range  i         https   github com d3 d3 scale blob master src time js  Source    See   continuous  rangeRound   continuous rangeRound     a name  time clamp  href   time clamp     a   i time  i   b clamp  b   i clamp  i        https   github com d3 d3 scale blob master src time js  Source    See   continuous  clamp   continuous clamp     a name  time interpolate  href   time interpolate     a   i time  i   b interpolate  b   i interpolate  i        https   github com d3 d3 scale blob master src time js  Source    See   continuous  interpolate   continuous interpolate     a name  time ticks  href   time ticks     a   i time  i   b ticks  b    i count  i         https   github com d3 d3 scale blob master src time js  Source    br  a name  time ticks  href   time ticks     a   i time  i   b ticks  b    i interval  i     Returns representative dates from the scale s  domain   time domain   The returned tick values are uniformly spaced  mostly   have sensible values  such as every day at midnight   and are guaranteed to be within the extent of the domain  Ticks are often used to display reference lines  or tick marks  in conjunction with the visualized data   An optional  count  may be specified to affect how many ticks are generated  If  count  is not specified  it defaults to 10  The specified  count  is only a hint  the scale may return more or fewer values depending on the domain  For example  to create ten default ticks  say      js var x   d3 scaleTime     x ticks 10       Sat Jan 01 2000 00 00 00 GMT 0800  PST       Sat Jan 01 2000 03 00 00 GMT 0800  PST       Sat Jan 01 2000 06 00 00 GMT 0800  PST       Sat Jan 01 2000 09 00 00 GMT 0800  PST       Sat Jan 01 2000 12 00 00 GMT 0800  PST       Sat Jan 01 2000 15 00 00 GMT 0800  PST       Sat Jan 01 2000 18 00 00 GMT 0800  PST       Sat Jan 01 2000 21 00 00 GMT 0800  PST       Sun Jan 02 2000 00 00 00 GMT 0800  PST        The following time intervals are considered for automatic ticks     1   5   15  and 30 second    1   5   15  and 30 minute    1   3   6  and 12 hour    1  and 2 day    1 week    1  and 3 month    1 year   In lieu of a  count   a  time  interval   https   github com d3 d3 time intervals  may be explicitly specified  To prune the generated ticks for a given time  interval   use   interval  every  https   github com d3 d3 time interval every   For example  to generate ticks at 15  minute  https   github com d3 d3 time minute  intervals      js var x   d3 scaleTime        domain  new Date 2000  0  1  0   new Date 2000  0  1  2      x ticks d3 timeMinute every 15        Sat Jan 01 2000 00 00 00 GMT 0800  PST       Sat Jan 01 2000 00 15 00 GMT 0800  PST       Sat Jan 01 2000 00 30 00 GMT 0800  PST       Sat Jan 01 2000 00 45 00 GMT 0800  PST       Sat Jan 01 2000 01 00 00 GMT 0800  PST       Sat Jan 01 2000 01 15 00 GMT 0800  PST       Sat Jan 01 2000 01 30 00 GMT 0800  PST       Sat Jan 01 2000 01 45 00 GMT 0800  PST       Sat Jan 01 2000 02 00 00 GMT 0800  PST        Alternatively  pass a test function to   interval  filter  https   github com d3 d3 time interval filter       js x ticks d3 timeMinute filter function d      return d getMinutes     15     0            Note  in some cases  such as with day ticks  specifying a  step  can result in irregular spacing of ticks because time intervals have varying length    a name  time tickFormat  href   time tickFormat     a   i time  i   b tickFormat  b    i count  i     i specifier  i          https   github com d3 d3 scale blob master src time js  Source    br  a href   time tickFormat     a   i time  i   b tickFormat  b    i interval  i     i specifier  i      Returns a time format function suitable for displaying  tick   time ticks  values  The specified  count  or  interval  is currently ignored  but is accepted for consistency with other scales such as   continuous  tickFormat   continuous tickFormat   If a format  specifier  is specified  this method is equivalent to  format  https   github com d3 d3 time format format   If  specifier  is not specified  the default time format is returned  The default multi scale time format chooses a human readable representation based on the specified date as follows       Y    for year boundaries  such as  2011       B    for month boundaries  such as  February       b  d    for week boundaries  such as  Feb 06       a  d    for day boundaries  such as  Mon 07       I  p    for hour boundaries  such as  01 AM       I  M    for minute boundaries  such as  01 23        S    for second boundaries  such as   45        L    milliseconds for all other times  such as   012    Although somewhat unusual  this default behavior has the benefit of providing both local and global context  for example  formatting a sequence of ticks as  11 PM  Mon 07  01 AM  reveals information about hours  dates  and day simultaneously  rather than just the hours  11 PM  12 AM  01 AM   See  d3 time format  https   github com d3 d3 time format  if you d like to roll your own conditional time format    a name  time nice  href   time nice     a   i time  i   b nice  b    i count  i         https   github com d3 d3 scale blob master src time js  Source    br  a name  time nice  href   time nice     a   i time  i   b nice  b    i interval  i     i step  i      Extends the  domain   time domain  so that it starts and ends on nice round values  This method typically modifies the scale s domain  and may only extend the bounds to the nearest round value  See   continuous  nice   continuous nice  for more   An optional tick  count  argument allows greater control over the step size used to extend the bounds  guaranteeing that the returned  ticks   time ticks  will exactly cover the domain  Alternatively  a  time  interval   https   github com d3 d3 time intervals  may be specified to explicitly set the ticks  If an  interval  is specified  an optional  step  may also be specified to skip some ticks  For example   time nice d3 timeSecond  10   will extend the domain to an even ten seconds  0  10  20   i etc   i    See   time  ticks   time ticks  and   interval  every  https   github com d3 d3 time interval every  for further detail   Nicing is useful if the domain is computed from data  say using  extent  https   github com d3 d3 array extent   and may be irregular  For example  for a domain of  2009 07 13T00 02  2009 07 13T23 48   the nice domain is  2009 07 13  2009 07 14   If the domain has more than two values  nicing the domain only affects the first and last value    a name  scaleUtc  href   scaleUtc     a  d3  b scaleUtc  b         https   github com d3 d3 scale blob master src utcTime js  Source    Equivalent to  time   time   but the returned time scale operates in  Coordinated Universal Time  https   en wikipedia org wiki Coordinated Universal Time  rather than local time       Sequential Scales  Sequential scales  like  diverging scales   diverging scales   are similar to  continuous scales   continuous scales  in that they map a continuous  numeric input domain to a continuous output range  However  unlike continuous scales  the output range of a sequential scale is fixed by its interpolator and not configurable  These scales do not expose  invert   continuous invert    range   continuous range    rangeRound   continuous rangeRound  and  interpolate   continuous interpolate  methods    a name  scaleSequential  href   scaleSequential     a  d3  b scaleSequential  b   i interpolator  i        https   github com d3 d3 scale blob master src sequential js  Source    Constructs a new sequential scale with the given   interpolator    sequential interpolator  function  When the scale is  applied    sequential   the interpolator will be invoked with a value typically in the range  0  1   where 0 represents the minimum value and 1 represents the maximum value  For example  to implement the ill advised  HSL  https   github com d3 d3 color hsl  rainbow scale      js var rainbow   d3 scaleSequential function t      return d3 hsl t   360  1  0 5                 A more aesthetically pleasing and perceptually effective cyclical hue encoding is to use  d3 interpolateRainbow  https   github com d3 d3 scale chromatic blob master README md interpolateRainbow       js var rainbow   d3 scaleSequential d3 interpolateRainbow         a name   sequential  href    sequential     a   i sequential  i   i value  i        https   github com d3 d3 scale blob master src sequential js  Source    See   continuous     continuous     a name  sequential domain  href   sequential domain     a   i sequential  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src sequential js  Source    See   continuous  domain   continuous domain   Note that a sequential scale s domain must be numeric and must contain exactly two values    a name  sequential clamp  href   sequential clamp     a   i sequential  i   b clamp  b    i clamp  i         https   github com d3 d3 scale blob master src sequential js  Source    See   continuous  clamp   continuous clamp     a name  sequential interpolator  href   sequential interpolator     a   i sequential  i   b interpolator  b    i interpolator  i         https   github com d3 d3 scale blob master src sequential js  Source    If  interpolator  is specified  sets the scale s interpolator to the specified function  If  interpolator  is not specified  returns the scale s current interpolator    a name  sequential copy  href   sequential copy     a   i sequential  i   b copy  b         https   github com d3 d3 scale blob master src sequential js  Source    See   continuous  copy   continuous copy        Diverging Scales  Diverging scales  like  sequential scales   sequential scales   are similar to  continuous scales   continuous scales  in that they map a continuous  numeric input domain to a continuous output range  However  unlike continuous scales  the output range of a diverging scale is fixed by its interpolator and not configurable  These scales do not expose  invert   continuous invert    range   continuous range    rangeRound   continuous rangeRound  and  interpolate   continuous interpolate  methods    a name  scaleDiverging  href   scaleDiverging     a  d3  b scaleDiverging  b   i interpolator  i        https   github com d3 d3 scale blob master src diverging js  Source    Constructs a new diverging scale with the given   interpolator    diverging interpolator  function  When the scale is  applied    diverging   the interpolator will be invoked with a value typically in the range  0  1   where 0 represents the extreme negative value  0 5 represents the neutral value  and 1 represents the extreme positive value  For example  using  d3 interpolateSpectral  https   github com d3 d3 scale chromatic blob master README md interpolateSpectral       js var spectral   d3 scaleDiverging d3 interpolateSpectral         a name   diverging  href    diverging     a   i diverging  i   i value  i        https   github com d3 d3 scale blob master src diverging js  Source    See   continuous     continuous     a name  diverging domain  href   diverging domain     a   i diverging  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src diverging js  Source    See   continuous  domain   continuous domain   Note that a diverging scale s domain must be numeric and must contain exactly three values  The default domain is  0  0 5  1     a name  diverging clamp  href   diverging clamp     a   i diverging  i   b clamp  b    i clamp  i         https   github com d3 d3 scale blob master src diverging js  Source    See   continuous  clamp   continuous clamp     a name  diverging interpolator  href   diverging interpolator     a   i diverging  i   b interpolator  b    i interpolator  i         https   github com d3 d3 scale blob master src diverging js  Source    If  interpolator  is specified  sets the scale s interpolator to the specified function  If  interpolator  is not specified  returns the scale s current interpolator    a name  diverging copy  href   diverging copy     a   i diverging  i   b copy  b         https   github com d3 d3 scale blob master src diverging js  Source    See   continuous  copy   continuous copy        Quantize Scales  Quantize scales are similar to  linear scales   linear scales   except they use a discrete rather than continuous range  The continuous input domain is divided into uniform segments based on the number of values in   i e    the cardinality of  the output range  Each range value  y  can be expressed as a quantized linear function of the domain value  x    y     m round x      b   See  bl ocks org 4060606  http   bl ocks org mbostock 4060606  for an example    a name  scaleQuantize  href   scaleQuantize     a  d3  b scaleQuantize  b         https   github com d3 d3 scale blob master src quantize js  Source    Constructs a new quantize scale with the unit  domain   quantize domain   0  1  and the unit  range   quantize range   0  1   Thus  the default quantize scale is equivalent to the  Math round  https   developer mozilla org en JavaScript Reference Global Objects Math round  function    a name   quantize  href    quantize     a   i quantize  i   i value  i        https   github com d3 d3 scale blob master src quantize js  Source    Given a  value  in the input  domain   quantize domain   returns the corresponding value in the output  range   quantize range   For example  to apply a color encoding      js var color   d3 scaleQuantize        domain  0  1        range   brown    steelblue      color 0 49       brown  color 0 51       steelblue       Or dividing the domain into three equally sized parts with different range values to compute an appropriate stroke width      js var width   d3 scaleQuantize        domain  10  100        range  1  2  4     width 20      1 width 50      2 width 80      4       a name  quantize invertExtent  href   quantize invertExtent     a   i quantize  i   b invertExtent  b   i value  i        https   github com d3 d3 scale blob master src quantize js  Source    Returns the extent of values in the  domain   quantize domain    i x0  i    i x1  i   for the corresponding  value  in the  range   quantize range   the inverse of   quantize     quantize   This method is useful for interaction  say to determine the value in the domain that corresponds to the pixel location under the mouse      js var width   d3 scaleQuantize        domain  10  100        range  1  2  4     width invertExtent 2       40  70        a name  quantize domain  href   quantize domain     a   i quantize  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src quantize js  Source    If  domain  is specified  sets the scale s domain to the specified two element array of numbers  If the elements in the given array are not numbers  they will be coerced to numbers  If  domain  is not specified  returns the scale s current domain    a name  quantize range  href   quantize range     a   i quantize  i   b range  b    i range  i         https   github com d3 d3 scale blob master src quantize js  Source    If  range  is specified  sets the scale s range to the specified array of values  The array may contain any number of discrete values  The elements in the given array need not be numbers  any value or type will work  If  range  is not specified  returns the scale s current range    a name  quantize ticks  href   quantize ticks     a   i quantize  i   b ticks  b    i count  i         https   github com d3 d3 scale blob master src quantize js  Source    Equivalent to   continuous  ticks   continuous ticks     a name  quantize tickFormat  href   quantize tickFormat     a   i quantize  i   b tickFormat  b    i count  i     i specifier  i          https   github com d3 d3 scale blob master src linear js  Source    Equivalent to   continuous  tickFormat   continuous tickFormat     a name  quantize nice  href   quantize nice     a   i quantize  i   b nice  b         https   github com d3 d3 scale blob master src quantize js  Source    Equivalent to   continuous  nice   continuous nice     a name  quantize copy  href   quantize copy     a   i quantize  i   b copy  b         https   github com d3 d3 scale blob master src quantize js  Source    Returns an exact copy of this scale  Changes to this scale will not affect the returned scale  and vice versa       Quantile Scales  Quantile scales map a sampled input domain to a discrete range  The domain is considered continuous and thus the scale will accept any reasonable input value  however  the domain is specified as a discrete set of sample values  The number of values in  the cardinality of  the output range determines the number of quantiles that will be computed from the domain  To compute the quantiles  the domain is sorted  and treated as a  population of discrete values  https   en wikipedia org wiki Quantile Quantiles of a population   see d3 array s  quantile  https   github com d3 d3 array quantile   See  bl ocks org 8ca036b3505121279daf  http   bl ocks org mbostock 8ca036b3505121279daf  for an example    a name  scaleQuantile  href   scaleQuantile     a  d3  b scaleQuantile  b         https   github com d3 d3 scale blob master src quantile js  Source    Constructs a new quantile scale with an empty  domain   quantile domain  and an empty  range   quantile range   The quantile scale is invalid until both a domain and range are specified    a name   quantile  href    quantile     a   i quantile  i   i value  i        https   github com d3 d3 scale blob master src quantile js  Source    Given a  value  in the input  domain   quantile domain   returns the corresponding value in the output  range   quantile range     a name  quantile invertExtent  href   quantile invertExtent     a   i quantile  i   b invertExtent  b   i value  i        https   github com d3 d3 scale blob master src quantile js  Source    Returns the extent of values in the  domain   quantile domain    i x0  i    i x1  i   for the corresponding  value  in the  range   quantile range   the inverse of   quantile     quantile   This method is useful for interaction  say to determine the value in the domain that corresponds to the pixel location under the mouse    a name  quantile domain  href   quantile domain     a   i quantile  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src quantile js  Source    If  domain  is specified  sets the domain of the quantile scale to the specified set of discrete numeric values  The array must not be empty  and must contain at least one numeric value  NaN  null and undefined values are ignored and not considered part of the sample population  If the elements in the given array are not numbers  they will be coerced to numbers  A copy of the input array is sorted and stored internally  If  domain  is not specified  returns the scale s current domain    a name  quantile range  href   quantile range     a   i quantile  i   b range  b    i range  i         https   github com d3 d3 scale blob master src quantile js  Source    If  range  is specified  sets the discrete values in the range  The array must not be empty  and may contain any type of value  The number of values in  the cardinality  or length  of  the  range  array determines the number of quantiles that are computed  For example  to compute quartiles   range  must be an array of four elements such as  0  1  2  3   If  range  is not specified  returns the current range    a name  quantile quantiles  href   quantile quantiles     a   i quantile  i   b quantiles  b         https   github com d3 d3 scale blob master src quantile js  Source    Returns the quantile thresholds  If the  range   quantile range  contains  n  discrete values  the returned array will contain  n    1 thresholds  Values less than the first threshold are considered in the first quantile  values greater than or equal to the first threshold but less than the second threshold are in the second quantile  and so on  Internally  the thresholds array is used with  bisect  https   github com d3 d3 array bisect  to find the output quantile associated with the given input value    a name  quantile copy  href   quantile copy     a   i quantile  i   b copy  b         https   github com d3 d3 scale blob master src quantile js  Source    Returns an exact copy of this scale  Changes to this scale will not affect the returned scale  and vice versa       Threshold Scales  Threshold scales are similar to  quantize scales   quantize scales   except they allow you to map arbitrary subsets of the domain to discrete values in the range  The input domain is still continuous  and divided into slices based on a set of threshold values  See  bl ocks org 3306362  http   bl ocks org mbostock 3306362  for an example    a name  scaleThreshold  href   scaleThreshold     a  d3  b scaleThreshold  b         https   github com d3 d3 scale blob master src threshold js  Source    Constructs a new threshold scale with the default  domain   threshold domain   0 5  and the default  range   threshold range   0  1   Thus  the default threshold scale is equivalent to the  Math round  https   developer mozilla org en JavaScript Reference Global Objects Math round  function for numbers  for example threshold 0 49  returns 0  and threshold 0 51  returns 1    a name   threshold  href    threshold     a   i threshold  i   i value  i        https   github com d3 d3 scale blob master src threshold js  Source    Given a  value  in the input  domain   threshold domain   returns the corresponding value in the output  range   threshold range   For example      js var color   d3 scaleThreshold        domain  0  1        range   red    white    green      color  1         red  color 0          white  color 0 5        white  color 1          green  color 1000       green        a name  threshold invertExtent  href   threshold invertExtent     a   i threshold  i   b invertExtent  b   i value  i        https   github com d3 d3 scale blob master src threshold js  Source    Returns the extent of values in the  domain   threshold domain    i x0  i    i x1  i   for the corresponding  value  in the  range   threshold range   representing the inverse mapping from range to domain  This method is useful for interaction  say to determine the value in the domain that corresponds to the pixel location under the mouse  For example      js var color   d3 scaleThreshold        domain  0  1        range   red    white    green      color invertExtent  red        undefined  0  color invertExtent  white        0  1  color invertExtent  green        1  undefined        a name  threshold domain  href   threshold domain     a   i threshold  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src threshold js  Source    If  domain  is specified  sets the scale s domain to the specified array of values  The values must be in sorted ascending order  or the behavior of the scale is undefined  The values are typically numbers  but any naturally ordered values  such as strings  will work  a threshold scale can be used to encode any type that is ordered  If the number of values in the scale s range is N 1  the number of values in the scale s domain must be N  If there are fewer than N elements in the domain  the additional values in the range are ignored  If there are more than N elements in the domain  the scale may return undefined for some inputs  If  domain  is not specified  returns the scale s current domain    a name  threshold range  href   threshold range     a   i threshold  i   b range  b    i range  i         https   github com d3 d3 scale blob master src threshold js  Source    If  range  is specified  sets the scale s range to the specified array of values  If the number of values in the scale s domain is N  the number of values in the scale s range must be N 1  If there are fewer than N 1 elements in the range  the scale may return undefined for some inputs  If there are more than N 1 elements in the range  the additional values are ignored  The elements in the given array need not be numbers  any value or type will work  If  range  is not specified  returns the scale s current range    a name  threshold copy  href   threshold copy     a   i threshold  i   b copy  b         https   github com d3 d3 scale blob master src threshold js  Source    Returns an exact copy of this scale  Changes to this scale will not affect the returned scale  and vice versa       Ordinal Scales  Unlike  continuous scales   continuous scales   ordinal scales have a discrete domain and range  For example  an ordinal scale might map a set of named categories to a set of colors  or determine the horizontal positions of columns in a column chart    a name  scaleOrdinal  href   scaleOrdinal     a  d3  b scaleOrdinal  b    i range  i         https   github com d3 d3 scale blob master src ordinal js  Source    Constructs a new ordinal scale with an empty  domain   ordinal domain  and the specified   range    ordinal range   If a  range  is not specified  it defaults to the empty array  an ordinal scale always returns undefined until a non empty range is defined    a name   ordinal  href    ordinal     a   i ordinal  i   i value  i        https   github com d3 d3 scale blob master src ordinal js  Source    Given a  value  in the input  domain   ordinal domain   returns the corresponding value in the output  range   ordinal range   If the given  value  is not in the scale s  domain   ordinal domain   returns the  unknown   ordinal value   or  if the unknown value is  implicit   scaleImplicit   the default   then the  value  is implicitly added to the domain and the next available value in the range is assigned to  value   such that this and subsequent invocations of the scale given the same input  value  return the same output value    a name  ordinal domain  href   ordinal domain     a   i ordinal  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src ordinal js  Source    If  domain  is specified  sets the domain to the specified array of values  The first element in  domain  will be mapped to the first element in the range  the second domain value to the second range value  and so on  Domain values are stored internally in a map from stringified value to index  the resulting index is then used to retrieve a value from the range  Thus  an ordinal scale s values must be coercible to a string  and the stringified version of the domain value uniquely identifies the corresponding range value  If  domain  is not specified  this method returns the current domain   Setting the domain on an ordinal scale is optional if the  unknown value   ordinal unknown  is  implicit   scaleImplicit   the default   In this case  the domain will be inferred implicitly from usage by assigning each unique value passed to the scale a new value from the range  Note that an explicit domain is recommended to ensure deterministic behavior  as inferring the domain from usage will be dependent on ordering    a name  ordinal range  href   ordinal range     a   i ordinal  i   b range  b    i range  i         https   github com d3 d3 scale blob master src ordinal js  Source    If  range  is specified  sets the range of the ordinal scale to the specified array of values  The first element in the domain will be mapped to the first element in  range   the second domain value to the second range value  and so on  If there are fewer elements in the range than in the domain  the scale will reuse values from the start of the range  If  range  is not specified  this method returns the current range    a name  ordinal unknown  href   ordinal unknown     a   i ordinal  i   b unknown  b    i value  i         https   github com d3 d3 scale blob master src ordinal js  Source    If  value  is specified  sets the output value of the scale for unknown input values and returns this scale  If  value  is not specified  returns the current unknown value  which defaults to  implicit   implicit   The implicit value enables implicit domain construction  see   ordinal  domain   ordinal domain     a name  ordinal copy  href   ordinal copy     a   i ordinal  i   b copy  b         https   github com d3 d3 scale blob master src ordinal js  Source    Returns an exact copy of this ordinal scale  Changes to this scale will not affect the returned scale  and vice versa    a name  scaleImplicit  href   scaleImplicit     a  d3  b scaleImplicit  b       https   github com d3 d3 scale blob master src ordinal js  Source    A special value for   ordinal  unknown   ordinal unknown  that enables implicit domain construction  unknown values are implicitly added to the domain        Band Scales  Band scales are like  ordinal scales   ordinal scales  except the output range is continuous and numeric  Discrete output values are automatically computed by the scale by dividing the continuous range into uniform bands  Band scales are typically used for bar charts with an ordinal or categorical dimension  The  unknown value   ordinal unknown  of a band scale is effectively undefined  they do not allow implicit domain construction    img src  https   raw githubusercontent com d3 d3 scale master img band png  width  751  height  238  alt  band     a name  scaleBand  href   scaleBand     a  d3  b scaleBand  b         https   github com d3 d3 scale blob master src band js  Source    Constructs a new band scale with the empty  domain   band domain   the unit  range   band range   0  1   no  padding   band padding   no  rounding   band round  and center  alignment   band align     a name   band  href    band     a   i band  i   value        https   github com d3 d3 scale blob master src band js  Source    Given a  value  in the input  domain   band domain   returns the start of the corresponding band derived from the output  range   band range   If the given  value  is not in the scale s domain  returns undefined    a name  band domain  href   band domain     a   i band  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src band js  Source    If  domain  is specified  sets the domain to the specified array of values  The first element in  domain  will be mapped to the first band  the second domain value to the second band  and so on  Domain values are stored internally in a map from stringified value to index  the resulting index is then used to determine the band  Thus  a band scale s values must be coercible to a string  and the stringified version of the domain value uniquely identifies the corresponding band  If  domain  is not specified  this method returns the current domain    a name  band range  href   band range     a   i band  i   b range  b    i range  i         https   github com d3 d3 scale blob master src band js  Source    If  range  is specified  sets the scale s range to the specified two element array of numbers  If the elements in the given array are not numbers  they will be coerced to numbers  If  range  is not specified  returns the scale s current range  which defaults to  0  1     a name  band rangeRound  href   band rangeRound     a   i band  i   b rangeRound  b    i range  i         https   github com d3 d3 scale blob master src band js  Source    Sets the scale s   range    band range  to the specified two element array of numbers while also enabling  rounding   band round   This is a convenience method equivalent to      js band      range range       round true        Rounding is sometimes useful for avoiding antialiasing artifacts  though also consider the  shape rendering  https   developer mozilla org en US docs Web SVG Attribute shape rendering   crispEdges  styles    a name  band round  href   band round     a   i band  i   b round  b    i round  i         https   github com d3 d3 scale blob master src band js  Source    If  round  is specified  enables or disables rounding accordingly  If rounding is enabled  the start and stop of each band will be integers  Rounding is sometimes useful for avoiding antialiasing artifacts  though also consider the  shape rendering  https   developer mozilla org en US docs Web SVG Attribute shape rendering   crispEdges  styles  Note that if the width of the domain is not a multiple of the cardinality of the range  there may be leftover unused space  even without padding  Use   band  align   band align  to specify how the leftover space is distributed    a name  band paddingInner  href   band paddingInner     a   i band  i   b paddingInner  b    i padding  i         https   github com d3 d3 scale blob master src band js  Source    If  padding  is specified  sets the inner padding to the specified value which must be in the range  0  1   If  padding  is not specified  returns the current inner padding which defaults to 0  The inner padding determines the ratio of the range that is reserved for blank space between bands    a name  band paddingOuter  href   band paddingOuter     a   i band  i   b paddingOuter  b    i padding  i         https   github com d3 d3 scale blob master src band js  Source    If  padding  is specified  sets the outer padding to the specified value which must be in the range  0  1   If  padding  is not specified  returns the current outer padding which defaults to 0  The outer padding determines the ratio of the range that is reserved for blank space before the first band and after the last band    a name  band padding  href   band padding     a   i band  i   b padding  b    i padding  i         https   github com d3 d3 scale blob master src band js  Source    A convenience method for setting the  inner   band paddingInner  and  outer   band paddingOuter  padding to the same  padding  value  If  padding  is not specified  returns the inner padding    a name  band align  href   band align     a   i band  i   b align  b    i align  i         https   github com d3 d3 scale blob master src band js  Source    If  align  is specified  sets the alignment to the specified value which must be in the range  0  1   If  align  is not specified  returns the current alignment which defaults to 0 5  The alignment determines how any leftover unused space in the range is distributed  A value of 0 5 indicates that the leftover space should be equally distributed before the first band and after the last band   i e    the bands should be centered within the range  A value of 0 or 1 may be used to shift the bands to one side  say to position them adjacent to an axis    a name  band bandwidth  href   band bandwidth     a   i band  i   b bandwidth  b         https   github com d3 d3 scale blob master src band js  Source    Returns the width of each band    a name  band step  href   band step     a   i band  i   b step  b         https   github com d3 d3 scale blob master src band js  Source    Returns the distance between the starts of adjacent bands    a name  band copy  href   band copy     a   i band  i   b copy  b         https   github com d3 d3 scale blob master src band js  Source    Returns an exact copy of this scale  Changes to this scale will not affect the returned scale  and vice versa        Point Scales  Point scales are a variant of  band scales   band scales  with the bandwidth fixed to zero  Point scales are typically used for scatterplots with an ordinal or categorical dimension  The  unknown value   ordinal unknown  of a point scale is always undefined  they do not allow implicit domain construction    img src  https   raw githubusercontent com d3 d3 scale master img point png  width  648  height  155  alt  point     a name  scalePoint  href   scalePoint     a  d3  b scalePoint  b         https   github com d3 d3 scale blob master src band js  Source    Constructs a new point scale with the empty  domain   point domain   the unit  range   point range   0  1   no  padding   point padding   no  rounding   point round  and center  alignment   point align     a name   point  href    point     a   i point  i   value        https   github com d3 d3 scale blob master src band js  Source    Given a  value  in the input  domain   point domain   returns the corresponding point derived from the output  range   point range   If the given  value  is not in the scale s domain  returns undefined    a name  point domain  href   point domain     a   i point  i   b domain  b    i domain  i         https   github com d3 d3 scale blob master src band js  Source    If  domain  is specified  sets the domain to the specified array of values  The first element in  domain  will be mapped to the first point  the second domain value to the second point  and so on  Domain values are stored internally in a map from stringified value to index  the resulting index is then used to determine the point  Thus  a point scale s values must be coercible to a string  and the stringified version of the domain value uniquely identifies the corresponding point  If  domain  is not specified  this method returns the current domain    a name  point range  href   point range     a   i point  i   b range  b    i range  i         https   github com d3 d3 scale blob master src band js  Source    If  range  is specified  sets the scale s range to the specified two element array of numbers  If the elements in the given array are not numbers  they will be coerced to numbers  If  range  is not specified  returns the scale s current range  which defaults to  0  1     a name  point rangeRound  href   point rangeRound     a   i point  i   b rangeRound  b    i range  i         https   github com d3 d3 scale blob master src band js  Source    Sets the scale s   range    point range  to the specified two element array of numbers while also enabling  rounding   point round   This is a convenience method equivalent to      js point      range range       round true        Rounding is sometimes useful for avoiding antialiasing artifacts  though also consider the  shape rendering  https   developer mozilla org en US docs Web SVG Attribute shape rendering   crispEdges  styles    a name  point round  href   point round     a   i point  i   b round  b    i round  i         https   github com d3 d3 scale blob master src band js  Source    If  round  is specified  enables or disables rounding accordingly  If rounding is enabled  the position of each point will be integers  Rounding is sometimes useful for avoiding antialiasing artifacts  though also consider the  shape rendering  https   developer mozilla org en US docs Web SVG Attribute shape rendering   crispEdges  styles  Note that if the width of the domain is not a multiple of the cardinality of the range  there may be leftover unused space  even without padding  Use   point  align   point align  to specify how the leftover space is distributed    a name  point padding  href   point padding     a   i point  i   b padding  b    i padding  i         https   github com d3 d3 scale blob master src band js  Source    If  padding  is specified  sets the outer padding to the specified value which must be in the range  0  1   If  padding  is not specified  returns the current outer padding which defaults to 0  The outer padding determines the ratio of the range that is reserved for blank space before the first point and after the last point  Equivalent to   band  paddingOuter   band paddingOuter     a name  point align  href   point align     a   i point  i   b align  b    i align  i         https   github com d3 d3 scale blob master src band js  Source    If  align  is specified  sets the alignment to the specified value which must be in the range  0  1   If  align  is not specified  returns the current alignment which defaults to 0 5  The alignment determines how any leftover unused space in the range is distributed  A value of 0 5 indicates that the leftover space should be equally distributed before the first point and after the last point   i e    the points should be centered within the range  A value of 0 or 1 may be used to shift the points to one side  say to position them adjacent to an axis    a name  point bandwidth  href   point bandwidth     a   i point  i   b bandwidth  b         https   github com d3 d3 scale blob master src band js  Source    Returns zero    a name  point step  href   point step     a   i point  i   b step  b         https   github com d3 d3 scale blob master src band js  Source    Returns the distance between the starts of adjacent points    a name  point copy  href   point copy     a   i point  i   b copy  b         https   github com d3 d3 scale blob master src band js  Source    Returns an exact copy of this scale  Changes to this scale will not affect the returned scale  and vice versa  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-scale"},{"name":"d3/d3-force","artist":"return, specifi, sourc, array, valu","id":43,"playcount":41055,"description":"d3/d3-force return, specifi, sourc, array, valu   d3 force  This module implements a  velocity Verlet  https   en wikipedia org wiki Verlet integration  numerical integrator for simulating physical forces on particles  The simulation is simplified  it assumes a constant unit time step   t    1 for each step  and a constant unit mass  m    1 for all particles  As a result  a force  F  acting on a particle is equivalent to a constant acceleration  a  over the time interval   t   and can be simulated simply by adding to the particle s velocity  which is then added to the particle s position   In the domain of information visualization  physical simulations are useful for studying  networks  http   bl ocks org mbostock ad70335eeef6d167bc36fd3c04378048  and  hierarchies  http   bl ocks org mbostock 95aa92e2f4e8345aaa55a4a94d41ce37      img alt  Force Dragging III  src  https   raw githubusercontent com d3 d3 force master img graph png  width  420  height  219    http   bl ocks org mbostock ad70335eeef6d167bc36fd3c04378048   img alt  Force Directed Tree  src  https   raw githubusercontent com d3 d3 force master img tree png  width  420  height  219    http   bl ocks org mbostock 95aa92e2f4e8345aaa55a4a94d41ce37   You can also simulate circles  disks  with collision  such as for  bubble charts  http   www nytimes com interactive 2012 09 06 us politics convention word counts html  or  beeswarm plots  http   bl ocks org mbostock 6526445e2b44303eebf21da3b6627320      img alt  Collision Detection  src  https   raw githubusercontent com d3 d3 force master img collide png  width  420  height  219    http   bl ocks org mbostock 31ce330646fa8bcb7289ff3b97aab3f5   img alt  Beeswarm  src  https   raw githubusercontent com d3 d3 force master img beeswarm png  width  420  height  219    http   bl ocks org mbostock 6526445e2b44303eebf21da3b6627320   You can even use it as a rudimentary physics engine  say to simulate cloth     img alt  Force Directed Lattice  src  https   raw githubusercontent com d3 d3 force master img lattice png  width  480  height  250    http   bl ocks org mbostock 1b64ec067fcfc51e7471d944f51f1611   To use this module  create a  simulation   simulation  for an array of  nodes   simulation nodes   and compose the desired  forces   simulation force   Then  listen   simulation on  for tick events to render the nodes as they update in your preferred graphics system  such as Canvas or SVG      Installing  If you use NPM   npm install d3 force   Otherwise  download the  latest release  https   github com d3 d3 force releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 force v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3 force  global is exported      html  script src  https   d3js org d3 collection v1 min js    script   script src  https   d3js org d3 dispatch v1 min js    script   script src  https   d3js org d3 quadtree v1 min js    script   script src  https   d3js org d3 timer v1 min js    script   script src  https   d3js org d3 force v1 min js    script   script   var simulation   d3 forceSimulation nodes      script        Try d3 force in your browser   https   tonicdev com npm d3 force      API Reference      Simulation   a name  forceSimulation  href   forceSimulation     a  d3  b forceSimulation  b    i nodes  i         https   github com d3 d3 force blob master src simulation js  Source    Creates a new simulation with the specified array of   nodes    simulation nodes  and no  forces   simulation force   If  nodes  is not specified  it defaults to the empty array  The simulator  starts   simulation restart  automatically  use   simulation  on   simulation on  to listen for tick events as the simulation runs  If you wish to run the simulation manually instead  call   simulation  stop   simulation stop   and then call   simulation  tick   simulation tick  as desired    a name  simulation restart  href   simulation restart     a   i simulation  i   b restart  b         https   github com d3 d3 force blob master src simulation js L80  Source    Restarts the simulation s internal timer and returns the simulation  In conjunction with   simulation  alphaTarget   simulation alphaTarget  or   simulation  alpha   simulation alpha   this method can be used to  reheat  the simulation during interaction  such as when dragging a node  or to resume the simulation after temporarily pausing it with   simulation  stop   simulation stop     a name  simulation stop  href   simulation stop     a   i simulation  i   b stop  b         https   github com d3 d3 force blob master src simulation js L84  Source    Stops the simulation s internal timer  if it is running  and returns the simulation  If the timer is already stopped  this method does nothing  This method is useful for running the simulation manually  see   simulation  tick   simulation tick     a name  simulation tick  href   simulation tick     a   i simulation  i   b tick  b         https   github com d3 d3 force blob master src simulation js L38  Source    Increments the current   alpha    simulation alpha  by    alphaTarget    simulation alphaTarget     alpha       alphaDecay    simulation alphaDecay   then invokes each registered  force   simulation force   passing the new  alpha   then decrements each  node   simulation nodes  s velocity by  velocity      velocityDecay    simulation velocityDecay   lastly increments each node s position by  velocity    This method does not dispatch  events   simulation on   events are only dispatched by the internal timer when the simulation is started automatically upon  creation   forceSimulation  or by calling   simulation  restart   simulation restart   The natural number of ticks when the simulation is started is   log    alphaMin    simulation alphaMin      log  1     alphaDecay    simulation alphaDecay     by default  this is 300   This method can be used in conjunction with   simulation  stop   simulation stop  to compute a  static force layout  https   bl ocks org mbostock 1667139   For large graphs  static layouts should be computed  in a web worker  https   bl ocks org mbostock 01ab2e85e8727d6529d20391c0fd9a16  to avoid freezing the user interface    a name  simulation nodes  href   simulation nodes     a   i simulation  i   b nodes  b    i nodes  i         https   github com d3 d3 force blob master src simulation js L88  Source    If  nodes  is specified  sets the simulation s nodes to the specified array of objects  initializing their positions and velocities if necessary  and then  re initializes   force initialize  any bound  forces   simulation force   returns the simulation  If  nodes  is not specified  returns the simulation s array of nodes as specified to the  constructor   forceSimulation    Each  node  must be an object  The following properties are assigned by the simulation      index    the node s zero based index into  nodes     x    the node s current  x  position    y    the node s current  y  position    vx    the node s current  x  velocity    vy    the node s current  y  velocity  The position   x   y   and velocity   vx   vy   may be subsequently modified by  forces   forces  and by the simulation  If either  vx  or  vy  is NaN  the velocity is initialized to  0 0   If either  x  or  y  is NaN  the position is initialized in a  phyllotaxis arrangement  http   bl ocks org mbostock 11478058   so chosen to ensure a deterministic  uniform distribution around the origin   To fix a node in a given position  you may specify two additional properties      fx    the node s fixed  x  position    fy    the node s fixed  y  position  At the end of each  tick   simulation tick   after the application of any forces  a node with a defined  node  fx has  node  x reset to this value and  node  vx set to zero  likewise  a node with a defined  node  fy has  node  y reset to this value and  node  vy set to zero  To unfix a node that was previously fixed  set  node  fx and  node  fy to null  or delete these properties   If the specified array of  nodes  is modified  such as when nodes are added to or removed from the simulation  this method must be called again with the new  or changed  array to notify the simulation and bound forces of the change  the simulation does not make a defensive copy of the specified array    a name  simulation alpha  href   simulation alpha     a   i simulation  i   b alpha  b    i alpha  i         https   github com d3 d3 force blob master src simulation js L92  Source    If  alpha  is specified  sets the current alpha to the specified number in the range  0 1  and returns this simulation  If  alpha  is not specified  returns the current alpha value  which defaults to 1    a name  simulation alphaMin  href   simulation alphaMin     a   i simulation  i   b alphaMin  b    i min  i         https   github com d3 d3 force blob master src simulation js L96  Source    If  min  is specified  sets the minimum  alpha  to the specified number in the range  0 1  and returns this simulation  If  min  is not specified  returns the current minimum  alpha  value  which defaults to 0 001  The simulation s internal timer stops when the current   alpha    simulation alpha  is less than the minimum  alpha   The default  alpha decay rate   simulation alphaDecay  of  0 0228 corresponds to 300 iterations    a name  simulation alphaDecay  href   simulation alphaDecay     a   i simulation  i   b alphaDecay  b    i decay  i         https   github com d3 d3 force blob master src simulation js L100  Source    If  decay  is specified  sets the   alpha    simulation alpha  decay rate to the specified number in the range  0 1  and returns this simulation  If  decay  is not specified  returns the current  alpha  decay rate  which defaults to 0 0228    1    pow  0 001  1   300  where 0 001 is the default  minimum  alpha    simulation alphaMin    The alpha decay rate determines how quickly the current alpha interpolates towards the desired  target  alpha    simulation alphaTarget   since the default target  alpha  is zero  by default this controls how quickly the simulation cools  Higher decay rates cause the simulation to stabilize more quickly  but risk getting stuck in a local minimum  lower values cause the simulation to take longer to run  but typically converge on a better layout  To have the simulation run forever at the current  alpha   set the  decay  rate to zero  alternatively  set a  target  alpha    simulation alphaTarget  greater than the  minimum  alpha    simulation alphaMin     a name  simulation alphaTarget  href   simulation alphaTarget     a   i simulation  i   b alphaTarget  b    i target  i         https   github com d3 d3 force blob master src simulation js L104  Source    If  target  is specified  sets the current target   alpha    simulation alpha  to the specified number in the range  0 1  and returns this simulation  If  target  is not specified  returns the current target alpha value  which defaults to 0    a name  simulation velocityDecay  href   simulation velocityDecay     a   i simulation  i   b velocityDecay  b    i decay  i         https   github com d3 d3 force blob master src simulation js L108  Source    If  decay  is specified  sets the velocity decay factor to the specified number in the range  0 1  and returns this simulation  If  decay  is not specified  returns the current velocity decay factor  which defaults to 0 4  The decay factor is akin to atmospheric friction  after the application of any forces during a  tick   simulation tick   each node s velocity is multiplied by 1    decay   As with lowering the  alpha decay rate   simulation alphaDecay   less velocity decay may converge on a better solution  but risks numerical instabilities and oscillation    a name  simulation force  href   simulation force     a   i simulation  i   b force  b   i name  i     i force  i         https   github com d3 d3 force blob master src simulation js L112  Source    If  force  is specified  assigns the  force   forces  for the specified  name  and returns this simulation  If  force  is not specified  returns the force with the specified name  or undefined if there is no such force   By default  new simulations have no forces   For example  to create a new simulation to layout a graph  you might say      js var simulation   d3 forceSimulation nodes       force  charge   d3 forceManyBody         force  link   d3 forceLink links        force  center   d3 forceCenter          To remove the force with the given  name   pass null as the  force   For example  to remove the charge force      js simulation force  charge   null         a name  simulation find  href   simulation find     a   i simulation  i   b find  b   i x  i    i y  i     i radius  i         https   github com d3 d3 force blob master src simulation js L116  Source    Returns the node closest to the position   x   y   with the given search  radius   If  radius  is not specified  it defaults to infinity  If there is no node within the search area  returns undefined    a name  simulation on  href   simulation on     a   i simulation  i   b on  b   i typenames  i     i listener  i         https   github com d3 d3 force blob master src simulation js L139  Source    If  listener  is specified  sets the event  listener  for the specified  typenames  and returns this simulation  If an event listener was already registered for the same type and name  the existing listener is removed before the new listener is added  If  listener  is null  removes the current event listeners for the specified  typenames   if any  If  listener  is not specified  returns the first currently assigned listener matching the specified  typenames   if any  When a specified event is dispatched  each  listener  will be invoked with the  this  context as the simulation   The  typenames  is a string containing one or more  typename  separated by whitespace  Each  typename  is a  type   optionally followed by a period       and a  name   such as  tick foo  and  tick bar   the name allows multiple listeners to be registered for the same  type   The  type  must be one of the following      tick    after each tick of the simulation s internal timer     end    after the simulation s timer stops when  alpha      alphaMin    simulation alphaMin    Note that  tick  events are not dispatched when   simulation  tick   simulation tick  is called manually  events are only dispatched by the internal timer and are intended for interactive rendering of the simulation  To affect the simulation  register  forces   simulation force  instead of modifying nodes  positions or velocities inside a tick event listener   See   dispatch  on  https   github com d3 d3 dispatch dispatch on  for details       Forces  A  force  is simply a function that modifies nodes  positions or velocities  in this context  a  force  can apply a classical physical force such as electrical charge or gravity  or it can resolve a geometric constraint  such as keeping nodes within a bounding box or keeping linked nodes a fixed distance apart  For example  a simple positioning force that moves nodes towards the origin  0 0  might be implemented as      js function force alpha      for  var i   0  n   nodes length  node  k   alpha   0 1  i   n    i        node   nodes i       node vx    node x   k      node vy    node y   k             Forces typically read the node s current position   x   y   and then add to  or subtract from  the node s velocity   vx   vy    However  forces may also  peek ahead  to the anticipated next position of the node    x     vx   y     vy    this is necessary for resolving geometric constraints through  iterative relaxation  https   en wikipedia org wiki Relaxation   iterative method     Forces may also modify the position directly  which is sometimes useful to avoid adding energy to the simulation  such as when recentering the simulation in the viewport   Simulations typically compose multiple forces as desired  This module provides several for your enjoyment      Centering   centering     Collision   collision     Links   links     Many Body   many body     Positioning   positioning   Forces may optionally implement   force  initialize   force initialize  to receive the simulation s array of nodes    a name   force  href    force     a   i force  i   i alpha  i        https   github com d3 d3 force blob master src simulation js L44  Source    Applies this force  optionally observing the specified  alpha   Typically  the force is applied to the array of nodes previously passed to   force  initialize   force initialize   however  some forces may apply to a subset of nodes  or behave differently  For example   d3 forceLink   links  applies to the source and target of each link    a name  force initialize  href   force initialize     a   i force  i   b initialize  b   i nodes  i        https   github com d3 d3 force blob master src simulation js L71  Source    Assigns the array of  nodes  to this force  This method is called when a force is bound to a simulation via   simulation  force   simulation force  and when the simulation s nodes change via   simulation  nodes   simulation nodes   A force may perform necessary work during initialization  such as evaluating per node parameters  to avoid repeatedly performing work during each application of the force        Centering  The centering force translates nodes uniformly so that the mean position of all nodes  the center of mass if all nodes have equal weight  is at the given position    x    center x    y    center y    This force modifies the positions of nodes on each application  it does not modify velocities  as doing so would typically cause the nodes to overshoot and oscillate around the desired center  This force helps keeps nodes in the center of the viewport  and unlike the  positioning force   positioning   it does not distort their relative positions    a name  forceCenter  href   forceCenter     a  d3  b forceCenter  b    i x  i    i y  i         https   github com d3 d3 force blob master src center js L1  Source    Creates a new centering force with the specified   x     center x  and   y     center y  coordinates  If  x  and  y  are not specified  they default to  0 0     a name  center x  href   center x     a   i center  i   b x  b    i x  i         https   github com d3 d3 force blob master src center js L27  Source    If  x  is specified  sets the  x  coordinate of the centering position to the specified number and returns this force  If  x  is not specified  returns the current  x  coordinate  which defaults to zero    a name  center y  href   center y     a   i center  i   b y  b    i y  i         https   github com d3 d3 force blob master src center js L31  Source    If  y  is specified  sets the  y  coordinate of the centering position to the specified number and returns this force  If  y  is not specified  returns the current  y  coordinate  which defaults to zero        Collision  The collision force treats nodes as circles with a given  radius   collide radius   rather than points  and prevents nodes from overlapping  More formally  two nodes  a  and  b  are separated so that the distance between  a  and  b  is at least  radius   a      radius   b    To reduce jitter  this is by default a  soft  constraint with a configurable  strength   collide strength  and  iteration count   collide iterations     a name  forceCollide  href   forceCollide     a  d3  b forceCollide  b    i radius  i         https   github com d3 d3 force blob master src collide js  Source    Creates a new circle collision force with the specified   radius    collide radius   If  radius  is not specified  it defaults to the constant one for all nodes    a name  collide radius  href   collide radius     a   i collide  i   b radius  b    i radius  i         https   github com d3 d3 force blob master src collide js L86  Source    If  radius  is specified  sets the radius accessor to the specified number or function  re evaluates the radius accessor for each node  and returns this force  If  radius  is not specified  returns the current radius accessor  which defaults to      js function radius       return 1         The radius accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the radius of each node is only recomputed when the force is initialized or when this method is called with a new  radius   and not on every application of the force    a name  collide strength  href   collide strength     a   i collide  i   b strength  b    i strength  i         https   github com d3 d3 force blob master src collide js L82  Source    If  strength  is specified  sets the force strength to the specified number in the range  0 1  and returns this force  If  strength  is not specified  returns the current strength which defaults to 0 7   Overlapping nodes are resolved through iterative relaxation  For each node  the other nodes that are anticipated to overlap at the next tick  using the anticipated positions   x     vx   y     vy    are determined  the node s velocity is then modified to push the node out of each overlapping node  The change in velocity is dampened by the force s strength such that the resolution of simultaneous overlaps can be blended together to find a stable solution    a name  collide iterations  href   collide iterations     a   i collide  i   b iterations  b    i iterations  i         https   github com d3 d3 force blob master src collide js L78  Source    If  iterations  is specified  sets the number of iterations per application to the specified number and returns this force  If  iterations  is not specified  returns the current iteration count which defaults to 1  Increasing the number of iterations greatly increases the rigidity of the constraint and avoids partial overlap of nodes  but also increases the runtime cost to evaluate the force        Links  The link force pushes linked nodes together or apart according to the desired  link distance   link distance   The strength of the force is proportional to the difference between the linked nodes  distance and the target distance  similar to a spring force    a name  forceLink  href   forceLink     a  d3  b forceLink  b    i links  i         https   github com d3 d3 force blob master src link js  Source    Creates a new link force with the specified  links  and default parameters  If  links  is not specified  it defaults to the empty array    a name  link links  href   link links     a   i link  i   b links  b    i links  i         https   github com d3 d3 force blob master src link js L92  Source    If  links  is specified  sets the array of links associated with this force  recomputes the  distance   link distance  and  strength   link strength  parameters for each link  and returns this force  If  links  is not specified  returns the current array of links  which defaults to the empty array   Each link is an object with the following properties      source    the link s source node  see   simulation  nodes   simulation nodes     target    the link s target node  see   simulation  nodes   simulation nodes     index    the zero based index into  links   assigned by this method  For convenience  a link s source and target properties may be initialized using numeric or string identifiers rather than object references  see   link  id   link id   When the link force is  initialized   force initialize   or re initialized  as when the nodes or links change   any  link  source or  link  target property which is  not  an object is replaced by an object reference to the corresponding  node  with the given identifier   If the specified array of  links  is modified  such as when links are added to or removed from the simulation  this method must be called again with the new  or changed  array to notify the force of the change  the force does not make a defensive copy of the specified array    a name  link id  href   link id     a   i link  i   b id  b    i id  i         https   github com d3 d3 force blob master src link js L96  Source    If  id  is specified  sets the node id accessor to the specified function and returns this force  If  id  is not specified  returns the current node id accessor  which defaults to the numeric  node  index      js function id d      return d index         The default id accessor allows each link s source and target to be specified as a zero based index into the  nodes   simulation nodes  array  For example      js var nodes         id    Alice        id    Bob        id    Carol       var links         source   0   target   1      Alice   Bob     source   1   target   2     Bob   Carol         Now consider a different id accessor that returns a string      js function id d      return d id         With this accessor  you can use named sources and targets      js var nodes         id    Alice        id    Bob        id    Carol       var links         source    Alice    target    Bob        source    Bob    target    Carol           This is particularly useful when representing graphs in JSON  as JSON does not allow references  See  this example  http   bl ocks org mbostock f584aa36df54c451c94a9d0798caed35    The id accessor is invoked for each node whenever the force is initialized  as when the  nodes   simulation nodes  or  links   link links  change  being passed the node and its zero based index    a name  link distance  href   link distance     a   i link  i   b distance  b    i distance  i         https   github com d3 d3 force blob master src link js L108  Source    If  distance  is specified  sets the distance accessor to the specified number or function  re evaluates the distance accessor for each link  and returns this force  If  distance  is not specified  returns the current distance accessor  which defaults to      js function distance       return 30         The distance accessor is invoked for each  link   link links   being passed the  link  and its zero based  index   The resulting number is then stored internally  such that the distance of each link is only recomputed when the force is initialized or when this method is called with a new  distance   and not on every application of the force    a name  link strength  href   link strength     a   i link  i   b strength  b    i strength  i         https   github com d3 d3 force blob master src link js L104  Source    If  strength  is specified  sets the strength accessor to the specified number or function  re evaluates the strength accessor for each link  and returns this force  If  strength  is not specified  returns the current strength accessor  which defaults to      js function strength link      return 1   Math min count link source   count link target           Where  count   node   is a function that returns the number of links with the given node as a source or target  This default was chosen because it automatically reduces the strength of links connected to heavily connected nodes  improving stability   The strength accessor is invoked for each  link   link links   being passed the  link  and its zero based  index   The resulting number is then stored internally  such that the strength of each link is only recomputed when the force is initialized or when this method is called with a new  strength   and not on every application of the force    a name  link iterations  href   link iterations     a   i link  i   b iterations  b    i iterations  i         https   github com d3 d3 force blob master src link js L100  Source    If  iterations  is specified  sets the number of iterations per application to the specified number and returns this force  If  iterations  is not specified  returns the current iteration count which defaults to 1  Increasing the number of iterations greatly increases the rigidity of the constraint and is useful for  complex structures such as lattices  http   bl ocks org mbostock 1b64ec067fcfc51e7471d944f51f1611   but also increases the runtime cost to evaluate the force        Many Body  The many body  or  n  body  force applies mutually amongst all  nodes   simulation nodes   It can be used to simulate gravity  attraction  if the  strength   manyBody strength  is positive  or electrostatic charge  repulsion  if the strength is negative  This implementation uses quadtrees and the  Barnes Hut approximation  https   en wikipedia org wiki Barnes Hut simulation  to greatly improve performance  the accuracy can be customized using the  theta   manyBody theta  parameter   Unlike links  which only affect two linked nodes  the charge force is global  every node affects every other node  even if they are on disconnected subgraphs    a name  forceManyBody  href   forceManyBody     a  d3  b forceManyBody  b         https   github com d3 d3 force blob master src manyBody js  Source    Creates a new many body force with the default parameters    a name  manyBody strength  href   manyBody strength     a   i manyBody  i   b strength  b    i strength  i         https   github com d3 d3 force blob master src manyBody js L97  Source    If  strength  is specified  sets the strength accessor to the specified number or function  re evaluates the strength accessor for each node  and returns this force  A positive value causes nodes to attract each other  similar to gravity  while a negative value causes nodes to repel each other  similar to electrostatic charge  If  strength  is not specified  returns the current strength accessor  which defaults to      js function strength       return  30         The strength accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the strength of each node is only recomputed when the force is initialized or when this method is called with a new  strength   and not on every application of the force    a name  manyBody theta  href   manyBody theta     a   i manyBody  i   b theta  b    i theta  i         https   github com d3 d3 force blob master src manyBody js L109  Source    If  theta  is specified  sets the Barnes Hut approximation criterion to the specified number and returns this force  If  theta  is not specified  returns the current value  which defaults to 0 9   To accelerate computation  this force implements the  Barnes Hut approximation  http   en wikipedia org wiki Barnes Hut simulation  which takes O  n  log  n   per application where  n  is the number of  nodes   simulation nodes   For each application  a  quadtree  https   github com d3 d3 quadtree  stores the current node positions  then for each node  the combined force of all other nodes on the given node is computed  For a cluster of nodes that is far away  the charge force can be approximated by treating the cluster as a single  larger node  The  theta  parameter determines the accuracy of the approximation  if the ratio  w     l  of the width  w  of the quadtree cell to the distance  l  from the node to the cell s center of mass is less than  theta   all nodes in the given cell are treated as a single node rather than individually    a name  manyBody distanceMin  href   manyBody distanceMin     a   i manyBody  i   b distanceMin  b    i distance  i         https   github com d3 d3 force blob master src manyBody js L101  Source    If  distance  is specified  sets the minimum distance between nodes over which this force is considered  If  distance  is not specified  returns the current minimum distance  which defaults to 1  A minimum distance establishes an upper bound on the strength of the force between two nearby nodes  avoiding instability  In particular  it avoids an infinitely strong force if two nodes are exactly coincident  in this case  the direction of the force is random    a name  manyBody distanceMax  href   manyBody distanceMax     a   i manyBody  i   b distanceMax  b    i distance  i         https   github com d3 d3 force blob master src manyBody js L105  Source    If  distance  is specified  sets the maximum distance between nodes over which this force is considered  If  distance  is not specified  returns the current maximum distance  which defaults to infinity  Specifying a finite maximum distance improves performance and produces a more localized layout        Positioning  The   x    forceX   and   y    forceY  positioning forces push nodes towards a desired position along the given dimension with a configurable strength  The   radial    forceRadial  force is similar  except it pushes nodes towards the closest point on a given circle  The strength of the force is proportional to the one dimensional distance between the node s position and the target position  While these forces can be used to position individual nodes  they are intended primarily for global forces that apply to all  or most  nodes    a name  forceX  href   forceX     a  d3  b forceX  b    i x  i         https   github com d3 d3 force blob master src x js  Source    Creates a new positioning force along the  x  axis towards the given position   x    x x   If  x  is not specified  it defaults to 0    a name  x strength  href   x strength     a   i x  i   b strength  b    i strength  i         https   github com d3 d3 force blob master src x js L32  Source    If  strength  is specified  sets the strength accessor to the specified number or function  re evaluates the strength accessor for each node  and returns this force  The  strength  determines how much to increment the node s  x  velocity     x    x x     node  x     strength   For example  a value of 0 1 indicates that the node should move a tenth of the way from its current  x  position to the target  x  position with each application  Higher values moves nodes more quickly to the target position  often at the expense of other forces or constraints  A value outside the range  0 1  is not recommended   If  strength  is not specified  returns the current strength accessor  which defaults to      js function strength       return 0 1         The strength accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the strength of each node is only recomputed when the force is initialized or when this method is called with a new  strength   and not on every application of the force    a name  x x  href   x x     a   i x  i   b x  b    i x  i         https   github com d3 d3 force blob master src x js L36  Source    If  x  is specified  sets the  x  coordinate accessor to the specified number or function  re evaluates the  x  accessor for each node  and returns this force  If  x  is not specified  returns the current  x  accessor  which defaults to      js function x       return 0         The  x  accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the target  x  coordinate of each node is only recomputed when the force is initialized or when this method is called with a new  x   and not on every application of the force    a name  forceY  href   forceY     a  d3  b forceY  b    i y  i         https   github com d3 d3 force blob master src y js  Source    Creates a new positioning force along the  y  axis towards the given position   y    y y   If  y  is not specified  it defaults to 0    a name  y strength  href   y strength     a   i y  i   b strength  b    i strength  i         https   github com d3 d3 force blob master src y js L32  Source    If  strength  is specified  sets the strength accessor to the specified number or function  re evaluates the strength accessor for each node  and returns this force  The  strength  determines how much to increment the node s  y  velocity     y    y y     node  y     strength   For example  a value of 0 1 indicates that the node should move a tenth of the way from its current  y  position to the target  y  position with each application  Higher values moves nodes more quickly to the target position  often at the expense of other forces or constraints  A value outside the range  0 1  is not recommended   If  strength  is not specified  returns the current strength accessor  which defaults to      js function strength       return 0 1         The strength accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the strength of each node is only recomputed when the force is initialized or when this method is called with a new  strength   and not on every application of the force    a name  y y  href   y y     a   i y  i   b y  b    i y  i         https   github com d3 d3 force blob master src y js L36  Source    If  y  is specified  sets the  y  coordinate accessor to the specified number or function  re evaluates the  y  accessor for each node  and returns this force  If  y  is not specified  returns the current  y  accessor  which defaults to      js function y       return 0         The  y  accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the target  y  coordinate of each node is only recomputed when the force is initialized or when this method is called with a new  y   and not on every application of the force    a name  forceRadial  href   forceRadial     a  d3  b forceRadial  b   i radius  i     i x  i      i y  i         https   github com d3 d3 force blob master src radial js  Source      img alt  Radial Force  src  https   raw githubusercontent com d3 d3 force master img radial png  width  420  height  219    https   bl ocks org mbostock cd98bf52e9067e26945edd95e8cf6ef9   Creates a new positioning force towards a circle of the specified   radius    radial radius  centered at    x    radial x    y    radial y    If  x  and  y  are not specified  they default to  0 0     a name  radial strength  href   radial strength     a   i radial  i   b strength  b    i strength  i         https   github com d3 d3 force blob master src radial js  Source    If  strength  is specified  sets the strength accessor to the specified number or function  re evaluates the strength accessor for each node  and returns this force  The  strength  determines how much to increment the node s  x   and  y  velocity  For example  a value of 0 1 indicates that the node should move a tenth of the way from its current position to the closest point on the circle with each application  Higher values moves nodes more quickly to the target position  often at the expense of other forces or constraints  A value outside the range  0 1  is not recommended   If  strength  is not specified  returns the current strength accessor  which defaults to      js function strength       return 0 1         The strength accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the strength of each node is only recomputed when the force is initialized or when this method is called with a new  strength   and not on every application of the force    a name  radial radius  href   radial radius     a   i radial  i   b radius  b    i radius  i         https   github com d3 d3 force blob master src radial js  Source    If  radius  is specified  sets the circle  radius  to the specified number or function  re evaluates the  radius  accessor for each node  and returns this force  If  radius  is not specified  returns the current  radius  accessor   The  radius  accessor is invoked for each  node   simulation nodes  in the simulation  being passed the  node  and its zero based  index   The resulting number is then stored internally  such that the target radius of each node is only recomputed when the force is initialized or when this method is called with a new  radius   and not on every application of the force    a name  radial x  href   radial x     a   i radial  i   b x  b    i x  i         https   github com d3 d3 force blob master src radial js  Source    If  x  is specified  sets the  x  coordinate of the circle center to the specified number and returns this force  If  x  is not specified  returns the current  x  coordinate of the center  which defaults to zero    a name  radial y  href   radial y     a   i radial  i   b y  b    i y  i         https   github com d3 d3 force blob master src radial js  Source    If  y  is specified  sets the  y  coordinate of the circle center to the specified number and returns this force  If  y  is not specified  returns the current  y  coordinate of the center  which defaults to zero  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-force"},{"name":"d3/d3-dispatch","artist":"specifi, return, select, current, element","id":44,"playcount":5268,"description":"d3/d3-dispatch specifi, return, select, current, element   d3 dispatch  Dispatching is a convenient mechanism for separating concerns with loosely coupled code  register named callbacks and then call them with arbitrary arguments  A variety of D3 components  such as  d3 request  https   github com d3 d3 request   use this mechanism to emit events to listeners  Think of this like Node s  EventEmitter  https   nodejs org api events html   except every listener has a well defined name so it s easy to remove or replace them   For example  to create a dispatch for  start  and  end  events      js var dispatch   d3 dispatch  start    end         You can then register callbacks for these events using   dispatch  on   dispatch on       js dispatch on  start   callback1   dispatch on  start foo   callback2   dispatch on  end   callback3        Then  you can invoke all the  start  callbacks using   dispatch  call   dispatch call  or   dispatch  apply   dispatch apply       js dispatch call  start         Like  function  call  you may also specify the  this  context and any arguments      js dispatch call  start    about   I am a context object     I am an argument         Want a more involved example  See how to use  d3 dispatch for coordinated views  http   bl ocks org mbostock 5872848       Installing  If you use NPM   npm install d3 dispatch   Otherwise  download the  latest release  https   github com d3 d3 dispatch releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 dispatch v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 dispatch v1 min js    script   script   var dispatch   d3 dispatch  start    end       script        Try d3 dispatch in your browser   https   tonicdev com npm d3 dispatch      API Reference   a name  dispatch  href   dispatch     a  d3  b dispatch  b   i types   i        https   github com d3 d3 dispatch blob master src dispatch js  Source    Creates a new dispatch for the specified event  types   Each  type  is a string  such as   start   or   end      a name  dispatch on  href   dispatch on     a   dispatch   b on  b   i typenames  i     i callback  i         https   github com d3 d3 dispatch blob master src dispatch js L26  Source    Adds  removes or gets the  callback  for the specified  typenames   If a  callback  function is specified  it is registered for the specified  fully qualified   typenames   If a callback was already registered for the given  typenames   the existing callback is removed before the new callback is added   The specified  typenames  is a string  such as  start  or  end foo   The type may be optionally followed by a period       and a name  the optional name allows multiple callbacks to be registered to receive events of the same type  such as  start foo  and  start bar   To specify multiple typenames  separate typenames with spaces  such as  start end  or  start foo start bar    To remove all callbacks for a given name  foo   say  dispatch on   foo   null     If  callback  is not specified  returns the current callback for the specified  typenames   if any  If multiple typenames are specified  the first matching callback is returned    a name  dispatch copy  href   dispatch copy     a   dispatch   b copy  b         https   github com d3 d3 dispatch blob master src dispatch js L49  Source    Returns a copy of this dispatch object  Changes to this dispatch do not affect the returned copy and  i vice versa  i     a name  dispatch call  href   dispatch call     a   dispatch   b call  b   i type  i     i that  i     i arguments   i          https   github com d3 d3 dispatch blob master src dispatch js L54  Source    Like   function  call  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Function call   invokes each registered callback for the specified  type   passing the callback the specified  arguments   with  that  as the  this  context  See   dispatch  apply   dispatch apply  for more information    a name  dispatch apply  href   dispatch apply     a   dispatch   b apply  b   i type  i     i that  i     i arguments  i          https   github com d3 d3 dispatch blob master src dispatch js L59  Source    Like   function  apply  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Function call   invokes each registered callback for the specified  type   passing the callback the specified  arguments   with  that  as the  this  context  For example  if you wanted to dispatch your  custom  callbacks after handling a native  click  event  while preserving the current  this  context and arguments  you could say      js selection on  click   function       dispatch apply  custom   this  arguments            You can pass whatever arguments you want to callbacks  most commonly  you might create an object that represents an event  or pass the current datum   d   and index   i    See  function call  https   developer mozilla org en JavaScript Reference Global Objects Function Call  and  function apply  https   developer mozilla org en JavaScript Reference Global Objects Function Apply  for further information  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-dispatch"},{"name":"d3/d3-time-format","artist":"return, specifi, sourc, array, valu","id":45,"playcount":13085,"description":"d3/d3-time-format return, specifi, sourc, array, valu   d3 time format  This module provides a JavaScript implementation of the venerable  strptime  http   pubs opengroup org onlinepubs 009695399 functions strptime html  and  strftime  http   pubs opengroup org onlinepubs 007908799 xsh strftime html  functions from the C standard library  and can be used to parse or format  dates  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Date  in a variety of locale specific representations  To format a date  create a  formatter   locale format  from a specifier  a string with the desired format  directives   indicated by       then pass a date to the formatter  which returns a string  For example  to convert the current date to a human readable string      js var formatTime   d3 timeFormat   B  d   Y    formatTime new Date       June 30  2015       Likewise  to convert a string back to a date  create a  parser   locale parse       js var parseTime   d3 timeParse   B  d   Y    parseTime  June 30  2015       Tue Jun 30 2015 00 00 00 GMT 0700  PDT       You can implement more elaborate conditional time formats  too  For example  here s a  multi scale time format  http   bl ocks org mbostock 4149176  using  time intervals  https   github com d3 d3 time       js var formatMillisecond   d3 timeFormat    L        formatSecond   d3 timeFormat    S        formatMinute   d3 timeFormat   I  M        formatHour   d3 timeFormat   I  p        formatDay   d3 timeFormat   a  d        formatWeek   d3 timeFormat   b  d        formatMonth   d3 timeFormat   B        formatYear   d3 timeFormat   Y     function multiFormat date      return  d3 timeSecond date    date   formatMillisecond         d3 timeMinute date    date   formatSecond         d3 timeHour date    date   formatMinute         d3 timeDay date    date   formatHour         d3 timeMonth date    date    d3 timeWeek date    date   formatDay   formatWeek          d3 timeYear date    date   formatMonth         formatYear  date          This module is used by D3  time scales  https   github com d3 d3 scale blob master README md time scales  to generate human readable ticks      Installing  If you use NPM   npm install d3 time format   Otherwise  download the  latest release  https   github com d3 d3 time format releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 time format v2 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 time v1 min js    script   script src  https   d3js org d3 time format v2 min js    script   script   var format   d3 timeFormat   x       script       Locale files are hosted on  unpkg  https   unpkg com   and can be loaded using  d3 json  https   github com d3 d3 request blob master README md json   For example  to set Russian as the default locale      js d3 json  https   unpkg com d3 time format 2 locale ru RU json   function error  locale      if  error  throw error     d3 timeFormatDefaultLocale locale      var format   d3 timeFormat   c       console log format new Date                     5         2016    10 31 59           Try d3 time format in your browser   https   tonicdev com npm d3 time format      API Reference   a name  timeFormat  href   timeFormat     a  d3  b timeFormat  b   i specifier  i        https   github com d3 d3 time format blob master src defaultLocale js L4  Source    An alias for   locale  format   locale format  on the  default locale   timeFormatDefaultLocale     a name  timeParse  href   timeParse     a  d3  b timeParse  b   i specifier  i        https   github com d3 d3 time format blob master src defaultLocale js L5  Source    An alias for   locale  parse   locale parse  on the  default locale   timeFormatDefaultLocale     a name  utcFormat  href   utcFormat     a  d3  b utcFormat  b   i specifier  i        https   github com d3 d3 time format blob master src defaultLocale js L6  Source    An alias for   locale  utcFormat   locale utcFormat  on the  default locale   timeFormatDefaultLocale     a name  utcParse  href   utcParse     a  d3  b utcParse  b   i specifier  i        https   github com d3 d3 time format blob master src defaultLocale js L7  Source    An alias for   locale  utcParse   locale utcParse  on the  default locale   timeFormatDefaultLocale     a name  isoFormat  href   isoFormat     a  d3  b isoFormat  b       https   github com d3 d3 time format blob master src isoFormat js  Source    The full  ISO 8601  https   en wikipedia org wiki ISO 8601  UTC time formatter  Where available  this method will use  Date toISOString  https   developer mozilla org en US docs JavaScript Reference Global Objects Date toISOString  to format    a name  isoParse  href   isoParse     a  d3  b isoParse  b       https   github com d3 d3 time format blob master src isoParse js  Source    The full  ISO 8601  https   en wikipedia org wiki ISO 8601  UTC time parser  Where available  this method will use the  Date constructor  https   developer mozilla org en US docs JavaScript Reference Global Objects Date  to parse strings  If you depend on strict validation of the input format according to ISO 8601  you should construct a  UTC parser function   utcParse       js var strictIsoParse   d3 utcParse   Y  m  dT H  M  S  LZ          a name  locale format  href   locale format     a   i locale  i   b format  b   i specifier  i        https   github com d3 d3 time format blob master src locale js L293  Source    Returns a new formatter for the given string  specifier   The specifier string may contain the following directives       a    abbreviated weekday name       A    full weekday name       b    abbreviated month name       B    full month name       c    the locale s date and time  such as   x   X        d    zero padded day of the month as a decimal number  01 31       e    space padded day of the month as a decimal number   1 31   equivalent to    d       f    microseconds as a decimal number  000000  999999       H    hour  24 hour clock  as a decimal number  00 23       I    hour  12 hour clock  as a decimal number  01 12       j    day of the year as a decimal number  001 366       m    month as a decimal number  01 12       M    minute as a decimal number  00 59       L    milliseconds as a decimal number  000  999       p    either AM or PM       Q    milliseconds since UNIX epoch      s    seconds since UNIX epoch      S    second as a decimal number  00 61       u    Monday based  ISO 8601  weekday as a decimal number  1 7       U    Sunday based week of the year as a decimal number  00 53       V    ISO 8601 week of the year as a decimal number  01  53       w    Sunday based weekday as a decimal number  0 6       W    Monday based week of the year as a decimal number  00 53       x    the locale s date  such as    m   d  Y        X    the locale s time  such as    I  M  S  p        y    year without century as a decimal number  00 99       Y    year with century as a decimal number      Z    time zone offset  such as   0700     07 00     07   or  Z            a literal percent sign         Directives marked with an asterisk      may be affected by the  locale definition   localeFormat    For   U   all days in a new year preceding the first Sunday are considered to be in week 0  For   W   all days in a new year preceding the first Monday are considered to be in week 0  Week numbers are computed using   interval  count  https   github com d3 d3 time blob master README md interval count   For example  2015 52 and 2016 00 represent Monday  December 28  2015  while 2015 53 and 2016 01 represent Monday  January 4  2016  This differs from the  ISO week date  https   en wikipedia org wiki ISO week date  specification    V    which uses a more complicated definition   For   V   per the  strftime man page  http   man7 org linux man pages man3 strftime 3 html      In this system  weeks start on a Monday  and are numbered from 01  for the first week  up to 52 or 53  for the last week   Week 1 is the first week where four or more days fall within the new year  or  synonymously  week 01 is  the first week of the year that contains a Thursday  or  the week that has 4 January in it    The     sign indicating a directive may be immediately followed by a padding modifier      0    zero padding         space padding         disable padding  If no padding modifier is specified  the default is  0  for all directives except   e   which defaults to       In some implementations of strftime and strptime  a directive may include an optional field width or precision  this feature is not yet implemented    The returned function formats a specified   date  https   developer mozilla org en JavaScript Reference Global Objects Date    returning the corresponding string      js var formatMonth   d3 timeFormat   B        formatDay   d3 timeFormat   A        date   new Date 2014  4  1      Thu May 01 2014 00 00 00 GMT 0700  PDT   formatMonth date       May  formatDay date       Thursday        a name  locale parse  href   locale parse     a   i locale  i   b parse  b   i specifier  i        https   github com d3 d3 time format blob master src locale js L298  Source    Returns a new parser for the given string  specifier   The specifier string may contain the same directives as   locale  format   locale format   The   d  and   e  directives are considered equivalent for parsing   The returned function parses a specified  string   returning the corresponding  date  https   developer mozilla org en JavaScript Reference Global Objects Date  or null if the string could not be parsed according to this format s specifier  Parsing is strict  if the specified  i string  i  does not exactly match the associated specifier  this method returns null  For example  if the associated specifier is   Y  m  dT H  M  SZ   then the string   2011 07 01T19 15 28Z   will be parsed as expected  but   2011 07 01T19 15 28      2011 07 01 19 15 28   and   2011 07 01   will return null   Note that the literal  Z  here is different from the time zone offset directive   Z    If a more flexible parser is desired  try multiple formats sequentially until one returns non null    a name  locale utcFormat  href   locale utcFormat     a   i locale  i   b utcFormat  b   i specifier  i        https   github com d3 d3 time format blob master src locale js L303  Source    Equivalent to   locale  format   locale format   except all directives are interpreted as  Coordinated Universal Time  UTC   https   en wikipedia org wiki Coordinated Universal Time  rather than local time    a name  locale utcParse  href   locale utcParse     a   i locale  i   b utcParse  b   i specifier  i        https   github com d3 d3 time format blob master src locale js L308  Source    Equivalent to   locale  parse   locale parse   except all directives are interpreted as  Coordinated Universal Time  UTC   https   en wikipedia org wiki Coordinated Universal Time  rather than local time       Locales   a name  timeFormatLocale  href   timeFormatLocale     a  d3  b timeFormatLocale  b   i definition  i        https   github com d3 d3 time format blob master src locale js  Source    Returns a  locale  object for the specified  definition  with   locale  format   locale format     locale  parse   locale parse     locale  utcFormat   locale utcFormat     locale  utcParse   locale utcParse  methods  The  definition  must include the following properties      dateTime    the date and time    c   format specifier   i e g   i      a  b  e  X  Y        date    the date    x   format specifier   i e g   i      m  d  Y        time    the time    X   format specifier   i e g   i      H  M  S        periods    the A M  and P M  equivalents   i e g   i      AM    PM         days    the full names of the weekdays  starting with Sunday     shortDays    the abbreviated names of the weekdays  starting with Sunday     months    the full names of the months  starting with January      shortMonths    the abbreviated names of the months  starting with January    For an example  see  Localized Time Axis II  https   bl ocks org mbostock 805115ebaa574e771db1875a6d828949     a name  timeFormatDefaultLocale  href   timeFormatDefaultLocale     a  d3  b timeFormatDefaultLocale  b   i definition  i        https   github com d3 d3 time format blob master src defaultLocale js  Source    Equivalent to  d3 timeFormatLocale   timeFormatLocale   except it also redefines  d3 timeFormat   timeFormat    d3 timeParse   timeParse    d3 utcFormat   utcFormat  and  d3 utcParse   utcParse  to the new locale s   locale  format   locale format     locale  parse   locale parse     locale  utcFormat   locale utcFormat  and   locale  utcParse   locale utcParse   If you do not set a default locale  it defaults to  U S  English  https   github com d3 d3 time format blob master locale en US json    For an example  see  Localized Time Axis  https   bl ocks org mbostock 6f1cc065d4d172bcaf322e399aa8d62f   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-time-format"},{"name":"d3/d3-zoom","artist":"specifi, return, select, current, element","id":46,"playcount":36627,"description":"d3/d3-zoom specifi, return, select, current, element   d3 zoom  Panning and zooming are popular interaction techniques which let the user focus on a region of interest by restricting the view  It is easy to learn due to direct manipulation  click and drag to pan  translate   spin the wheel to zoom  scale   or use touch  Panning and zooming are widely used in web based mapping  but can also be used with visualizations such as time series and scatterplots   The zoom behavior implemented by d3 zoom is a convenient but flexible abstraction for enabling pan and zoom on  selections  https   github com d3 d3 selection   It handles a surprising variety of  input events   api reference   and browser quirks  The zoom behavior is agnostic about the DOM  so you can use it with SVG  HTML or Canvas     img alt  Canvas Zooming  src  https   raw githubusercontent com d3 d3 zoom master img dots png  width  420  height  219    https   bl ocks org mbostock d1f7b58631e71fbf9c568345ee04a60e   img alt  SVG Zooming  src  https   raw githubusercontent com d3 d3 zoom master img dots png  width  420  height  219    https   bl ocks org mbostock 4e3925cdc804db257a86fdef3a032a45   The zoom behavior is also designed to work with  d3 scale  https   github com d3 d3 scale  and  d3 axis  https   github com d3 d3 axis   see   transform  rescaleX   transform rescaleX  and   transform  rescaleY   transform rescaleY   You can also restrict zooming using   zoom  scaleExtent   zoom scaleExtent  and panning using   zoom  translateExtent   zoom translateExtent      img alt  Axis Zooming  src  https   raw githubusercontent com d3 d3 zoom master img axis png  width  420  height  219    https   bl ocks org mbostock db6b4335bf1662b413e7968910104f0f   The zoom behavior can be combined with other behaviors  such as  d3 drag  https   github com d3 d3 drag  for dragging  and  d3 brush  https   github com d3 d3 brush  for focus   context     img alt  Drag   Zoom II  src  https   raw githubusercontent com d3 d3 zoom master img dots png  width  420  height  219    https   bl ocks org mbostock 3127661b6f13f9316be745e77fdfb084   img alt  Brush   Zoom  src  https   raw githubusercontent com d3 d3 zoom master img brush png  width  420  height  219    https   bl ocks org mbostock 34f08d5e11952a80609169b7917d4172   The zoom behavior can be controlled programmatically using   zoom  transform   zoom transform   allowing you to implement user interface controls which drive the display or to stage animated tours through your data  Smooth zoom transitions are based on   Smooth and efficient zooming and panning   http   www win tue nl  vanwijk zoompan pdf  by Jarke J  van Wijk and Wim A A  Nuij     img alt  Zoom Transitions  src  https   raw githubusercontent com d3 d3 zoom master img transition png  width  420  height  219    https   bl ocks org mbostock b783fbb2e673561d214e09c7fb5cedee   See also  d3 tile  https   github com d3 d3 tile  for examples panning and zooming maps      Installing  If you use NPM   npm install d3 zoom   Otherwise  download the  latest release  https   github com d3 d3 zoom releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 zoom v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 color v1 min js    script   script src  https   d3js org d3 dispatch v1 min js    script   script src  https   d3js org d3 ease v1 min js    script   script src  https   d3js org d3 interpolate v1 min js    script   script src  https   d3js org d3 selection v1 min js    script   script src  https   d3js org d3 timer v1 min js    script   script src  https   d3js org d3 transition v1 min js    script   script src  https   d3js org d3 drag v1 min js    script   script src  https   d3js org d3 zoom v1 min js    script   script   var zoom   d3 zoom       script        Try d3 zoom in your browser   https   tonicdev com npm d3 zoom      API Reference  This table describes how the zoom behavior interprets native events     Event          Listening Element   Zoom Event    Default Prevented                                                                              mousedown      selection           start         no                     mousemove      window              zoom          yes                    mouseup        window              end           yes                    dragstart      window                            yes                    selectstart    window                            yes                    click          window                            yes                    dblclick       selection            multiple     yes                    wheel          selection           zoom          yes                    touchstart     selection            multiple     no                     touchmove      selection           zoom          yes                    touchend       selection           end           no                     touchcancel    selection           end           no                    The propagation of all consumed events is  immediately stopped  https   dom spec whatwg org  dom event stopimmediatepropagation      Necessary to capture events outside an iframe  see  d3 drag 9  https   github com d3 d3 drag issues 9    br   Only applies during an active  mouse based gesture  see  d3 drag 9  https   github com d3 d3 drag issues 9    br   Only applies immediately after some mouse based gestures  see   zoom  clickDistance   zoom clickDistance    br   Necessary to allow  click emulation  https   developer apple com library ios documentation AppleApplications Reference SafariWebContent HandlingEvents HandlingEvents html   apple ref doc uid TP40006511 SW7  on touch input  see  d3 drag 9  https   github com d3 d3 drag issues 9    br   Ignored if within 500ms of a touch gesture ending  assumes  click emulation  https   developer apple com library ios documentation AppleApplications Reference SafariWebContent HandlingEvents HandlingEvents html   apple ref doc uid TP40006511 SW7    br   Double click and double tap initiate a transition that emits start  zoom and end events   br   The first wheel event emits a start event  an end event is emitted when no wheel events are received for 150ms   br   Ignored if already at the corresponding limit of the  scale extent   zoom scaleExtent     a href   zoom  name  zoom     a  d3  b zoom  b         https   github com d3 d3 zoom blob master src zoom js  Source    Creates a new zoom behavior  The returned behavior    zoom     drag   is both an object and a function  and is typically applied to selected elements via   selection  call  https   github com d3 d3 selection selection call     a href    zoom  name   zoom     a   i zoom  i   i selection  i        https   github com d3 d3 zoom blob master src zoom js L62  Source    Applies this zoom behavior to the specified   selection   https   github com d3 d3 selection   binding the necessary event listeners to allow panning and zooming  and initializing the  zoom transform   zoom transforms  on each selected element to the identity transform if not already defined  This function is typically not invoked directly  and is instead invoked via   selection  call  https   github com d3 d3 selection selection call   For example  to instantiate a zoom behavior and apply it to a selection      js selection call d3 zoom   on  zoom   zoomed         Internally  the zoom behavior uses   selection  on  https   github com d3 d3 selection selection on  to bind the necessary event listeners for zooming  The listeners use the name   zoom   so you can subsequently unbind the zoom behavior as follows      js selection on   zoom   null        To disable just wheel driven zooming  say to not interfere with native scrolling   you can remove the zoom behavior s wheel event listener after applying the zoom behavior to the selection      js selection      call zoom       on  wheel zoom   null        Alternatively  use   zoom  filter   zoom filter  for greater control over which events can initiate zoom gestures   Applying the zoom behavior also sets the   webkit tap highlight color  https   developer apple com library mac documentation AppleApplications Reference SafariWebContent AdjustingtheTextSize AdjustingtheTextSize html   apple ref doc uid TP40006510 SW5  style to transparent  disabling the tap highlight on iOS  If you want a different tap highlight color  remove or re apply this style after applying the drag behavior    a href   zoom transform  name  zoom transform     a   i zoom  i   b transform  b   i selection  i    i transform  i        https   github com d3 d3 zoom blob master src zoom js L76  Source    If  selection  is a selection  sets the  current zoom transform   zoomTransform  of the selected elements to the specified  transform   instantaneously emitting start  zoom and end  events   zoom events   If  selection  is a transition  defines a  zoom  tween to the specified  transform  using  d3 interpolateZoom  https   github com d3 d3 interpolate interpolateZoom   emitting a start event when the transition starts  zoom events for each tick of the transition  and then an end event when the transition ends  or is interrupted   The  transform  may be specified either as a  zoom transform   zoom transforms  or as a function that returns a zoom transform  If a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element   This function is typically not invoked directly  and is instead invoked via   selection  call  https   github com d3 d3 selection selection call  or   transition  call  https   github com d3 d3 transition transition call   For example  to reset the zoom transform to the  identity transform   zoomIdentity  instantaneously      js selection call zoom transform  d3 zoomIdentity        To smoothly reset the zoom transform to the identity transform over 750 milliseconds      js selection transition   duration 750  call zoom transform  d3 zoomIdentity        This method requires that you specify the new zoom transform completely  and does not enforce the defined  scale extent   zoom scaleExtent  and  translate extent   zoom translateExtent   if any  To derive a new transform from the existing transform  and to enforce the scale and translate extents  see the convenience methods   zoom  translateBy   zoom translateBy     zoom  scaleBy   zoom scaleBy  and   zoom  scaleTo   zoom scaleTo     a href   zoom translateBy  name  zoom translateBy     a   i zoom  i   b translateBy  b   i selection  i    i x  i    i y  i        https   github com d3 d3 zoom blob master src zoom js L110  Source    If  selection  is a selection   translates   transform translate  the  current zoom transform   zoomTransform  of the selected elements by  x  and  y   such that the new  t sub x1  sub      t sub x0  sub      kx  and  t sub y1  sub      t sub y0  sub      ky   If  selection  is a transition  defines a  zoom  tween translating the current transform  This method is a convenience method for   zoom  transform   zoom transform   The  x  and  y  translation amounts may be specified either as numbers or as functions that returns numbers  If a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element    a href   zoom translateTo  name  zoom translateTo     a   i zoom  i   b translateTo  b   i selection  i    i x  i    i y  i        https   github com d3 d3 zoom blob master src zoom js L119  Source    If  selection  is a selection   translates   transform translate  the  current zoom transform   zoomTransform  of the selected elements such that the specified position   x   y   appears at the center of the  viewport extent   zoom extent   The new  t sub x  sub      c sub x  sub      kx  and  t sub y  sub      c sub y  sub      ky   where   c sub x  sub    c sub y  sub    is the center  If  selection  is a transition  defines a  zoom  tween translating the current transform  This method is a convenience method for   zoom  transform   zoom transform   The  x  and  y  coordinates may be specified either as numbers or as functions that returns numbers  If a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element    a href   zoom scaleBy  name  zoom scaleBy     a   i zoom  i   b scaleBy  b   i selection  i    i k  i        https   github com d3 d3 zoom blob master src zoom js L91  Source    If  selection  is a selection   scales   transform scale  the  current zoom transform   zoomTransform  of the selected elements by  k   such that the new  k      k k   If  selection  is a transition  defines a  zoom  tween translating the current transform  This method is a convenience method for   zoom  transform   zoom transform   The  k  scale factor may be specified either as numbers or as functions that returns numbers  If a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element    a href   zoom scaleTo  name  zoom scaleTo     a   i zoom  i   b scaleTo  b   i selection  i    i k  i        https   github com d3 d3 zoom blob master src zoom js L99  Source    If  selection  is a selection   scales   transform scale  the  current zoom transform   zoomTransform  of the selected elements to  k   such that the new  k      k   If  selection  is a transition  defines a  zoom  tween translating the current transform  This method is a convenience method for   zoom  transform   zoom transform   The  k  scale factor may be specified either as numbers or as functions that returns numbers  If a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element    a href   zoom constrain  name  zoom constrain     a   i zoom  i   b constrain  b    i constrain  i         https   github com d3 d3 zoom blob master src zoom js 403  Source    If  constrain  is specified  sets the transform constraint function to the specified function and returns the zoom behavior  If  constrain  is not specified  returns the current constraint function  which defaults to      js function constrain transform  extent  translateExtent      var dx0   transform invertX extent 0  0     translateExtent 0  0         dx1   transform invertX extent 1  0     translateExtent 1  0         dy0   transform invertY extent 0  1     translateExtent 0  1         dy1   transform invertY extent 1  1     translateExtent 1  1     return transform translate      dx1   dx0    dx0   dx1    2   Math min 0  dx0     Math max 0  dx1       dy1   dy0    dy0   dy1    2   Math min 0  dy0     Math max 0  dy1              The constraint function must return a   transform    zoom transforms  given the current  transform    viewport extent   zoom extent  and  translate extent   zoom translateExtent   The default implementation attempts to ensure that the viewport extent does not go outside the translate extent    a href   zoom filter  name  zoom filter     a   i zoom  i   b filter  b    i filter  i         https   github com d3 d3 zoom blob master src zoom js L386  Source    If  filter  is specified  sets the filter to the specified function and returns the zoom behavior  If  filter  is not specified  returns the current filter  which defaults to      js function filter       return  d3 event button         If the filter returns falsey  the initiating event is ignored and no zoom gestures are started  Thus  the filter determines which input events are ignored  The default filter ignores mousedown events on secondary buttons  since those buttons are typically intended for other purposes  such as the context menu    a href   zoom touchable  name  zoom touchable     a   i zoom  i   b touchable  b    i touchable  i         https   github com d3 d3 zoom blob master src zoom js L390  Source    If  touchable  is specified  sets the touch support detector to the specified function and returns the zoom behavior  If  touchable  is not specified  returns the current touch support detector  which defaults to      js function touchable       return  ontouchstart  in this         Touch event listeners are only registered if the detector returns truthy for the corresponding element when the zoom behavior is  applied    zoom   The default detector works well for most browsers that are capable of touch input  but not all  Chrome s mobile device emulator  for example  fails detection    a href   zoom wheelDelta  name  zoom wheelDelta     a   i zoom  i   b wheelDelta  b    i delta  i         https   github com d3 d3 zoom blob master src zoom js L382  Source    If  delta  is specified  sets the wheel delta function to the specified function and returns the zoom behavior  If  delta  is not specified  returns the current wheel delta function  which defaults to      js function wheelDelta       return  d3 event deltaY    d3 event deltaMode   120   1    500         The value     returned by the wheel delta function determines the amount of scaling applied in response to a  WheelEvent  https   developer mozilla org en US docs Web API WheelEvent   The scale factor   transform  k   zoomTransform  is multiplied by 2 sup      sup   for example  a     of  1 doubles the scale factor      of  1 halves the scale factor    a href   zoom extent  name  zoom extent     a   i zoom  i   b extent  b    i extent  i         https   github com d3 d3 zoom blob master src zoom js L394  Source    If  extent  is specified  sets the viewport extent to the specified array of points    x0    y0      x1    y1     where   x0    y0   is the top left corner of the viewport and   x1    y1   is the bottom right corner of the viewport  and returns this zoom behavior  The  extent  may also be specified as a function which returns such an array  if a function  it is invoked for each selected element  being passed the current datum  d  and index  i   with the  this  context as the current DOM element   If  extent  is not specified  returns the current extent accessor  which defaults to   0  0     width    height    where  width  is the  client width  https   developer mozilla org en US docs Web API Element clientWidth  of the element and  height  is its  client height  https   developer mozilla org en US docs Web API Element clientHeight   for SVG elements  the nearest ancestor SVG element s  width  https   www w3 org TR SVG struct html SVGElementWidthAttribute  and  height  https   www w3 org TR SVG struct html SVGElementHeightAttribute  is used  In this case  the owner SVG element must have defined  width  https   www w3 org TR SVG struct html SVGElementWidthAttribute  and  height  https   www w3 org TR SVG struct html SVGElementHeightAttribute  attributes rather than  for example  relying on CSS properties or the viewBox attribute  SVG provides no programmatic method for retrieving the  initial viewport size  https   www w3 org TR SVG coords html ViewportSpace   Alternatively  consider using   element  getBoundingClientRect  https   developer mozilla org en US docs Web API Element getBoundingClientRect    In Firefox    element  clientWidth  https   developer mozilla org en US docs Web API Element clientWidth  and   element  clientHeight  https   developer mozilla org en US docs Web API Element clientHeight  is zero for SVG elements    The viewport extent affects several functions  the center of the viewport remains fixed during changes by   zoom  scaleBy   zoom scaleBy  and   zoom  scaleTo   zoom scaleTo   the viewport center and dimensions affect the path chosen by  d3 interpolateZoom  https   github com d3 d3 interpolate interpolateZoom   and the viewport extent is needed to enforce the optional  translate extent   zoom translateExtent     a href   zoom scaleExtent  name  zoom scaleExtent     a   i zoom  i   b scaleExtent  b    i extent  i         https   github com d3 d3 zoom blob master src zoom js L398  Source    If  extent  is specified  sets the scale extent to the specified array of numbers   k0    k1   where  k0  is the minimum allowed scale factor and  k1  is the maximum allowed scale factor  and returns this zoom behavior  If  extent  is not specified  returns the current scale extent  which defaults to  0      The scale extent restricts zooming in and out  It is enforced on interaction and when using   zoom  scaleBy   zoom scaleBy     zoom  scaleTo   zoom scaleTo  and   zoom  translateBy   zoom translateBy   however  it is not enforced when using   zoom  transform   zoom transform  to set the transform explicitly   If the user tries to zoom by wheeling when already at the corresponding limit of the scale extent  the wheel events will be ignored and not initiate a zoom gesture  This allows the user to scroll down past a zoomable area after zooming in  or to scroll up after zooming out  If you would prefer to always prevent scrolling on wheel input regardless of the scale extent  register a wheel event listener to prevent the browser default behavior      js selection      call zoom       on  wheel   function     d3 event preventDefault              a href   zoom translateExtent  name  zoom translateExtent     a   i zoom  i   b translateExtent  b    i extent  i         https   github com d3 d3 zoom blob master src zoom js L402  Source    If  extent  is specified  sets the translate extent to the specified array of points    x0    y0      x1    y1     where   x0    y0   is the top left corner of the world and   x1    y1   is the bottom right corner of the world  and returns this zoom behavior  If  extent  is not specified  returns the current translate extent  which defaults to                       The translate extent restricts panning  and may cause translation on zoom out  It is enforced on interaction and when using   zoom  scaleBy   zoom scaleBy     zoom  scaleTo   zoom scaleTo  and   zoom  translateBy   zoom translateBy   however  it is not enforced when using   zoom  transform   zoom transform  to set the transform explicitly    a href   zoom clickDistance  name  zoom clickDistance     a   i zoom  i   b clickDistance  b    i distance  i         https   github com d3 d3 zoom blob master src zoom js L419  Source    If  distance  is specified  sets the maximum distance that the mouse can move between mousedown and mouseup that will trigger a subsequent click event  If at any point between mousedown and mouseup the mouse is greater than or equal to  distance  from its position on mousedown  the click event following mouseup will be suppressed  If  distance  is not specified  returns the current distance threshold  which defaults to zero  The distance threshold is measured in client coordinates    event  clientX  https   developer mozilla org en US docs Web API MouseEvent clientX  and   event  clientY  https   developer mozilla org en US docs Web API MouseEvent clientY      a href   zoom duration  name  zoom duration     a   i zoom  i   b duration  b    i duration  i         https   github com d3 d3 zoom blob master src zoom js L406  Source    If  duration  is specified  sets the duration for zoom transitions on double click and double tap to the specified number of milliseconds and returns the zoom behavior  If  duration  is not specified  returns the current duration  which defaults to 250 milliseconds  If the duration is not greater than zero  double click and  tap trigger instantaneous changes to the zoom transform rather than initiating smooth transitions   To disable double click and double tap transitions  you can remove the zoom behavior s dblclick event listener after applying the zoom behavior to the selection      js selection      call zoom       on  dblclick zoom   null         a href   zoom interpolate  name  zoom interpolate     a   i zoom  i   b interpolate  b    i interpolate  i         https   github com d3 d3 zoom blob master src zoom js L410  Source    If  interpolate  is specified  sets the interpolation factory for zoom transitions to the specified function  If  interpolate  is not specified  returns the current interpolation factory  which defaults to  d3 interpolateZoom  https   github com d3 d3 interpolate interpolateZoom  to implement smooth zooming  To apply direct interpolation between two views  try  d3 interpolate  https   github com d3 d3 interpolate interpolate  instead    a href   zoom on  name  zoom on     a   i zoom  i   b on  b   i typenames  i     i listener  i         https   github com d3 d3 zoom blob master src zoom js L414  Source    If  listener  is specified  sets the event  listener  for the specified  typenames  and returns the zoom behavior  If an event listener was already registered for the same type and name  the existing listener is removed before the new listener is added  If  listener  is null  removes the current event listeners for the specified  typenames   if any  If  listener  is not specified  returns the first currently assigned listener matching the specified  typenames   if any  When a specified event is dispatched  each  listener  will be invoked with the same context and arguments as   selection  on  https   github com d3 d3 selection selection on  listeners  the current datum  d  and index  i   with the  this  context as the current DOM element   The  typenames  is a string containing one or more  typename  separated by whitespace  Each  typename  is a  type   optionally followed by a period       and a  name   such as  zoom foo  and  zoom bar   the name allows multiple listeners to be registered for the same  type   The  type  must be one of the following      start    after zooming begins  such as on mousedown      zoom    after a change to the zoom transform  such as on mousemove      end    after zooming ends  such as on mouseup     See   dispatch  on  https   github com d3 d3 dispatch dispatch on  for more       Zoom Events  When a  zoom event listener   zoom on  is invoked   d3 event  https   github com d3 d3 selection event  is set to the current zoom event  The  event  object exposes several fields      event  target   the associated  zoom behavior   zoom      event  type   the string  start    zoom  or  end   see   zoom  on   zoom on      event  transform   the current  zoom transform   zoom transforms      event  sourceEvent   the underlying input event  such as mousemove or touchmove       Zoom Transforms  The zoom behavior stores the zoom state on the element to which the zoom behavior was  applied    zoom   not on the zoom behavior itself  This is because the zoom behavior can be applied to many elements simultaneously  and each element can be zoomed independently  The zoom state can change either on user interaction or programmatically via   zoom  transform   zoom transform    To retrieve the zoom state  use  event  transform on the current  zoom event   zoom events  within a zoom event listener  see   zoom  on   zoom on    or use  d3 zoomTransform   zoomTransform  for a given node  The latter is particularly useful for modifying the zoom state programmatically  say to implement buttons for zooming in and out    a href   zoomTransform  name  zoomTransform     a  d3  b zoomTransform  b   i node  i        https   github com d3 d3 zoom blob master src transform js  Source    Returns the current transform for the specified  node   Note that  node  should typically be a DOM element  not a  selection    A selection may consist of multiple nodes  in different states  and this function only returns a single transform   If you have a selection  call   selection  node  https   github com d3 d3 selection selection node  first      js var transform   d3 zoomTransform selection node          In the context of an  event listener  https   github com d3 d3 selection selection on   the  node  is typically the element that received the input event  which should be equal to   event  transform   zoom events     this       js var transform   d3 zoomTransform this        Internally  an element s transform is stored as  element      zoom  however  you should use this method rather than accessing it directly  If the given  node  has no defined transform  returns the  identity transformation   zoomIdentity   The returned transform represents a two dimensional  transformation matrix  https   en wikipedia org wiki Transformation matrix Affine transformations  of the form    k  0  t sub x  sub    br 0  k   t sub y  sub    br 0 0 1   This matrix is capable of representing only scale and translation  a future release may also allow rotation  though this would probably not be a backwards compatible change   The position   x   y   is transformed to   xk     t sub x  sub    yk     t sub y  sub     The transform object exposes the following properties      transform  x   the translation amount  t sub x  sub   along the  x  axis     transform  y   the translation amount  t sub y  sub   along the  y  axis     transform  k   the scale factor  k    These properties should be considered read only  instead of mutating a transform  use   transform  scale   transform scale  and   transform  translate   transform translate  to derive a new transform  Also see   zoom  scaleBy   zoom scaleBy     zoom  scaleTo   zoom scaleTo  and   zoom  translateBy   zoom translateBy  for convenience methods on the zoom behavior  To create a transform with a given  k    t sub x  sub    and  t sub y  sub        js var t   d3 zoomIdentity translate x  y  scale k        To apply the transformation to a  Canvas 2D context  https   www w3 org TR 2dcontext    use   context  translate  https   www w3 org TR 2dcontext  dom context 2d translate  followed by   context  scale  https   www w3 org TR 2dcontext  dom context 2d scale       js context translate transform x  transform y   context scale transform k  transform k        Similarly  to apply the transformation to HTML elements via  CSS  https   www w3 org TR css transforms 1        js div style  transform    translate     transform x    px     transform y    px  scale     transform k         div style  transform origin    0 0         To apply the transformation to  SVG  https   www w3 org TR SVG coords html TransformAttribute       js g attr  transform    translate     transform x         transform y      scale     transform k              Or more simply  taking advantage of   transform  toString   transform toString       js g attr  transform   transform        Note that the order of transformations matters  The translate must be applied before the scale    a href   transform scale  name  transform scale     a   i transform  i   b scale  b   i k  i        https   github com d3 d3 zoom blob master src transform js L9  Source    Returns a transform whose scale  k   is equal to  k k   where  k   is this transform s scale    a href   transform translate  name  transform translate     a   i transform  i   b translate  b   i x  i    i y  i        https   github com d3 d3 zoom blob master src transform js L12  Source    Returns a transform whose translation  t sub x1  sub   and  t sub y1  sub   is equal to  t sub x0  sub      x  and  t sub y0  sub      y   where  t sub x0  sub   and  t sub y0  sub   is this transform s translation    a href   transform apply  name  transform apply     a   i transform  i   b apply  b   i point  i        https   github com d3 d3 zoom blob master src transform js L15  Source    Returns the transformation of the specified  point  which is a two element array of numbers   x    y    The returned point is equal to   xk     t sub x  sub     yk     t sub y  sub       a href   transform applyX  name  transform applyX     a   i transform  i   b applyX  b   i x  i        https   github com d3 d3 zoom blob master src transform js L18  Source    Returns the transformation of the specified  x  coordinate   xk     t sub x  sub      a href   transform applyY  name  transform applyY     a   i transform  i   b applyY  b   i y  i        https   github com d3 d3 zoom blob master src transform js L21  Source    Returns the transformation of the specified  y  coordinate   yk     t sub y  sub      a href   transform invert  name  transform invert     a   i transform  i   b invert  b   i point  i        https   github com d3 d3 zoom blob master src transform js L24  Source    Returns the inverse transformation of the specified  point  which is a two element array of numbers   x    y    The returned point is equal to    x     t sub x  sub       k     y     t sub y  sub       k      a href   transform invertX  name  transform invertX     a   i transform  i   b invertX  b   i x  i        https   github com d3 d3 zoom blob master src transform js L27  Source    Returns the inverse transformation of the specified  x  coordinate    x     t sub x  sub       k     a href   transform invertY  name  transform invertY     a   i transform  i   b invertY  b   i y  i        https   github com d3 d3 zoom blob master src transform js L30  Source    Returns the inverse transformation of the specified  y  coordinate    y     t sub y  sub       k     a href   transform rescaleX  name  transform rescaleX     a   i transform  i   b rescaleX  b   i x  i        https   github com d3 d3 zoom blob master src transform js L33  Source    Returns a  copy  https   github com d3 d3 scale continuous copy  of the  continuous scale  https   github com d3 d3 scale continuous scales   x  whose  domain  https   github com d3 d3 scale continuous domain  is transformed  This is implemented by first applying the  inverse  x  transform   transform invertX  on the scale s  range  https   github com d3 d3 scale continuous range   and then applying the  inverse scale  https   github com d3 d3 scale continuous invert  to compute the corresponding domain      js function rescaleX x      var range   x range   map transform invertX  transform         domain   range map x invert  x     return x copy   domain domain          The scale  x  must use  d3 interpolateNumber  https   github com d3 d3 interpolate interpolateNumber   do not use   continuous  rangeRound  https   github com d3 d3 scale continuous rangeRound  as this reduces the accuracy of   continuous  invert  https   github com d3 d3 scale continuous invert  and can lead to an inaccurate rescaled domain  This method does not modify the input scale  x    x  thus represents the untransformed scale  while the returned scale represents its transformed view    a href   transform rescaleY  name  transform rescaleY     a   i transform  i   b rescaleY  b   i y  i        https   github com d3 d3 zoom blob master src transform js L36  Source    Returns a  copy  https   github com d3 d3 scale continuous copy  of the  continuous scale  https   github com d3 d3 scale continuous scales   y  whose  domain  https   github com d3 d3 scale continuous domain  is transformed  This is implemented by first applying the  inverse  y  transform   transform invertY  on the scale s  range  https   github com d3 d3 scale continuous range   and then applying the  inverse scale  https   github com d3 d3 scale continuous invert  to compute the corresponding domain      js function rescaleY y      var range   y range   map transform invertY  transform         domain   range map y invert  y     return y copy   domain domain          The scale  y  must use  d3 interpolateNumber  https   github com d3 d3 interpolate interpolateNumber   do not use   continuous  rangeRound  https   github com d3 d3 scale continuous rangeRound  as this reduces the accuracy of   continuous  invert  https   github com d3 d3 scale continuous invert  and can lead to an inaccurate rescaled domain  This method does not modify the input scale  y    y  thus represents the untransformed scale  while the returned scale represents its transformed view    a href   transform toString  name  transform toString     a   i transform  i   b toString  b         https   github com d3 d3 zoom blob master src transform js L39  Source    Returns a string representing the  SVG transform  https   www w3 org TR SVG coords html TransformAttribute  corresponding to this transform  Implemented as      js function toString       return  translate     this x         this y      scale     this k                a href   zoomIdentity  name  zoomIdentity     a  d3  b zoomIdentity  b       https   github com d3 d3 zoom blob master src transform js L44  Source    The identity transform  where  k    1   t sub x  sub      t sub y  sub     0  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-zoom"},{"name":"d3/d3-polygon","artist":"return, specifi, sourc, array, valu","id":47,"playcount":3143,"description":"d3/d3-polygon return, specifi, sourc, array, valu   d3 polygon  This module provides a few basic geometric operations for two dimensional polygons  Each polygon is represented as an array of two element arrays     i x1  i    i y1  i      i x2  i    i y2  i        and may either be closed  wherein the first and last point are the same  or open  wherein they are not   Typically polygons are in counterclockwise order  assuming a coordinate system where the origin  0 0  is in the top left corner      Installing  If you use NPM   npm install d3 polygon   Otherwise  download the  latest release  https   github com d3 d3 polygon releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 polygon v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 polygon v1 min js    script   script   var hull   d3 polygonHull points      script        Try d3 polygon in your browser   https   tonicdev com npm d3 polygon      API Reference   a href   polygonArea  name  polygonArea     a  d3  b polygonArea  b   i polygon  i        https   github com d3 d3 polygon blob master src area js L1  Source Code    Returns the signed area of the specified  polygon   If the vertices of the polygon are in counterclockwise order  assuming a coordinate system where the origin  0 0  is in the top left corner   the returned area is positive  otherwise it is negative  or zero    a href   polygonCentroid  name  polygonCentroid     a  d3  b polygonCentroid  b   i polygon  i        https   github com d3 d3 polygon blob master src centroid js L1  Source Code    Returns the  centroid  https   en wikipedia org wiki Centroid  of the specified  polygon     a href   polygonHull  name  polygonHull     a  d3  b polygonHull  b   i points  i        https   github com d3 d3 polygon blob master src hull js L23  Source Code     a href  http   bl ocks org mbostock 6f14f7b7f267a85f7cdc   img src  https   raw githubusercontent com d3 d3 polygon master img hull png  width  250  height  250    a   Returns the  convex hull  https   en wikipedia org wiki Convex hull  of the specified  points  using  Andrew s monotone chain algorithm  http   en wikibooks org wiki Algorithm Implementation Geometry Convex hull Monotone chain   The returned hull is represented as an array containing a subset of the input  points  arranged in counterclockwise order  Returns null if  points  has fewer than three elements    a href   polygonContains  name  polygonContains     a  d3  b polygonContains  b   i polygon  i    i point  i        https   github com d3 d3 polygon blob master src contains js L1  Source Code    Returns true if and only if the specified  point  is  inside the specified  polygon   https   www ecse rpi edu Homepages wrf Research Short Notes pnpoly html     a href   polygonLength  name  polygonLength     a  d3  b polygonLength  b   i polygon  i        https   github com d3 d3 polygon blob master src length js L1  Source Code    Returns the length of the perimeter of the specified  polygon   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-polygon"},{"name":"d3/d3-geo-projection","artist":"project, sourc, img, bra, polygon","id":48,"playcount":75746,"description":"d3/d3-geo-projection project, sourc, img, bra, polygon   d3 geo projection  Extended geographic projections for  d3 geo  https   github com d3 d3 geo   See  Command Line Cartography  https   medium com  mbostock command line cartography part 1 897aa8f8ca2c  for an introduction      Installing  If you use NPM   npm install d3 geo projection   Otherwise  download the  latest release  https   github com d3 d3 geo projection releases latest   You can also load directly from  d3js org  https   d3js org  as a  standalone library  https   d3js org d3 geo projection v2 min js   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 array v1 min js    script   script src  https   d3js org d3 geo v1 min js    script   script src  https   d3js org d3 geo projection v2 min js    script   script   var aitoff   d3 geoAitoff       script        Try d3 geo projection in your browser   https   tonicdev com npm d3 geo projection      API Reference     Projections   projections     Interrupted Projections   interrupted projections     Polyhedral Projections   polyhedral projections     Quincuncial Projections   quincuncial projections     Transformations   transformations       Projections  Note  projections tagged   d3 geo   are exported by  d3 geo  https   github com d3 d3 geo   not d3 geo projection  These commonly used projections are also included in the  d3  https   github com d3 d3  default bundle    a href   geoAiry  name  geoAiry     a  d3  b geoAiry  b         https   github com d3 d3 geo projection blob master src airy js  Source    br  a href   geoAiryRaw  name  geoAiryRaw     a  d3  b geoAiryRaw  b   i beta  i      img src  https   raw githubusercontent com d3 d3 geo projection master img airy png  width  480  height  250    http   bl ocks org mbostock 5620807   Airy s minimum error azimuthal projection    a href  airy radius  name  airy raidus     a   i airy  i   b radius  b    i radius  i     Defaults to 90     a href   geoAitoff  name  geoAitoff     a  d3  b geoAitoff  b         https   github com d3 d3 geo projection blob master src aitoff js  Source    br  a href   geoAitoffRaw  name  geoAitoffRaw     a  d3  b geoAitoffRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img aitoff png  width  480  height  250    http   bl ocks org mbostock 3682698   The Aitoff projection    a href   geoAlbers  name  geoAlbers     a  d3  b geoAlbers  b         https   github com d3 d3 geo blob master src projection albers js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoAlbers     img src  https   raw githubusercontent com d3 d3 geo master img albers png  width  480  height  250    http   bl ocks org mbostock 3734308   Albers   equal area conic projection   geoConicEqualArea     a href   geoArmadillo  name  geoArmadillo     a  d3  b geoArmadillo  b         https   github com d3 d3 geo projection blob master src armadillo js  Source    br  a href   geoArmadilloRaw  name  geoArmadilloRaw     a  d3  b geoArmadilloRaw  b   i phi0  i      img src  https   raw githubusercontent com d3 d3 geo projection master img armadillo png  width  480  height  250    http   bl ocks org mbostock 4463127   The armadillo projection  The default center assumes the default  parallel   armadillo parallel  of 20  and should be changed if a different parallel is used  Note  requires clipping to the sphere    a href   armadillo parallel  name  armadillo parallel     a   i armadillo  i   b parallel  b    i parallel  i     Defaults to 20     a href   geoAugust  name  geoAugust     a  d3  b geoAugust  b         https   github com d3 d3 geo projection blob master src august js  Source    br  a href   geoAugustRaw  name  geoAugustRaw     a  d3  b geoAugustRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img august png  width  480  height  250    http   bl ocks org mbostock 3797581   August s epicycloidal conformal projection    a href   geoAzimuthalEqualArea  name  geoAzimuthalEqualArea     a  d3  b geoAzimuthalEqualArea  b         https   github com d3 d3 geo blob master src projection azimuthalEqualArea js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoAzimuthalEqualArea   br  a href   geoAzimuthalEqualAreaRaw  name  geoAzimuthalEqualAreaRaw     a  d3  b geoAzimuthalEqualAreaRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img azimuthalEqualArea png  width  480  height  250    http   bl ocks org mbostock 3757101   The Lambert azimuthal equal area projection    a href   geoAzimuthalEquidistant  name  geoAzimuthalEquidistant     a  d3  b geoAzimuthalEquidistant  b         https   github com d3 d3 geo blob master src projection azimuthalEquidistant js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoAzimuthalEquidistant   br  a href   geoAzimuthalEquidistantRaw  name  geoAzimuthalEquidistantRaw     a  d3  b geoAzimuthalEquidistantRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img azimuthalEquidistant png  width  480  height  250    http   bl ocks org mbostock 3757110   The azimuthal equidistant projection    a href   geoBaker  name  geoBaker     a  d3  b geoBaker  b         https   github com d3 d3 geo projection blob master src baker js  Source    br  a href   geoBakerRaw  name  geoBakerRaw     a  d3  b geoBakerRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img baker png  width  480  height  250    http   bl ocks org mbostock 4476279   The Baker Dinomic projection    a href   geoBerghaus  name  geoBerghaus     a  d3  b geoBerghaus  b         https   github com d3 d3 geo projection blob master src berghaus js  Source    br  a href   geoBerghausRaw  name  geoBerghausRaw     a  d3  b geoBerghausRaw  b   i lobes  i      img src  https   raw githubusercontent com d3 d3 geo projection master img berghaus png  width  480  height  250    http   bl ocks org mbostock 4463049   Berghaus  star projection  The default center assumes the default  lobe number   berghaus lobes  of 5 and should be changed if a different number of lobes is used  Note  requires clipping to the sphere    a href   berghaus lobes  name  berghaus lobes     a   i berghaus  i   b lobes  b    i lobes  i         https   github com d3 d3 geo projection blob master src berghaus js L47  Source    If  lobes  is specified  sets the number of lobes in the resulting star  and returns this projection  If  lobes  is not specified  returns the current lobe number  which defaults to 5    a href   geoBertin1953  name  geoBertin1953     a  d3  b geoBertin1953  b         https   github com d3 d3 geo projection blob master src bertin js  Source    br  a href   geoBertin1953Raw  name  geoBertin1953Raw     a  d3  b geoBertin1953Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img bertin1953 png  width  480  height  250    https   visionscarto net bertin projection 1953   Jacques Bertin s 1953 projection    a href   geoBoggs  name  geoBoggs     a  d3  b geoBoggs  b         https   github com d3 d3 geo projection blob master src boggs js  Source    br  a href   geoBoggsRaw  name  geoBoggsRaw     a  d3  b geoBoggsRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img boggs png  width  480  height  250    http   bl ocks org mbostock 4481220   The Boggs eumorphic projection  More commonly used in  interrupted form   geoInterruptedBoggs     a href   geoBonne  name  geoBonne     a  d3  b geoBonne  b         https   github com d3 d3 geo projection blob master src bonne js  Source    br  a href   geoBonneRaw  name  geoBonneRaw     a  d3  b geoBonneRaw  b   i phi0  i      img src  https   raw githubusercontent com d3 d3 geo projection master img bonne png  width  480  height  250    http   bl ocks org mbostock 3734313   The Bonne pseudoconical equal area projection  The  Werner projection  http   bl ocks org mbostock a7ae83252305ed4d54d4  is a limiting form of the Bonne projection with a standard parallel at  90   The default center assumes the default  parallel   bonne parallel  of 45  and should be changed if a different parallel is used    a href   bonne parallel  name  bonne parallel     a   i bonne  i   b parallel  b    i parallel  i     Defaults to 45     a href   geoBottomley  name  geoBottomley     a  d3  b geoBottomley  b         https   github com d3 d3 geo projection blob master src bottomley js  Source    br  a href   geoBottomleyRaw  name  geoBottomleyRaw     a  d3  b geoBottomleyRaw  b   i sinPsi  i      img src  https   raw githubusercontent com d3 d3 geo projection master img bottomley png  width  480  height  250    http   bl ocks org mbostock ad2d520dd26dcc5af13b   The  Bottomley projection  http   cybergeo revues org 3977   draws lines of latitude as concentric circular arcs  with arc lengths equal to their lengths on the globe  and placed symmetrically and equally spaced across the vertical central meridian     a href   bottomley fraction  name  bottomley fraction     a   i bottomley  i   b fraction  b    i fraction  i     Defaults to 0 5  corresponding to a sin    where       6    a href   geoBromley  name  geoBromley     a  d3  b geoBromley  b         https   github com d3 d3 geo projection blob master src bromley js  Source    br  a href   geoBromleyRaw  name  geoBromleyRaw     a  d3  b geoBromleyRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img bromley png  width  480  height  250    http   bl ocks org mbostock 4487695   The Bromley projection is a rescaled  Mollweide projection   geoMollweide     a href   geoChamberlin  name  geoChamberlin     a  d3  b geoChamberlin  b   i point0  i    i point1  i    i point2  i        https   github com d3 d3 geo projection blob master src chamberlin js  Source    br  a href   geoChamberlinRaw  name  geoChamberlinRaw     a  d3  b geoChamberlinRaw  b   i p0  i    i p1  i    i p2  i    The Chamberlin trimetric projection  This method does not support   projection  rotate  https   github com d3 d3 geo blob master README md projection rotate   the three reference points implicitly determine a fixed rotation    a href   geoChamberlinAfrica  name  geoChamberlinAfrica     a  d3  b geoChamberlinAfrica  b         https   github com d3 d3 geo projection blob master src chamberlin js L96  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img chamberlinAfrica png  width  480  height  250    http   bl ocks org mbostock 5625053   The Chamberlin projection for Africa using points  0   22     45   22     22 5    22      a href   geoCollignon  name  geoCollignon     a  d3  b geoCollignon  b         https   github com d3 d3 geo projection blob master src collignon js  Source    br  a href   geoCollignonRaw  name  geoCollignonRaw     a  d3  b geoCollignonRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img collignon png  width  480  height  250    http   bl ocks org mbostock 3734316   The Collignon equal area pseudocylindrical projection  This projection is used in the polar areas of the  HEALPix projection   geoHealpix     a href   geoConicConformal  name  geoConicConformal     a  d3  b geoConicConformal  b         https   github com d3 d3 geo blob master src projection conicConformal js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoConicConformal   br  a href   geoConicConformalRaw  name  geoConicConformalRaw     a  d3  b geoConicConformalRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img conicConformal png  width  480  height  250    http   bl ocks org mbostock 3734321   The Lambert conformal conic projection    a href   geoConicEqualArea  name  geoConicEqualArea     a  d3  b geoConicEqualArea  b         https   github com d3 d3 geo blob master src projection conicEqualArea js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoConicEqualArea   br  a href   geoConicEqualAreaRaw  name  geoConicEqualAreaRaw     a  d3  b geoConicEqualAreaRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img conicEqualArea png  width  480  height  250    http   bl ocks org mbostock 3734308   Albers  conic equal area projection    a href   geoConicEquidistant  name  geoConicEquidistant     a  d3  b geoConicEquidistant  b         https   github com d3 d3 geo blob master src projection conicEquidistant js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoConicEquidistant   br  a href   geoConicEquidistantRaw  name  geoConicEquidistantRaw     a  d3  b geoConicEquidistantRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img conicEquidistant png  width  480  height  250    http   bl ocks org mbostock 3734317   The conic equidistant projection    a href   geoCraig  name  geoCraig     a  d3  b geoCraig  b         https   github com d3 d3 geo projection blob master src craig js  Source    br  a href   geoCraigRaw  name  geoCraigRaw     a  d3  b geoCraigRaw  b   i phi  i      img src  https   raw githubusercontent com d3 d3 geo projection master img craig png  width  480  height  250    http   bl ocks org mbostock 4459466   The Craig retroazimuthal projection  Note  this projection tends to  fold over itself  http   bl ocks org mbostock 4459716  if the  standard parallel   craig parallel  is non zero  we have not yet implemented the necessary advanced clipping to avoid overlap    a href   craig parallel  name  craig parallel     a   i craig  i   b parallel  b    i parallel  i     Defaults to 0     a href   geoCraster  name  geoCraster     a  d3  b geoCraster  b         https   github com d3 d3 geo projection blob master src craster js  Source    br  a href   geoCrasterRaw  name  geoCrasterRaw     a  d3  b geoCrasterRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img craster png  width  480  height  250    http   bl ocks org mbostock 4465118   The Craster parabolic projection  also known as Putni   P4    a href   geoCylindricalEqualArea  name  geoCylindricalEqualArea     a  d3  b geoCylindricalEqualArea  b         https   github com d3 d3 geo projection blob master src cylindricalEqualArea js  Source    br  a href   geoCylindricalEqualAreaRaw  name  geoCylindricalEqualAreaRaw     a  d3  b geoCylindricalEqualAreaRaw  b   i phi0  i      img src  https   raw githubusercontent com d3 d3 geo projection master img cylindricalEqualArea png  width  480  height  250    http   bl ocks org mbostock 3712408   The cylindrical equal area projection  Depending on the chosen  parallel   cylindricalEqualArea parallel   this projection is also known as the Lambert cylindrical equal area  0     Gall Peters  http   bl ocks org mbostock 3946824   45     Hobo Dyer  http   bl ocks org mbostock 4476487   37 5    and  Tobler world in a square  http   bl ocks org mbostock 4476496    55 654      a href   cylindricalEqualArea parallel  name  cylindricalEqualArea parallel     a   i cylindricalEqualArea  i   b parallel  b    i parallel  i     Defaults to approximately 38 58   fitting the world in a 960 500 rectangle    a href   geoCylindricalStereographic  name  geoCylindricalStereographic     a  d3  b geoCylindricalStereographic  b         https   github com d3 d3 geo projection blob master src cylindricalStereographic js  Source    br  a href   geoCylindricalStereographicRaw  name  geoCylindricalStereographicRaw     a  d3  b geoCylindricalStereographicRaw  b   i phi0  i      img src  https   raw githubusercontent com d3 d3 geo projection master img cylindricalStereographic png  width  480  height  250    http   bl ocks org mbostock 5234763   The cylindrical stereographic projection  Depending on the chosen  parallel   cylindricalStereographic parallel   this projection is also known as Braun s stereographic  0   and Gall s stereographic  45      a href   cylindricalStereographic parallel  name  cylindricalStereographic parallel     a   i cylindricalStereographic  i   b parallel  b    i parallel  i     Defaults to 0     a href   geoEckert1  name  geoEckert1     a  d3  b geoEckert1  b         https   github com d3 d3 geo projection blob master src eckert1 js  Source    br  a href   geoEckert1Raw  name  geoEckert1Raw     a  d3  b geoEckert1Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img eckert1 png  width  480  height  250    http   bl ocks org mbostock 3734322   The Eckert I projection    a href   geoEckert2  name  geoEckert2     a  d3  b geoEckert2  b         https   github com d3 d3 geo projection blob master src eckert2 js  Source    br  a href   geoEckert2Raw  name  geoEckert2Raw     a  d3  b geoEckert2Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img eckert2 png  width  480  height  250    http   bl ocks org mbostock 3734324   The Eckert II projection    a href   geoEckert3  name  geoEckert3     a  d3  b geoEckert3  b         https   github com d3 d3 geo projection blob master src eckert3 js  Source    br  a href   geoEckert3Raw  name  geoEckert3Raw     a  d3  b geoEckert3Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img eckert3 png  width  480  height  250    http   bl ocks org mbostock 3734325   The Eckert III projection    a href   geoEckert4  name  geoEckert4     a  d3  b geoEckert4  b         https   github com d3 d3 geo projection blob master src eckert4 js  Source    br  a href   geoEckert4Raw  name  geoEckert4Raw     a  d3  b geoEckert4Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img eckert4 png  width  480  height  250    http   bl ocks org mbostock 3734327   The Eckert IV projection    a href   geoEckert5  name  geoEckert5     a  d3  b geoEckert5  b         https   github com d3 d3 geo projection blob master src eckert5 js  Source    br  a href   geoEckert5Raw  name  geoEckert5Raw     a  d3  b geoEckert5Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img eckert5 png  width  480  height  250    http   bl ocks org mbostock 3734328   The Eckert V projection    a href   geoEckert6  name  geoEckert6     a  d3  b geoEckert6  b         https   github com d3 d3 geo projection blob master src eckert6 js  Source    br  a href   geoEckert6Raw  name  geoEckert6Raw     a  d3  b geoEckert6Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img eckert6 png  width  480  height  250    http   bl ocks org mbostock 3734329   The Eckert VI projection    a href   geoEisenlohr  name  geoEisenlohr     a  d3  b geoEisenlohr  b         https   github com d3 d3 geo projection blob master src eisenlohr js  Source    br  a href   geoEisenlohrRaw  name  geoEisenlohrRaw     a  d3  b geoEisenlohrRaw  b   i lambda  i    i phi  i      img src  https   raw githubusercontent com d3 d3 geo projection master img eisenlohr png  width  480  height  250    http   bl ocks org mbostock 3797585   The Eisenlohr conformal projection    a href   geoEquirectangular  name  geoEquirectangular     a  d3  b geoEquirectangular  b         https   github com d3 d3 geo blob master src projection equirectangular js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoEquirectangular   br  a href   geoEquirectangularRaw  name  geoEquirectangularRaw     a  d3  b geoEquirectangularRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img equirectangular png  width  480  height  250    http   bl ocks org mbostock 3757119   The equirectangular  plate carr e  projection  The  Cassini projection  http   bl ocks org mbostock 5695142  is the transverse aspect of the equirectangular projection    a href   geoFahey  name  geoFahey     a  d3  b geoFahey  b         https   github com d3 d3 geo projection blob master src fahey js  Source    br  a href   geoFaheyRaw  name  geoFaheyRaw     a  d3  b geoFaheyRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img fahey png  width  480  height  250    http   bl ocks org mbostock 4731228   The Fahey pseudocylindrical projection    a href   geoFoucaut  name  geoFoucaut     a  d3  b geoFoucaut  b         https   github com d3 d3 geo projection blob master src foucaut js  Source    br  a href   geoFoucautRaw  name  geoFoucautRaw     a  d3  b geoFoucautRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img foucaut png  width  480  height  250    https   www jasondavies com maps foucaut    Foucaut s stereographic equivalent projection    a href   geoGilbert  name  geoGilbert     a  d3  b geoGilbert  b    i type  i         https   github com d3 d3 geo projection blob master src gilbert js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img gilbert png  width  480  height  250    https   www jasondavies com maps gilbert    Gilbert s two world perspective projection  Wraps an instance of the specified projection  type   if not specified  defaults to  d3 geoOrthographic  https   github com d3 d3 geo blob master README md geoOrthographic     a href   geoGingery  name  geoGingery     a  d3  b geoGingery  b         https   github com d3 d3 geo projection blob master src gingery js  Source    br  a href   geoGingeryRaw  name  geoGingeryRaw     a  d3  b geoGingeryRaw  b   i rho  i    i lobes  i      img src  https   raw githubusercontent com d3 d3 geo projection master img gingery png  width  480  height  250    http   www jasondavies com maps gingery    The U S  centric Gingery world projection  as inspired by Cram s Air Age  Note  requires clipping to the sphere    a href   gingery radius  name  gingery radius     a   i gingery  i   b radius  b    i radius  i         https   github com d3 d3 geo projection blob master src gingery js L114  Source    Defaults to 30     a href   gingery lobes  name  gingery lobes     a   i gingery  i   b lobes  b    i lobes  i         https   github com d3 d3 geo projection blob master src gingery js L121  Source    Defaults to 6    a href   geoGinzburg4  name  geoGinzburg4     a  d3  b geoGinzburg4  b         https   github com d3 d3 geo projection blob master src ginzburg4 js  Source    br  a href   geoGinzburg4Raw  name  geoGinzburg4Raw     a  d3  b geoGinzburg4Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img ginzburg4 png  width  480  height  250    http   bl ocks org mbostock 5288565   The Ginzburg IV projection    a href   geoGinzburg5  name  geoGinzburg5     a  d3  b geoGinzburg5  b         https   github com d3 d3 geo projection blob master src ginzburg5 js  Source    br  a href   geoGinzburg5Raw  name  geoGinzburg5Raw     a  d3  b geoGinzburg5Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img ginzburg5 png  width  480  height  250    http   bl ocks org mbostock 5288571   The Ginzburg V projection    a href   geoGinzburg6  name  geoGinzburg6     a  d3  b geoGinzburg6  b         https   github com d3 d3 geo projection blob master src ginzburg6 js  Source    br  a href   geoGinzburg6Raw  name  geoGinzburg6Raw     a  d3  b geoGinzburg6Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img ginzburg6 png  width  480  height  250    http   bl ocks org mbostock 5288577   The Ginzburg VI projection    a href   geoGinzburg8  name  geoGinzburg8     a  d3  b geoGinzburg8  b         https   github com d3 d3 geo projection blob master src ginzburg8 js  Source    br  a href   geoGinzburg8Raw  name  geoGinzburg8Raw     a  d3  b geoGinzburg8Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img ginzburg8 png  width  480  height  250    http   bl ocks org mbostock 5288583   The Ginzburg VIII projection    a href   geoGinzburg9  name  geoGinzburg9     a  d3  b geoGinzburg9  b         https   github com d3 d3 geo projection blob master src ginzburg9 js  Source    br  a href   geoGinzburg9Raw  name  geoGinzburg9Raw     a  d3  b geoGinzburg9Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img ginzburg9 png  width  480  height  250    http   bl ocks org mbostock 5288590   The Ginzburg IX projection    a href   geoGnomonic  name  geoGnomonic     a  d3  b geoGnomonic  b         https   github com d3 d3 geo blob master src projection gnomonic js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoGnomonic   br  a href   geoGnomonicRaw  name  geoGnomonicRaw     a  d3  b geoGnomonicRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img gnomonic png  width  480  height  250    http   bl ocks org mbostock 3757349   The gnomonic projection    a href   geoGringorten  name  geoGringorten     a  d3  b geoGringorten  b         https   github com d3 d3 geo projection blob master src gringorten js  Source    br  a href   geoGringortenRaw  name  geoGringortenRaw     a  d3  b geoGringortenRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img gringorten png  width  480  height  250    http   bl ocks org mbostock 4362031   The Gringorten square equal area projection  rearranged to give each hemisphere an entire square    a href   geoGuyou  name  geoGuyou     a  d3  b geoGuyou  b         https   github com d3 d3 geo projection blob master src guyou js  Source    br  a href   geoGuyouRaw  name  geoGuyouRaw     a  d3  b geoGuyouRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img guyou png  width  480  height  250    http   bl ocks org mbostock 3763867   The Guyou hemisphere in a square projection  Peirce is credited with its  quincuncial form   geoPeirceQuincuncial     a href   geoHammer  name  geoHammer     a  d3  b geoHammer  b         https   github com d3 d3 geo projection blob master src hammer js  Source    br  a href   geoHammerRaw  name  geoHammerRaw     a  d3  b geoHammerRaw  b   i A  i    i B  i      img src  https   raw githubusercontent com d3 d3 geo projection master img hammer png  width  480  height  250    http   bl ocks org mbostock 3712397   The Hammer projection  Depending the chosen coefficient and aspect  also known as  Eckert Greifendorff  http   bl ocks org mbostock 4496212    quartic authalic  http   bl ocks org mbostock 4463175   and  Briesemeister  http   bl ocks org mbostock 4519926     a href   hammer coefficient  name  hammer coefficient     a   i hammer  i   b coefficient  b    i coefficient  i         https   github com d3 d3 geo projection blob master src hammer js L44  Source    Defaults to 2    a href   geoHammerRetroazimuthal  name  geoHammerRetroazimuthal     a  d3  b geoHammerRetroazimuthal  b         https   github com d3 d3 geo projection blob master src hammerRetroazimuthal js  Source    br  a href   geoHammerRetroazimuthalRaw  name  geoHammerRetroazimuthalRaw     a  d3  b geoHammerRetroazimuthalRaw  b   i phi0  i      img src  https   raw githubusercontent com d3 d3 geo projection master img hammerRetroazimuthal png  width  480  height  250    http   bl ocks org mbostock 4459130   The Hammer retroazimuthal projection  Note  requires clipping to the sphere    a href   hammerRetroazimuthal parallel  name  hammerRetroazimuthal parallel     a   i hammerRetroazimuthal  i   b parallel  b    i parallel  i     Defaults to 45     a href   geoHealpix  name  geoHealpix     a  d3  b geoHealpix  b         https   github com d3 d3 geo projection blob master src healpix js  Source    br  a href   geoHealpixRaw  name  geoHealpixRaw     a  d3  b geoHealpixRaw  b   i lobes  i      img src  https   raw githubusercontent com d3 d3 geo projection master img healpix png  width  480  height  250    http   bl ocks org mbostock 4463237   The HEALPix projection  a  b H  b ierarchical  b E  b qual  b A  b rea iso b L  b atitude  b Pix  b elisation of a 2 sphere  In this implementation  the parameter  K  is fixed at 3  Note  requires clipping to the sphere    a href   healpix lobes  name  healpix lobes     a   i healpix  i   b lobes  b    i lobes  i     If  lobes  is specified  sets the number of lobes  the parameter  H  in the literature  and returns this projection  If  lobes  is not specified  returns the current lobe number  which defaults to 4    a href   geoHill  name  geoHill     a  d3  b geoHill  b         https   github com d3 d3 geo projection blob master src hill js  Source    br  a href   geoHillRaw  name  geoHillRaw     a  d3  b geoHillRaw  b   i K  i      img src  https   raw githubusercontent com d3 d3 geo projection master img hill png  width  480  height  250    http   bl ocks org mbostock 4479513   Hill eucyclic projection is pseudoconic and equal area    a href  hill ratio  name  hill ratio     a   i hill  i   b ratio  b    i ratio  i     Defaults to 1  With a ratio of 0  this projection becomes the  Maurer No  73  http   bl ocks org mbostock 4479547   As it approaches    the projection converges to the  Eckert IV   geoEckert4     a href   geoHomolosine  name  geoHomolosine     a  d3  b geoHomolosine  b         https   github com d3 d3 geo projection blob master src homolosine js  Source    br  a href   geoHomolosineRaw  name  geoHomolosineRaw     a  d3  b geoHomolosineRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img homolosine png  width  480  height  250    http   bl ocks org mbostock 3734330   The pseudocylindrical  equal area Goode homolosine projection is normally presented in  interrupted form   geoInterruptedHomolosine     a href   geoHyperelliptical  name  geoHyperelliptical     a  d3  b geoHyperelliptical  b         https   github com d3 d3 geo projection blob master src hyperelliptical js  Source    br  a href   geoHyperellipticalRaw  name  geoHyperellipticalRaw     a  d3  b geoHyperellipticalRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img hyperelliptical png  width  480  height  250    https   bl ocks org Fil fb522a732986461e77296db01abd161e   Waldo R  Tobler s hyperelliptical is a family of equal area pseudocylindrical projections  Parameters include  k   the exponent of the superellipse  or Lam  curve  that defines the shape of the meridians  default  k    2 5    alpha   which governs the weight of the cylindrical projection that is averaged with the superellipse  default  alpha    0   and  gamma   that shapes the aspect ratio  default   gamma    1 183136     a href   geoKavrayskiy7  name  geoKavrayskiy7     a  d3  b geoKavrayskiy7  b         https   github com d3 d3 geo projection blob master src kavrayskiy7 js  Source    br  a href   geoKavrayskiy7Raw  name  geoKavrayskiy7Raw     a  d3  b geoKavrayskiy7Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img kavrayskiy7 png  width  480  height  250    http   bl ocks org mbostock 3710082   The Kavrayskiy VII pseudocylindrical projection    a href   geoLagrange  name  geoLagrange     a  d3  b geoLagrange  b         https   github com d3 d3 geo projection blob master src lagrange js  Source    br  a href   geoLagrangeRaw  name  geoLagrangeRaw     a  d3  b geoLagrangeRaw  b   i n  i      img src  https   raw githubusercontent com d3 d3 geo projection master img lagrange png  width  480  height  250    http   bl ocks org mbostock 3797591   The Lagrange conformal projection    a href   lagrange spacing  name  lagrange spacing     a   i lagrange  i   b spacing  b    i spacing  i     Defaults to 0 5    a href   geoLarrivee  name  geoLarrivee     a  d3  b geoLarrivee  b         https   github com d3 d3 geo projection blob master src larrivee js  Source    br  a href   geoLarriveeRaw  name  geoLarriveeRaw     a  d3  b geoLarriveeRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img larrivee png  width  480  height  250    http   bl ocks org mbostock 3719042   The Larriv e projection    a href   geoLaskowski  name  geoLaskowski     a  d3  b geoLaskowski  b         https   github com d3 d3 geo projection blob master src laskowski js  Source    br  a href   geoLaskowskiRaw  name  geoLaskowskiRaw     a  d3  b geoLaskowskiRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img laskowski png  width  480  height  250    http   bl ocks org mbostock 4489342   The Laskowski tri optimal projection simultaneously minimizes distance  angular  and areal distortion    a href   geoLittrow  name  geoLittrow     a  d3  b geoLittrow  b         https   github com d3 d3 geo projection blob master src littrow js  Source    br  a href   geoLittrowRaw  name  geoLittrowRaw     a  d3  b geoLittrowRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img littrow png  width  480  height  250    http   bl ocks org mbostock 4459071   The Littrow projection is the only conformal retroazimuthal map projection  Typically clipped to the geographic extent    90    60     90   60       a href   geoLoximuthal  name  geoLoximuthal     a  d3  b geoLoximuthal  b         https   github com d3 d3 geo projection blob master src loximuthal js  Source    br  a href   geoLoximuthalRaw  name  geoLoximuthalRaw     a  d3  b geoLoximuthalRaw  b   i phi0  i      img src  https   raw githubusercontent com d3 d3 geo projection master img loximuthal png  width  480  height  250    http   bl ocks org mbostock 3867220   The  loximuthal projection  https   en wikipedia org wiki Loximuthal projection  is  characterized by the fact that loxodromes  rhumb lines  from one chosen central point  the intersection of the central meridian and central latitude  are shown as straight lines  correct in azimuth from the center  and are  true to scale   It is neither an equal area projection nor conformal     a href   loximuthal parallel  name  loximuthal parallel     a   i loximuthal  i   b parallel  b    i parallel  i     Defaults to 40     a href   geoMercator  name  geoMercator     a  d3  b geoMercator  b         https   github com d3 d3 geo blob master src projection mercator js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoMercator   br  a href   geoMercatorRaw  name  geoMercatorRaw     a  d3  b geoMercatorRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img mercator png  width  480  height  250    http   bl ocks org mbostock 3757132   The spherical Mercator projection    a href   geoMiller  name  geoMiller     a  d3  b geoMiller  b         https   github com d3 d3 geo projection blob master src miller js  Source    br  a href   geoMillerRaw  name  geoMillerRaw     a  d3  b geoMillerRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img miller png  width  480  height  250    http   bl ocks org mbostock 3734333   The Miller cylindrical projection is a modified  Mercator   geoMercator  projection    a href   geoModifiedStereographic  name  geoModifiedStereographic     a  d3  b geoModifiedStereographic  b   i coefficients  i    i rotate  i        https   github com d3 d3 geo projection blob master src modifiedStereographic js  Source    br  a href   geoModifiedStereographicRaw  name  geoModifiedStereographicRaw     a  d3  b geoModifiedStereographicRaw  b   i coefficients  i    The family of  modified stereographic projections  http   www jasondavies com maps modified stereographic    The default  clip angle  https   github com d3 d3 geo blob master README md projection clipAngle  for these projections is 90   These projections do not support   projection  rotate  https   github com d3 d3 geo blob master README md projection rotate   a fixed rotation is applied that is specific to the given  coefficients     a href   geoModifiedStereographicAlaska  name  geoModifiedStereographicAlaska     a  d3  b geoModifiedStereographicAlaska  b         https   github com d3 d3 geo projection blob master src modifiedStereographic js L74  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img modifiedStereographicAlaska png  width  480  height  250    https   www jasondavies com maps modified stereographic alaska    A  modified stereographic   geoModifiedStereographic  projection for Alaska    a href   geoModifiedStereographicGs48  name  geoModifiedStereographicGs48     a  d3  b geoModifiedStereographicGs48  b         https   github com d3 d3 geo projection blob master src modifiedStereographic js L81  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img modifiedStereographicGs48 png  width  480  height  250    https   www jasondavies com maps modified stereographic gs48    A  modified stereographic   geoModifiedStereographic  projection for the conterminous United States    a href   geoModifiedStereographicGs50  name  geoModifiedStereographicGs50     a  d3  b geoModifiedStereographicGs50  b         https   github com d3 d3 geo projection blob master src modifiedStereographic js L88  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img modifiedStereographicGs50 png  width  480  height  250    https   www jasondavies com maps modified stereographic gs50    A  modified stereographic   geoModifiedStereographic  projection for the United States including Alaska and Hawaii  Typically clipped to the geographic extent    180   15      50   75       a href   geoModifiedStereographicMiller  name  geoModifiedStereographicMiller     a  d3  b geoModifiedStereographicMiller  b         https   github com d3 d3 geo projection blob master src modifiedStereographic js L95  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img modifiedStereographicMiller png  width  480  height  250    https   www jasondavies com maps modified stereographic miller    A  modified stereographic   geoModifiedStereographic  projection for Europe and Africa  Typically clipped to the geographic extent    40    40     80   80       a href   geoModifiedStereographicLee  name  geoModifiedStereographicLee     a  d3  b geoModifiedStereographicLee  b         https   github com d3 d3 geo projection blob master src modifiedStereographic js L102  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img modifiedStereographicLee png  width  480  height  250    https   www jasondavies com maps modified stereographic lee    A  modified stereographic   geoModifiedStereographic  projection for the Pacific ocean    a href   geoMollweide  name  geoMollweide     a  d3  b geoMollweide  b         https   github com d3 d3 geo projection blob master src mollweide js  Source    br  a href   geoMollweideRaw  name  geoMollweideRaw     a  d3  b geoMollweideRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img mollweide png  width  480  height  250    http   bl ocks org mbostock 3734336   The equal area  pseudocylindrical Mollweide projection  The oblique aspect is known as the  Atlantis projection  http   bl ocks org mbostock 4519975    Goode s interrupted Mollweide   interruptedMollweide  is also widely known    a href   geoMtFlatPolarParabolic  name  geoMtFlatPolarParabolic     a  d3  b geoMtFlatPolarParabolic  b         https   github com d3 d3 geo projection blob master src mtFlatPolarParabolic js  Source    br  a href   geoMtFlatPolarParabolicRaw  name  geoMtFlatPolarParabolicRaw     a  d3  b geoMtFlatPolarParabolicRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img mtFlatPolarParabolic png  width  480  height  250    http   bl ocks org mbostock 4465130   The McBryde Thomas flat polar parabolic pseudocylindrical equal area projection    a href   geoMtFlatPolarQuartic  name  geoMtFlatPolarQuartic     a  d3  b geoMtFlatPolarQuartic  b         https   github com d3 d3 geo projection blob master src mtFlatPolarQuartic js  Source    br  a href   geoMtFlatPolarQuarticRaw  name  geoMtFlatPolarQuarticRaw     a  d3  b geoMtFlatPolarQuarticRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img mtFlatPolarQuartic png  width  480  height  250    http   bl ocks org mbostock 4465137   The McBryde Thomas flat polar quartic pseudocylindrical equal area projection    a href   geoMtFlatPolarSinusoidal  name  geoMtFlatPolarSinusoidal     a  d3  b geoMtFlatPolarSinusoidal  b         https   github com d3 d3 geo projection blob master src mtFlatPolarSinusoidal js  Source    br  a href   geoMtFlatPolarSinusoidalRaw  name  geoMtFlatPolarSinusoidalRaw     a  d3  b geoMtFlatPolarSinusoidalRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img mtFlatPolarSinusoidal png  width  480  height  250    http   bl ocks org mbostock 4465140   The McBryde Thomas flat polar sinusoidal equal area projection    a href   geoNaturalEarth1  name  geoNaturalEarth1     a  d3  b geoNaturalEarth1  b         https   github com d3 d3 geo blob master src projection naturalEarth1 js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoNaturalEarth1   br  a href   geoNaturalEarth1Raw  name  geoNaturalEarth1Raw     a  d3  b geoNaturalEarth1Raw  b     img src  https   raw githubusercontent com d3 d3 geo master img naturalEarth1 png  width  480  height  250    http   bl ocks org mbostock 4479477   The Natural Earth projection    a href   geoNaturalEarth2  name  geoNaturalEarth2     a  d3  b geoNaturalEarth2  b         https   github com d3 d3 geo projection blob master src naturalEarth2 js  Source    br  a href   geoNaturalEarth2Raw  name  geoNaturalEarth2Raw     a  d3  b geoNaturalEarth2Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img naturalEarth2 png  width  480  height  250    https   bl ocks org mthh a4ed1eb3e3c7c5114967a244cb6fded3   The  Natural Earth II  http   www shadedrelief com NE2 proj   projection  Compared to  Natural Earth   geoNaturalEarth   it is slightly taller and rounder    a href   geoNellHammer  name  geoNellHammer     a  d3  b geoNellHammer  b         https   github com d3 d3 geo projection blob master src nellHammer js  Source    br  a href   geoNellHammerRaw  name  geoNellHammerRaw     a  d3  b geoNellHammerRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img nellHammer png  width  480  height  250    http   bl ocks org mbostock 3734342   The Nell Hammer projection    a href   geoOrthographic  name  geoOrthographic     a  d3  b geoOrthographic  b         https   github com d3 d3 geo blob master src projection orthographic js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoOrthographic   br  a href   geoOrthographicRaw  name  geoOrthographicRaw     a  d3  b geoOrthographicRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img orthographic png  width  480  height  250    http   bl ocks org mbostock 3757125   The orthographic projection    a href   geoPatterson  name  geoPatterson     a  d3  b geoPatterson  b         https   github com d3 d3 geo projection blob master src patterson js  Source    br  a href   geoPattersonRaw  name  geoPattersonRaw     a  d3  b geoPattersonRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img patterson png  width  480  height  250    http   bl ocks org mbostock d4021aa4dccfd65edffd   The Patterson cylindrical projection    a href   geoPolyconic  name  geoPolyconic     a  d3  b geoPolyconic  b         https   github com d3 d3 geo projection blob master src polyconic js  Source    br  a href   geoPolyconicRaw  name  geoPolyconicRaw     a  d3  b geoPolyconicRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img polyconic png  width  480  height  250    http   bl ocks org mbostock 3734343   The American polyconic projection    a href   geoRectangularPolyconic  name  geoRectangularPolyconic     a  d3  b geoRectangularPolyconic  b         https   github com d3 d3 geo projection blob master src rectangularPolyconic js  Source    br  a href   geoRectangularPolyconicRaw  name  geoRectangularPolyconicRaw     a  d3  b geoRectangularPolyconicRaw  b   i phi0  i      img src  https   raw githubusercontent com d3 d3 geo projection master img rectangularPolyconic png  width  480  height  250    http   bl ocks org mbostock 5230202   The rectangular  War Office  polyconic projection    a href   rectangularPolyconic parallel  name  rectangularPolyconic parallel     a   i rectangularPolyconic  i   b parallel  b    i parallel  i     Defaults to 0     a href   geoRobinson  name  geoRobinson     a  d3  b geoRobinson  b         https   github com d3 d3 geo projection blob master src robinson js  Source    br  a href   geoRobinsonRaw  name  geoRobinsonRaw     a  d3  b geoRobinsonRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img robinson png  width  480  height  250    http   bl ocks org mbostock 3710566   The Robinson projection    a href   geoSatellite  name  geoSatellite     a  d3  b geoSatellite  b         https   github com d3 d3 geo projection blob master src satellite js  Source    br  a href   geoSatelliteRaw  name  geoSatelliteRaw     a  d3  b geoSatelliteRaw  b   i P  i    i omega  i      img src  https   raw githubusercontent com d3 d3 geo projection master img satellite png  width  480  height  250    http   bl ocks org mbostock 3790444   The satellite  tilted perspective  projection    a href   satellite tilt  name  satellite tilt     a   i satellite  i   b tilt  b    i tilt  i     Defaults to 0     a href   satellite distance  name  satellite distance     a   i satellite  i   b distance  b    i distance  i     Distance from the center of the sphere to the point of view  as a proportion of the sphere s radius  defaults to 2 0  The recommended maximum  clip angle  https   github com d3 d3 geo blob master README md projection clipAngle  for a given  distance  is acos 1    distance   converted to degrees  If  tilt   satellite tilt  is also applied  then more conservative clipping may be necessary  For exact clipping  the in development geographic projection pipeline is needed  see the  satellite example  https   bl ocks org mbostock e48a00d4db5c3b042145     a href   geoSinusoidal  name  geoSinusoidal     a  d3  b geoSinusoidal  b         https   github com d3 d3 geo projection blob master src sinusoidal js  Source    br  a href   geoSinusoidalRaw  name  geoSinusoidalRaw     a  d3  b geoSinusoidalRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img sinusoidal png  width  480  height  250    http   bl ocks org mbostock 3712399   The sinusoidal projection    a href   geoSinuMollweide  name  geoSinuMollweide     a  d3  b geoSinuMollweide  b         https   github com d3 d3 geo projection blob master src sinuMollweide js  Source    br  a href   geoSinuMollweideRaw  name  geoSinuMollweideRaw     a  d3  b geoSinuMollweideRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img sinuMollweide png  width  480  height  250    http   bl ocks org mbostock 4319903   Allen K  Philbrick s Sinu Mollweide projection  See also the  interrupted form   interruptedSinuMollweide     a href   geoStereographic  name  geoStereographic     a  d3  b geoStereographic  b         https   github com d3 d3 geo blob master src projection stereographic js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoStereographic   br  a href   geoStereographicRaw  name  geoStereographicRaw     a  d3  b geoStereographicRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img stereographic png  width  480  height  250    http   bl ocks org mbostock 3757137   The stereographic projection    a href   geoTimes  name  geoTimes     a  d3  b geoTimes  b         https   github com d3 d3 geo projection blob master src times js  Source    br  a href   geoTimesRaw  name  geoTimesRaw     a  d3  b geoTimesRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img times png  width  480  height  250    http   bl ocks org mbostock 5230564   John Muir s Times projection    a href   geoTransverseMercator  name  geoTransverseMercator     a  d3  b geoTransverseMercator  b         https   github com d3 d3 geo blob master src projection transverseMercator js  Source      d3 geo    https   github com d3 d3 geo blob master README md geoTransverseMercator   br  a href   geoTransverseMercatorRaw  name  geoTransverseMercatorRaw     a  d3  b geoTransverseMercatorRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img transverseMercator png  width  480  height  250    http   bl ocks org mbostock 5126418   The transverse spherical Mercator projection    a href   geoTwoPointAzimuthal  name  geoTwoPointAzimuthal     a  d3  b geoTwoPointAzimuthal  b   i point0  i    i point1  i        https   github com d3 d3 geo projection blob master src twoPointAzimuthal js  Source    br  a href   geoTwoPointAzimuthalRaw  name  geoTwoPointAzimuthalRaw     a  d3  b geoTwoPointAzimuthalRaw  b   i d  i    The two point azimuthal projection  shows correct azimuths  but not distances  from either of two points to any other point   It can  be used to locate a ship at sea  given the exact location of two radio transmitters and the direction of the ship to the transmitters   This projection does not support   projection  rotate  https   github com d3 d3 geo blob master README md projection rotate   as the rotation is fixed by the two given points    a href   geoTwoPointAzimuthalUsa  name  geoTwoPointAzimuthalUsa     a  d3  b geoTwoPointAzimuthalUsa  b         https   github com d3 d3 geo projection blob master src twoPointAzimuthal js L21  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img twoPointAzimuthalUsa png  width  480  height  250    https   www jasondavies com maps two point azimuthal    The two point azimuthal projection with points   158   21 5   and   77   39    approximately representing Honolulu  HI and Washington  D C    a href   geoTwoPointEquidistant  name  geoTwoPointEquidistant     a  d3  b geoTwoPointEquidistant  b   i point0  i    i point1  i        https   github com d3 d3 geo projection blob master src twoPointEquidistant js  Source    br  a href   geoTwoPointEquidistantRaw  name  geoTwoPointEquidistantRaw     a  d3  b geoTwoPointEquidistantRaw  b   i z0  i    The two point equidistant projection  This projection does not support   projection  rotate  https   github com d3 d3 geo blob master README md projection rotate   as the rotation is fixed by the two given points  Note  to show the whole Earth  this projection requires clipping to spherical polygons  which is not yet supported in D3  However  you can typically show most of the Earth by using D3 s great circle clipping    a href   geoTwoPointEquidistantUsa  name  geoTwoPointEquidistantUsa     a  d3  b geoTwoPointEquidistantUsa  b         https   github com d3 d3 geo projection blob master src twoPointEquidistant js L40  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img twoPointEquidistantUsa png  width  480  height  250    https   www jasondavies com maps two point equidistant    The two point equidistant projection with points   158   21 5   and   77   39    approximately representing Honolulu  HI and Washington  D C    a href   geoVanDerGrinten  name  geoVanDerGrinten     a  d3  b geoVanDerGrinten  b         https   github com d3 d3 geo projection blob master src vanDerGrinten js  Source    br  a href   geoVanDerGrintenRaw  name  geoVanDerGrintenRaw     a  d3  b geoVanDerGrintenRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img vanDerGrinten png  width  480  height  250    http   bl ocks org mbostock 3796831   The Van der Grinten projection    a href   geoVanDerGrinten2  name  geoVanDerGrinten2     a  d3  b geoVanDerGrinten2  b         https   github com d3 d3 geo projection blob master src vanDerGrinten2 js  Source    br  a href   geoVanDerGrinten2Raw  name  geoVanDerGrinten2Raw     a  d3  b geoVanDerGrinten2Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img vanDerGrinten2 png  width  480  height  250    http   bl ocks org mbostock 5230571   The Van der Grinten II projection    a href   geoVanDerGrinten3  name  geoVanDerGrinten3     a  d3  b geoVanDerGrinten3  b         https   github com d3 d3 geo projection blob master src vanDerGrinten3 js  Source    br  a href   geoVanDerGrinten3Raw  name  geoVanDerGrinten3Raw     a  d3  b geoVanDerGrinten3Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img vanDerGrinten3 png  width  480  height  250    http   bl ocks org mbostock 5230580   The Van der Grinten III projection    a href   geoVanDerGrinten4  name  geoVanDerGrinten4     a  d3  b geoVanDerGrinten4  b         https   github com d3 d3 geo projection blob master src vanDerGrinten4 js  Source    br  a href   geoVanDerGrinten4Raw  name  geoVanDerGrinten4Raw     a  d3  b geoVanDerGrinten4Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img vanDerGrinten4 png  width  480  height  250    http   bl ocks org mbostock 4489365   The Van der Grinten IV projection    a href   geoWagner4  name  geoWagner4     a  d3  b geoWagner4  b         https   github com d3 d3 geo projection blob master src wagner4 js  Source    br  a href   geoWagner4Raw  name  geoWagner4Raw     a  d3  b geoWagner4Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img wagner4 png  width  480  height  250    http   bl ocks org mbostock 4487674   The Wagner IV projection  also known as Putni   P2     a href   geoWagner6  name  geoWagner6     a  d3  b geoWagner6  b         https   github com d3 d3 geo projection blob master src wagner6 js  Source    br  a href   geoWagner6Raw  name  geoWagner6Raw     a  d3  b geoWagner6Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img wagner6 png  width  480  height  250    http   bl ocks org mbostock 3710148   The Wagner VI projection    a href   geoWagner7  name  geoWagner7     a  d3  b geoWagner7  b         https   github com d3 d3 geo projection blob master src wagner7 js  Source    br  a href   geoWagner7Raw  name  geoWagner7Raw     a  d3  b geoWagner7Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img wagner7 png  width  480  height  250    http   bl ocks org mbostock 4465109   The Wagner VII projection    a href   geoWiechel  name  geoWiechel     a  d3  b geoWiechel  b         https   github com d3 d3 geo projection blob master src wiechel js  Source    br  a href   geoWiechelRaw  name  geoWiechelRaw     a  d3  b geoWiechelRaw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img wiechel png  width  480  height  250    http   bl ocks org mbostock 4463155   The Wiechel projection    a href   geoWinkel3  name  geoWinkel3     a  d3  b geoWinkel3  b         https   github com d3 d3 geo projection blob master src winkel3 js  Source    br  a href   geoWinkel3Raw  name  geoWinkel3Raw     a  d3  b geoWinkel3Raw  b     img src  https   raw githubusercontent com d3 d3 geo projection master img winkel3 png  width  480  height  250    http   bl ocks org mbostock 3682676   The Winkel tripel projection       Interrupted Projections   a href   geoInterrupt  name  geoInterrupt     a  d3  b geoInterrupt  b   i project  i    i lobes  i        https   github com d3 d3 geo projection blob master src interrupted index js  Source    Defines a new interrupted projection for the specified  raw projection   raw projections  function  project  and the specified array of  lobes   The array  lobes  contains two elements representing the hemilobes for the northern hemisphere and the southern hemisphere  respectively  Each hemilobe is an array of triangles  with each triangle represented as three points  in degrees   the start  midpoint  and end  For example  the lobes in  Goode s interrupted homolosine   geoInterruptedHomolosine  projection are defined as      json              180    0     100   90      40    0            40    0      30   90     180    0                   180    0     160   90     100    0           100    0      60   90      20    0            20    0      20   90      80    0            80    0     140   90     180    0              Note  interrupted projections typically require clipping to the sphere    a href   interrupted lobes  name  interrupted lobes     a   i interrupted  i   b lobes  b    i lobes  i         https   github com d3 d3 geo projection blob master src interrupted index js L103  Source    If  lobes  is specified  sets the new array of hemilobes and returns this projection  see  d3 geoInterrupt   geoInterrupt  for details on the format of the hemilobes array  If  lobes  is not specified  returns the current array of hemilobes    a href   geoInterruptedHomolosine  name  geoInterruptedHomolosine     a  d3  b geoInterruptedHomolosine  b         https   github com d3 d3 geo projection blob master src interrupted homolosine js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img interruptedHomolosine png  width  480  height  250    http   bl ocks org mbostock 4448587   Goode s interrupted  homolosine projection   geoHomolosine   Its  ocean centric aspect  https   bl ocks org Fil d90a94d7333bfef753e92a4abb7611b4  is also well known    a href   geoInterruptedSinusoidal  name  geoInterruptedSinusoidal     a  d3  b geoInterruptedSinusoidal  b         https   github com d3 d3 geo projection blob master src interrupted sinusoidal js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img interruptedSinusoidal png  width  480  height  250    http   bl ocks org mbostock 4458991   An interrupted  sinusoidal projection   geoSinusoidal  with asymmetrical lobe boundaries that emphasize land masses over oceans  after the Swedish  i Nordisk V rlds Atlas  i  as reproduced by  C A  Furuti  http   www progonos com furuti MapProj Normal ProjInt projInt html InterruptedSansonFlamsteed     a href   geoInterruptedBoggs  name  geoInterruptedBoggs     a  d3  b geoInterruptedBoggs  b         https   github com d3 d3 geo projection blob master src interrupted boggs js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img interruptedBoggs png  width  480  height  250    http   bl ocks org mbostock 4481265   Bogg s interrupted  eumorphic projection   geoBoggs     a href   geoInterruptedSinuMollweide  name  geoInterruptedSinuMollweide     a  d3  b geoInterruptedSinuMollweide  b         https   github com d3 d3 geo projection blob master src interrupted sinuMollweide js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img interruptedSinuMollweide png  width  480  height  250    http   bl ocks org mbostock 4481520   Alan K  Philbrick s interrupted  sinu Mollweide projection   geoSinuMollweide     a href   geoInterruptedMollweide  name  geoInterruptedMollweide     a  d3  b geoInterruptedMollweide  b         https   github com d3 d3 geo projection blob master src interrupted mollweide js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img interruptedMollweide png  width  480  height  250    http   bl ocks org mbostock 4498187   Goode s interrupted  Mollweide projection   geoMollweide     a href   geoInterruptedMollweideHemispheres  name  geoInterruptedMollweideHemispheres     a  d3  b geoInterruptedMollweideHemispheres  b         https   github com d3 d3 geo projection blob master src interrupted mollweideHemispheres js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img interruptedMollweideHemispheres png  width  480  height  250    http   bl ocks org mbostock 4498292   The  Mollweide projection   geoMollweide  interrupted into two  equal area  hemispheres       Polyhedral Projections   a href   geoPolyhedral  name  geoPolyhedral     a  d3  b geoPolyhedral  b   i root  i    i face  i        https   github com d3 d3 geo projection blob master src polyhedral index js  Source    Defines a new polyhedral projection  The  root  is a spanning tree of polygon face nodes  each  node  is assigned a  node  transform matrix  The  face  function returns the appropriate  node  for a given  lambda  and  phi  in radians  Use   projection  angle  https   github com d3 d3 geo blob master README md projection angle  to set the orientation of the map  the default  angle    30   might change in the next major version     a href   geoPolyhedralButterfly  name  geoPolyhedralButterfly     a  d3  b geoPolyhedralButterfly  b         https   github com d3 d3 geo projection blob master src polyhedral butterfly js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img polyhedralButterfly png  width  480  height  250    http   bl ocks org mbostock 4458680   The gnomonic butterfly projection    a href   geoPolyhedralCollignon  name  geoPolyhedralCollignon     a  d3  b geoPolyhedralCollignon  b         https   github com d3 d3 geo projection blob master src polyhedral collignon js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img polyhedralCollignon png  width  480  height  250    https   www jasondavies com maps collignon butterfly    The Collignon butterfly projection    a href   geoPolyhedralWaterman  name  geoPolyhedralWaterman     a  d3  b geoPolyhedralWaterman  b         https   github com d3 d3 geo projection blob master src polyhedral waterman js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img polyhedralWaterman png  width  480  height  250    https   www jasondavies com maps waterman butterfly    Steve Waterman s butterfly projection       Quincuncial Projections   a href   geoQuincuncial  name  geoQuincuncial     a  d3  b geoQuincuncial  b   i project  i        https   github com d3 d3 geo projection blob master src quincuncial index js  Source    Defines a new quincuncial projection for the specified  raw projection   raw projections  function  project   The default rotation is   90    90   45   and the default clip angle is 180         a href   geoGringortenQuincuncial  name  geoGringortenQuincuncial     a  d3  b geoGringortenQuincuncial  b         https   github com d3 d3 geo projection blob master src quincuncial gringorten js  Source     img src  https   raw githubusercontent com d3 d3 geo projection master img gringortenQuincuncial png  width  480  height  250    The Gringorten square equal area projection    a href   geoPeirceQuincuncial  name  geoPeirceQuincuncial     a  d3  b geoPeirceQuincuncial  b         https   github com d3 d3 geo projection blob master src quincuncial peirce js  Source      img src  https   raw githubusercontent com d3 d3 geo projection master img peirceQuincuncial png  width  480  height  250    http   bl ocks org mbostock 4310087   The Peirce quincuncial projection is the quincuncial form of the  Guyou projection   geoGuyou        Transformations   a href   geoProject  name  geoProject     a  d3  b geoProject  b   i object  i    i projection  i        https   github com d3 d3 geo projection blob master src project index js  Source    Projects the specified GeoJSON  object  using the specified  projection   returning a shallow copy of the specified GeoJSON  object  with projected coordinates  Typically  the input coordinates are spherical and the output coordinates are planar  but the  projection  can also be an  arbitrary geometric transformation  https   github com d3 d3 geo blob master README md transforms    See also  geoproject   geoproject     a href   geoStitch  name  geoStitch     a  d3  b geoStitch  b   i object  i        https   github com d3 d3 geo projection blob master src stitch js  Source    Returns a shallow copy of the specified GeoJSON  object   removing antimeridian and polar cuts  and replacing straight Cartesian line segments with geodesic segments  The input  object  must have coordinates in longitude and latitude in decimal degrees per  RFC 7946  https   tools ietf org html rfc7946    Antimeridian cutting  https   bl ocks org mbostock 3788999   if needed  can then be re applied after rotating to the desired projection aspect   See also  geostitch   geostitch     a href   geoQuantize  name  geoQuantize     a  d3  b geoQuantize  b   i object  i    i digits  i        https   github com d3 d3 geo projection blob master src quantize js  Source    Returns a shallow copy of the specified GeoJSON  object   rounding  x  and  y  coordinates according to   number  toFixed  https   developer mozilla org en US docs Web JavaScript Reference Global Objects Number toFixed   Typically this is done  after   projecting   geoProject    See also  geoproject   precision   geoproject precision  and  geo2svg   precision   geo2svg precision       Command Line Reference      geo2svg   a href   geo2svg  name  geo2svg     a   b geo2svg  b    i options   i     i file  i        https   github com d3 d3 geo projection blob master bin geo2svg  Source    Converts the specified GeoJSON  file  to SVG  With    newline delimited   geo2svg newline delimited   each input feature is rendered as a separate  path element  https   www w3 org TR SVG paths html   otherwise  a single path element is generated   By default  the SVG s  fill   geo2svg fill  is set to none and the  stroke   geo2svg stroke  is set to black  The default  point radius  https   github com d3 d3 geo blob master README md path pointRadius  is 4 5  To override these values on a per feature basis  the following  GeoJSON feature  http   geojson org geojson spec html feature objects  properties will be propagated to attributes     fill   fill rule  or fillRule    fill opacity  or fillOpacity    stroke   stroke width  or strokeWidth    stroke linecap  or strokeLinecap    stroke linejoin  or strokeLinejoin    stroke miterlimit  or strokeMiterlimit    stroke dasharray  or strokeDasharray    stroke dashoffset  or strokeDashoffset    stroke opacity  or strokeOpacity    point radius  or pointRadius   If the feature has an id  the path element will have a corresponding id attribute  If the feature has a  title  property  the path element will have a title element with the corresponding value  For an example of per feature attributes  see this  California population density map  https   bl ocks org mbostock fb6c1e5ff700f9713a9dc2f0fd392c35    Note  per feature attributes are most useful in conjunction with  newline delimited   geo2svg newline delimited  input  as otherwise the generated SVG only has a single path element  To set these properties dynamically  pass the input through  ndjson map  https   github com mbostock ndjson cli blob master README md map     a name  geo2svg help  href   geo2svg help     a  geo2svg  b  h  b   br  a href   geo2svg help     a  geo2svg  b   help  b   Output usage information    a name  geo2svg version  href   geo2svg version     a  geo2svg  b  V  b   br  a href   geo2svg version     a  geo2svg  b   version  b   Output the version number    a name  geo2svg out  href   geo2svg out     a  geo2svg  b  o  b   i file  i   br  a href   geo2svg out     a  geo2svg  b   out  b   i file  i   Specify the output file name  Defaults to     for stdout    a name  geo2svg width  href   geo2svg width     a  geo2svg  b  w  b   i value  i   br  a href   geo2svg width     a  geo2svg  b   width  b   i value  i   Specify the output width  Defaults to 960    a name  geo2svg height  href   geo2svg height     a  geo2svg  b  h  b   i value  i   br  a href   geo2svg height     a  geo2svg  b   height  b   i value  i   Specify the output height  Defaults to 500    a name  geo2svg precision  href   geo2svg precision     a  geo2svg  b  p  b   i value  i   br  a href   geo2svg precision     a  geo2svg  b   precision  b   i value  i   Reduce the precision for smaller output files  Defaults to six digits after the decimal point  See also  d3 geoQuantize   geoQuantize     a name  geo2svg fill  href   geo2svg fill     a  geo2svg  b   fill  b   i value  i   Specify the default output fill color  Defaults to none    a name  geo2svg stroke  href   geo2svg stroke     a  geo2svg  b   stroke  b   i value  i   Specify the default output stroke color  Defaults to black    a name  geo2svg radius  href   geo2svg radius     a  geo2svg  b   r  b   i value  i   br  a name  geo2svg radius  href   geo2svg radius     a  geo2svg  b   radius  b   i value  i   Specify the default output point radius  Defaults to 4 5    a name  geo2svg newline delimited  href   geo2svg newline delimited     a  geo2svg  b  n  b   br  a href   geo2svg newline delimited     a  geo2svg  b   newline delimited  b   Accept  newline delimited JSON  http   ndjson org   as input  with one feature per line       geograticule   a href   geograticule  name  geograticule     a   b geograticule  b    i options  i         https   github com d3 d3 geo projection blob master bin geograticule  Source    Generates a GeoJSON graticule  See also  d3 geoGraticule  https   github com d3 d3 geo blob master README md geoGraticule     a name  geograticule help  href   geograticule help     a  geograticule  b  h  b   br  a href   geograticule help     a  geograticule  b   help  b   Output usage information    a name  geograticule version  href   geograticule version     a  geograticule  b  V  b   br  a href   geograticule version     a  geograticule  b   version  b   Output the version number    a name  geograticule out  href   geograticule out     a  geograticule  b  o  b   i file  i   br  a href   geograticule out     a  geograticule  b   out  b   i file  i   Specify the output file name  Defaults to     for stdout    a name  geograticule extent  href   geograticule extent     a  geograticule  b   extent  b   i value  i   Sets the graticule s  extent  https   github com d3 d3 geo blob master README md graticule extent     a name  geograticule extent minor  href   geograticule extent minor     a  geograticule  b   extent minor  b   i value  i   Sets the graticule s  minor extent  https   github com d3 d3 geo blob master README md graticule extentMinor     a name  geograticule extent major  href   geograticule extent major     a  geograticule  b   extent major  b   i value  i   Sets the graticule s  major extent  https   github com d3 d3 geo blob master README md graticule extentMajor     a name  geograticule step  href   geograticule step     a  geograticule  b   step  b   i value  i   Sets the graticule s  step  https   github com d3 d3 geo blob master README md graticule step     a name  geograticule step minor  href   geograticule step minor     a  geograticule  b   step minor  b   i value  i   Sets the graticule s  minor step  https   github com d3 d3 geo blob master README md graticule stepMinor     a name  geograticule step major  href   geograticule step major     a  geograticule  b   step major  b   i value  i   Sets the graticule s  major setp  https   github com d3 d3 geo blob master README md graticule stepMajor     a name  geograticule precision  href   geograticule precision     a  geograticule  b   precision  b   i value  i   Sets the graticule s  precision  https   github com d3 d3 geo blob master README md graticule precision        geoproject   a href   geoproject  name  geoproject     a   b geoproject  b    i options  i     i projection  i    i file  i        https   github com d3 d3 geo projection blob master bin geoproject  Source    Projects the GeoJSON object in the specified input  file  using the specified  projection   outputting a new GeoJSON  object  with projected coordinates  For example  to project standard  WGS 84  https   en wikipedia org wiki World Geodetic System A new World Geodetic System  WGS 84  input using  d3 geoAlbersUsa  https   github com d3 d3 geo blob master README md geoAlbersUsa       bash geoproject  d3 geoAlbersUsa    us json       us albers json      For geometry that crosses the antimeridian or surrounds a pole  you will want to pass input through  geostitch   geostitch  first      bash geostitch world json       geoproject  d3 geoMercator          world mercator json      Typically  the input coordinates are spherical and the output coordinates are planar  but the  projection  can also be an  arbitrary geometric transformation  https   github com d3 d3 geo blob master README md transforms   For example  to invert the  y  axis of a standard  spatial reference system  https   en wikipedia org wiki Spatial reference system  such as  California Albers  EPSG 3310   http   spatialreference org ref epsg nad83 california albers   and fit it to a 960 500 viewport      bash shp2json planar shp       geoproject  d3 geoIdentity   reflectY true  fitSize  960  500   d         planar json      See also  d3 geoProject   geoProject  and  d3 geoIdentity  https   github com d3 d3 geo blob master README md geoIdentity     a name  geoproject help  href   geoproject help     a  geoproject  b  h  b   br  a href   geoproject help     a  geoproject  b   help  b   Output usage information    a name  geoproject version  href   geoproject version     a  geoproject  b  V  b   br  a href   geoproject version     a  geoproject  b   version  b   Output the version number    a name  geoproject out  href   geoproject out     a  geoproject  b  o  b   i file  i   br  a href   geoproject out     a  geoproject  b   out  b   i file  i   Specify the output file name  Defaults to     for stdout    a name  geoproject precision  href   geoproject precision     a  geoproject  b  p  b   i value  i   br  a href   geoproject precision     a  geoproject  b   precision  b   i value  i   Reduce the precision for smaller output files  See also  d3 geoQuantize   geoQuantize     a name  geoproject newline delimited  href   geoproject newline delimited     a  geoproject  b  n  b   br  a href   geoproject newline delimited     a  geoproject  b   newline delimited  b   Accept  newline delimited JSON  http   ndjson org   as input  with one feature per line  and generate newline delimited JSON as output       geostitch   a href   geostitch  name  geostitch     a   b geostitch  b    i options  i      i file  i        https   github com d3 d3 geo projection blob master bin geostitch  Source    Stitches the GeoJSON object in the specified input  file   removing antimeridian and polar cuts  and replacing straight Cartesian line segments with geodesic segments  The input  object  must have coordinates in longitude and latitude in decimal degrees per  RFC 7946  https   tools ietf org html rfc7946    Antimeridian cutting  https   bl ocks org mbostock 3788999   if needed  can then be re applied after rotating to the desired projection aspect   See  geoproject   geoproject  for an example  See also  d3 geoStitch   geoStitch     a name  geostitch help  href   geostitch help     a  geostitch  b  h  b   br  a href   geostitch help     a  geostitch  b   help  b   Output usage information    a name  geostitch version  href   geostitch version     a  geostitch  b  V  b   br  a href   geostitch version     a  geostitch  b   version  b   Output the version number    a name  geostitch out  href   geostitch out     a  geostitch  b  o  b   i file  i   br  a href   geostitch out     a  geostitch  b   out  b   i file  i   Specify the output file name  Defaults to     for stdout    a name  geostitch newline delimited  href   geostitch newline delimited     a  geostitch  b  n  b   br  a href   geostitch newline delimited     a  geostitch  b   newline delimited  b   Accept  newline delimited JSON  http   ndjson org   as input  with one feature per line  and generate newline delimited JSON as output  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-geo-projection"},{"name":"d3/d3-geo","artist":"return, specifi, sourc, array, valu","id":49,"playcount":56635,"description":"d3/d3-geo return, specifi, sourc, array, valu   d3 geo  Map projections are sometimes implemented as point transformations  For instance  spherical Mercator      js function mercator x  y      return  x  Math log Math tan Math PI   4   y   2            This is a reasonable  mathematical  approach if your geometry consists of continuous  infinite point sets  Yet computers do not have infinite memory  so we must instead work with discrete geometry such as polygons and polylines   Discrete geometry makes the challenge of projecting from the sphere to the plane much harder  The edges of a spherical polygon are  geodesics  https   en wikipedia org wiki Geodesic   segments of great circles   not straight lines  Projected to the plane  geodesics are curves in all map projections except  gnomonic   geoGnomonic   and thus accurate projection requires interpolation along each arc  D3 uses  adaptive sampling  https   bl ocks org mbostock 3795544  inspired by a popular  line simplification method  https   bost ocks org mike simplify   to balance accuracy and performance   The projection of polygons and polylines must also deal with the topological differences between the sphere and the plane  Some projections require cutting geometry that  crosses the antimeridian  https   bl ocks org mbostock 3788999   while others require  clipping geometry to a great circle  https   bl ocks org mbostock 3021474    Spherical polygons also require a  winding order convention  https   bl ocks org mbostock a7bdfeb041e850799a8d3dce4d8c50c8  to determine which side of the polygon is the inside  the exterior ring for polygons smaller than a hemisphere must be clockwise  while the exterior ring for polygons  larger than a hemisphere  https   bl ocks org mbostock 6713736  must be anticlockwise  Interior rings representing holes must use the opposite winding order of their exterior ring  This winding order convention is also used by  TopoJSON  https   github com topojson  and  ESRI shapefiles  https   github com mbostock shapefile   however  it is the   opposite   convention of GeoJSON s  RFC 7946  https   tools ietf org html rfc7946 section 3 1 6    Also note that standard GeoJSON WGS84 uses planar equirectangular coordinates  not spherical coordinates  and thus may require  stitching  https   github com d3 d3 geo projection blob master README md geostitch  to remove antimeridian cuts    D3 s approach affords great expressiveness  you can choose the right projection  and the right aspect  for your data  D3 supports a wide variety of common and  unusual map projections  https   github com d3 d3 geo projection   For more  see Part 2 of  The Toolmaker s Guide  https   vimeo com 106198518 t 20m0s    D3 uses  GeoJSON  http   geojson org geojson spec html  to represent geographic features in JavaScript   See also  TopoJSON  https   github com mbostock topojson   an extension of GeoJSON that is significantly more compact and encodes topology   To convert shapefiles to GeoJSON  use  shp2geo  https   github com mbostock shapefile blob master README md shp2geo   part of the  shapefile package  https   github com mbostock shapefile   See  Command Line Cartography  https   medium com  mbostock command line cartography part 1 897aa8f8ca2c  for an introduction to d3 geo and related tools      Installing  If you use NPM   npm install d3 geo   Otherwise  download the  latest release  https   github com d3 d3 geo releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 geo v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 array v1 min js    script   script src  https   d3js org d3 geo v1 min js    script   script   var projection   d3 geoNaturalEarth1        path   d3 geoPath projection      script        Try d3 geo in your browser   https   tonicdev com npm d3 geo      API Reference     Paths   paths     Projections   projections    Azimuthal   azimuthal projections    Composite   composite projections    Conic   conic projections    Cylindrical   cylindrical projections      Raw Projections   raw projections     Spherical Math   spherical math     Spherical Shapes   spherical shapes     Streams   streams     Transforms   transforms     Clipping   clipping       Paths  The geographic path generator   d3 geoPath   geoPath   is similar to the shape generators in  d3 shape  https   github com d3 d3 shape   given a GeoJSON geometry or feature object  it generates an SVG path data string or  renders the path to a Canvas  https   bl ocks org mbostock 3783604   Canvas is recommended for dynamic or interactive projections to improve performance  Paths can be used with  projections   projections  or  transforms   transforms   or they can be used to render planar geometry directly to Canvas or SVG    a href   geoPath  name  geoPath     a  d3  b geoPath  b    i projection  i     i context  i          https   github com d3 d3 geo blob master src path index js  Source    Creates a new geographic path generator with the default settings  If  projection  is specified  sets the  current projection   path projection   If  context  is specified  sets the  current context   path context     a href    path  name   path     a   i path  i   i object  i     i arguments   i         https   github com d3 d3 geo blob master src path index js  Source    Renders the given  object   which may be any GeoJSON feature or geometry object     Point   a single position    MultiPoint   an array of positions    LineString   an array of positions forming a continuous line    MultiLineString   an array of arrays of positions forming several lines    Polygon   an array of arrays of positions forming a polygon  possibly with holes     MultiPolygon   a multidimensional array of positions forming multiple polygons    GeometryCollection   an array of geometry objects    Feature   a feature containing one of the above geometry objects    FeatureCollection   an array of feature objects   The type  Sphere  is also supported  which is useful for rendering the outline of the globe  a sphere has no coordinates  Any additional  arguments  are passed along to the  pointRadius   path pointRadius  accessor   To display multiple features  combine them into a feature collection      js svg append  path        datum  type   FeatureCollection   features  features        attr  d   d3 geoPath          Or use multiple path elements      js svg selectAll  path      data features     enter   append  path        attr  d   d3 geoPath          Separate path elements are typically slower than a single path element  However  distinct path elements are useful for styling and interaction  e g   click or mouseover   Canvas rendering  see   path  context   path context   is typically faster than SVG  but requires more effort to implement styling and interaction    a href   path area  name  path area     a   i path  i   b area  b   i object  i        https   github com d3 d3 geo blob master src path area js  Source    Returns the projected planar area  typically in square pixels  for the specified GeoJSON  object   Point  MultiPoint  LineString and MultiLineString geometries have zero area  For Polygon and MultiPolygon geometries  this method first computes the area of the exterior ring  and then subtracts the area of any interior holes  This method observes any clipping performed by the  projection   path projection   see   projection  clipAngle   projection clipAngle  and   projection  clipExtent   projection clipExtent   This is the planar equivalent of  d3 geoArea   geoArea     a href   path bounds  name  path bounds     a   i path  i   b bounds  b   i object  i        https   github com d3 d3 geo blob master src path bounds js  Source    Returns the projected planar bounding box  typically in pixels  for the specified GeoJSON  object   The bounding box is represented by a two dimensional array       x     y         x     y        where  x   is the minimum  x  coordinate   y   is the minimum  y  coordinate   x   is maximum  x  coordinate  and  y   is the maximum  y  coordinate  This is handy for  say  zooming in to a particular feature   Note that in projected planar coordinates  the minimum latitude is typically the maximum  y  value  and the maximum latitude is typically the minimum  y  value   This method observes any clipping performed by the  projection   path projection   see   projection  clipAngle   projection clipAngle  and   projection  clipExtent   projection clipExtent   This is the planar equivalent of  d3 geoBounds   geoBounds     a href   path centroid  name  path centroid     a   i path  i   b centroid  b   i object  i        https   github com d3 d3 geo blob master src path centroid js  Source    Returns the projected planar centroid  typically in pixels  for the specified GeoJSON  object   This is handy for  say  labeling state or county boundaries  or displaying a symbol map  For example  a  noncontiguous cartogram  https   bl ocks org mbostock 4055908  might scale each state around its centroid  This method observes any clipping performed by the  projection   path projection   see   projection  clipAngle   projection clipAngle  and   projection  clipExtent   projection clipExtent   This is the planar equivalent of  d3 geoCentroid   geoCentroid     a href   path measure  name  path measure     a   i path  i   b measure  b   i object  i        https   github com d3 d3 geo blob master src path measure js  Source    Returns the projected planar length  typically in pixels  for the specified GeoJSON  object   Point and MultiPoint geometries have zero length  For Polygon and MultiPolygon geometries  this method computes the summed length of all rings  This method observes any clipping performed by the  projection   path projection   see   projection  clipAngle   projection clipAngle  and   projection  clipExtent   projection clipExtent   This is the planar equivalent of  d3 geoLength   geoLength     a href   path projection  name  path projection     a   i path  i   b projection  b    i projection  i         https   github com d3 d3 geo blob master src path index js  Source    If a  projection  is specified  sets the current projection to the specified projection  If  projection  is not specified  returns the current projection  which defaults to null  The null projection represents the identity transformation  the input geometry is not projected and is instead rendered directly in raw coordinates  This can be useful for fast rendering of  pre projected geometry  https   bl ocks org mbostock 5557726   or for fast rendering of the equirectangular projection   The given  projection  is typically one of D3 s built in  geographic projections   projections   however  any object that exposes a   projection  stream   projection stream  function can be used  enabling the use of  custom projections  https   bl ocks org mbostock 5663666   See D3 s  transforms   transforms  for more examples of arbitrary geometric transformations    a href   path context  name  path context     a   i path  i   b context  b    i context  i         https   github com d3 d3 geo blob master src path index js  Source    If  context  is specified  sets the current render context and returns the path generator  If the  context  is null  then the  path generator    path  will return an SVG path string  if the context is non null  the path generator will instead call methods on the specified context to render geometry  The context must implement the following subset of the  CanvasRenderingContext2D API  https   www w3 org TR 2dcontext  canvasrenderingcontext2d       context  beginPath      context  moveTo  x    y      context  lineTo  x    y      context  arc  x    y    radius    startAngle    endAngle      context  closePath    If a  context  is not specified  returns the current render context which defaults to null    a href   path pointRadius  name  path pointRadius     a   i path  i   b pointRadius  b    i radius  i         https   github com d3 d3 geo blob master src path index js  Source    If  radius  is specified  sets the radius used to display Point and MultiPoint geometries to the specified number  If  radius  is not specified  returns the current radius accessor  which defaults to 4 5  While the radius is commonly specified as a number constant  it may also be specified as a function which is computed per feature  being passed the any arguments passed to the  path generator    path   For example  if your GeoJSON data has additional properties  you might access those properties inside the radius function to vary the point size  alternatively  you could  d3 symbol  https   github com d3 d3 shape symbols  and a  projection   geoProjection  for greater flexibility       Projections  Projections transform spherical polygonal geometry to planar polygonal geometry  D3 provides implementations of several classes of standard projections      Azimuthal   azimuthal projections     Composite   composite projections     Conic   conic projections     Cylindrical   cylindrical projections   For many more projections  see  d3 geo projection  https   github com d3 d3 geo projection   You can implement  custom projections   raw projections  using  d3 geoProjection   geoProjection  or  d3 geoProjectionMutator   geoProjectionMutator     a href    projection  name   projection     a   i projection  i   i point  i        https   github com d3 d3 geo blob master src projection index js  Source    Returns a new array    x    y     typically in pixels  representing the projected point of the given  point   The point must be specified as a two element array    longitude    latitude    in degrees  May return null if the specified  point  has no defined projected position  such as when the point is outside the clipping bounds of the projection    a href   projection invert  name  projection invert     a   i projection  i   b invert  b   i point  i        https   github com d3 d3 geo blob master src projection index js  Source    Returns a new array    longitude    latitude    in degrees representing the unprojected point of the given projected  point   The point must be specified as a two element array    x    y     typically in pixels   May return null if the specified  point  has no defined projected position  such as when the point is outside the clipping bounds of the projection   This method is only defined on invertible projections    a href   projection stream  name  projection stream     a   i projection  i   b stream  b   i stream  i        https   github com d3 d3 geo blob master src projection index js  Source    Returns a  projection stream   streams  for the specified output  stream   Any input geometry is projected before being streamed to the output stream  A typical projection involves several geometry transformations  the input geometry is first converted to radians  rotated on three axes  clipped to the small circle or cut along the antimeridian  and lastly projected to the plane with adaptive resampling  scale and translation    a href   projection preclip  name  projection preclip     a   i projection  i   b preclip  b    i preclip  i     If  preclip  is specified  sets the projection s spherical clipping to the specified function and returns the projection  If  preclip  is not specified  returns the current spherical clipping function  see  preclip   preclip      a href   projection postclip  name  projection postclip     a   i projection  i   b postclip  b    i postclip  i     If  postclip  is specified  sets the projection s cartesian clipping to the specified function and returns the projection  If  postclip  is not specified  returns the current cartesian clipping function  see  postclip   postclip      a href   projection clipAngle  name  projection clipAngle     a   i projection  i   b clipAngle  b    i angle  i         https   github com d3 d3 geo blob master src projection index js  Source    If  angle  is specified  sets the projection s clipping circle radius to the specified angle in degrees and returns the projection  If  angle  is null  switches to  antimeridian cutting  https   bl ocks org mbostock 3788999  rather than small circle clipping  If  angle  is not specified  returns the current clip angle which defaults to null  Small circle clipping is independent of viewport clipping via   projection  clipExtent   projection clipExtent    See also   projection  preclip   projection preclip    d3 geoClipAntimeridian   geoClipAntimeridian    d3 geoClipCircle   geoClipCircle     a href   projection clipExtent  name  projection clipExtent     a   i projection  i   b clipExtent  b    i extent  i         https   github com d3 d3 geo blob master src projection index js  Source    If  extent  is specified  sets the projection s viewport clip extent to the specified bounds in pixels and returns the projection  The  extent  bounds are specified as an array      i x   i    i y   i        i x   i    i y   i       where  i x   i  is the left side of the viewport   i y   i  is the top   i x   i  is the right and  i y   i  is the bottom  If  extent  is null  no viewport clipping is performed  If  extent  is not specified  returns the current viewport clip extent which defaults to null  Viewport clipping is independent of small circle clipping via   projection  clipAngle   projection clipAngle    See also   projection  postclip   projection postclip    d3 geoClipRectangle   geoClipRectangle     a href   projection scale  name  projection scale     a   i projection  i   b scale  b    i scale  i         https   github com d3 d3 geo blob master src projection index js  Source    If  scale  is specified  sets the projection s scale factor to the specified value and returns the projection  If  scale  is not specified  returns the current scale factor  the default scale is projection specific  The scale factor corresponds linearly to the distance between projected points  however  absolute scale factors are not equivalent across projections    a href   projection translate  name  projection translate     a   i projection  i   b translate  b    i translate  i         https   github com d3 d3 geo blob master src projection index js  Source    If  translate  is specified  sets the projection s translation offset to the specified two element array   i t sub x  sub   i    i t sub y  sub   i   and returns the projection  If  translate  is not specified  returns the current translation offset which defaults to  480  250   The translation offset determines the pixel coordinates of the projection s  center   projection center   The default translation offset places  0  0   at the center of a 960 500 area    a href   projection center  name  projection center     a   i projection  i   b center  b    i center  i         https   github com d3 d3 geo blob master src projection index js  Source    If  center  is specified  sets the projection s center to the specified  center   a two element array of longitude and latitude in degrees and returns the projection  If  center  is not specified  returns the current center  which defaults to  0  0      a href   projection angle  name  projection angle     a   i projection  i   b angle  b    i angle  i         https   github com d3 d3 geo blob master src projection index js  Source    If  angle  is specified  sets the projection s post projection planar rotation angle to the specified  angle  in degrees and returns the projection  If  angle  is not specified  returns the projection s current angle  which defaults to 0   Note that it may be faster to rotate during rendering  e g   using   context  rotate  https   developer mozilla org docs Web API CanvasRenderingContext2D rotate   rather than during projection    a href   projection rotate  name  projection rotate     a   i projection  i   b rotate  b    i angles  i         https   github com d3 d3 geo blob master src projection index js  Source    If  rotation  is specified  sets the projection s  three axis spherical rotation  https   bl ocks org mbostock 4282586  to the specified  angles   which must be a two  or three element array of numbers   lambda    phi    gamma   specifying the rotation angles in degrees about  each spherical axis  https   bl ocks org mbostock 4282586    These correspond to  yaw  pitch and roll  http   en wikipedia org wiki Aircraft principal axes    If the rotation angle  gamma  is omitted  it defaults to 0  See also  d3 geoRotation   geoRotation   If  rotation  is not specified  returns the current rotation which defaults  0  0  0     a href   projection precision  name  projection precision     a   i projection  i   b precision  b    i precision  i         https   github com d3 d3 geo blob master src projection index js  Source    If  precision  is specified  sets the threshold for the projection s  adaptive resampling  https   bl ocks org mbostock 3795544  to the specified value in pixels and returns the projection  This value corresponds to the  Douglas Peucker  http   en wikipedia org wiki Ramer Douglas Peucker algorithm  distance  If  precision  is not specified  returns the projection s current resampling precision which defaults to  0 5   0 70710    a href   projection fitExtent  name  projection fitExtent     a   i projection  i   b fitExtent  b   i extent  i    i object  i        https   github com d3 d3 geo blob master src projection index js  Source    Sets the projection s  scale   projection scale  and  translate   projection translate  to fit the specified GeoJSON  object  in the center of the given  extent   The extent is specified as an array     x   y       x   y       where x  is the left side of the bounding box  y  is the top  x  is the right and y  is the bottom  Returns the projection   For example  to scale and translate the  New Jersey State Plane projection  https   bl ocks org mbostock 5126418  to fit a GeoJSON object  nj  in the center of a 960 500 bounding box with 20 pixels of padding on each side      js var projection   d3 geoTransverseMercator        rotate  74   30   60   38   50   60        fitExtent   20  20    940  480    nj        Any  clip extent   projection clipExtent  is ignored when determining the new scale and translate  The  precision   projection precision  used to compute the bounding box of the given  object  is computed at an effective scale of 150    a href   projection fitSize  name  projection fitSize     a   i projection  i   b fitSize  b   i size  i    i object  i        https   github com d3 d3 geo blob master src projection index js  Source    A convenience method for   projection  fitExtent   projection fitExtent  where the top left corner of the extent is  0  0   The following two statements are equivalent      js projection fitExtent   0  0    width  height    object   projection fitSize  width  height   object         a href   projection fitWidth  name  projection fitWidth     a   i projection  i   b fitWidth  b   i width  i    i object  i        https   github com d3 d3 geo blob master src projection index js  Source    A convenience method for   projection  fitSize   projection fitSize  where the height is automatically chosen from the aspect ratio of  object  and the given constraint on  width     a href   projection fitHeight  name  projection fitHeight     a   i projection  i   b fitHeight  b   i height  i    i object  i        https   github com d3 d3 geo blob master src projection index js  Source    A convenience method for   projection  fitSize   projection fitSize  where the width is automatically chosen from the aspect ratio of  object  and the given contraint on  height         Azimuthal Projections  Azimuthal projections project the sphere directly onto a plane    a href   geoAzimuthalEqualArea  name  geoAzimuthalEqualArea     a  d3  b geoAzimuthalEqualArea  b         https   github com d3 d3 geo blob master src projection azimuthalEqualArea js  Source    br  a href   geoAzimuthalEqualAreaRaw  name  geoAzimuthalEqualAreaRaw     a  d3  b geoAzimuthalEqualAreaRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img azimuthalEqualArea png  width  480  height  250    https   bl ocks org mbostock 3757101   The azimuthal equal area projection    a href   geoAzimuthalEquidistant  name  geoAzimuthalEquidistant     a  d3  b geoAzimuthalEquidistant  b         https   github com d3 d3 geo blob master src projection azimuthalEquidistant js  Source    br  a href   geoAzimuthalEquidistantRaw  name  geoAzimuthalEquidistantRaw     a  d3  b geoAzimuthalEquidistantRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img azimuthalEquidistant png  width  480  height  250    https   bl ocks org mbostock 3757110   The azimuthal equidistant projection    a href   geoGnomonic  name  geoGnomonic     a  d3  b geoGnomonic  b         https   github com d3 d3 geo blob master src projection gnomonic js  Source    br  a href   geoGnomonicRaw  name  geoGnomonicRaw     a  d3  b geoGnomonicRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img gnomonic png  width  480  height  250    https   bl ocks org mbostock 3757349   The gnomonic projection    a href   geoOrthographic  name  geoOrthographic     a  d3  b geoOrthographic  b         https   github com d3 d3 geo blob master src projection orthographic js  Source    br  a href   geoOrthographicRaw  name  geoOrthographicRaw     a  d3  b geoOrthographicRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img orthographic png  width  480  height  250    https   bl ocks org mbostock 3757125   The orthographic projection    a href   geoStereographic  name  geoStereographic     a  d3  b geoStereographic  b         https   github com d3 d3 geo blob master src projection stereographic js  Source    br  a href   geoStereographicRaw  name  geoStereographicRaw     a  d3  b geoStereographicRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img stereographic png  width  480  height  250    https   bl ocks org mbostock 3757137   The stereographic projection        Composite Projections  Composite consist of several projections that are composed into a single display  The constituent projections have fixed clip  center and rotation  and thus composite projections do not support   projection  center   projection center     projection  rotate   projection rotate     projection  clipAngle   projection clipAngle   or   projection  clipExtent   projection clipExtent     a href   geoAlbersUsa  name  geoAlbersUsa     a  d3  b geoAlbersUsa  b         https   github com d3 d3 geo blob master src projection albersUsa js  Source      img src  https   raw githubusercontent com d3 d3 geo master img albersUsa png  width  480  height  250    https   bl ocks org mbostock 4090848   This is a U S  centric composite projection of three  d3 geoConicEqualArea   geoConicEqualArea  projections   d3 geoAlbers   geoAlbers  is used for the lower forty eight states  and separate conic equal area projections are used for Alaska and Hawaii  Note that the scale for Alaska is diminished  it is projected at 0 35  its true relative area  This diagram by Philippe Rivi re illustrates how this projection uses two rectangular insets for Alaska and Hawaii     img src  https   raw githubusercontent com d3 d3 geo master img albersUsa parameters png  width  480  height  250    https   bl ocks org Fil 7723167596af40d9159be34ffbf8d36b   See  d3 composite projections  http   geoexamples com d3 composite projections   for more examples        Conic Projections  Conic projections project the sphere onto a cone  and then unroll the cone onto the plane  Conic projections have  two standard parallels   conic parallels     a href   conic parallels  name  conic parallels     a   i conic  i   b parallels  b    i parallels  i         https   github com d3 d3 geo blob master src projection conic js  Source    The  two standard parallels  https   en wikipedia org wiki Map projection Conic  that define the map layout in conic projections    a href   geoAlbers  name  geoAlbers     a  d3  b geoAlbers  b         https   github com d3 d3 geo blob master src projection albers js  Source      img src  https   raw githubusercontent com d3 d3 geo master img albers png  width  480  height  250    https   bl ocks org mbostock 3734308   The Albers  equal area conic projection  This is a U S  centric configuration of  d3 geoConicEqualArea   geoConicEqualArea     a href   geoConicConformal  name  geoConicConformal     a  d3  b geoConicConformal  b         https   github com d3 d3 geo blob master src projection conicConformal js  Source    br  a href   geoConicConformalRaw  name  geoConicConformalRaw     a  d3  b geoConicConformalRaw  b   i phi0  i    i phi1  i        https   github com d3 d3 geo blob master src projection conicConformal js  Source      img src  https   raw githubusercontent com d3 d3 geo master img conicConformal png  width  480  height  250    https   bl ocks org mbostock 3734321   The conic conformal projection  The parallels default to  30   30   resulting in flat top  See also   conic  parallels   conic parallels     a href   geoConicEqualArea  name  geoConicEqualArea     a  d3  b geoConicEqualArea  b         https   github com d3 d3 geo blob master src projection conicEqualArea js  Source    br  a href   geoConicEqualAreaRaw  name  geoConicEqualAreaRaw     a  d3  b geoConicEqualAreaRaw  b   i phi0  i    i phi1  i        https   github com d3 d3 geo blob master src projection conicEqualArea js  Source      img src  https   raw githubusercontent com d3 d3 geo master img conicEqualArea png  width  480  height  250    https   bl ocks org mbostock 3734308   The Albers  equal area conic projection  See also   conic  parallels   conic parallels     a href   geoConicEquidistant  name  geoConicEquidistant     a  d3  b geoConicEquidistant  b         https   github com d3 d3 geo blob master src projection conicEquidistant js  Source    br  a href   geoConicEquidistantRaw  name  geoConicEquidistantRaw     a  d3  b geoConicEquidistantRaw  b   i phi0  i    i phi1  i        https   github com d3 d3 geo blob master src projection conicEquidistant js  Source      img src  https   raw githubusercontent com d3 d3 geo master img conicEquidistant png  width  480  height  250    https   bl ocks org mbostock 3734317   The conic equidistant projection  See also   conic  parallels   conic parallels         Cylindrical Projections  Cylindrical projections project the sphere onto a containing cylinder  and then unroll the cylinder onto the plane   Pseudocylindrical projections  http   www progonos com furuti MapProj Normal ProjPCyl projPCyl html  are a generalization of cylindrical projections    a href   geoEquirectangular  name  geoEquirectangular     a  d3  b geoEquirectangular  b         https   github com d3 d3 geo blob master src projection equirectangular js  Source    br  a href   geoEquirectangularRaw  name  geoEquirectangularRaw     a  d3  b geoEquirectangularRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img equirectangular png  width  480  height  250    https   bl ocks org mbostock 3757119   The equirectangular  plate carr e  projection    a href   geoMercator  name  geoMercator     a  d3  b geoMercator  b         https   github com d3 d3 geo blob master src projection mercator js  Source    br  a href   geoMercatorRaw  name  geoMercatorRaw     a  d3  b geoMercatorRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img mercator png  width  480  height  250    https   bl ocks org mbostock 3757132   The spherical Mercator projection  Defines a default   projection  clipExtent   projection clipExtent  such that the world is projected to a square  clipped to approximately  85  latitude    a href   geoTransverseMercator  name  geoTransverseMercator     a  d3  b geoTransverseMercator  b         https   github com d3 d3 geo blob master src projection transverseMercator js  Source    br  a href   geoTransverseMercatorRaw  name  geoTransverseMercatorRaw     a  d3  b geoTransverseMercatorRaw  b     img src  https   raw githubusercontent com d3 d3 geo master img transverseMercator png  width  480  height  250    https   bl ocks org mbostock 4695821   The transverse spherical Mercator projection  Defines a default   projection  clipExtent   projection clipExtent  such that the world is projected to a square  clipped to approximately  85  latitude    a href   geoNaturalEarth1  name  geoNaturalEarth1     a  d3  b geoNaturalEarth1  b         https   github com d3 d3 geo blob master src projection naturalEarth1 js  Source    br  a href   geoNaturalEarth1Raw  name  geoNaturalEarth1Raw     a  d3  b geoNaturalEarth1Raw  b     img src  https   raw githubusercontent com d3 d3 geo master img naturalEarth1 png  width  480  height  250    https   bl ocks org mbostock 4479477   The  Natural Earth projection  http   www shadedrelief com NE proj   is a pseudocylindrical projection designed by Tom Patterson  It is neither conformal nor equal area  but appealing to the eye for small scale maps of the whole world       Raw Projections  Raw projections are point transformation functions that are used to implement custom projections  they typically passed to  d3 geoProjection   geoProjection  or  d3 geoProjectionMutator   geoProjectionMutator   They are exposed here to facilitate the derivation of related projections  Raw projections take spherical coordinates    lambda    phi    in radians  not degrees   and return a point    x    y     typically in the unit square centered around the origin    a href    project  name   project     a   i project  i   i lambda  i    i phi  i    Projects the specified point   i lambda  i    i phi  i   in radians  returning a new point    x    y    in unitless coordinates    a href   project invert  name  project invert     a   i project  i   b invert  b   i x  i    i y  i    The inverse of   project     project     a href   geoProjection  name  geoProjection     a  d3  b geoProjection  b   i project  i        https   github com d3 d3 geo blob master src projection index js  Source    Constructs a new projection from the specified  raw projection    project    project   The  project  function takes the  longitude  and  latitude  of a given point in  radians  http   mathworld wolfram com Radian html   often referred to as  lambda      and  phi       and returns a two element array    x    y    representing its unit projection  The  project  function does not need to scale or translate the point  as these are applied automatically by   projection  scale   projection scale     projection  translate   projection translate   and   projection  center   projection center   Likewise  the  project  function does not need to perform any spherical rotation  as   projection  rotate   projection rotate  is applied prior to projection   For example  a spherical Mercator projection can be implemented as      js var mercator   d3 geoProjection function x  y      return  x  Math log Math tan Math PI   4   y   2              If the  project  function exposes an  invert  method  the returned projection will also expose   projection  invert   projection invert     a href   geoProjectionMutator  name  geoProjectionMutator     a  d3  b geoProjectionMutator  b   i factory  i        https   github com d3 d3 geo blob master src projection index js  Source    Constructs a new projection from the specified  raw projection    project   factory  and returns a  mutate  function to call whenever the raw projection changes  The  factory  must return a raw projection  The returned  mutate  function returns the wrapped projection  For example  a conic projection typically has two configurable parallels  A suitable  factory  function  such as  d3 geoConicEqualAreaRaw   geoConicEqualAreaRaw   would have the form      js    y0 and y1 represent two parallels function conicFactory phi0  phi1      return function conicRaw lambda  phi        return                     Using d3 geoProjectionMutator  you can implement a standard projection that allows the parallels to be changed  reassigning the raw projection used internally by  d3 geoProjection   geoProjection       js function conicCustom       var phi0   29 5        phi1   45 5        mutate   d3 geoProjectionMutator conicFactory         projection   mutate phi0  phi1      projection parallels   function          return arguments length   mutate phi0      0   phi1      1      phi0  phi1           return projection         When creating a mutable projection  the  mutate  function is typically not exposed       Spherical Math   a name  geoArea  href   geoArea     a  d3  b geoArea  b   i object  i        https   github com d3 d3 geo blob master src area js  Source    Returns the spherical area of the specified GeoJSON  object  in  steradians  http   mathworld wolfram com Steradian html   This is the spherical equivalent of   path  area   path area     a name  geoBounds  href   geoBounds     a  d3  b geoBounds  b   i object  i        https   github com d3 d3 geo blob master src bounds js  Source    Returns the  spherical bounding box  https   www jasondavies com maps bounds   for the specified GeoJSON  object   The bounding box is represented by a two dimensional array       left    bottom       right    top       where  left  is the minimum longitude   bottom  is the minimum latitude   right  is maximum longitude  and  top  is the maximum latitude  All coordinates are given in degrees   Note that in projected planar coordinates  the minimum latitude is typically the maximum  y  value  and the maximum latitude is typically the minimum  y  value   This is the spherical equivalent of   path  bounds   path bounds     a name  geoCentroid  href   geoCentroid     a  d3  b geoCentroid  b   i object  i        https   github com d3 d3 geo blob master src centroid js  Source    Returns the spherical centroid of the specified GeoJSON  object   This is the spherical equivalent of   path  centroid   path centroid     a name  geoDistance  href   geoDistance     a  d3  b geoDistance  b   i a  i    i b  i        https   github com d3 d3 geo blob master src distance js  Source    Returns the great arc distance in  radians  http   mathworld wolfram com Radian html  between the two points  a  and  b   Each point must be specified as a two element array    longitude    latitude    in degrees  This is the spherical equivalent of   path  measure   path measure  given a LineString of two points    a name  geoLength  href   geoLength     a  d3  b geoLength  b   i object  i        https   github com d3 d3 geo blob master src length js  Source    Returns the great arc length of the specified GeoJSON  object  in  radians  http   mathworld wolfram com Radian html   For polygons  returns the perimeter of the exterior ring plus that of any interior rings  This is the spherical equivalent of   path  measure   path measure     a name  geoInterpolate  href   geoInterpolate     a  d3  b geoInterpolate  b   i a  i    i b  i        https   github com d3 d3 geo blob master src interpolate js  Source    Returns an interpolator function given two points  a  and  b   Each point must be specified as a two element array    longitude    latitude    in degrees  The returned interpolator function takes a single argument  t   where  t  is a number ranging from 0 to 1  a value of 0 returns the point  a   while a value of 1 returns the point  b   Intermediate values interpolate from  a  to  b  along the great arc that passes through both  a  and  b   If  a  and  b  are antipodes  an arbitrary great arc is chosen    a name  geoContains  href   geoContains     a  d3  b geoContains  b   i object  i    i point  i        https   github com d3 d3 geo blob master src contains js  Source    Returns true if and only if the specified GeoJSON  object  contains the specified  point   or false if the  object  does not contain the  point   The point must be specified as a two element array    longitude    latitude    in degrees  For Point and MultiPoint geometries  an exact test is used  for a Sphere  true is always returned  for other geometries  an epsilon threshold is applied    a name  geoRotation  href   geoRotation     a  d3  b geoRotation  b   i angles  i        https   github com d3 d3 geo blob master src rotation js  Source    Returns a  rotation function    rotation  for the given  angles   which must be a two  or three element array of numbers   lambda    phi    gamma   specifying the rotation angles in degrees about  each spherical axis  https   bl ocks org mbostock 4282586    These correspond to  yaw  pitch and roll  http   en wikipedia org wiki Aircraft principal axes    If the rotation angle  gamma  is omitted  it defaults to 0  See also   projection  rotate   projection rotate     a name   rotation  href    rotation     a   i rotation  i   i point  i        https   github com d3 d3 geo blob master src rotation js  Source    Returns a new array    longitude    latitude    in degrees representing the rotated point of the given  point   The point must be specified as a two element array    longitude    latitude    in degrees    a name  rotation invert  href   rotation invert     a   i rotation  i   b invert  b   i point  i        https   github com d3 d3 geo blob master src rotation js  Source    Returns a new array    longitude    latitude    in degrees representing the point of the given rotated  point   the inverse of   rotation     rotation   The point must be specified as a two element array    longitude    latitude    in degrees       Spherical Shapes  To generate a  great arc  https   en wikipedia org wiki Great circle distance   a segment of a great circle   simply pass a GeoJSON LineString geometry object to a  d3 geoPath   geoPath   D3 s projections use great arc interpolation for intermediate points  so there s no need for a great arc shape generator    a name  geoCircle  href   geoCircle     a  d3  b geoCircle  b         https   github com d3 d3 geo blob master src circle js  Source    Returns a new circle generator    a name   circle  href    circle     a   i circle  i   i arguments   i        https   github com d3 d3 geo blob master src circle js  Source    Returns a new GeoJSON geometry object of type  Polygon  approximating a circle on the surface of a sphere  with the current  center   circle center    radius   circle radius  and  precision   circle precision   Any  arguments  are passed to the accessors    a name  circle center  href   circle center     a   i circle  i   b center  b    i center  i         https   github com d3 d3 geo blob master src circle js  Source    If  center  is specified  sets the circle center to the specified point    longitude    latitude    in degrees  and returns this circle generator  The center may also be specified as a function  this function will be invoked whenever a circle is  generated    circle   being passed any arguments passed to the circle generator  If  center  is not specified  returns the current center accessor  which defaults to      js function center       return  0  0           a name  circle radius  href   circle radius     a   i circle  i   b radius  b    i radius  i         https   github com d3 d3 geo blob master src circle js  Source    If  radius  is specified  sets the circle radius to the specified angle in degrees  and returns this circle generator  The radius may also be specified as a function  this function will be invoked whenever a circle is  generated    circle   being passed any arguments passed to the circle generator  If  radius  is not specified  returns the current radius accessor  which defaults to      js function radius       return 90          a name  circle precision  href   circle precision     a   i circle  i   b precision  b    i angle  i         https   github com d3 d3 geo blob master src circle js  Source    If  precision  is specified  sets the circle precision to the specified angle in degrees  and returns this circle generator  The precision may also be specified as a function  this function will be invoked whenever a circle is  generated    circle   being passed any arguments passed to the circle generator  If  precision  is not specified  returns the current precision accessor  which defaults to      js function precision       return 6         Small circles do not follow great arcs and thus the generated polygon is only an approximation  Specifying a smaller precision angle improves the accuracy of the approximate polygon  but also increase the cost to generate and render it    a name  geoGraticule  href   geoGraticule     a  d3  b geoGraticule  b         https   github com d3 d3 geo blob master src graticule js  Source    Constructs a geometry generator for creating graticules  a uniform grid of  meridians  https   en wikipedia org wiki Meridian   geography    and  parallels  https   en wikipedia org wiki Circle of latitude  for showing projection distortion  The default graticule has meridians and parallels every 10  between  80  latitude  for the polar regions  there are meridians every 90     img src  https   raw githubusercontent com d3 d3 geo master img graticule png  width  480  height  360     a name   graticule  href    graticule     a   i graticule  i         https   github com d3 d3 geo blob master src graticule js  Source    Returns a GeoJSON MultiLineString geometry object representing all meridians and parallels for this graticule    a name  graticule lines  href   graticule lines     a   i graticule  i   b lines  b         https   github com d3 d3 geo blob master src graticule js  Source    Returns an array of GeoJSON LineString geometry objects  one for each meridian or parallel for this graticule    a name  graticule outline  href   graticule outline     a   i graticule  i   b outline  b         https   github com d3 d3 geo blob master src graticule js  Source    Returns a GeoJSON Polygon geometry object representing the outline of this graticule  i e  along the meridians and parallels defining its extent    a name  graticule extent  href   graticule extent     a   i graticule  i   b extent  b    i extent  i         https   github com d3 d3 geo blob master src graticule js  Source    If  extent  is specified  sets the major and minor extents of this graticule  If  extent  is not specified  returns the current minor extent  which defaults to    180    80         180   80           a name  graticule extentMajor  href   graticule extentMajor     a   i graticule  i   b extentMajor  b    i extent  i         https   github com d3 d3 geo blob master src graticule js  Source    If  extent  is specified  sets the major extent of this graticule  If  extent  is not specified  returns the current major extent  which defaults to    180    90         180   90           a name  graticule extentMinor  href   graticule extentMinor     a   i graticule  i   b extentMinor  b    i extent  i         https   github com d3 d3 geo blob master src graticule js  Source    If  extent  is specified  sets the minor extent of this graticule  If  extent  is not specified  returns the current minor extent  which defaults to    180    80         180   80           a name  graticule step  href   graticule step     a   i graticule  i   b step  b    i step  i         https   github com d3 d3 geo blob master src graticule js  Source    If  step  is specified  sets the major and minor step for this graticule  If  step  is not specified  returns the current minor step  which defaults to  10   10      a name  graticule stepMajor  href   graticule stepMajor     a   i graticule  i   b stepMajor  b    i step  i         https   github com d3 d3 geo blob master src graticule js  Source    If  step  is specified  sets the major step for this graticule  If  step  is not specified  returns the current major step  which defaults to  90   360      a name  graticule stepMinor  href   graticule stepMinor     a   i graticule  i   b stepMinor  b    i step  i         https   github com d3 d3 geo blob master src graticule js  Source    If  step  is specified  sets the minor step for this graticule  If  step  is not specified  returns the current minor step  which defaults to  10   10      a name  graticule precision  href   graticule precision     a   i graticule  i   b precision  b    i angle  i         https   github com d3 d3 geo blob master src graticule js  Source    If  precision  is specified  sets the precision for this graticule  in degrees  If  precision  is not specified  returns the current precision  which defaults to 2 5     a name  geoGraticule10  href   geoGraticule10     a  d3  b geoGraticule10  b         https   github com d3 d3 geo blob master src graticule js  Source    A convenience method for directly generating the default 10  global graticule as a GeoJSON MultiLineString geometry object  Equivalent to      js function geoGraticule10       return d3 geoGraticule                 Streams  D3 transforms geometry using a sequence of function calls  rather than materializing intermediate representations  to minimize overhead  Streams must implement several methods to receive input geometry  Streams are inherently stateful  the meaning of a  point   point  depends on whether the point is inside of a  line   lineStart   and likewise a line is distinguished from a ring by a  polygon   polygonStart   Despite the name  stream   these method calls are currently synchronous    a href   geoStream  name  geoStream     a  d3  b geoStream  b   i object  i    i stream  i        https   github com d3 d3 geo blob master src stream js  Source    Streams the specified  GeoJSON  http   geojson org   object  to the specified  projection  stream    projection streams   While both features and geometry objects are supported as input  the stream interface only describes the geometry  and thus additional feature properties are not visible to streams    a name  stream point  href   stream point     a   i stream  i   b point  b   i x  i    i y  i     i z  i     Indicates a point with the specified coordinates  x  and  y   and optionally  z    The coordinate system is unspecified and implementation dependent  for example   projection streams  https   github com d3 d3 geo projection  require spherical coordinates in degrees as input  Outside the context of a polygon or line  a point indicates a point geometry object   Point  http   www geojson org geojson spec html point  or  MultiPoint  http   www geojson org geojson spec html multipoint    Within a line or polygon ring  the point indicates a control point    a name  stream lineStart  href   stream lineStart     a   i stream  i   b lineStart  b     Indicates the start of a line or ring  Within a polygon  indicates the start of a ring  The first ring of a polygon is the exterior ring  and is typically clockwise  Any subsequent rings indicate holes in the polygon  and are typically counterclockwise    a name  stream lineEnd  href   stream lineEnd     a   i stream  i   b lineEnd  b     Indicates the end of a line or ring  Within a polygon  indicates the end of a ring  Unlike GeoJSON  the redundant closing coordinate of a ring is  not  indicated via  point   point   and instead is implied via lineEnd within a polygon  Thus  the given polygon input      json      type    Polygon      coordinates           0  0    0  1    1  1    1  0    0  0              Will produce the following series of method calls on the stream      js stream polygonStart    stream lineStart    stream point 0  0   stream point 0  1   stream point 1  1   stream point 1  0   stream lineEnd    stream polygonEnd          a name  stream polygonStart  href   stream polygonStart     a   i stream  i   b polygonStart  b     Indicates the start of a polygon  The first line of a polygon indicates the exterior ring  and any subsequent lines indicate interior holes    a name  stream polygonEnd  href   stream polygonEnd     a   i stream  i   b polygonEnd  b     Indicates the end of a polygon    a name  stream sphere  href   stream sphere     a   i stream  i   b sphere  b     Indicates the sphere  the globe  the unit sphere centered at  0 0 0         Transforms  Transforms are a generalization of projections  Transform implement   projection  stream   projection stream  and can be passed to   path  projection   path projection   However  they only implement a subset of the other projection methods  and represent arbitrary geometric transformations rather than projections from spherical to planar coordinates    a href   geoTransform  name  geoTransform     a  d3  b geoTransform  b   i methods  i        https   github com d3 d3 geo blob master src transform js  Source    Defines an arbitrary transform using the methods defined on the specified  methods  object  Any undefined methods will use pass through methods that propagate inputs to the output stream  For example  to reflect the  y  dimension  see also   identity  reflectY   identity reflectY        js var reflectY   d3 geoTransform     point  function x  y        this stream point x   y                Or to define an affine matrix transformation      js function matrix a  b  c  d  tx  ty      return d3 geoTransform       point  function x  y          this stream point a   x   b   y   tx  c   x   d   y   ty                       a href   geoIdentity  name  geoIdentity     a  d3  b geoIdentity  b         https   github com d3 d3 geo blob master src projection identity js  Source    The identity transform can be used to scale  translate and clip planar geometry  It implements   projection  scale   projection scale     projection  translate   projection translate     projection  fitExtent   projection fitExtent     projection  fitSize   projection fitSize     projection  fitWidth   projection fitWidth     projection  fitHeight   projection fitHeight  and   projection  clipExtent   projection clipExtent     a href   identity reflectX  name  identity reflectX     a   i identity  i   b reflectX  b    i reflect  i     If  reflect  is specified  sets whether or not the  x  dimension is reflected  negated  in the output  If  reflect  is not specified  returns true if  x  reflection is enabled  which defaults to false    a href   identity reflectY  name  identity reflectY     a   i identity  i   b reflectY  b    i reflect  i     If  reflect  is specified  sets whether or not the  y  dimension is reflected  negated  in the output  If  reflect  is not specified  returns true if  y  reflection is enabled  which defaults to false  This is especially useful for transforming from standard  spatial reference systems  https   en wikipedia org wiki Spatial reference system   which treat positive  y  as pointing up  to display coordinate systems such as Canvas and SVG  which treat positive  y  as pointing down       Clipping  Projections perform cutting or clipping of geometries in two stages    a name  preclip  href   preclip     a   i preclip  i   i stream  i    Pre clipping occurs in geographic coordinates  Cutting along the antimeridian line  or clipping along a small circle are the most common strategies   See   projection  preclip   projection preclip     a name  postclip  href   postclip     a   i postclip  i   i stream  i    Post clipping occurs on the plane  when a projection is bounded to a certain extent such as a rectangle   See   projection  postclip   projection postclip    Clipping functions are implemented as transformations of a  projection stream   streams   Pre clipping operates on spherical coordinates  in radians  Post clipping operates on planar coordinates  in pixels    a name  geoClipAntimeridian  href   geoClipAntimeridian     a  d3  b geoClipAntimeridian  b   A clipping function which transforms a stream such that geometries  lines or polygons  that cross the antimeridian line are cut in two  one on each side  Typically used for pre clipping    a name  geoClipCircle  href   geoClipCircle     a  d3  b geoClipCircle  b   i angle  i    Generates a clipping function which transforms a stream such that geometries are bounded by a small circle of radius  angle  around the projection s  center   projection center   Typically used for pre clipping    a name  geoClipRectangle  href   geoClipRectangle     a  d3  b geoClipRectangle  b   i x0  i    i y0  i    i x1  i    i y1  i    Generates a clipping function which transforms a stream such that geometries are bounded by a rectangle of coordinates    i x0  i    i y0  i      i x1  i    i y1  i     Typically used for post clipping  ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-geo"},{"name":"d3/d3-path","artist":"return, specifi, sourc, array, valu","id":50,"playcount":6683,"description":"d3/d3-path return, specifi, sourc, array, valu   d3 path  Say you have some code that draws to a 2D canvas      js function drawCircle context  radius      context moveTo radius  0     context arc 0  0  radius  0  2   Math PI          The d3 path module lets you take this exact code and additionally render to  SVG  http   www w3 org TR SVG paths html   It works by  serializing   path toString   CanvasPathMethods  http   www w3 org TR 2dcontext  canvaspathmethods  calls to  SVG path data  http   www w3 org TR SVG paths html PathData   For example      js var context   d3 path    drawCircle context  40   pathElement setAttribute  d   context toString          Now code you write once can be used with both Canvas  for performance  and SVG  for convenience   For a practical example  see  d3 shape  https   github com d3 d3 shape       Installing  If you use NPM   npm install d3 path   Otherwise  download the  latest release  https   github com d3 d3 path releases latest   You can also load directly from  d3js org  https   d3js org   either as a  standalone library  https   d3js org d3 path v1 min js  or as part of  D3 4 0  https   github com d3 d3   AMD  CommonJS  and vanilla environments are supported  In vanilla  a  d3  global is exported      html  script src  https   d3js org d3 path v1 min js    script   script   var path   d3 path    path moveTo 1  2   path lineTo 3  4   path closePath       script        Try d3 path in your browser   https   tonicdev com npm d3 path      API Reference   a name  path  href   path     a  d3  b path  b         https   github com d3 d3 path blob master src path js  Source    Constructs a new path serializer that implements  CanvasPathMethods  http   www w3 org TR 2dcontext  canvaspathmethods     a name  path moveTo  href   path moveTo     a   i path  i   b moveTo  b   i x  i    i y  i        https   github com d3 d3 path blob master src path js L18  Source    Move to the specified point   x    y    Equivalent to   context  moveTo  http   www w3 org TR 2dcontext  dom context 2d moveto  and SVG s   moveto  command  http   www w3 org TR SVG paths html PathDataMovetoCommands     a name  path closePath  href   path closePath     A   i path  i   b closePath  b         https   github com d3 d3 path blob master src path js L21  Source    Ends the current subpath and causes an automatic straight line to be drawn from the current point to the initial point of the current subpath  Equivalent to   context  closePath  http   www w3 org TR 2dcontext  dom context 2d closepath  and SVG s   closepath  command  http   www w3 org TR SVG paths html PathDataClosePathCommand     a name  path lineTo  href   path lineTo     a   i path  i   b lineTo  b   i x  i    i y  i        https   github com d3 d3 path blob master src path js L27  Source    Draws a straight line from the current point to the specified point   x    y    Equivalent to   context  lineTo  http   www w3 org TR 2dcontext  dom context 2d lineto  and SVG s   lineto  command  http   www w3 org TR SVG paths html PathDataLinetoCommands     a name  path quadraticCurveTo  href   path quadraticCurveTo     a   i path  i   b quadraticCurveTo  b   i cpx  i    i cpy  i    i x  i    i y  i        https   github com d3 d3 path blob master src path js L30  Source    Draws a quadratic B zier segment from the current point to the specified point   x    y    with the specified control point   cpx    cpy    Equivalent to   context  quadraticCurveTo  http   www w3 org TR 2dcontext  dom context 2d quadraticcurveto  and SVG s  quadratic B zier curve commands  http   www w3 org TR SVG paths html PathDataQuadraticBezierCommands     a name  path bezierCurveTo  href   path bezierCurveTo     a   i path  i   b bezierCurveTo  b   i cpx1  i    i cpy1  i    i cpx2  i    i cpy2  i    i x  i    i y  i        https   github com d3 d3 path blob master src path js L33  Source    Draws a cubic B zier segment from the current point to the specified point   x    y    with the specified control points   cpx1    cpy1   and   cpx2    cpy2    Equivalent to   context  bezierCurveTo  http   www w3 org TR 2dcontext  dom context 2d beziercurveto  and SVG s  cubic B zier curve commands  http   www w3 org TR SVG paths html PathDataCubicBezierCommands     a name  path arcTo  href   path arcTo     a   i path  i   b arcTo  b   i x1  i    i y1  i    i x2  i    i y2  i    i radius  i        https   github com d3 d3 path blob master src path js L36  Source    Draws a circular arc segment with the specified  radius  that starts tangent to the line between the current point and the specified point   x1    y1   and ends tangent to the line between the specified points   x1    y1   and   x2    y2    If the first tangent point is not equal to the current point  a straight line is drawn between the current point and the first tangent point  Equivalent to   context  arcTo  http   www w3 org TR 2dcontext  dom context 2d arcto  and uses SVG s  elliptical arc curve commands  http   www w3 org TR SVG paths html PathDataEllipticalArcCommands     a name  path arc  href   path arc     a   i path  i   b arc  b   i x  i    i y  i    i radius  i    i startAngle  i    i endAngle  i     i anticlockwise  i         https   github com d3 d3 path blob master src path js L84  Source    Draws a circular arc segment with the specified center   x    y     radius    startAngle  and  endAngle   If  anticlockwise  is true  the arc is drawn in the anticlockwise direction  otherwise  it is drawn in the clockwise direction  If the current point is not equal to the starting point of the arc  a straight line is drawn from the current point to the start of the arc  Equivalent to   context  arc  http   www w3 org TR 2dcontext  dom context 2d arc  and uses SVG s  elliptical arc curve commands  http   www w3 org TR SVG paths html PathDataEllipticalArcCommands     a name  path rect  href   path rect     a   i path  i   b rect  b   i x  i    i y  i    i w  i    i h  i        https   github com d3 d3 path blob master src path js L122  Source    Creates a new subpath containing just the four points   x    y      x     w    y      x     w    y     h      x    y     h    with those four points connected by straight lines  and then marks the subpath as closed  Equivalent to   context  rect  http   www w3 org TR 2dcontext  dom context 2d rect  and uses SVG s   lineto  commands  http   www w3 org TR SVG paths html PathDataLinetoCommands     a name  path toString  href   path toString     a   i path  i   b toString  b         https   github com d3 d3 path blob master src path js L125  Source    Returns the string representation of this  path  according to SVG s  path data specification  http   www w3 org TR SVG paths html PathData   ","software":"md","book":"d3","full_link":"https://github.com/d3/d3-path"}],"links":[]}